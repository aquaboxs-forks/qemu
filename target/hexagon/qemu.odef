
#ifndef DEF_QEMU
#define DEF_QEMU(TAG,SHORTCODE,HELPER,GENFN,HELPFN)   /* Nothing */
#endif

DEF_QEMU(J2_jump,{fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);},
DEF_HELPER_2(J2_jump, void, env, s32),
{
/* J2_jump */
DECL_IMM(riV,0);
fWRAP_J2_jump(gen_helper_J2_jump(cpu_env, riV);,
{fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);})
FREE_IMM(riV);
/* J2_jump */
},
void HELPER(J2_jump)(CPUHexagonState *env, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}
COUNT_HELPER(J2_jump);
})
DEF_QEMU(J2_jumpr,{fJUMPR(RsN,RsV,COF_TYPE_JUMPR);},
DEF_HELPER_2(J2_jumpr, void, env, s32),
{
/* J2_jumpr */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
READ_RREG_s(RsV, RsN);
fWRAP_J2_jumpr(gen_helper_J2_jumpr(cpu_env, RsV);,
{fJUMPR(RsN,RsV,COF_TYPE_JUMPR);})
FREE_REG_s(RsV);
/* J2_jumpr */
},
void HELPER(J2_jumpr)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
{fJUMPR(RsN,RsV,COF_TYPE_JUMPR);}
COUNT_HELPER(J2_jumpr);
})
DEF_QEMU(J2_jumpt,{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLD(PuV)) { fIMMEXT(riV);fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);; }},
DEF_HELPER_3(J2_jumpt, void, env, s32, s32),
{
/* J2_jumpt */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_IMM(riV,0);
READ_PREG_u(PuV, PuN);
fWRAP_J2_jumpt(gen_helper_J2_jumpt(cpu_env, PuV, riV);,
{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLD(PuV)) { fIMMEXT(riV);fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);; }})
FREE_REG_u(PuV);
FREE_IMM(riV);
/* J2_jumpt */
},
void HELPER(J2_jumpt)(CPUHexagonState *env, int32_t PuV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLD(PuV)) { fIMMEXT(riV);fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);; }}
COUNT_HELPER(J2_jumpt);
})
DEF_QEMU(J2_jumpf,{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLDNOT(PuV)) { fIMMEXT(riV);fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);; }},
DEF_HELPER_3(J2_jumpf, void, env, s32, s32),
{
/* J2_jumpf */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_IMM(riV,0);
READ_PREG_u(PuV, PuN);
fWRAP_J2_jumpf(gen_helper_J2_jumpf(cpu_env, PuV, riV);,
{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLDNOT(PuV)) { fIMMEXT(riV);fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);; }})
FREE_REG_u(PuV);
FREE_IMM(riV);
/* J2_jumpf */
},
void HELPER(J2_jumpf)(CPUHexagonState *env, int32_t PuV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLDNOT(PuV)) { fIMMEXT(riV);fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);; }}
COUNT_HELPER(J2_jumpf);
})
DEF_QEMU(J2_jumptpt,{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_TAKEN,12,0); if (fLSBOLD(PuV)) { fIMMEXT(riV);fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);; }},
DEF_HELPER_3(J2_jumptpt, void, env, s32, s32),
{
/* J2_jumptpt */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_IMM(riV,0);
READ_PREG_u(PuV, PuN);
fWRAP_J2_jumptpt(gen_helper_J2_jumptpt(cpu_env, PuV, riV);,
{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_TAKEN,12,0); if (fLSBOLD(PuV)) { fIMMEXT(riV);fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);; }})
FREE_REG_u(PuV);
FREE_IMM(riV);
/* J2_jumptpt */
},
void HELPER(J2_jumptpt)(CPUHexagonState *env, int32_t PuV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_TAKEN,12,0); if (fLSBOLD(PuV)) { fIMMEXT(riV);fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);; }}
COUNT_HELPER(J2_jumptpt);
})
DEF_QEMU(J2_jumpfpt,{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_TAKEN,12,0); if (fLSBOLDNOT(PuV)) { fIMMEXT(riV);fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);; }},
DEF_HELPER_3(J2_jumpfpt, void, env, s32, s32),
{
/* J2_jumpfpt */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_IMM(riV,0);
READ_PREG_u(PuV, PuN);
fWRAP_J2_jumpfpt(gen_helper_J2_jumpfpt(cpu_env, PuV, riV);,
{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_TAKEN,12,0); if (fLSBOLDNOT(PuV)) { fIMMEXT(riV);fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);; }})
FREE_REG_u(PuV);
FREE_IMM(riV);
/* J2_jumpfpt */
},
void HELPER(J2_jumpfpt)(CPUHexagonState *env, int32_t PuV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_TAKEN,12,0); if (fLSBOLDNOT(PuV)) { fIMMEXT(riV);fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);; }}
COUNT_HELPER(J2_jumpfpt);
})
DEF_QEMU(J2_jumprt,{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLD(PuV)) { fJUMPR(RsN,RsV,COF_TYPE_JUMPR);; }},
DEF_HELPER_3(J2_jumprt, void, env, s32, s32),
{
/* J2_jumprt */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_J2_jumprt(gen_helper_J2_jumprt(cpu_env, PuV, RsV);,
{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLD(PuV)) { fJUMPR(RsN,RsV,COF_TYPE_JUMPR);; }})
FREE_REG_u(PuV);
FREE_REG_s(RsV);
/* J2_jumprt */
},
void HELPER(J2_jumprt)(CPUHexagonState *env, int32_t PuV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLD(PuV)) { fJUMPR(RsN,RsV,COF_TYPE_JUMPR);; }}
COUNT_HELPER(J2_jumprt);
})
DEF_QEMU(J2_jumprf,{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLDNOT(PuV)) { fJUMPR(RsN,RsV,COF_TYPE_JUMPR);; }},
DEF_HELPER_3(J2_jumprf, void, env, s32, s32),
{
/* J2_jumprf */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_J2_jumprf(gen_helper_J2_jumprf(cpu_env, PuV, RsV);,
{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLDNOT(PuV)) { fJUMPR(RsN,RsV,COF_TYPE_JUMPR);; }})
FREE_REG_u(PuV);
FREE_REG_s(RsV);
/* J2_jumprf */
},
void HELPER(J2_jumprf)(CPUHexagonState *env, int32_t PuV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLDNOT(PuV)) { fJUMPR(RsN,RsV,COF_TYPE_JUMPR);; }}
COUNT_HELPER(J2_jumprf);
})
DEF_QEMU(J2_jumprtpt,{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_TAKEN,12,0); if (fLSBOLD(PuV)) { fJUMPR(RsN,RsV,COF_TYPE_JUMPR);; }},
DEF_HELPER_3(J2_jumprtpt, void, env, s32, s32),
{
/* J2_jumprtpt */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_J2_jumprtpt(gen_helper_J2_jumprtpt(cpu_env, PuV, RsV);,
{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_TAKEN,12,0); if (fLSBOLD(PuV)) { fJUMPR(RsN,RsV,COF_TYPE_JUMPR);; }})
FREE_REG_u(PuV);
FREE_REG_s(RsV);
/* J2_jumprtpt */
},
void HELPER(J2_jumprtpt)(CPUHexagonState *env, int32_t PuV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_TAKEN,12,0); if (fLSBOLD(PuV)) { fJUMPR(RsN,RsV,COF_TYPE_JUMPR);; }}
COUNT_HELPER(J2_jumprtpt);
})
DEF_QEMU(J2_jumprfpt,{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_TAKEN,12,0); if (fLSBOLDNOT(PuV)) { fJUMPR(RsN,RsV,COF_TYPE_JUMPR);; }},
DEF_HELPER_3(J2_jumprfpt, void, env, s32, s32),
{
/* J2_jumprfpt */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_J2_jumprfpt(gen_helper_J2_jumprfpt(cpu_env, PuV, RsV);,
{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_TAKEN,12,0); if (fLSBOLDNOT(PuV)) { fJUMPR(RsN,RsV,COF_TYPE_JUMPR);; }})
FREE_REG_u(PuV);
FREE_REG_s(RsV);
/* J2_jumprfpt */
},
void HELPER(J2_jumprfpt)(CPUHexagonState *env, int32_t PuV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_TAKEN,12,0); if (fLSBOLDNOT(PuV)) { fJUMPR(RsN,RsV,COF_TYPE_JUMPR);; }}
COUNT_HELPER(J2_jumprfpt);
})
DEF_QEMU(J2_jumptnew,{fBRANCH_SPECULATE_STALL(fLSBNEW(PuN),, SPECULATE_NOT_TAKEN , 12,0)} {if(fLSBNEW(PuN)){fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMPNEW);;}},
DEF_HELPER_3(J2_jumptnew, void, env, s32, s32),
{
/* J2_jumptnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_IMM(riV,0);
READ_NEW_PREG(PuN, PuX);
fWRAP_J2_jumptnew(gen_helper_J2_jumptnew(cpu_env, PuN, riV);,
{fBRANCH_SPECULATE_STALL(fLSBNEW(PuN),, SPECULATE_NOT_TAKEN , 12,0)} {if(fLSBNEW(PuN)){fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMPNEW);;}})
FREE_NEW_PREG(PuN);
FREE_IMM(riV);
/* J2_jumptnew */
},
void HELPER(J2_jumptnew)(CPUHexagonState *env, int32_t PuN, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBNEW(PuN),, SPECULATE_NOT_TAKEN , 12,0)} {if(fLSBNEW(PuN)){fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMPNEW);;}}
COUNT_HELPER(J2_jumptnew);
})
DEF_QEMU(J2_jumpfnew,{fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PuN),, SPECULATE_NOT_TAKEN , 12,0)} {if(fLSBNEWNOT(PuN)){fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMPNEW);;}},
DEF_HELPER_3(J2_jumpfnew, void, env, s32, s32),
{
/* J2_jumpfnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_IMM(riV,0);
READ_NEW_PREG(PuN, PuX);
fWRAP_J2_jumpfnew(gen_helper_J2_jumpfnew(cpu_env, PuN, riV);,
{fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PuN),, SPECULATE_NOT_TAKEN , 12,0)} {if(fLSBNEWNOT(PuN)){fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMPNEW);;}})
FREE_NEW_PREG(PuN);
FREE_IMM(riV);
/* J2_jumpfnew */
},
void HELPER(J2_jumpfnew)(CPUHexagonState *env, int32_t PuN, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PuN),, SPECULATE_NOT_TAKEN , 12,0)} {if(fLSBNEWNOT(PuN)){fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMPNEW);;}}
COUNT_HELPER(J2_jumpfnew);
})
DEF_QEMU(J2_jumptnewpt,{fBRANCH_SPECULATE_STALL(fLSBNEW(PuN),, SPECULATE_TAKEN , 12,0)} {if(fLSBNEW(PuN)){fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMPNEW);;}},
DEF_HELPER_3(J2_jumptnewpt, void, env, s32, s32),
{
/* J2_jumptnewpt */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_IMM(riV,0);
READ_NEW_PREG(PuN, PuX);
fWRAP_J2_jumptnewpt(gen_helper_J2_jumptnewpt(cpu_env, PuN, riV);,
{fBRANCH_SPECULATE_STALL(fLSBNEW(PuN),, SPECULATE_TAKEN , 12,0)} {if(fLSBNEW(PuN)){fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMPNEW);;}})
FREE_NEW_PREG(PuN);
FREE_IMM(riV);
/* J2_jumptnewpt */
},
void HELPER(J2_jumptnewpt)(CPUHexagonState *env, int32_t PuN, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBNEW(PuN),, SPECULATE_TAKEN , 12,0)} {if(fLSBNEW(PuN)){fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMPNEW);;}}
COUNT_HELPER(J2_jumptnewpt);
})
DEF_QEMU(J2_jumpfnewpt,{fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PuN),, SPECULATE_TAKEN , 12,0)} {if(fLSBNEWNOT(PuN)){fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMPNEW);;}},
DEF_HELPER_3(J2_jumpfnewpt, void, env, s32, s32),
{
/* J2_jumpfnewpt */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_IMM(riV,0);
READ_NEW_PREG(PuN, PuX);
fWRAP_J2_jumpfnewpt(gen_helper_J2_jumpfnewpt(cpu_env, PuN, riV);,
{fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PuN),, SPECULATE_TAKEN , 12,0)} {if(fLSBNEWNOT(PuN)){fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMPNEW);;}})
FREE_NEW_PREG(PuN);
FREE_IMM(riV);
/* J2_jumpfnewpt */
},
void HELPER(J2_jumpfnewpt)(CPUHexagonState *env, int32_t PuN, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PuN),, SPECULATE_TAKEN , 12,0)} {if(fLSBNEWNOT(PuN)){fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMPNEW);;}}
COUNT_HELPER(J2_jumpfnewpt);
})
DEF_QEMU(J2_jumprtnew,{fBRANCH_SPECULATE_STALL(fLSBNEW(PuN),, SPECULATE_NOT_TAKEN , 12,0)} {if(fLSBNEW(PuN)){fJUMPR(RsN,RsV,COF_TYPE_JUMPR);;}},
DEF_HELPER_3(J2_jumprtnew, void, env, s32, s32),
{
/* J2_jumprtnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_J2_jumprtnew(gen_helper_J2_jumprtnew(cpu_env, PuN, RsV);,
{fBRANCH_SPECULATE_STALL(fLSBNEW(PuN),, SPECULATE_NOT_TAKEN , 12,0)} {if(fLSBNEW(PuN)){fJUMPR(RsN,RsV,COF_TYPE_JUMPR);;}})
FREE_NEW_PREG(PuN);
FREE_REG_s(RsV);
/* J2_jumprtnew */
},
void HELPER(J2_jumprtnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBNEW(PuN),, SPECULATE_NOT_TAKEN , 12,0)} {if(fLSBNEW(PuN)){fJUMPR(RsN,RsV,COF_TYPE_JUMPR);;}}
COUNT_HELPER(J2_jumprtnew);
})
DEF_QEMU(J2_jumprfnew,{fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PuN),, SPECULATE_NOT_TAKEN , 12,0)} {if(fLSBNEWNOT(PuN)){fJUMPR(RsN,RsV,COF_TYPE_JUMPR);;}},
DEF_HELPER_3(J2_jumprfnew, void, env, s32, s32),
{
/* J2_jumprfnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_J2_jumprfnew(gen_helper_J2_jumprfnew(cpu_env, PuN, RsV);,
{fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PuN),, SPECULATE_NOT_TAKEN , 12,0)} {if(fLSBNEWNOT(PuN)){fJUMPR(RsN,RsV,COF_TYPE_JUMPR);;}})
FREE_NEW_PREG(PuN);
FREE_REG_s(RsV);
/* J2_jumprfnew */
},
void HELPER(J2_jumprfnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PuN),, SPECULATE_NOT_TAKEN , 12,0)} {if(fLSBNEWNOT(PuN)){fJUMPR(RsN,RsV,COF_TYPE_JUMPR);;}}
COUNT_HELPER(J2_jumprfnew);
})
DEF_QEMU(J2_jumprtnewpt,{fBRANCH_SPECULATE_STALL(fLSBNEW(PuN),, SPECULATE_TAKEN , 12,0)} {if(fLSBNEW(PuN)){fJUMPR(RsN,RsV,COF_TYPE_JUMPR);;}},
DEF_HELPER_3(J2_jumprtnewpt, void, env, s32, s32),
{
/* J2_jumprtnewpt */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_J2_jumprtnewpt(gen_helper_J2_jumprtnewpt(cpu_env, PuN, RsV);,
{fBRANCH_SPECULATE_STALL(fLSBNEW(PuN),, SPECULATE_TAKEN , 12,0)} {if(fLSBNEW(PuN)){fJUMPR(RsN,RsV,COF_TYPE_JUMPR);;}})
FREE_NEW_PREG(PuN);
FREE_REG_s(RsV);
/* J2_jumprtnewpt */
},
void HELPER(J2_jumprtnewpt)(CPUHexagonState *env, int32_t PuN, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBNEW(PuN),, SPECULATE_TAKEN , 12,0)} {if(fLSBNEW(PuN)){fJUMPR(RsN,RsV,COF_TYPE_JUMPR);;}}
COUNT_HELPER(J2_jumprtnewpt);
})
DEF_QEMU(J2_jumprfnewpt,{fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PuN),, SPECULATE_TAKEN , 12,0)} {if(fLSBNEWNOT(PuN)){fJUMPR(RsN,RsV,COF_TYPE_JUMPR);;}},
DEF_HELPER_3(J2_jumprfnewpt, void, env, s32, s32),
{
/* J2_jumprfnewpt */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_J2_jumprfnewpt(gen_helper_J2_jumprfnewpt(cpu_env, PuN, RsV);,
{fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PuN),, SPECULATE_TAKEN , 12,0)} {if(fLSBNEWNOT(PuN)){fJUMPR(RsN,RsV,COF_TYPE_JUMPR);;}})
FREE_NEW_PREG(PuN);
FREE_REG_s(RsV);
/* J2_jumprfnewpt */
},
void HELPER(J2_jumprfnewpt)(CPUHexagonState *env, int32_t PuN, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PuN),, SPECULATE_TAKEN , 12,0)} {if(fLSBNEWNOT(PuN)){fJUMPR(RsN,RsV,COF_TYPE_JUMPR);;}}
COUNT_HELPER(J2_jumprfnewpt);
})
DEF_QEMU(J4_hintjumpr,{fHINTJR(RsV);},
DEF_HELPER_2(J4_hintjumpr, void, env, s32),
{
/* J4_hintjumpr */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_hintjumpr(gen_helper_J4_hintjumpr(cpu_env, RsV);,
{fHINTJR(RsV);})
FREE_REG_s(RsV);
/* J4_hintjumpr */
},
void HELPER(J4_hintjumpr)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
{fHINTJR(RsV);}
COUNT_HELPER(J4_hintjumpr);
})
DEF_QEMU(J2_jumprz,{fBRANCH_SPECULATE_STALL((RsV!=0), , SPECULATE_NOT_TAKEN,12,0) if (RsV != 0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_3(J2_jumprz, void, env, s32, s32),
{
/* J2_jumprz */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J2_jumprz(gen_helper_J2_jumprz(cpu_env, RsV, riV);,
{fBRANCH_SPECULATE_STALL((RsV!=0), , SPECULATE_NOT_TAKEN,12,0) if (RsV != 0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J2_jumprz */
},
void HELPER(J2_jumprz)(CPUHexagonState *env, int32_t RsV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL((RsV!=0), , SPECULATE_NOT_TAKEN,12,0) if (RsV != 0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J2_jumprz);
})
DEF_QEMU(J2_jumprnz,{fBRANCH_SPECULATE_STALL((RsV==0), , SPECULATE_NOT_TAKEN,12,0) if (RsV == 0) {fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_3(J2_jumprnz, void, env, s32, s32),
{
/* J2_jumprnz */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J2_jumprnz(gen_helper_J2_jumprnz(cpu_env, RsV, riV);,
{fBRANCH_SPECULATE_STALL((RsV==0), , SPECULATE_NOT_TAKEN,12,0) if (RsV == 0) {fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J2_jumprnz */
},
void HELPER(J2_jumprnz)(CPUHexagonState *env, int32_t RsV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL((RsV==0), , SPECULATE_NOT_TAKEN,12,0) if (RsV == 0) {fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J2_jumprnz);
})
DEF_QEMU(J2_jumprzpt,{fBRANCH_SPECULATE_STALL((RsV!=0), , SPECULATE_TAKEN,12,0) if (RsV != 0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_3(J2_jumprzpt, void, env, s32, s32),
{
/* J2_jumprzpt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J2_jumprzpt(gen_helper_J2_jumprzpt(cpu_env, RsV, riV);,
{fBRANCH_SPECULATE_STALL((RsV!=0), , SPECULATE_TAKEN,12,0) if (RsV != 0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J2_jumprzpt */
},
void HELPER(J2_jumprzpt)(CPUHexagonState *env, int32_t RsV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL((RsV!=0), , SPECULATE_TAKEN,12,0) if (RsV != 0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J2_jumprzpt);
})
DEF_QEMU(J2_jumprnzpt,{fBRANCH_SPECULATE_STALL((RsV==0), , SPECULATE_TAKEN,12,0) if (RsV == 0) {fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_3(J2_jumprnzpt, void, env, s32, s32),
{
/* J2_jumprnzpt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J2_jumprnzpt(gen_helper_J2_jumprnzpt(cpu_env, RsV, riV);,
{fBRANCH_SPECULATE_STALL((RsV==0), , SPECULATE_TAKEN,12,0) if (RsV == 0) {fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J2_jumprnzpt */
},
void HELPER(J2_jumprnzpt)(CPUHexagonState *env, int32_t RsV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL((RsV==0), , SPECULATE_TAKEN,12,0) if (RsV == 0) {fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J2_jumprnzpt);
})
DEF_QEMU(J2_jumprgtez,{fBRANCH_SPECULATE_STALL((RsV>=0), , SPECULATE_NOT_TAKEN,12,0) if (RsV>=0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_3(J2_jumprgtez, void, env, s32, s32),
{
/* J2_jumprgtez */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J2_jumprgtez(gen_helper_J2_jumprgtez(cpu_env, RsV, riV);,
{fBRANCH_SPECULATE_STALL((RsV>=0), , SPECULATE_NOT_TAKEN,12,0) if (RsV>=0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J2_jumprgtez */
},
void HELPER(J2_jumprgtez)(CPUHexagonState *env, int32_t RsV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL((RsV>=0), , SPECULATE_NOT_TAKEN,12,0) if (RsV>=0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J2_jumprgtez);
})
DEF_QEMU(J2_jumprgtezpt,{fBRANCH_SPECULATE_STALL((RsV>=0), , SPECULATE_TAKEN,12,0) if (RsV>=0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_3(J2_jumprgtezpt, void, env, s32, s32),
{
/* J2_jumprgtezpt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J2_jumprgtezpt(gen_helper_J2_jumprgtezpt(cpu_env, RsV, riV);,
{fBRANCH_SPECULATE_STALL((RsV>=0), , SPECULATE_TAKEN,12,0) if (RsV>=0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J2_jumprgtezpt */
},
void HELPER(J2_jumprgtezpt)(CPUHexagonState *env, int32_t RsV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL((RsV>=0), , SPECULATE_TAKEN,12,0) if (RsV>=0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J2_jumprgtezpt);
})
DEF_QEMU(J2_jumprltez,{fBRANCH_SPECULATE_STALL((RsV<=0), , SPECULATE_NOT_TAKEN,12,0) if (RsV<=0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_3(J2_jumprltez, void, env, s32, s32),
{
/* J2_jumprltez */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J2_jumprltez(gen_helper_J2_jumprltez(cpu_env, RsV, riV);,
{fBRANCH_SPECULATE_STALL((RsV<=0), , SPECULATE_NOT_TAKEN,12,0) if (RsV<=0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J2_jumprltez */
},
void HELPER(J2_jumprltez)(CPUHexagonState *env, int32_t RsV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL((RsV<=0), , SPECULATE_NOT_TAKEN,12,0) if (RsV<=0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J2_jumprltez);
})
DEF_QEMU(J2_jumprltezpt,{fBRANCH_SPECULATE_STALL((RsV<=0), , SPECULATE_TAKEN,12,0) if (RsV<=0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_3(J2_jumprltezpt, void, env, s32, s32),
{
/* J2_jumprltezpt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J2_jumprltezpt(gen_helper_J2_jumprltezpt(cpu_env, RsV, riV);,
{fBRANCH_SPECULATE_STALL((RsV<=0), , SPECULATE_TAKEN,12,0) if (RsV<=0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J2_jumprltezpt */
},
void HELPER(J2_jumprltezpt)(CPUHexagonState *env, int32_t RsV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL((RsV<=0), , SPECULATE_TAKEN,12,0) if (RsV<=0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J2_jumprltezpt);
})
DEF_QEMU(J4_cmpeqi_tp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeqi_tp0_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpeqi_tp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpeqi_tp0_jump_nt(PART1_WRAP(gen_helper_J4_cmpeqi_tp0_jump_nt(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpeqi_tp0_jump_nt */
},
void HELPER(J4_cmpeqi_tp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqi_tp0_jump_nt);
})
DEF_QEMU(J4_cmpeqi_fp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeqi_fp0_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpeqi_fp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpeqi_fp0_jump_nt(PART1_WRAP(gen_helper_J4_cmpeqi_fp0_jump_nt(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpeqi_fp0_jump_nt */
},
void HELPER(J4_cmpeqi_fp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqi_fp0_jump_nt);
})
DEF_QEMU(J4_cmpeqi_tp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeqi_tp0_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpeqi_tp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpeqi_tp0_jump_t(PART1_WRAP(gen_helper_J4_cmpeqi_tp0_jump_t(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpeqi_tp0_jump_t */
},
void HELPER(J4_cmpeqi_tp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqi_tp0_jump_t);
})
DEF_QEMU(J4_cmpeqi_fp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeqi_fp0_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpeqi_fp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpeqi_fp0_jump_t(PART1_WRAP(gen_helper_J4_cmpeqi_fp0_jump_t(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpeqi_fp0_jump_t */
},
void HELPER(J4_cmpeqi_fp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqi_fp0_jump_t);
})
DEF_QEMU(J4_cmpeqi_tp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeqi_tp1_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpeqi_tp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpeqi_tp1_jump_nt(PART1_WRAP(gen_helper_J4_cmpeqi_tp1_jump_nt(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpeqi_tp1_jump_nt */
},
void HELPER(J4_cmpeqi_tp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqi_tp1_jump_nt);
})
DEF_QEMU(J4_cmpeqi_fp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeqi_fp1_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpeqi_fp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpeqi_fp1_jump_nt(PART1_WRAP(gen_helper_J4_cmpeqi_fp1_jump_nt(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpeqi_fp1_jump_nt */
},
void HELPER(J4_cmpeqi_fp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqi_fp1_jump_nt);
})
DEF_QEMU(J4_cmpeqi_tp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeqi_tp1_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpeqi_tp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpeqi_tp1_jump_t(PART1_WRAP(gen_helper_J4_cmpeqi_tp1_jump_t(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpeqi_tp1_jump_t */
},
void HELPER(J4_cmpeqi_tp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqi_tp1_jump_t);
})
DEF_QEMU(J4_cmpeqi_fp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeqi_fp1_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpeqi_fp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpeqi_fp1_jump_t(PART1_WRAP(gen_helper_J4_cmpeqi_fp1_jump_t(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpeqi_fp1_jump_t */
},
void HELPER(J4_cmpeqi_fp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqi_fp1_jump_t);
})
DEF_QEMU(J4_cmpgti_tp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgti_tp0_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgti_tp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgti_tp0_jump_nt(PART1_WRAP(gen_helper_J4_cmpgti_tp0_jump_nt(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgti_tp0_jump_nt */
},
void HELPER(J4_cmpgti_tp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgti_tp0_jump_nt);
})
DEF_QEMU(J4_cmpgti_fp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgti_fp0_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgti_fp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgti_fp0_jump_nt(PART1_WRAP(gen_helper_J4_cmpgti_fp0_jump_nt(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgti_fp0_jump_nt */
},
void HELPER(J4_cmpgti_fp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgti_fp0_jump_nt);
})
DEF_QEMU(J4_cmpgti_tp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgti_tp0_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgti_tp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgti_tp0_jump_t(PART1_WRAP(gen_helper_J4_cmpgti_tp0_jump_t(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgti_tp0_jump_t */
},
void HELPER(J4_cmpgti_tp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgti_tp0_jump_t);
})
DEF_QEMU(J4_cmpgti_fp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgti_fp0_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgti_fp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgti_fp0_jump_t(PART1_WRAP(gen_helper_J4_cmpgti_fp0_jump_t(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgti_fp0_jump_t */
},
void HELPER(J4_cmpgti_fp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgti_fp0_jump_t);
})
DEF_QEMU(J4_cmpgti_tp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgti_tp1_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgti_tp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgti_tp1_jump_nt(PART1_WRAP(gen_helper_J4_cmpgti_tp1_jump_nt(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgti_tp1_jump_nt */
},
void HELPER(J4_cmpgti_tp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgti_tp1_jump_nt);
})
DEF_QEMU(J4_cmpgti_fp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgti_fp1_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgti_fp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgti_fp1_jump_nt(PART1_WRAP(gen_helper_J4_cmpgti_fp1_jump_nt(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgti_fp1_jump_nt */
},
void HELPER(J4_cmpgti_fp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgti_fp1_jump_nt);
})
DEF_QEMU(J4_cmpgti_tp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgti_tp1_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgti_tp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgti_tp1_jump_t(PART1_WRAP(gen_helper_J4_cmpgti_tp1_jump_t(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgti_tp1_jump_t */
},
void HELPER(J4_cmpgti_tp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgti_tp1_jump_t);
})
DEF_QEMU(J4_cmpgti_fp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgti_fp1_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgti_fp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgti_fp1_jump_t(PART1_WRAP(gen_helper_J4_cmpgti_fp1_jump_t(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgti_fp1_jump_t */
},
void HELPER(J4_cmpgti_fp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgti_fp1_jump_t);
})
DEF_QEMU(J4_cmpgtui_tp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtui_tp0_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgtui_tp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgtui_tp0_jump_nt(PART1_WRAP(gen_helper_J4_cmpgtui_tp0_jump_nt(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgtui_tp0_jump_nt */
},
void HELPER(J4_cmpgtui_tp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtui_tp0_jump_nt);
})
DEF_QEMU(J4_cmpgtui_fp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtui_fp0_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgtui_fp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgtui_fp0_jump_nt(PART1_WRAP(gen_helper_J4_cmpgtui_fp0_jump_nt(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgtui_fp0_jump_nt */
},
void HELPER(J4_cmpgtui_fp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtui_fp0_jump_nt);
})
DEF_QEMU(J4_cmpgtui_tp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtui_tp0_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgtui_tp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgtui_tp0_jump_t(PART1_WRAP(gen_helper_J4_cmpgtui_tp0_jump_t(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgtui_tp0_jump_t */
},
void HELPER(J4_cmpgtui_tp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtui_tp0_jump_t);
})
DEF_QEMU(J4_cmpgtui_fp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtui_fp0_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgtui_fp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgtui_fp0_jump_t(PART1_WRAP(gen_helper_J4_cmpgtui_fp0_jump_t(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgtui_fp0_jump_t */
},
void HELPER(J4_cmpgtui_fp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtui_fp0_jump_t);
})
DEF_QEMU(J4_cmpgtui_tp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtui_tp1_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgtui_tp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgtui_tp1_jump_nt(PART1_WRAP(gen_helper_J4_cmpgtui_tp1_jump_nt(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgtui_tp1_jump_nt */
},
void HELPER(J4_cmpgtui_tp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtui_tp1_jump_nt);
})
DEF_QEMU(J4_cmpgtui_fp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtui_fp1_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgtui_fp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgtui_fp1_jump_nt(PART1_WRAP(gen_helper_J4_cmpgtui_fp1_jump_nt(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgtui_fp1_jump_nt */
},
void HELPER(J4_cmpgtui_fp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtui_fp1_jump_nt);
})
DEF_QEMU(J4_cmpgtui_tp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtui_tp1_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgtui_tp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgtui_tp1_jump_t(PART1_WRAP(gen_helper_J4_cmpgtui_tp1_jump_t(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgtui_tp1_jump_t */
},
void HELPER(J4_cmpgtui_tp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtui_tp1_jump_t);
})
DEF_QEMU(J4_cmpgtui_fp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtui_fp1_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgtui_fp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgtui_fp1_jump_t(PART1_WRAP(gen_helper_J4_cmpgtui_fp1_jump_t(cpu_env, RsV, UiV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgtui_fp1_jump_t */
},
void HELPER(J4_cmpgtui_fp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t UiV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtui_fp1_jump_t);
})
DEF_QEMU(J4_cmpeqn1_tp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpeqn1_tp0_jump_nt, void, env, s32, s32 , i32),
{
/* J4_cmpeqn1_tp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpeqn1_tp0_jump_nt(PART1_WRAP(gen_helper_J4_cmpeqn1_tp0_jump_nt(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_cmpeqn1_tp0_jump_nt */
},
void HELPER(J4_cmpeqn1_tp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqn1_tp0_jump_nt);
})
DEF_QEMU(J4_cmpeqn1_fp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpeqn1_fp0_jump_nt, void, env, s32, s32 , i32),
{
/* J4_cmpeqn1_fp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpeqn1_fp0_jump_nt(PART1_WRAP(gen_helper_J4_cmpeqn1_fp0_jump_nt(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_cmpeqn1_fp0_jump_nt */
},
void HELPER(J4_cmpeqn1_fp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqn1_fp0_jump_nt);
})
DEF_QEMU(J4_cmpeqn1_tp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpeqn1_tp0_jump_t, void, env, s32, s32 , i32),
{
/* J4_cmpeqn1_tp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpeqn1_tp0_jump_t(PART1_WRAP(gen_helper_J4_cmpeqn1_tp0_jump_t(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_cmpeqn1_tp0_jump_t */
},
void HELPER(J4_cmpeqn1_tp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqn1_tp0_jump_t);
})
DEF_QEMU(J4_cmpeqn1_fp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpeqn1_fp0_jump_t, void, env, s32, s32 , i32),
{
/* J4_cmpeqn1_fp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpeqn1_fp0_jump_t(PART1_WRAP(gen_helper_J4_cmpeqn1_fp0_jump_t(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_cmpeqn1_fp0_jump_t */
},
void HELPER(J4_cmpeqn1_fp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqn1_fp0_jump_t);
})
DEF_QEMU(J4_cmpeqn1_tp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpeqn1_tp1_jump_nt, void, env, s32, s32 , i32),
{
/* J4_cmpeqn1_tp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpeqn1_tp1_jump_nt(PART1_WRAP(gen_helper_J4_cmpeqn1_tp1_jump_nt(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_cmpeqn1_tp1_jump_nt */
},
void HELPER(J4_cmpeqn1_tp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqn1_tp1_jump_nt);
})
DEF_QEMU(J4_cmpeqn1_fp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpeqn1_fp1_jump_nt, void, env, s32, s32 , i32),
{
/* J4_cmpeqn1_fp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpeqn1_fp1_jump_nt(PART1_WRAP(gen_helper_J4_cmpeqn1_fp1_jump_nt(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_cmpeqn1_fp1_jump_nt */
},
void HELPER(J4_cmpeqn1_fp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqn1_fp1_jump_nt);
})
DEF_QEMU(J4_cmpeqn1_tp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpeqn1_tp1_jump_t, void, env, s32, s32 , i32),
{
/* J4_cmpeqn1_tp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpeqn1_tp1_jump_t(PART1_WRAP(gen_helper_J4_cmpeqn1_tp1_jump_t(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_cmpeqn1_tp1_jump_t */
},
void HELPER(J4_cmpeqn1_tp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqn1_tp1_jump_t);
})
DEF_QEMU(J4_cmpeqn1_fp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpeqn1_fp1_jump_t, void, env, s32, s32 , i32),
{
/* J4_cmpeqn1_fp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpeqn1_fp1_jump_t(PART1_WRAP(gen_helper_J4_cmpeqn1_fp1_jump_t(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_cmpeqn1_fp1_jump_t */
},
void HELPER(J4_cmpeqn1_fp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqn1_fp1_jump_t);
})
DEF_QEMU(J4_cmpgtn1_tp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpgtn1_tp0_jump_nt, void, env, s32, s32 , i32),
{
/* J4_cmpgtn1_tp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgtn1_tp0_jump_nt(PART1_WRAP(gen_helper_J4_cmpgtn1_tp0_jump_nt(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_cmpgtn1_tp0_jump_nt */
},
void HELPER(J4_cmpgtn1_tp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtn1_tp0_jump_nt);
})
DEF_QEMU(J4_cmpgtn1_fp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpgtn1_fp0_jump_nt, void, env, s32, s32 , i32),
{
/* J4_cmpgtn1_fp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgtn1_fp0_jump_nt(PART1_WRAP(gen_helper_J4_cmpgtn1_fp0_jump_nt(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_cmpgtn1_fp0_jump_nt */
},
void HELPER(J4_cmpgtn1_fp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtn1_fp0_jump_nt);
})
DEF_QEMU(J4_cmpgtn1_tp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpgtn1_tp0_jump_t, void, env, s32, s32 , i32),
{
/* J4_cmpgtn1_tp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgtn1_tp0_jump_t(PART1_WRAP(gen_helper_J4_cmpgtn1_tp0_jump_t(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_cmpgtn1_tp0_jump_t */
},
void HELPER(J4_cmpgtn1_tp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtn1_tp0_jump_t);
})
DEF_QEMU(J4_cmpgtn1_fp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpgtn1_fp0_jump_t, void, env, s32, s32 , i32),
{
/* J4_cmpgtn1_fp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgtn1_fp0_jump_t(PART1_WRAP(gen_helper_J4_cmpgtn1_fp0_jump_t(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_cmpgtn1_fp0_jump_t */
},
void HELPER(J4_cmpgtn1_fp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtn1_fp0_jump_t);
})
DEF_QEMU(J4_cmpgtn1_tp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpgtn1_tp1_jump_nt, void, env, s32, s32 , i32),
{
/* J4_cmpgtn1_tp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgtn1_tp1_jump_nt(PART1_WRAP(gen_helper_J4_cmpgtn1_tp1_jump_nt(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_cmpgtn1_tp1_jump_nt */
},
void HELPER(J4_cmpgtn1_tp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtn1_tp1_jump_nt);
})
DEF_QEMU(J4_cmpgtn1_fp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpgtn1_fp1_jump_nt, void, env, s32, s32 , i32),
{
/* J4_cmpgtn1_fp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgtn1_fp1_jump_nt(PART1_WRAP(gen_helper_J4_cmpgtn1_fp1_jump_nt(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_cmpgtn1_fp1_jump_nt */
},
void HELPER(J4_cmpgtn1_fp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtn1_fp1_jump_nt);
})
DEF_QEMU(J4_cmpgtn1_tp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpgtn1_tp1_jump_t, void, env, s32, s32 , i32),
{
/* J4_cmpgtn1_tp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgtn1_tp1_jump_t(PART1_WRAP(gen_helper_J4_cmpgtn1_tp1_jump_t(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_cmpgtn1_tp1_jump_t */
},
void HELPER(J4_cmpgtn1_tp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtn1_tp1_jump_t);
})
DEF_QEMU(J4_cmpgtn1_fp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpgtn1_fp1_jump_t, void, env, s32, s32 , i32),
{
/* J4_cmpgtn1_fp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_cmpgtn1_fp1_jump_t(PART1_WRAP(gen_helper_J4_cmpgtn1_fp1_jump_t(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_cmpgtn1_fp1_jump_t */
},
void HELPER(J4_cmpgtn1_fp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtn1_fp1_jump_t);
})
DEF_QEMU(J4_tstbit0_tp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_tstbit0_tp0_jump_nt, void, env, s32, s32 , i32),
{
/* J4_tstbit0_tp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_tstbit0_tp0_jump_nt(PART1_WRAP(gen_helper_J4_tstbit0_tp0_jump_nt(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_tstbit0_tp0_jump_nt */
},
void HELPER(J4_tstbit0_tp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_tstbit0_tp0_jump_nt);
})
DEF_QEMU(J4_tstbit0_fp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_tstbit0_fp0_jump_nt, void, env, s32, s32 , i32),
{
/* J4_tstbit0_fp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_tstbit0_fp0_jump_nt(PART1_WRAP(gen_helper_J4_tstbit0_fp0_jump_nt(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_tstbit0_fp0_jump_nt */
},
void HELPER(J4_tstbit0_fp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_tstbit0_fp0_jump_nt);
})
DEF_QEMU(J4_tstbit0_tp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_tstbit0_tp0_jump_t, void, env, s32, s32 , i32),
{
/* J4_tstbit0_tp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_tstbit0_tp0_jump_t(PART1_WRAP(gen_helper_J4_tstbit0_tp0_jump_t(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_tstbit0_tp0_jump_t */
},
void HELPER(J4_tstbit0_tp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_tstbit0_tp0_jump_t);
})
DEF_QEMU(J4_tstbit0_fp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_tstbit0_fp0_jump_t, void, env, s32, s32 , i32),
{
/* J4_tstbit0_fp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_tstbit0_fp0_jump_t(PART1_WRAP(gen_helper_J4_tstbit0_fp0_jump_t(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_tstbit0_fp0_jump_t */
},
void HELPER(J4_tstbit0_fp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_tstbit0_fp0_jump_t);
})
DEF_QEMU(J4_tstbit0_tp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_tstbit0_tp1_jump_nt, void, env, s32, s32 , i32),
{
/* J4_tstbit0_tp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_tstbit0_tp1_jump_nt(PART1_WRAP(gen_helper_J4_tstbit0_tp1_jump_nt(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_tstbit0_tp1_jump_nt */
},
void HELPER(J4_tstbit0_tp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_tstbit0_tp1_jump_nt);
})
DEF_QEMU(J4_tstbit0_fp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_tstbit0_fp1_jump_nt, void, env, s32, s32 , i32),
{
/* J4_tstbit0_fp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_tstbit0_fp1_jump_nt(PART1_WRAP(gen_helper_J4_tstbit0_fp1_jump_nt(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_tstbit0_fp1_jump_nt */
},
void HELPER(J4_tstbit0_fp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_tstbit0_fp1_jump_nt);
})
DEF_QEMU(J4_tstbit0_tp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_tstbit0_tp1_jump_t, void, env, s32, s32 , i32),
{
/* J4_tstbit0_tp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_tstbit0_tp1_jump_t(PART1_WRAP(gen_helper_J4_tstbit0_tp1_jump_t(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_tstbit0_tp1_jump_t */
},
void HELPER(J4_tstbit0_tp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_tstbit0_tp1_jump_t);
})
DEF_QEMU(J4_tstbit0_fp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_tstbit0_fp1_jump_t, void, env, s32, s32 , i32),
{
/* J4_tstbit0_fp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_tstbit0_fp1_jump_t(PART1_WRAP(gen_helper_J4_tstbit0_fp1_jump_t(cpu_env, RsV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_tstbit0_fp1_jump_t */
},
void HELPER(J4_tstbit0_fp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_tstbit0_fp1_jump_t);
})
DEF_QEMU(J4_cmpeq_tp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeq_tp0_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpeq_tp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpeq_tp0_jump_nt(PART1_WRAP(gen_helper_J4_cmpeq_tp0_jump_nt(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpeq_tp0_jump_nt */
},
void HELPER(J4_cmpeq_tp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeq_tp0_jump_nt);
})
DEF_QEMU(J4_cmpeq_fp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeq_fp0_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpeq_fp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpeq_fp0_jump_nt(PART1_WRAP(gen_helper_J4_cmpeq_fp0_jump_nt(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpeq_fp0_jump_nt */
},
void HELPER(J4_cmpeq_fp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeq_fp0_jump_nt);
})
DEF_QEMU(J4_cmpeq_tp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeq_tp0_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpeq_tp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpeq_tp0_jump_t(PART1_WRAP(gen_helper_J4_cmpeq_tp0_jump_t(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpeq_tp0_jump_t */
},
void HELPER(J4_cmpeq_tp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeq_tp0_jump_t);
})
DEF_QEMU(J4_cmpeq_fp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeq_fp0_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpeq_fp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpeq_fp0_jump_t(PART1_WRAP(gen_helper_J4_cmpeq_fp0_jump_t(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpeq_fp0_jump_t */
},
void HELPER(J4_cmpeq_fp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeq_fp0_jump_t);
})
DEF_QEMU(J4_cmpeq_tp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeq_tp1_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpeq_tp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpeq_tp1_jump_nt(PART1_WRAP(gen_helper_J4_cmpeq_tp1_jump_nt(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpeq_tp1_jump_nt */
},
void HELPER(J4_cmpeq_tp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeq_tp1_jump_nt);
})
DEF_QEMU(J4_cmpeq_fp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeq_fp1_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpeq_fp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpeq_fp1_jump_nt(PART1_WRAP(gen_helper_J4_cmpeq_fp1_jump_nt(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpeq_fp1_jump_nt */
},
void HELPER(J4_cmpeq_fp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeq_fp1_jump_nt);
})
DEF_QEMU(J4_cmpeq_tp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeq_tp1_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpeq_tp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpeq_tp1_jump_t(PART1_WRAP(gen_helper_J4_cmpeq_tp1_jump_t(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpeq_tp1_jump_t */
},
void HELPER(J4_cmpeq_tp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeq_tp1_jump_t);
})
DEF_QEMU(J4_cmpeq_fp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeq_fp1_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpeq_fp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpeq_fp1_jump_t(PART1_WRAP(gen_helper_J4_cmpeq_fp1_jump_t(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpeq_fp1_jump_t */
},
void HELPER(J4_cmpeq_fp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeq_fp1_jump_t);
})
DEF_QEMU(J4_cmpgt_tp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgt_tp0_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgt_tp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgt_tp0_jump_nt(PART1_WRAP(gen_helper_J4_cmpgt_tp0_jump_nt(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgt_tp0_jump_nt */
},
void HELPER(J4_cmpgt_tp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgt_tp0_jump_nt);
})
DEF_QEMU(J4_cmpgt_fp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgt_fp0_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgt_fp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgt_fp0_jump_nt(PART1_WRAP(gen_helper_J4_cmpgt_fp0_jump_nt(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgt_fp0_jump_nt */
},
void HELPER(J4_cmpgt_fp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgt_fp0_jump_nt);
})
DEF_QEMU(J4_cmpgt_tp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgt_tp0_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgt_tp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgt_tp0_jump_t(PART1_WRAP(gen_helper_J4_cmpgt_tp0_jump_t(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgt_tp0_jump_t */
},
void HELPER(J4_cmpgt_tp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgt_tp0_jump_t);
})
DEF_QEMU(J4_cmpgt_fp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgt_fp0_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgt_fp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgt_fp0_jump_t(PART1_WRAP(gen_helper_J4_cmpgt_fp0_jump_t(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgt_fp0_jump_t */
},
void HELPER(J4_cmpgt_fp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgt_fp0_jump_t);
})
DEF_QEMU(J4_cmpgt_tp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgt_tp1_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgt_tp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgt_tp1_jump_nt(PART1_WRAP(gen_helper_J4_cmpgt_tp1_jump_nt(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgt_tp1_jump_nt */
},
void HELPER(J4_cmpgt_tp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgt_tp1_jump_nt);
})
DEF_QEMU(J4_cmpgt_fp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgt_fp1_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgt_fp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgt_fp1_jump_nt(PART1_WRAP(gen_helper_J4_cmpgt_fp1_jump_nt(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgt_fp1_jump_nt */
},
void HELPER(J4_cmpgt_fp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgt_fp1_jump_nt);
})
DEF_QEMU(J4_cmpgt_tp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgt_tp1_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgt_tp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgt_tp1_jump_t(PART1_WRAP(gen_helper_J4_cmpgt_tp1_jump_t(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgt_tp1_jump_t */
},
void HELPER(J4_cmpgt_tp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgt_tp1_jump_t);
})
DEF_QEMU(J4_cmpgt_fp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgt_fp1_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgt_fp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgt_fp1_jump_t(PART1_WRAP(gen_helper_J4_cmpgt_fp1_jump_t(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgt_fp1_jump_t */
},
void HELPER(J4_cmpgt_fp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgt_fp1_jump_t);
})
DEF_QEMU(J4_cmpgtu_tp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtu_tp0_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgtu_tp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgtu_tp0_jump_nt(PART1_WRAP(gen_helper_J4_cmpgtu_tp0_jump_nt(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgtu_tp0_jump_nt */
},
void HELPER(J4_cmpgtu_tp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtu_tp0_jump_nt);
})
DEF_QEMU(J4_cmpgtu_fp0_jump_nt,{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtu_fp0_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgtu_fp0_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgtu_fp0_jump_nt(PART1_WRAP(gen_helper_J4_cmpgtu_fp0_jump_nt(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgtu_fp0_jump_nt */
},
void HELPER(J4_cmpgtu_fp0_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtu_fp0_jump_nt);
})
DEF_QEMU(J4_cmpgtu_tp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtu_tp0_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgtu_tp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgtu_tp0_jump_t(PART1_WRAP(gen_helper_J4_cmpgtu_tp0_jump_t(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgtu_tp0_jump_t */
},
void HELPER(J4_cmpgtu_tp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtu_tp0_jump_t);
})
DEF_QEMU(J4_cmpgtu_fp0_jump_t,{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtu_fp0_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgtu_fp0_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgtu_fp0_jump_t(PART1_WRAP(gen_helper_J4_cmpgtu_fp0_jump_t(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgtu_fp0_jump_t */
},
void HELPER(J4_cmpgtu_fp0_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtu_fp0_jump_t);
})
DEF_QEMU(J4_cmpgtu_tp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtu_tp1_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgtu_tp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgtu_tp1_jump_nt(PART1_WRAP(gen_helper_J4_cmpgtu_tp1_jump_nt(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgtu_tp1_jump_nt */
},
void HELPER(J4_cmpgtu_tp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtu_tp1_jump_nt);
})
DEF_QEMU(J4_cmpgtu_fp1_jump_nt,{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtu_fp1_jump_nt, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgtu_fp1_jump_nt */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgtu_fp1_jump_nt(PART1_WRAP(gen_helper_J4_cmpgtu_fp1_jump_nt(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgtu_fp1_jump_nt */
},
void HELPER(J4_cmpgtu_fp1_jump_nt)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtu_fp1_jump_nt);
})
DEF_QEMU(J4_cmpgtu_tp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtu_tp1_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgtu_tp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgtu_tp1_jump_t(PART1_WRAP(gen_helper_J4_cmpgtu_tp1_jump_t(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgtu_tp1_jump_t */
},
void HELPER(J4_cmpgtu_tp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtu_tp1_jump_t);
})
DEF_QEMU(J4_cmpgtu_fp1_jump_t,{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtu_fp1_jump_t, void, env, s32, s32, s32 , i32),
{
/* J4_cmpgtu_fp1_jump_t */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgtu_fp1_jump_t(PART1_WRAP(gen_helper_J4_cmpgtu_fp1_jump_t(cpu_env, RsV, RtV, riV, part1));,
{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgtu_fp1_jump_t */
},
void HELPER(J4_cmpgtu_fp1_jump_t)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t riV, uint32_t part1)
{
uint32_t slot = 4; slot = slot;
{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtu_fp1_jump_t);
})
DEF_QEMU(J4_jumpseti,{fIMMEXT(riV); fPCALIGN(riV); RdV=UiV; fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);},
DEF_HELPER_3(J4_jumpseti, s32, env, s32, s32),
{
/* J4_jumpseti */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
fWRAP_J4_jumpseti(gen_helper_J4_jumpseti(RdV, cpu_env, UiV, riV);,
{fIMMEXT(riV); fPCALIGN(riV); RdV=UiV; fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_jumpseti */
},
int32_t HELPER(J4_jumpseti)(CPUHexagonState *env, int32_t UiV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{fIMMEXT(riV); fPCALIGN(riV); RdV=UiV; fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}
COUNT_HELPER(J4_jumpseti);
return RdV;
})
DEF_QEMU(J4_jumpsetr,{fIMMEXT(riV); fPCALIGN(riV); RdV=RsV; fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);},
DEF_HELPER_3(J4_jumpsetr, s32, env, s32, s32),
{
/* J4_jumpsetr */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J4_jumpsetr(gen_helper_J4_jumpsetr(RdV, cpu_env, RsV, riV);,
{fIMMEXT(riV); fPCALIGN(riV); RdV=RsV; fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J4_jumpsetr */
},
int32_t HELPER(J4_jumpsetr)(CPUHexagonState *env, int32_t RsV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{fIMMEXT(riV); fPCALIGN(riV); RdV=RsV; fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}
COUNT_HELPER(J4_jumpsetr);
return RdV;
})
DEF_QEMU(J4_cmpeqi_t_jumpnv_t,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==(UiV)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)==(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeqi_t_jumpnv_t, void, env, s32, s32, s32, i32),
{
/* J4_cmpeqi_t_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpeqi_t_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpeqi_t_jumpnv_t(cpu_env, NsN, UiV, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==(UiV)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)==(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpeqi_t_jumpnv_t */
},
void HELPER(J4_cmpeqi_t_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t UiV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==(UiV)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)==(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqi_t_jumpnv_t);
})
DEF_QEMU(J4_cmpeqi_t_jumpnv_nt,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==(UiV)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)==(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeqi_t_jumpnv_nt, void, env, s32, s32, s32, i32),
{
/* J4_cmpeqi_t_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpeqi_t_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpeqi_t_jumpnv_nt(cpu_env, NsN, UiV, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==(UiV)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)==(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpeqi_t_jumpnv_nt */
},
void HELPER(J4_cmpeqi_t_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t UiV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==(UiV)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)==(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqi_t_jumpnv_nt);
})
DEF_QEMU(J4_cmpeqi_f_jumpnv_t,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=(UiV)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)!=(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeqi_f_jumpnv_t, void, env, s32, s32, s32, i32),
{
/* J4_cmpeqi_f_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpeqi_f_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpeqi_f_jumpnv_t(cpu_env, NsN, UiV, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=(UiV)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)!=(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpeqi_f_jumpnv_t */
},
void HELPER(J4_cmpeqi_f_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t UiV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=(UiV)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)!=(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqi_f_jumpnv_t);
})
DEF_QEMU(J4_cmpeqi_f_jumpnv_nt,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=(UiV)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)!=(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeqi_f_jumpnv_nt, void, env, s32, s32, s32, i32),
{
/* J4_cmpeqi_f_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpeqi_f_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpeqi_f_jumpnv_nt(cpu_env, NsN, UiV, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=(UiV)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)!=(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpeqi_f_jumpnv_nt */
},
void HELPER(J4_cmpeqi_f_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t UiV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=(UiV)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)!=(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqi_f_jumpnv_nt);
})
DEF_QEMU(J4_cmpgti_t_jumpnv_t,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>(UiV)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgti_t_jumpnv_t, void, env, s32, s32, s32, i32),
{
/* J4_cmpgti_t_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpgti_t_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpgti_t_jumpnv_t(cpu_env, NsN, UiV, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>(UiV)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgti_t_jumpnv_t */
},
void HELPER(J4_cmpgti_t_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t UiV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>(UiV)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgti_t_jumpnv_t);
})
DEF_QEMU(J4_cmpgti_t_jumpnv_nt,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>(UiV)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgti_t_jumpnv_nt, void, env, s32, s32, s32, i32),
{
/* J4_cmpgti_t_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpgti_t_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpgti_t_jumpnv_nt(cpu_env, NsN, UiV, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>(UiV)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgti_t_jumpnv_nt */
},
void HELPER(J4_cmpgti_t_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t UiV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>(UiV)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgti_t_jumpnv_nt);
})
DEF_QEMU(J4_cmpgti_f_jumpnv_t,{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>(UiV)),,SPECULATE_TAKEN,13,0);if (!(fNEWREG(NsN)>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgti_f_jumpnv_t, void, env, s32, s32, s32, i32),
{
/* J4_cmpgti_f_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpgti_f_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpgti_f_jumpnv_t(cpu_env, NsN, UiV, riV, slot));,
{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>(UiV)),,SPECULATE_TAKEN,13,0);if (!(fNEWREG(NsN)>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgti_f_jumpnv_t */
},
void HELPER(J4_cmpgti_f_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t UiV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>(UiV)),,SPECULATE_TAKEN,13,0);if (!(fNEWREG(NsN)>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgti_f_jumpnv_t);
})
DEF_QEMU(J4_cmpgti_f_jumpnv_nt,{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>(UiV)),,SPECULATE_NOT_TAKEN,13,0); if (!(fNEWREG(NsN)>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgti_f_jumpnv_nt, void, env, s32, s32, s32, i32),
{
/* J4_cmpgti_f_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpgti_f_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpgti_f_jumpnv_nt(cpu_env, NsN, UiV, riV, slot));,
{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>(UiV)),,SPECULATE_NOT_TAKEN,13,0); if (!(fNEWREG(NsN)>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgti_f_jumpnv_nt */
},
void HELPER(J4_cmpgti_f_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t UiV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>(UiV)),,SPECULATE_NOT_TAKEN,13,0); if (!(fNEWREG(NsN)>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgti_f_jumpnv_nt);
})
DEF_QEMU(J4_cmpgtui_t_jumpnv_t,{fBRANCH_SPECULATE_STALL((fCAST4u(fNEWREG(NsN))>(UiV)),,SPECULATE_TAKEN,13,0);if ((fCAST4u(fNEWREG(NsN))>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtui_t_jumpnv_t, void, env, s32, s32, s32, i32),
{
/* J4_cmpgtui_t_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpgtui_t_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpgtui_t_jumpnv_t(cpu_env, NsN, UiV, riV, slot));,
{fBRANCH_SPECULATE_STALL((fCAST4u(fNEWREG(NsN))>(UiV)),,SPECULATE_TAKEN,13,0);if ((fCAST4u(fNEWREG(NsN))>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgtui_t_jumpnv_t */
},
void HELPER(J4_cmpgtui_t_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t UiV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fCAST4u(fNEWREG(NsN))>(UiV)),,SPECULATE_TAKEN,13,0);if ((fCAST4u(fNEWREG(NsN))>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtui_t_jumpnv_t);
})
DEF_QEMU(J4_cmpgtui_t_jumpnv_nt,{fBRANCH_SPECULATE_STALL((fCAST4u(fNEWREG(NsN))>(UiV)),,SPECULATE_NOT_TAKEN,13,0); if ((fCAST4u(fNEWREG(NsN))>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtui_t_jumpnv_nt, void, env, s32, s32, s32, i32),
{
/* J4_cmpgtui_t_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpgtui_t_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpgtui_t_jumpnv_nt(cpu_env, NsN, UiV, riV, slot));,
{fBRANCH_SPECULATE_STALL((fCAST4u(fNEWREG(NsN))>(UiV)),,SPECULATE_NOT_TAKEN,13,0); if ((fCAST4u(fNEWREG(NsN))>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgtui_t_jumpnv_nt */
},
void HELPER(J4_cmpgtui_t_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t UiV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fCAST4u(fNEWREG(NsN))>(UiV)),,SPECULATE_NOT_TAKEN,13,0); if ((fCAST4u(fNEWREG(NsN))>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtui_t_jumpnv_nt);
})
DEF_QEMU(J4_cmpgtui_f_jumpnv_t,{fBRANCH_SPECULATE_STALL(!(fCAST4u(fNEWREG(NsN))>(UiV)),,SPECULATE_TAKEN,13,0);if (!(fCAST4u(fNEWREG(NsN))>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtui_f_jumpnv_t, void, env, s32, s32, s32, i32),
{
/* J4_cmpgtui_f_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpgtui_f_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpgtui_f_jumpnv_t(cpu_env, NsN, UiV, riV, slot));,
{fBRANCH_SPECULATE_STALL(!(fCAST4u(fNEWREG(NsN))>(UiV)),,SPECULATE_TAKEN,13,0);if (!(fCAST4u(fNEWREG(NsN))>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgtui_f_jumpnv_t */
},
void HELPER(J4_cmpgtui_f_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t UiV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(!(fCAST4u(fNEWREG(NsN))>(UiV)),,SPECULATE_TAKEN,13,0);if (!(fCAST4u(fNEWREG(NsN))>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtui_f_jumpnv_t);
})
DEF_QEMU(J4_cmpgtui_f_jumpnv_nt,{fBRANCH_SPECULATE_STALL(!(fCAST4u(fNEWREG(NsN))>(UiV)),,SPECULATE_NOT_TAKEN,13,0); if (!(fCAST4u(fNEWREG(NsN))>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtui_f_jumpnv_nt, void, env, s32, s32, s32, i32),
{
/* J4_cmpgtui_f_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(UiV,1);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpgtui_f_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpgtui_f_jumpnv_nt(cpu_env, NsN, UiV, riV, slot));,
{fBRANCH_SPECULATE_STALL(!(fCAST4u(fNEWREG(NsN))>(UiV)),,SPECULATE_NOT_TAKEN,13,0); if (!(fCAST4u(fNEWREG(NsN))>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(UiV);
FREE_IMM(riV);
/* J4_cmpgtui_f_jumpnv_nt */
},
void HELPER(J4_cmpgtui_f_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t UiV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(!(fCAST4u(fNEWREG(NsN))>(UiV)),,SPECULATE_NOT_TAKEN,13,0); if (!(fCAST4u(fNEWREG(NsN))>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtui_f_jumpnv_nt);
})
DEF_QEMU(J4_cmpeqn1_t_jumpnv_t,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==(-1)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)==(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpeqn1_t_jumpnv_t, void, env, s32, s32, i32),
{
/* J4_cmpeqn1_t_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpeqn1_t_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpeqn1_t_jumpnv_t(cpu_env, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==(-1)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)==(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_cmpeqn1_t_jumpnv_t */
},
void HELPER(J4_cmpeqn1_t_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==(-1)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)==(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqn1_t_jumpnv_t);
})
DEF_QEMU(J4_cmpeqn1_t_jumpnv_nt,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==(-1)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)==(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpeqn1_t_jumpnv_nt, void, env, s32, s32, i32),
{
/* J4_cmpeqn1_t_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpeqn1_t_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpeqn1_t_jumpnv_nt(cpu_env, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==(-1)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)==(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_cmpeqn1_t_jumpnv_nt */
},
void HELPER(J4_cmpeqn1_t_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==(-1)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)==(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqn1_t_jumpnv_nt);
})
DEF_QEMU(J4_cmpeqn1_f_jumpnv_t,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=(-1)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)!=(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpeqn1_f_jumpnv_t, void, env, s32, s32, i32),
{
/* J4_cmpeqn1_f_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpeqn1_f_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpeqn1_f_jumpnv_t(cpu_env, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=(-1)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)!=(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_cmpeqn1_f_jumpnv_t */
},
void HELPER(J4_cmpeqn1_f_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=(-1)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)!=(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqn1_f_jumpnv_t);
})
DEF_QEMU(J4_cmpeqn1_f_jumpnv_nt,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=(-1)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)!=(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpeqn1_f_jumpnv_nt, void, env, s32, s32, i32),
{
/* J4_cmpeqn1_f_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpeqn1_f_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpeqn1_f_jumpnv_nt(cpu_env, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=(-1)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)!=(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_cmpeqn1_f_jumpnv_nt */
},
void HELPER(J4_cmpeqn1_f_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=(-1)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)!=(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeqn1_f_jumpnv_nt);
})
DEF_QEMU(J4_cmpgtn1_t_jumpnv_t,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>(-1)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)>(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpgtn1_t_jumpnv_t, void, env, s32, s32, i32),
{
/* J4_cmpgtn1_t_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpgtn1_t_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpgtn1_t_jumpnv_t(cpu_env, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>(-1)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)>(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_cmpgtn1_t_jumpnv_t */
},
void HELPER(J4_cmpgtn1_t_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>(-1)),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)>(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtn1_t_jumpnv_t);
})
DEF_QEMU(J4_cmpgtn1_t_jumpnv_nt,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>(-1)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)>(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpgtn1_t_jumpnv_nt, void, env, s32, s32, i32),
{
/* J4_cmpgtn1_t_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpgtn1_t_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpgtn1_t_jumpnv_nt(cpu_env, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>(-1)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)>(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_cmpgtn1_t_jumpnv_nt */
},
void HELPER(J4_cmpgtn1_t_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>(-1)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)>(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtn1_t_jumpnv_nt);
})
DEF_QEMU(J4_cmpgtn1_f_jumpnv_t,{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>(-1)),,SPECULATE_TAKEN,13,0);if (!(fNEWREG(NsN)>(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpgtn1_f_jumpnv_t, void, env, s32, s32, i32),
{
/* J4_cmpgtn1_f_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpgtn1_f_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpgtn1_f_jumpnv_t(cpu_env, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>(-1)),,SPECULATE_TAKEN,13,0);if (!(fNEWREG(NsN)>(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_cmpgtn1_f_jumpnv_t */
},
void HELPER(J4_cmpgtn1_f_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>(-1)),,SPECULATE_TAKEN,13,0);if (!(fNEWREG(NsN)>(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtn1_f_jumpnv_t);
})
DEF_QEMU(J4_cmpgtn1_f_jumpnv_nt,{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>(-1)),,SPECULATE_NOT_TAKEN,13,0); if (!(fNEWREG(NsN)>(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_cmpgtn1_f_jumpnv_nt, void, env, s32, s32, i32),
{
/* J4_cmpgtn1_f_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpgtn1_f_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpgtn1_f_jumpnv_nt(cpu_env, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>(-1)),,SPECULATE_NOT_TAKEN,13,0); if (!(fNEWREG(NsN)>(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_cmpgtn1_f_jumpnv_nt */
},
void HELPER(J4_cmpgtn1_f_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>(-1)),,SPECULATE_NOT_TAKEN,13,0); if (!(fNEWREG(NsN)>(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtn1_f_jumpnv_nt);
})
DEF_QEMU(J4_tstbit0_t_jumpnv_t,{fBRANCH_SPECULATE_STALL(((fNEWREG(NsN)) & 1),,SPECULATE_TAKEN,13,0);if (((fNEWREG(NsN)) & 1)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_tstbit0_t_jumpnv_t, void, env, s32, s32, i32),
{
/* J4_tstbit0_t_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_tstbit0_t_jumpnv_t(SLOT_WRAP(gen_helper_J4_tstbit0_t_jumpnv_t(cpu_env, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL(((fNEWREG(NsN)) & 1),,SPECULATE_TAKEN,13,0);if (((fNEWREG(NsN)) & 1)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_tstbit0_t_jumpnv_t */
},
void HELPER(J4_tstbit0_t_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(((fNEWREG(NsN)) & 1),,SPECULATE_TAKEN,13,0);if (((fNEWREG(NsN)) & 1)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_tstbit0_t_jumpnv_t);
})
DEF_QEMU(J4_tstbit0_t_jumpnv_nt,{fBRANCH_SPECULATE_STALL(((fNEWREG(NsN)) & 1),,SPECULATE_NOT_TAKEN,13,0); if (((fNEWREG(NsN)) & 1)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_tstbit0_t_jumpnv_nt, void, env, s32, s32, i32),
{
/* J4_tstbit0_t_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_tstbit0_t_jumpnv_nt(SLOT_WRAP(gen_helper_J4_tstbit0_t_jumpnv_nt(cpu_env, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL(((fNEWREG(NsN)) & 1),,SPECULATE_NOT_TAKEN,13,0); if (((fNEWREG(NsN)) & 1)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_tstbit0_t_jumpnv_nt */
},
void HELPER(J4_tstbit0_t_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(((fNEWREG(NsN)) & 1),,SPECULATE_NOT_TAKEN,13,0); if (((fNEWREG(NsN)) & 1)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_tstbit0_t_jumpnv_nt);
})
DEF_QEMU(J4_tstbit0_f_jumpnv_t,{fBRANCH_SPECULATE_STALL(!((fNEWREG(NsN)) & 1),,SPECULATE_TAKEN,13,0);if (!((fNEWREG(NsN)) & 1)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_tstbit0_f_jumpnv_t, void, env, s32, s32, i32),
{
/* J4_tstbit0_f_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_tstbit0_f_jumpnv_t(SLOT_WRAP(gen_helper_J4_tstbit0_f_jumpnv_t(cpu_env, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL(!((fNEWREG(NsN)) & 1),,SPECULATE_TAKEN,13,0);if (!((fNEWREG(NsN)) & 1)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_tstbit0_f_jumpnv_t */
},
void HELPER(J4_tstbit0_f_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(!((fNEWREG(NsN)) & 1),,SPECULATE_TAKEN,13,0);if (!((fNEWREG(NsN)) & 1)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_tstbit0_f_jumpnv_t);
})
DEF_QEMU(J4_tstbit0_f_jumpnv_nt,{fBRANCH_SPECULATE_STALL(!((fNEWREG(NsN)) & 1),,SPECULATE_NOT_TAKEN,13,0); if (!((fNEWREG(NsN)) & 1)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_4(J4_tstbit0_f_jumpnv_nt, void, env, s32, s32, i32),
{
/* J4_tstbit0_f_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_tstbit0_f_jumpnv_nt(SLOT_WRAP(gen_helper_J4_tstbit0_f_jumpnv_nt(cpu_env, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL(!((fNEWREG(NsN)) & 1),,SPECULATE_NOT_TAKEN,13,0); if (!((fNEWREG(NsN)) & 1)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_tstbit0_f_jumpnv_nt */
},
void HELPER(J4_tstbit0_f_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(!((fNEWREG(NsN)) & 1),,SPECULATE_NOT_TAKEN,13,0); if (!((fNEWREG(NsN)) & 1)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_tstbit0_f_jumpnv_nt);
})
DEF_QEMU(J4_cmpeq_t_jumpnv_t,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==RtV),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)==RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeq_t_jumpnv_t, void, env, s32, s32, s32, i32),
{
/* J4_cmpeq_t_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpeq_t_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpeq_t_jumpnv_t(cpu_env, NsN, RtV, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==RtV),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)==RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpeq_t_jumpnv_t */
},
void HELPER(J4_cmpeq_t_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t RtV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==RtV),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)==RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeq_t_jumpnv_t);
})
DEF_QEMU(J4_cmpeq_t_jumpnv_nt,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==RtV),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)==RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeq_t_jumpnv_nt, void, env, s32, s32, s32, i32),
{
/* J4_cmpeq_t_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpeq_t_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpeq_t_jumpnv_nt(cpu_env, NsN, RtV, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==RtV),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)==RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpeq_t_jumpnv_nt */
},
void HELPER(J4_cmpeq_t_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t RtV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==RtV),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)==RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeq_t_jumpnv_nt);
})
DEF_QEMU(J4_cmpgt_t_jumpnv_t,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>RtV),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)>RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgt_t_jumpnv_t, void, env, s32, s32, s32, i32),
{
/* J4_cmpgt_t_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgt_t_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpgt_t_jumpnv_t(cpu_env, NsN, RtV, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>RtV),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)>RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgt_t_jumpnv_t */
},
void HELPER(J4_cmpgt_t_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t RtV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>RtV),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)>RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgt_t_jumpnv_t);
})
DEF_QEMU(J4_cmpgt_t_jumpnv_nt,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>RtV),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)>RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgt_t_jumpnv_nt, void, env, s32, s32, s32, i32),
{
/* J4_cmpgt_t_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgt_t_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpgt_t_jumpnv_nt(cpu_env, NsN, RtV, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>RtV),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)>RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgt_t_jumpnv_nt */
},
void HELPER(J4_cmpgt_t_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t RtV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>RtV),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)>RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgt_t_jumpnv_nt);
})
DEF_QEMU(J4_cmpgtu_t_jumpnv_t,{fBRANCH_SPECULATE_STALL((fCAST4u(fNEWREG(NsN))>fCAST4u(RtV)),,SPECULATE_TAKEN,13,0);if ((fCAST4u(fNEWREG(NsN))>fCAST4u(RtV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtu_t_jumpnv_t, void, env, s32, s32, s32, i32),
{
/* J4_cmpgtu_t_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgtu_t_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpgtu_t_jumpnv_t(cpu_env, NsN, RtV, riV, slot));,
{fBRANCH_SPECULATE_STALL((fCAST4u(fNEWREG(NsN))>fCAST4u(RtV)),,SPECULATE_TAKEN,13,0);if ((fCAST4u(fNEWREG(NsN))>fCAST4u(RtV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgtu_t_jumpnv_t */
},
void HELPER(J4_cmpgtu_t_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t RtV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fCAST4u(fNEWREG(NsN))>fCAST4u(RtV)),,SPECULATE_TAKEN,13,0);if ((fCAST4u(fNEWREG(NsN))>fCAST4u(RtV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtu_t_jumpnv_t);
})
DEF_QEMU(J4_cmpgtu_t_jumpnv_nt,{fBRANCH_SPECULATE_STALL((fCAST4u(fNEWREG(NsN))>fCAST4u(RtV)),,SPECULATE_NOT_TAKEN,13,0); if ((fCAST4u(fNEWREG(NsN))>fCAST4u(RtV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtu_t_jumpnv_nt, void, env, s32, s32, s32, i32),
{
/* J4_cmpgtu_t_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgtu_t_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpgtu_t_jumpnv_nt(cpu_env, NsN, RtV, riV, slot));,
{fBRANCH_SPECULATE_STALL((fCAST4u(fNEWREG(NsN))>fCAST4u(RtV)),,SPECULATE_NOT_TAKEN,13,0); if ((fCAST4u(fNEWREG(NsN))>fCAST4u(RtV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgtu_t_jumpnv_nt */
},
void HELPER(J4_cmpgtu_t_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t RtV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fCAST4u(fNEWREG(NsN))>fCAST4u(RtV)),,SPECULATE_NOT_TAKEN,13,0); if ((fCAST4u(fNEWREG(NsN))>fCAST4u(RtV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtu_t_jumpnv_nt);
})
DEF_QEMU(J4_cmplt_t_jumpnv_t,{fBRANCH_SPECULATE_STALL((RtV>fNEWREG(NsN)),,SPECULATE_TAKEN,13,0);if ((RtV>fNEWREG(NsN))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmplt_t_jumpnv_t, void, env, s32, s32, s32, i32),
{
/* J4_cmplt_t_jumpnv_t */
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_NEW_NREG(TCGv, NsN, NsX, 1, 0);
DECL_IMM(riV,0);
READ_RREG_t(RtV, RtN);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmplt_t_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmplt_t_jumpnv_t(cpu_env, RtV, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL((RtV>fNEWREG(NsN)),,SPECULATE_TAKEN,13,0);if ((RtV>fNEWREG(NsN))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_t(RtV);
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_cmplt_t_jumpnv_t */
},
void HELPER(J4_cmplt_t_jumpnv_t)(CPUHexagonState *env, int32_t RtV, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((RtV>fNEWREG(NsN)),,SPECULATE_TAKEN,13,0);if ((RtV>fNEWREG(NsN))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmplt_t_jumpnv_t);
})
DEF_QEMU(J4_cmplt_t_jumpnv_nt,{fBRANCH_SPECULATE_STALL((RtV>fNEWREG(NsN)),,SPECULATE_NOT_TAKEN,13,0); if ((RtV>fNEWREG(NsN))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmplt_t_jumpnv_nt, void, env, s32, s32, s32, i32),
{
/* J4_cmplt_t_jumpnv_nt */
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_NEW_NREG(TCGv, NsN, NsX, 1, 0);
DECL_IMM(riV,0);
READ_RREG_t(RtV, RtN);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmplt_t_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmplt_t_jumpnv_nt(cpu_env, RtV, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL((RtV>fNEWREG(NsN)),,SPECULATE_NOT_TAKEN,13,0); if ((RtV>fNEWREG(NsN))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_t(RtV);
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_cmplt_t_jumpnv_nt */
},
void HELPER(J4_cmplt_t_jumpnv_nt)(CPUHexagonState *env, int32_t RtV, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((RtV>fNEWREG(NsN)),,SPECULATE_NOT_TAKEN,13,0); if ((RtV>fNEWREG(NsN))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmplt_t_jumpnv_nt);
})
DEF_QEMU(J4_cmpltu_t_jumpnv_t,{fBRANCH_SPECULATE_STALL((fCAST4u(RtV)>fCAST4u(fNEWREG(NsN))),,SPECULATE_TAKEN,13,0);if ((fCAST4u(RtV)>fCAST4u(fNEWREG(NsN)))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpltu_t_jumpnv_t, void, env, s32, s32, s32, i32),
{
/* J4_cmpltu_t_jumpnv_t */
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_NEW_NREG(TCGv, NsN, NsX, 1, 0);
DECL_IMM(riV,0);
READ_RREG_t(RtV, RtN);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpltu_t_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpltu_t_jumpnv_t(cpu_env, RtV, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL((fCAST4u(RtV)>fCAST4u(fNEWREG(NsN))),,SPECULATE_TAKEN,13,0);if ((fCAST4u(RtV)>fCAST4u(fNEWREG(NsN)))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_t(RtV);
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_cmpltu_t_jumpnv_t */
},
void HELPER(J4_cmpltu_t_jumpnv_t)(CPUHexagonState *env, int32_t RtV, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fCAST4u(RtV)>fCAST4u(fNEWREG(NsN))),,SPECULATE_TAKEN,13,0);if ((fCAST4u(RtV)>fCAST4u(fNEWREG(NsN)))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpltu_t_jumpnv_t);
})
DEF_QEMU(J4_cmpltu_t_jumpnv_nt,{fBRANCH_SPECULATE_STALL((fCAST4u(RtV)>fCAST4u(fNEWREG(NsN))),,SPECULATE_NOT_TAKEN,13,0); if ((fCAST4u(RtV)>fCAST4u(fNEWREG(NsN)))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpltu_t_jumpnv_nt, void, env, s32, s32, s32, i32),
{
/* J4_cmpltu_t_jumpnv_nt */
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_NEW_NREG(TCGv, NsN, NsX, 1, 0);
DECL_IMM(riV,0);
READ_RREG_t(RtV, RtN);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpltu_t_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpltu_t_jumpnv_nt(cpu_env, RtV, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL((fCAST4u(RtV)>fCAST4u(fNEWREG(NsN))),,SPECULATE_NOT_TAKEN,13,0); if ((fCAST4u(RtV)>fCAST4u(fNEWREG(NsN)))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_t(RtV);
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_cmpltu_t_jumpnv_nt */
},
void HELPER(J4_cmpltu_t_jumpnv_nt)(CPUHexagonState *env, int32_t RtV, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fCAST4u(RtV)>fCAST4u(fNEWREG(NsN))),,SPECULATE_NOT_TAKEN,13,0); if ((fCAST4u(RtV)>fCAST4u(fNEWREG(NsN)))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpltu_t_jumpnv_nt);
})
DEF_QEMU(J4_cmpeq_f_jumpnv_t,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=RtV),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)!=RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeq_f_jumpnv_t, void, env, s32, s32, s32, i32),
{
/* J4_cmpeq_f_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpeq_f_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpeq_f_jumpnv_t(cpu_env, NsN, RtV, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=RtV),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)!=RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpeq_f_jumpnv_t */
},
void HELPER(J4_cmpeq_f_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t RtV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=RtV),,SPECULATE_TAKEN,13,0);if ((fNEWREG(NsN)!=RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeq_f_jumpnv_t);
})
DEF_QEMU(J4_cmpeq_f_jumpnv_nt,{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=RtV),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)!=RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpeq_f_jumpnv_nt, void, env, s32, s32, s32, i32),
{
/* J4_cmpeq_f_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpeq_f_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpeq_f_jumpnv_nt(cpu_env, NsN, RtV, riV, slot));,
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=RtV),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)!=RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpeq_f_jumpnv_nt */
},
void HELPER(J4_cmpeq_f_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t RtV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=RtV),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)!=RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpeq_f_jumpnv_nt);
})
DEF_QEMU(J4_cmpgt_f_jumpnv_t,{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>RtV),,SPECULATE_TAKEN,13,0);if (!(fNEWREG(NsN)>RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgt_f_jumpnv_t, void, env, s32, s32, s32, i32),
{
/* J4_cmpgt_f_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgt_f_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpgt_f_jumpnv_t(cpu_env, NsN, RtV, riV, slot));,
{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>RtV),,SPECULATE_TAKEN,13,0);if (!(fNEWREG(NsN)>RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgt_f_jumpnv_t */
},
void HELPER(J4_cmpgt_f_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t RtV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>RtV),,SPECULATE_TAKEN,13,0);if (!(fNEWREG(NsN)>RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgt_f_jumpnv_t);
})
DEF_QEMU(J4_cmpgt_f_jumpnv_nt,{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>RtV),,SPECULATE_NOT_TAKEN,13,0); if (!(fNEWREG(NsN)>RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgt_f_jumpnv_nt, void, env, s32, s32, s32, i32),
{
/* J4_cmpgt_f_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgt_f_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpgt_f_jumpnv_nt(cpu_env, NsN, RtV, riV, slot));,
{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>RtV),,SPECULATE_NOT_TAKEN,13,0); if (!(fNEWREG(NsN)>RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgt_f_jumpnv_nt */
},
void HELPER(J4_cmpgt_f_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t RtV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>RtV),,SPECULATE_NOT_TAKEN,13,0); if (!(fNEWREG(NsN)>RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgt_f_jumpnv_nt);
})
DEF_QEMU(J4_cmpgtu_f_jumpnv_t,{fBRANCH_SPECULATE_STALL(!(fCAST4u(fNEWREG(NsN))>fCAST4u(RtV)),,SPECULATE_TAKEN,13,0);if (!(fCAST4u(fNEWREG(NsN))>fCAST4u(RtV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtu_f_jumpnv_t, void, env, s32, s32, s32, i32),
{
/* J4_cmpgtu_f_jumpnv_t */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgtu_f_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpgtu_f_jumpnv_t(cpu_env, NsN, RtV, riV, slot));,
{fBRANCH_SPECULATE_STALL(!(fCAST4u(fNEWREG(NsN))>fCAST4u(RtV)),,SPECULATE_TAKEN,13,0);if (!(fCAST4u(fNEWREG(NsN))>fCAST4u(RtV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgtu_f_jumpnv_t */
},
void HELPER(J4_cmpgtu_f_jumpnv_t)(CPUHexagonState *env, int32_t NsN, int32_t RtV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(!(fCAST4u(fNEWREG(NsN))>fCAST4u(RtV)),,SPECULATE_TAKEN,13,0);if (!(fCAST4u(fNEWREG(NsN))>fCAST4u(RtV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtu_f_jumpnv_t);
})
DEF_QEMU(J4_cmpgtu_f_jumpnv_nt,{fBRANCH_SPECULATE_STALL(!(fCAST4u(fNEWREG(NsN))>fCAST4u(RtV)),,SPECULATE_NOT_TAKEN,13,0); if (!(fCAST4u(fNEWREG(NsN))>fCAST4u(RtV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpgtu_f_jumpnv_nt, void, env, s32, s32, s32, i32),
{
/* J4_cmpgtu_f_jumpnv_nt */
DECL_NEW_NREG(TCGv, NsN, NsX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(riV,0);
READ_NEW_NREG(NsN, NsX);
READ_RREG_t(RtV, RtN);
fWRAP_J4_cmpgtu_f_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpgtu_f_jumpnv_nt(cpu_env, NsN, RtV, riV, slot));,
{fBRANCH_SPECULATE_STALL(!(fCAST4u(fNEWREG(NsN))>fCAST4u(RtV)),,SPECULATE_NOT_TAKEN,13,0); if (!(fCAST4u(fNEWREG(NsN))>fCAST4u(RtV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_NEW_NREG(NsN);
FREE_REG_t(RtV);
FREE_IMM(riV);
/* J4_cmpgtu_f_jumpnv_nt */
},
void HELPER(J4_cmpgtu_f_jumpnv_nt)(CPUHexagonState *env, int32_t NsN, int32_t RtV, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(!(fCAST4u(fNEWREG(NsN))>fCAST4u(RtV)),,SPECULATE_NOT_TAKEN,13,0); if (!(fCAST4u(fNEWREG(NsN))>fCAST4u(RtV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpgtu_f_jumpnv_nt);
})
DEF_QEMU(J4_cmplt_f_jumpnv_t,{fBRANCH_SPECULATE_STALL(!(RtV>fNEWREG(NsN)),,SPECULATE_TAKEN,13,0);if (!(RtV>fNEWREG(NsN))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmplt_f_jumpnv_t, void, env, s32, s32, s32, i32),
{
/* J4_cmplt_f_jumpnv_t */
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_NEW_NREG(TCGv, NsN, NsX, 1, 0);
DECL_IMM(riV,0);
READ_RREG_t(RtV, RtN);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmplt_f_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmplt_f_jumpnv_t(cpu_env, RtV, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL(!(RtV>fNEWREG(NsN)),,SPECULATE_TAKEN,13,0);if (!(RtV>fNEWREG(NsN))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_t(RtV);
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_cmplt_f_jumpnv_t */
},
void HELPER(J4_cmplt_f_jumpnv_t)(CPUHexagonState *env, int32_t RtV, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(!(RtV>fNEWREG(NsN)),,SPECULATE_TAKEN,13,0);if (!(RtV>fNEWREG(NsN))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmplt_f_jumpnv_t);
})
DEF_QEMU(J4_cmplt_f_jumpnv_nt,{fBRANCH_SPECULATE_STALL(!(RtV>fNEWREG(NsN)),,SPECULATE_NOT_TAKEN,13,0); if (!(RtV>fNEWREG(NsN))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmplt_f_jumpnv_nt, void, env, s32, s32, s32, i32),
{
/* J4_cmplt_f_jumpnv_nt */
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_NEW_NREG(TCGv, NsN, NsX, 1, 0);
DECL_IMM(riV,0);
READ_RREG_t(RtV, RtN);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmplt_f_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmplt_f_jumpnv_nt(cpu_env, RtV, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL(!(RtV>fNEWREG(NsN)),,SPECULATE_NOT_TAKEN,13,0); if (!(RtV>fNEWREG(NsN))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_t(RtV);
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_cmplt_f_jumpnv_nt */
},
void HELPER(J4_cmplt_f_jumpnv_nt)(CPUHexagonState *env, int32_t RtV, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(!(RtV>fNEWREG(NsN)),,SPECULATE_NOT_TAKEN,13,0); if (!(RtV>fNEWREG(NsN))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmplt_f_jumpnv_nt);
})
DEF_QEMU(J4_cmpltu_f_jumpnv_t,{fBRANCH_SPECULATE_STALL(!(fCAST4u(RtV)>fCAST4u(fNEWREG(NsN))),,SPECULATE_TAKEN,13,0);if (!(fCAST4u(RtV)>fCAST4u(fNEWREG(NsN)))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpltu_f_jumpnv_t, void, env, s32, s32, s32, i32),
{
/* J4_cmpltu_f_jumpnv_t */
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_NEW_NREG(TCGv, NsN, NsX, 1, 0);
DECL_IMM(riV,0);
READ_RREG_t(RtV, RtN);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpltu_f_jumpnv_t(SLOT_WRAP(gen_helper_J4_cmpltu_f_jumpnv_t(cpu_env, RtV, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL(!(fCAST4u(RtV)>fCAST4u(fNEWREG(NsN))),,SPECULATE_TAKEN,13,0);if (!(fCAST4u(RtV)>fCAST4u(fNEWREG(NsN)))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_t(RtV);
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_cmpltu_f_jumpnv_t */
},
void HELPER(J4_cmpltu_f_jumpnv_t)(CPUHexagonState *env, int32_t RtV, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(!(fCAST4u(RtV)>fCAST4u(fNEWREG(NsN))),,SPECULATE_TAKEN,13,0);if (!(fCAST4u(RtV)>fCAST4u(fNEWREG(NsN)))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpltu_f_jumpnv_t);
})
DEF_QEMU(J4_cmpltu_f_jumpnv_nt,{fBRANCH_SPECULATE_STALL(!(fCAST4u(RtV)>fCAST4u(fNEWREG(NsN))),,SPECULATE_NOT_TAKEN,13,0); if (!(fCAST4u(RtV)>fCAST4u(fNEWREG(NsN)))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}},
DEF_HELPER_5(J4_cmpltu_f_jumpnv_nt, void, env, s32, s32, s32, i32),
{
/* J4_cmpltu_f_jumpnv_nt */
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_NEW_NREG(TCGv, NsN, NsX, 1, 0);
DECL_IMM(riV,0);
READ_RREG_t(RtV, RtN);
READ_NEW_NREG(NsN, NsX);
fWRAP_J4_cmpltu_f_jumpnv_nt(SLOT_WRAP(gen_helper_J4_cmpltu_f_jumpnv_nt(cpu_env, RtV, NsN, riV, slot));,
{fBRANCH_SPECULATE_STALL(!(fCAST4u(RtV)>fCAST4u(fNEWREG(NsN))),,SPECULATE_NOT_TAKEN,13,0); if (!(fCAST4u(RtV)>fCAST4u(fNEWREG(NsN)))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
FREE_REG_t(RtV);
FREE_NEW_NREG(NsN);
FREE_IMM(riV);
/* J4_cmpltu_f_jumpnv_nt */
},
void HELPER(J4_cmpltu_f_jumpnv_nt)(CPUHexagonState *env, int32_t RtV, int32_t NsN, int32_t riV, uint32_t slot)
{
{fBRANCH_SPECULATE_STALL(!(fCAST4u(RtV)>fCAST4u(fNEWREG(NsN))),,SPECULATE_NOT_TAKEN,13,0); if (!(fCAST4u(RtV)>fCAST4u(fNEWREG(NsN)))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}}
COUNT_HELPER(J4_cmpltu_f_jumpnv_nt);
})
DEF_QEMU(J2_call,{fIMMEXT(riV); fPCALIGN(riV); fCALL(fREAD_PC()+riV); },
DEF_HELPER_2(J2_call, void, env, s32),
{
/* J2_call */
DECL_IMM(riV,0);
fWRAP_J2_call(gen_helper_J2_call(cpu_env, riV);,
{fIMMEXT(riV); fPCALIGN(riV); fCALL(fREAD_PC()+riV); })
FREE_IMM(riV);
/* J2_call */
},
void HELPER(J2_call)(CPUHexagonState *env, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fIMMEXT(riV); fPCALIGN(riV); fCALL(fREAD_PC()+riV); }
COUNT_HELPER(J2_call);
})
DEF_QEMU(J2_callt,{fIMMEXT(riV); fPCALIGN(riV); fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLD(PuV)) { fCALL(fREAD_PC()+riV); }},
DEF_HELPER_3(J2_callt, void, env, s32, s32),
{
/* J2_callt */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_IMM(riV,0);
READ_PREG_u(PuV, PuN);
fWRAP_J2_callt(gen_helper_J2_callt(cpu_env, PuV, riV);,
{fIMMEXT(riV); fPCALIGN(riV); fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLD(PuV)) { fCALL(fREAD_PC()+riV); }})
FREE_REG_u(PuV);
FREE_IMM(riV);
/* J2_callt */
},
void HELPER(J2_callt)(CPUHexagonState *env, int32_t PuV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fIMMEXT(riV); fPCALIGN(riV); fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLD(PuV)) { fCALL(fREAD_PC()+riV); }}
COUNT_HELPER(J2_callt);
})
DEF_QEMU(J2_callf,{fIMMEXT(riV); fPCALIGN(riV); fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_NOT_TAKEN,12,0);if (fLSBOLDNOT(PuV)) { fCALL(fREAD_PC()+riV); }},
DEF_HELPER_3(J2_callf, void, env, s32, s32),
{
/* J2_callf */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_IMM(riV,0);
READ_PREG_u(PuV, PuN);
fWRAP_J2_callf(gen_helper_J2_callf(cpu_env, PuV, riV);,
{fIMMEXT(riV); fPCALIGN(riV); fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_NOT_TAKEN,12,0);if (fLSBOLDNOT(PuV)) { fCALL(fREAD_PC()+riV); }})
FREE_REG_u(PuV);
FREE_IMM(riV);
/* J2_callf */
},
void HELPER(J2_callf)(CPUHexagonState *env, int32_t PuV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{fIMMEXT(riV); fPCALIGN(riV); fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_NOT_TAKEN,12,0);if (fLSBOLDNOT(PuV)) { fCALL(fREAD_PC()+riV); }}
COUNT_HELPER(J2_callf);
})
DEF_QEMU(J2_callr,{ fCALLR(RsV); },
DEF_HELPER_2(J2_callr, void, env, s32),
{
/* J2_callr */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
READ_RREG_s(RsV, RsN);
fWRAP_J2_callr(gen_helper_J2_callr(cpu_env, RsV);,
{ fCALLR(RsV); })
FREE_REG_s(RsV);
/* J2_callr */
},
void HELPER(J2_callr)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
{ fCALLR(RsV); }
COUNT_HELPER(J2_callr);
})
DEF_QEMU(J2_callrt,{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_NOT_TAKEN,12,0);if (fLSBOLD(PuV)) { fCALLR(RsV); }},
DEF_HELPER_3(J2_callrt, void, env, s32, s32),
{
/* J2_callrt */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_J2_callrt(gen_helper_J2_callrt(cpu_env, PuV, RsV);,
{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_NOT_TAKEN,12,0);if (fLSBOLD(PuV)) { fCALLR(RsV); }})
FREE_REG_u(PuV);
FREE_REG_s(RsV);
/* J2_callrt */
},
void HELPER(J2_callrt)(CPUHexagonState *env, int32_t PuV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_NOT_TAKEN,12,0);if (fLSBOLD(PuV)) { fCALLR(RsV); }}
COUNT_HELPER(J2_callrt);
})
DEF_QEMU(J2_callrf,{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_NOT_TAKEN,12,0);if (fLSBOLDNOT(PuV)) { fCALLR(RsV); }},
DEF_HELPER_3(J2_callrf, void, env, s32, s32),
{
/* J2_callrf */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_J2_callrf(gen_helper_J2_callrf(cpu_env, PuV, RsV);,
{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_NOT_TAKEN,12,0);if (fLSBOLDNOT(PuV)) { fCALLR(RsV); }})
FREE_REG_u(PuV);
FREE_REG_s(RsV);
/* J2_callrf */
},
void HELPER(J2_callrf)(CPUHexagonState *env, int32_t PuV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_NOT_TAKEN,12,0);if (fLSBOLDNOT(PuV)) { fCALLR(RsV); }}
COUNT_HELPER(J2_callrf);
})
DEF_QEMU(J2_loop0r,{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, RsV); fSET_LPCFG(0); },
DEF_HELPER_3(J2_loop0r, void, env, s32, s32),
{
/* J2_loop0r */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J2_loop0r(gen_helper_J2_loop0r(cpu_env, RsV, riV);,
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, RsV); fSET_LPCFG(0); })
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J2_loop0r */
},
void HELPER(J2_loop0r)(CPUHexagonState *env, int32_t RsV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, RsV); fSET_LPCFG(0); }
COUNT_HELPER(J2_loop0r);
})
DEF_QEMU(J2_loop1r,{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS1( fREAD_PC()+riV, RsV); },
DEF_HELPER_3(J2_loop1r, void, env, s32, s32),
{
/* J2_loop1r */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J2_loop1r(gen_helper_J2_loop1r(cpu_env, RsV, riV);,
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS1( fREAD_PC()+riV, RsV); })
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J2_loop1r */
},
void HELPER(J2_loop1r)(CPUHexagonState *env, int32_t RsV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS1( fREAD_PC()+riV, RsV); }
COUNT_HELPER(J2_loop1r);
})
DEF_QEMU(J2_loop0i,{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, UiV); fSET_LPCFG(0); },
DEF_HELPER_3(J2_loop0i, void, env, s32, s32),
{
/* J2_loop0i */
DECL_IMM(riV,0);
DECL_IMM(UiV,1);
fWRAP_J2_loop0i(gen_helper_J2_loop0i(cpu_env, riV, UiV);,
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, UiV); fSET_LPCFG(0); })
FREE_IMM(riV);
FREE_IMM(UiV);
/* J2_loop0i */
},
void HELPER(J2_loop0i)(CPUHexagonState *env, int32_t riV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, UiV); fSET_LPCFG(0); }
COUNT_HELPER(J2_loop0i);
})
DEF_QEMU(J2_loop1i,{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS1( fREAD_PC()+riV, UiV); },
DEF_HELPER_3(J2_loop1i, void, env, s32, s32),
{
/* J2_loop1i */
DECL_IMM(riV,0);
DECL_IMM(UiV,1);
fWRAP_J2_loop1i(gen_helper_J2_loop1i(cpu_env, riV, UiV);,
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS1( fREAD_PC()+riV, UiV); })
FREE_IMM(riV);
FREE_IMM(UiV);
/* J2_loop1i */
},
void HELPER(J2_loop1i)(CPUHexagonState *env, int32_t riV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS1( fREAD_PC()+riV, UiV); }
COUNT_HELPER(J2_loop1i);
})
DEF_QEMU(J2_ploop1sr,{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, RsV); fSET_LPCFG(1); fWRITE_P3_LATE(0); },
DEF_HELPER_3(J2_ploop1sr, void, env, s32, s32),
{
/* J2_ploop1sr */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J2_ploop1sr(gen_helper_J2_ploop1sr(cpu_env, RsV, riV);,
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, RsV); fSET_LPCFG(1); fWRITE_P3_LATE(0); })
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J2_ploop1sr */
},
void HELPER(J2_ploop1sr)(CPUHexagonState *env, int32_t RsV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, RsV); fSET_LPCFG(1); fWRITE_P3_LATE(0); }
COUNT_HELPER(J2_ploop1sr);
})
DEF_QEMU(J2_ploop1si,{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, UiV); fSET_LPCFG(1); fWRITE_P3_LATE(0); },
DEF_HELPER_3(J2_ploop1si, void, env, s32, s32),
{
/* J2_ploop1si */
DECL_IMM(riV,0);
DECL_IMM(UiV,1);
fWRAP_J2_ploop1si(gen_helper_J2_ploop1si(cpu_env, riV, UiV);,
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, UiV); fSET_LPCFG(1); fWRITE_P3_LATE(0); })
FREE_IMM(riV);
FREE_IMM(UiV);
/* J2_ploop1si */
},
void HELPER(J2_ploop1si)(CPUHexagonState *env, int32_t riV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, UiV); fSET_LPCFG(1); fWRITE_P3_LATE(0); }
COUNT_HELPER(J2_ploop1si);
})
DEF_QEMU(J2_ploop2sr,{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, RsV); fSET_LPCFG(2); fWRITE_P3_LATE(0); },
DEF_HELPER_3(J2_ploop2sr, void, env, s32, s32),
{
/* J2_ploop2sr */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J2_ploop2sr(gen_helper_J2_ploop2sr(cpu_env, RsV, riV);,
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, RsV); fSET_LPCFG(2); fWRITE_P3_LATE(0); })
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J2_ploop2sr */
},
void HELPER(J2_ploop2sr)(CPUHexagonState *env, int32_t RsV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, RsV); fSET_LPCFG(2); fWRITE_P3_LATE(0); }
COUNT_HELPER(J2_ploop2sr);
})
DEF_QEMU(J2_ploop2si,{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, UiV); fSET_LPCFG(2); fWRITE_P3_LATE(0); },
DEF_HELPER_3(J2_ploop2si, void, env, s32, s32),
{
/* J2_ploop2si */
DECL_IMM(riV,0);
DECL_IMM(UiV,1);
fWRAP_J2_ploop2si(gen_helper_J2_ploop2si(cpu_env, riV, UiV);,
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, UiV); fSET_LPCFG(2); fWRITE_P3_LATE(0); })
FREE_IMM(riV);
FREE_IMM(UiV);
/* J2_ploop2si */
},
void HELPER(J2_ploop2si)(CPUHexagonState *env, int32_t riV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, UiV); fSET_LPCFG(2); fWRITE_P3_LATE(0); }
COUNT_HELPER(J2_ploop2si);
})
DEF_QEMU(J2_ploop3sr,{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, RsV); fSET_LPCFG(3); fWRITE_P3_LATE(0); },
DEF_HELPER_3(J2_ploop3sr, void, env, s32, s32),
{
/* J2_ploop3sr */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(riV,0);
READ_RREG_s(RsV, RsN);
fWRAP_J2_ploop3sr(gen_helper_J2_ploop3sr(cpu_env, RsV, riV);,
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, RsV); fSET_LPCFG(3); fWRITE_P3_LATE(0); })
FREE_REG_s(RsV);
FREE_IMM(riV);
/* J2_ploop3sr */
},
void HELPER(J2_ploop3sr)(CPUHexagonState *env, int32_t RsV, int32_t riV)
{
uint32_t slot = 4; slot = slot;
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, RsV); fSET_LPCFG(3); fWRITE_P3_LATE(0); }
COUNT_HELPER(J2_ploop3sr);
})
DEF_QEMU(J2_ploop3si,{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, UiV); fSET_LPCFG(3); fWRITE_P3_LATE(0); },
DEF_HELPER_3(J2_ploop3si, void, env, s32, s32),
{
/* J2_ploop3si */
DECL_IMM(riV,0);
DECL_IMM(UiV,1);
fWRAP_J2_ploop3si(gen_helper_J2_ploop3si(cpu_env, riV, UiV);,
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, UiV); fSET_LPCFG(3); fWRITE_P3_LATE(0); })
FREE_IMM(riV);
FREE_IMM(UiV);
/* J2_ploop3si */
},
void HELPER(J2_ploop3si)(CPUHexagonState *env, int32_t riV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, UiV); fSET_LPCFG(3); fWRITE_P3_LATE(0); }
COUNT_HELPER(J2_ploop3si);
})
DEF_QEMU(J2_endloop01,{ if (fGET_LPCFG) { fHIDE( if (fGET_LPCFG >= 2) { fWRITE_P3(fNOATTRIB_READ_P3()); } else ) if (fGET_LPCFG==1) { fWRITE_P3(0xff); } fSET_LPCFG(fGET_LPCFG-1); fHIDE(MARK_LATE_PRED_WRITE(3)) } if (fREAD_LC0>1) { fBRANCH(fREAD_SA0,COF_TYPE_LOOPEND0); fHIDE(fLOOPSTATS(fREAD_SA0);) fWRITE_LC0(fREAD_LC0-1); } else { if (fREAD_LC1>1) { fBRANCH(fREAD_SA1,COF_TYPE_LOOPEND1); fHIDE(fLOOPSTATS(fREAD_SA1);) fWRITE_LC1(fREAD_LC1-1); } } },
DEF_HELPER_1(J2_endloop01, void, env),
{
/* J2_endloop01 */
fWRAP_J2_endloop01(gen_helper_J2_endloop01(cpu_env);,
{ if (fGET_LPCFG) { fHIDE( if (fGET_LPCFG >= 2) { fWRITE_P3(fNOATTRIB_READ_P3()); } else ) if (fGET_LPCFG==1) { fWRITE_P3(0xff); } fSET_LPCFG(fGET_LPCFG-1); fHIDE(MARK_LATE_PRED_WRITE(3)) } if (fREAD_LC0>1) { fBRANCH(fREAD_SA0,COF_TYPE_LOOPEND0); fHIDE(fLOOPSTATS(fREAD_SA0);) fWRITE_LC0(fREAD_LC0-1); } else { if (fREAD_LC1>1) { fBRANCH(fREAD_SA1,COF_TYPE_LOOPEND1); fHIDE(fLOOPSTATS(fREAD_SA1);) fWRITE_LC1(fREAD_LC1-1); } } })
/* J2_endloop01 */
},
void HELPER(J2_endloop01)(CPUHexagonState *env)
{
uint32_t slot = 4; slot = slot;
{ if (fGET_LPCFG) { fHIDE( if (fGET_LPCFG >= 2) { fWRITE_P3(fNOATTRIB_READ_P3()); } else ) if (fGET_LPCFG==1) { fWRITE_P3(0xff); } fSET_LPCFG(fGET_LPCFG-1); fHIDE(MARK_LATE_PRED_WRITE(3)) } if (fREAD_LC0>1) { fBRANCH(fREAD_SA0,COF_TYPE_LOOPEND0); fHIDE(fLOOPSTATS(fREAD_SA0);) fWRITE_LC0(fREAD_LC0-1); } else { if (fREAD_LC1>1) { fBRANCH(fREAD_SA1,COF_TYPE_LOOPEND1); fHIDE(fLOOPSTATS(fREAD_SA1);) fWRITE_LC1(fREAD_LC1-1); } } }
COUNT_HELPER(J2_endloop01);
})
DEF_QEMU(J2_endloop0,{ if (fGET_LPCFG) { fHIDE( if (fGET_LPCFG >= 2) { fWRITE_P3(fNOATTRIB_READ_P3()); } else ) if (fGET_LPCFG==1) { fWRITE_P3(0xff); } fHIDE(MARK_LATE_PRED_WRITE(3)) fSET_LPCFG(fGET_LPCFG-1); } if (fREAD_LC0>1) { fBRANCH(fREAD_SA0,COF_TYPE_LOOPEND0); fHIDE(fLOOPSTATS(fREAD_SA0);) fWRITE_LC0(fREAD_LC0-1); } },
DEF_HELPER_1(J2_endloop0, void, env),
{
/* J2_endloop0 */
fWRAP_J2_endloop0(gen_helper_J2_endloop0(cpu_env);,
{ if (fGET_LPCFG) { fHIDE( if (fGET_LPCFG >= 2) { fWRITE_P3(fNOATTRIB_READ_P3()); } else ) if (fGET_LPCFG==1) { fWRITE_P3(0xff); } fHIDE(MARK_LATE_PRED_WRITE(3)) fSET_LPCFG(fGET_LPCFG-1); } if (fREAD_LC0>1) { fBRANCH(fREAD_SA0,COF_TYPE_LOOPEND0); fHIDE(fLOOPSTATS(fREAD_SA0);) fWRITE_LC0(fREAD_LC0-1); } })
/* J2_endloop0 */
},
void HELPER(J2_endloop0)(CPUHexagonState *env)
{
uint32_t slot = 4; slot = slot;
{ if (fGET_LPCFG) { fHIDE( if (fGET_LPCFG >= 2) { fWRITE_P3(fNOATTRIB_READ_P3()); } else ) if (fGET_LPCFG==1) { fWRITE_P3(0xff); } fHIDE(MARK_LATE_PRED_WRITE(3)) fSET_LPCFG(fGET_LPCFG-1); } if (fREAD_LC0>1) { fBRANCH(fREAD_SA0,COF_TYPE_LOOPEND0); fHIDE(fLOOPSTATS(fREAD_SA0);) fWRITE_LC0(fREAD_LC0-1); } }
COUNT_HELPER(J2_endloop0);
})
DEF_QEMU(J2_endloop1,{ if (fREAD_LC1>1) { fBRANCH(fREAD_SA1,COF_TYPE_LOOPEND1); fHIDE(fLOOPSTATS(fREAD_SA1);) fWRITE_LC1(fREAD_LC1-1); } },
DEF_HELPER_1(J2_endloop1, void, env),
{
/* J2_endloop1 */
fWRAP_J2_endloop1(gen_helper_J2_endloop1(cpu_env);,
{ if (fREAD_LC1>1) { fBRANCH(fREAD_SA1,COF_TYPE_LOOPEND1); fHIDE(fLOOPSTATS(fREAD_SA1);) fWRITE_LC1(fREAD_LC1-1); } })
/* J2_endloop1 */
},
void HELPER(J2_endloop1)(CPUHexagonState *env)
{
uint32_t slot = 4; slot = slot;
{ if (fREAD_LC1>1) { fBRANCH(fREAD_SA1,COF_TYPE_LOOPEND1); fHIDE(fLOOPSTATS(fREAD_SA1);) fWRITE_LC1(fREAD_LC1-1); } }
COUNT_HELPER(J2_endloop1);
})
DEF_QEMU(L2_loadrub_io,{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,1,u,EA,RdV); },
DEF_HELPER_3(L2_loadrub_io, s32, env, s32, s32),
{
/* L2_loadrub_io */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_L2_loadrub_io(gen_helper_L2_loadrub_io(RdV, cpu_env, RsV, siV);,
{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,1,u,EA,RdV); })
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* L2_loadrub_io */
},
int32_t HELPER(L2_loadrub_io)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,1,u,EA,RdV); }
COUNT_HELPER(L2_loadrub_io);
return RdV;
})
DEF_QEMU(L4_loadrub_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,1,u,EA,RdV);},
DEF_HELPER_4(L4_loadrub_ur, s32, env, s32, s32, s32),
{
/* L4_loadrub_ur */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadrub_ur(gen_helper_L4_loadrub_ur(RdV, cpu_env, RtV, uiV, UiV);,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,1,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_loadrub_ur */
},
int32_t HELPER(L4_loadrub_ur)(CPUHexagonState *env, int32_t RtV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,1,u,EA,RdV);}
COUNT_HELPER(L4_loadrub_ur);
return RdV;
})
DEF_QEMU(L4_loadrub_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fLOAD(1,1,u,EA,RdV); ReV=UiV; },
DEF_HELPER_1(L4_loadrub_ap, void, env),
{
/* L4_loadrub_ap */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_e(TCGv, ReV, ReN, 1, 0);
DECL_IMM(UiV,1);
fWRAP_L4_loadrub_ap(gen_helper_L4_loadrub_ap(RdV, ReV, cpu_env, UiV);,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fLOAD(1,1,u,EA,RdV); ReV=UiV; })
WRITE_RREG(RdN,RdV);
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_e(ReV);
FREE_IMM(UiV);
/* L4_loadrub_ap */
},
void HELPER(L4_loadrub_ap)(CPUHexagonState *env) { BOGUS_HELPER(L4_loadrub_ap); }
)
DEF_QEMU(L2_loadrub_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); fLOAD(1,1,u,EA,RdV);},
DEF_HELPER_1(L2_loadrub_pr, void, env),
{
/* L2_loadrub_pr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadrub_pr(gen_helper_L2_loadrub_pr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_M(RxV,MuV); fLOAD(1,1,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadrub_pr */
},
void HELPER(L2_loadrub_pr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrub_pr); }
)
DEF_QEMU(L2_loadrub_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); fLOAD(1,1,u,EA,RdV);},
DEF_HELPER_1(L2_loadrub_pbr, void, env),
{
/* L2_loadrub_pbr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadrub_pbr(gen_helper_L2_loadrub_pbr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fLOAD(1,1,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadrub_pbr */
},
void HELPER(L2_loadrub_pbr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrub_pbr); }
)
DEF_QEMU(L2_loadrub_pi,{fEA_REG(RxV); fPM_I(RxV,siV); fLOAD(1,1,u,EA,RdV);},
DEF_HELPER_1(L2_loadrub_pi, void, env),
{
/* L2_loadrub_pi */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_L2_loadrub_pi(gen_helper_L2_loadrub_pi(RdV, RxV, cpu_env, RxV, siV);,
{fEA_REG(RxV); fPM_I(RxV,siV); fLOAD(1,1,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_loadrub_pi */
},
void HELPER(L2_loadrub_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrub_pi); }
)
DEF_QEMU(L2_loadrub_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fLOAD(1,1,u,EA,RdV);},
DEF_HELPER_1(L2_loadrub_pci, void, env),
{
/* L2_loadrub_pci */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadrub_pci(gen_helper_L2_loadrub_pci(RdV, RxV, cpu_env, RxV, MuV, siV);,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fLOAD(1,1,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_IMM(siV);
/* L2_loadrub_pci */
},
void HELPER(L2_loadrub_pci)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrub_pci); }
)
DEF_QEMU(L2_loadrub_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<0,MuV); fLOAD(1,1,u,EA,RdV);},
DEF_HELPER_1(L2_loadrub_pcr, void, env),
{
/* L2_loadrub_pcr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadrub_pcr(gen_helper_L2_loadrub_pcr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<0,MuV); fLOAD(1,1,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadrub_pcr */
},
void HELPER(L2_loadrub_pcr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrub_pcr); }
)
DEF_QEMU(L2_loadrb_io,{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,1,s,EA,RdV); },
DEF_HELPER_3(L2_loadrb_io, s32, env, s32, s32),
{
/* L2_loadrb_io */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_L2_loadrb_io(gen_helper_L2_loadrb_io(RdV, cpu_env, RsV, siV);,
{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,1,s,EA,RdV); })
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* L2_loadrb_io */
},
int32_t HELPER(L2_loadrb_io)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,1,s,EA,RdV); }
COUNT_HELPER(L2_loadrb_io);
return RdV;
})
DEF_QEMU(L4_loadrb_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,1,s,EA,RdV);},
DEF_HELPER_4(L4_loadrb_ur, s32, env, s32, s32, s32),
{
/* L4_loadrb_ur */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadrb_ur(gen_helper_L4_loadrb_ur(RdV, cpu_env, RtV, uiV, UiV);,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,1,s,EA,RdV);})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_loadrb_ur */
},
int32_t HELPER(L4_loadrb_ur)(CPUHexagonState *env, int32_t RtV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,1,s,EA,RdV);}
COUNT_HELPER(L4_loadrb_ur);
return RdV;
})
DEF_QEMU(L4_loadrb_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fLOAD(1,1,s,EA,RdV); ReV=UiV; },
DEF_HELPER_1(L4_loadrb_ap, void, env),
{
/* L4_loadrb_ap */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_e(TCGv, ReV, ReN, 1, 0);
DECL_IMM(UiV,1);
fWRAP_L4_loadrb_ap(gen_helper_L4_loadrb_ap(RdV, ReV, cpu_env, UiV);,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fLOAD(1,1,s,EA,RdV); ReV=UiV; })
WRITE_RREG(RdN,RdV);
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_e(ReV);
FREE_IMM(UiV);
/* L4_loadrb_ap */
},
void HELPER(L4_loadrb_ap)(CPUHexagonState *env) { BOGUS_HELPER(L4_loadrb_ap); }
)
DEF_QEMU(L2_loadrb_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); fLOAD(1,1,s,EA,RdV);},
DEF_HELPER_1(L2_loadrb_pr, void, env),
{
/* L2_loadrb_pr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadrb_pr(gen_helper_L2_loadrb_pr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_M(RxV,MuV); fLOAD(1,1,s,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadrb_pr */
},
void HELPER(L2_loadrb_pr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrb_pr); }
)
DEF_QEMU(L2_loadrb_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); fLOAD(1,1,s,EA,RdV);},
DEF_HELPER_1(L2_loadrb_pbr, void, env),
{
/* L2_loadrb_pbr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadrb_pbr(gen_helper_L2_loadrb_pbr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fLOAD(1,1,s,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadrb_pbr */
},
void HELPER(L2_loadrb_pbr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrb_pbr); }
)
DEF_QEMU(L2_loadrb_pi,{fEA_REG(RxV); fPM_I(RxV,siV); fLOAD(1,1,s,EA,RdV);},
DEF_HELPER_1(L2_loadrb_pi, void, env),
{
/* L2_loadrb_pi */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_L2_loadrb_pi(gen_helper_L2_loadrb_pi(RdV, RxV, cpu_env, RxV, siV);,
{fEA_REG(RxV); fPM_I(RxV,siV); fLOAD(1,1,s,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_loadrb_pi */
},
void HELPER(L2_loadrb_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrb_pi); }
)
DEF_QEMU(L2_loadrb_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fLOAD(1,1,s,EA,RdV);},
DEF_HELPER_1(L2_loadrb_pci, void, env),
{
/* L2_loadrb_pci */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadrb_pci(gen_helper_L2_loadrb_pci(RdV, RxV, cpu_env, RxV, MuV, siV);,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fLOAD(1,1,s,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_IMM(siV);
/* L2_loadrb_pci */
},
void HELPER(L2_loadrb_pci)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrb_pci); }
)
DEF_QEMU(L2_loadrb_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<0,MuV); fLOAD(1,1,s,EA,RdV);},
DEF_HELPER_1(L2_loadrb_pcr, void, env),
{
/* L2_loadrb_pcr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadrb_pcr(gen_helper_L2_loadrb_pcr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<0,MuV); fLOAD(1,1,s,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadrb_pcr */
},
void HELPER(L2_loadrb_pcr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrb_pcr); }
)
DEF_QEMU(L2_loadruh_io,{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,2,u,EA,RdV); },
DEF_HELPER_3(L2_loadruh_io, s32, env, s32, s32),
{
/* L2_loadruh_io */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_L2_loadruh_io(gen_helper_L2_loadruh_io(RdV, cpu_env, RsV, siV);,
{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,2,u,EA,RdV); })
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* L2_loadruh_io */
},
int32_t HELPER(L2_loadruh_io)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,2,u,EA,RdV); }
COUNT_HELPER(L2_loadruh_io);
return RdV;
})
DEF_QEMU(L4_loadruh_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,2,u,EA,RdV);},
DEF_HELPER_4(L4_loadruh_ur, s32, env, s32, s32, s32),
{
/* L4_loadruh_ur */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadruh_ur(gen_helper_L4_loadruh_ur(RdV, cpu_env, RtV, uiV, UiV);,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,2,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_loadruh_ur */
},
int32_t HELPER(L4_loadruh_ur)(CPUHexagonState *env, int32_t RtV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,2,u,EA,RdV);}
COUNT_HELPER(L4_loadruh_ur);
return RdV;
})
DEF_QEMU(L4_loadruh_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fLOAD(1,2,u,EA,RdV); ReV=UiV; },
DEF_HELPER_1(L4_loadruh_ap, void, env),
{
/* L4_loadruh_ap */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_e(TCGv, ReV, ReN, 1, 0);
DECL_IMM(UiV,1);
fWRAP_L4_loadruh_ap(gen_helper_L4_loadruh_ap(RdV, ReV, cpu_env, UiV);,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fLOAD(1,2,u,EA,RdV); ReV=UiV; })
WRITE_RREG(RdN,RdV);
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_e(ReV);
FREE_IMM(UiV);
/* L4_loadruh_ap */
},
void HELPER(L4_loadruh_ap)(CPUHexagonState *env) { BOGUS_HELPER(L4_loadruh_ap); }
)
DEF_QEMU(L2_loadruh_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); fLOAD(1,2,u,EA,RdV);},
DEF_HELPER_1(L2_loadruh_pr, void, env),
{
/* L2_loadruh_pr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadruh_pr(gen_helper_L2_loadruh_pr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_M(RxV,MuV); fLOAD(1,2,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadruh_pr */
},
void HELPER(L2_loadruh_pr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadruh_pr); }
)
DEF_QEMU(L2_loadruh_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); fLOAD(1,2,u,EA,RdV);},
DEF_HELPER_1(L2_loadruh_pbr, void, env),
{
/* L2_loadruh_pbr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadruh_pbr(gen_helper_L2_loadruh_pbr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fLOAD(1,2,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadruh_pbr */
},
void HELPER(L2_loadruh_pbr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadruh_pbr); }
)
DEF_QEMU(L2_loadruh_pi,{fEA_REG(RxV); fPM_I(RxV,siV); fLOAD(1,2,u,EA,RdV);},
DEF_HELPER_1(L2_loadruh_pi, void, env),
{
/* L2_loadruh_pi */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_L2_loadruh_pi(gen_helper_L2_loadruh_pi(RdV, RxV, cpu_env, RxV, siV);,
{fEA_REG(RxV); fPM_I(RxV,siV); fLOAD(1,2,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_loadruh_pi */
},
void HELPER(L2_loadruh_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadruh_pi); }
)
DEF_QEMU(L2_loadruh_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fLOAD(1,2,u,EA,RdV);},
DEF_HELPER_1(L2_loadruh_pci, void, env),
{
/* L2_loadruh_pci */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadruh_pci(gen_helper_L2_loadruh_pci(RdV, RxV, cpu_env, RxV, MuV, siV);,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fLOAD(1,2,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_IMM(siV);
/* L2_loadruh_pci */
},
void HELPER(L2_loadruh_pci)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadruh_pci); }
)
DEF_QEMU(L2_loadruh_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); fLOAD(1,2,u,EA,RdV);},
DEF_HELPER_1(L2_loadruh_pcr, void, env),
{
/* L2_loadruh_pcr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadruh_pcr(gen_helper_L2_loadruh_pcr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); fLOAD(1,2,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadruh_pcr */
},
void HELPER(L2_loadruh_pcr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadruh_pcr); }
)
DEF_QEMU(L2_loadrh_io,{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,2,s,EA,RdV); },
DEF_HELPER_3(L2_loadrh_io, s32, env, s32, s32),
{
/* L2_loadrh_io */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_L2_loadrh_io(gen_helper_L2_loadrh_io(RdV, cpu_env, RsV, siV);,
{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,2,s,EA,RdV); })
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* L2_loadrh_io */
},
int32_t HELPER(L2_loadrh_io)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,2,s,EA,RdV); }
COUNT_HELPER(L2_loadrh_io);
return RdV;
})
DEF_QEMU(L4_loadrh_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,2,s,EA,RdV);},
DEF_HELPER_4(L4_loadrh_ur, s32, env, s32, s32, s32),
{
/* L4_loadrh_ur */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadrh_ur(gen_helper_L4_loadrh_ur(RdV, cpu_env, RtV, uiV, UiV);,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,2,s,EA,RdV);})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_loadrh_ur */
},
int32_t HELPER(L4_loadrh_ur)(CPUHexagonState *env, int32_t RtV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,2,s,EA,RdV);}
COUNT_HELPER(L4_loadrh_ur);
return RdV;
})
DEF_QEMU(L4_loadrh_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fLOAD(1,2,s,EA,RdV); ReV=UiV; },
DEF_HELPER_1(L4_loadrh_ap, void, env),
{
/* L4_loadrh_ap */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_e(TCGv, ReV, ReN, 1, 0);
DECL_IMM(UiV,1);
fWRAP_L4_loadrh_ap(gen_helper_L4_loadrh_ap(RdV, ReV, cpu_env, UiV);,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fLOAD(1,2,s,EA,RdV); ReV=UiV; })
WRITE_RREG(RdN,RdV);
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_e(ReV);
FREE_IMM(UiV);
/* L4_loadrh_ap */
},
void HELPER(L4_loadrh_ap)(CPUHexagonState *env) { BOGUS_HELPER(L4_loadrh_ap); }
)
DEF_QEMU(L2_loadrh_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); fLOAD(1,2,s,EA,RdV);},
DEF_HELPER_1(L2_loadrh_pr, void, env),
{
/* L2_loadrh_pr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadrh_pr(gen_helper_L2_loadrh_pr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_M(RxV,MuV); fLOAD(1,2,s,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadrh_pr */
},
void HELPER(L2_loadrh_pr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrh_pr); }
)
DEF_QEMU(L2_loadrh_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); fLOAD(1,2,s,EA,RdV);},
DEF_HELPER_1(L2_loadrh_pbr, void, env),
{
/* L2_loadrh_pbr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadrh_pbr(gen_helper_L2_loadrh_pbr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fLOAD(1,2,s,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadrh_pbr */
},
void HELPER(L2_loadrh_pbr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrh_pbr); }
)
DEF_QEMU(L2_loadrh_pi,{fEA_REG(RxV); fPM_I(RxV,siV); fLOAD(1,2,s,EA,RdV);},
DEF_HELPER_1(L2_loadrh_pi, void, env),
{
/* L2_loadrh_pi */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_L2_loadrh_pi(gen_helper_L2_loadrh_pi(RdV, RxV, cpu_env, RxV, siV);,
{fEA_REG(RxV); fPM_I(RxV,siV); fLOAD(1,2,s,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_loadrh_pi */
},
void HELPER(L2_loadrh_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrh_pi); }
)
DEF_QEMU(L2_loadrh_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fLOAD(1,2,s,EA,RdV);},
DEF_HELPER_1(L2_loadrh_pci, void, env),
{
/* L2_loadrh_pci */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadrh_pci(gen_helper_L2_loadrh_pci(RdV, RxV, cpu_env, RxV, MuV, siV);,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fLOAD(1,2,s,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_IMM(siV);
/* L2_loadrh_pci */
},
void HELPER(L2_loadrh_pci)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrh_pci); }
)
DEF_QEMU(L2_loadrh_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); fLOAD(1,2,s,EA,RdV);},
DEF_HELPER_1(L2_loadrh_pcr, void, env),
{
/* L2_loadrh_pcr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadrh_pcr(gen_helper_L2_loadrh_pcr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); fLOAD(1,2,s,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadrh_pcr */
},
void HELPER(L2_loadrh_pcr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrh_pcr); }
)
DEF_QEMU(L2_loadri_io,{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,4,u,EA,RdV); },
DEF_HELPER_3(L2_loadri_io, s32, env, s32, s32),
{
/* L2_loadri_io */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_L2_loadri_io(gen_helper_L2_loadri_io(RdV, cpu_env, RsV, siV);,
{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,4,u,EA,RdV); })
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* L2_loadri_io */
},
int32_t HELPER(L2_loadri_io)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,4,u,EA,RdV); }
COUNT_HELPER(L2_loadri_io);
return RdV;
})
DEF_QEMU(L4_loadri_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,4,u,EA,RdV);},
DEF_HELPER_4(L4_loadri_ur, s32, env, s32, s32, s32),
{
/* L4_loadri_ur */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadri_ur(gen_helper_L4_loadri_ur(RdV, cpu_env, RtV, uiV, UiV);,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,4,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_loadri_ur */
},
int32_t HELPER(L4_loadri_ur)(CPUHexagonState *env, int32_t RtV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,4,u,EA,RdV);}
COUNT_HELPER(L4_loadri_ur);
return RdV;
})
DEF_QEMU(L4_loadri_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fLOAD(1,4,u,EA,RdV); ReV=UiV; },
DEF_HELPER_1(L4_loadri_ap, void, env),
{
/* L4_loadri_ap */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_e(TCGv, ReV, ReN, 1, 0);
DECL_IMM(UiV,1);
fWRAP_L4_loadri_ap(gen_helper_L4_loadri_ap(RdV, ReV, cpu_env, UiV);,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fLOAD(1,4,u,EA,RdV); ReV=UiV; })
WRITE_RREG(RdN,RdV);
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_e(ReV);
FREE_IMM(UiV);
/* L4_loadri_ap */
},
void HELPER(L4_loadri_ap)(CPUHexagonState *env) { BOGUS_HELPER(L4_loadri_ap); }
)
DEF_QEMU(L2_loadri_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); fLOAD(1,4,u,EA,RdV);},
DEF_HELPER_1(L2_loadri_pr, void, env),
{
/* L2_loadri_pr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadri_pr(gen_helper_L2_loadri_pr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_M(RxV,MuV); fLOAD(1,4,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadri_pr */
},
void HELPER(L2_loadri_pr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadri_pr); }
)
DEF_QEMU(L2_loadri_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); fLOAD(1,4,u,EA,RdV);},
DEF_HELPER_1(L2_loadri_pbr, void, env),
{
/* L2_loadri_pbr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadri_pbr(gen_helper_L2_loadri_pbr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fLOAD(1,4,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadri_pbr */
},
void HELPER(L2_loadri_pbr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadri_pbr); }
)
DEF_QEMU(L2_loadri_pi,{fEA_REG(RxV); fPM_I(RxV,siV); fLOAD(1,4,u,EA,RdV);},
DEF_HELPER_1(L2_loadri_pi, void, env),
{
/* L2_loadri_pi */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_L2_loadri_pi(gen_helper_L2_loadri_pi(RdV, RxV, cpu_env, RxV, siV);,
{fEA_REG(RxV); fPM_I(RxV,siV); fLOAD(1,4,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_loadri_pi */
},
void HELPER(L2_loadri_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadri_pi); }
)
DEF_QEMU(L2_loadri_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fLOAD(1,4,u,EA,RdV);},
DEF_HELPER_1(L2_loadri_pci, void, env),
{
/* L2_loadri_pci */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadri_pci(gen_helper_L2_loadri_pci(RdV, RxV, cpu_env, RxV, MuV, siV);,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fLOAD(1,4,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_IMM(siV);
/* L2_loadri_pci */
},
void HELPER(L2_loadri_pci)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadri_pci); }
)
DEF_QEMU(L2_loadri_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<2,MuV); fLOAD(1,4,u,EA,RdV);},
DEF_HELPER_1(L2_loadri_pcr, void, env),
{
/* L2_loadri_pcr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadri_pcr(gen_helper_L2_loadri_pcr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<2,MuV); fLOAD(1,4,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadri_pcr */
},
void HELPER(L2_loadri_pcr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadri_pcr); }
)
DEF_QEMU(L2_loadrd_io,{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,8,u,EA,RddV); },
DEF_HELPER_3(L2_loadrd_io, s64, env, s32, s32),
{
/* L2_loadrd_io */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_L2_loadrd_io(gen_helper_L2_loadrd_io(RddV, cpu_env, RsV, siV);,
{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,8,u,EA,RddV); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* L2_loadrd_io */
},
int64_t HELPER(L2_loadrd_io)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int64_t RddV = 0;
{fIMMEXT(siV); fEA_RI(RsV,siV); fLOAD(1,8,u,EA,RddV); }
COUNT_HELPER(L2_loadrd_io);
return RddV;
})
DEF_QEMU(L4_loadrd_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,8,u,EA,RddV);},
DEF_HELPER_4(L4_loadrd_ur, s64, env, s32, s32, s32),
{
/* L4_loadrd_ur */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadrd_ur(gen_helper_L4_loadrd_ur(RddV, cpu_env, RtV, uiV, UiV);,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,8,u,EA,RddV);})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_loadrd_ur */
},
int64_t HELPER(L4_loadrd_ur)(CPUHexagonState *env, int32_t RtV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int64_t RddV = 0;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); fLOAD(1,8,u,EA,RddV);}
COUNT_HELPER(L4_loadrd_ur);
return RddV;
})
DEF_QEMU(L4_loadrd_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fLOAD(1,8,u,EA,RddV); ReV=UiV; },
DEF_HELPER_1(L4_loadrd_ap, void, env),
{
/* L4_loadrd_ap */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_e(TCGv, ReV, ReN, 1, 0);
DECL_IMM(UiV,1);
fWRAP_L4_loadrd_ap(gen_helper_L4_loadrd_ap(RddV, ReV, cpu_env, UiV);,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fLOAD(1,8,u,EA,RddV); ReV=UiV; })
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_e(ReV);
FREE_IMM(UiV);
/* L4_loadrd_ap */
},
void HELPER(L4_loadrd_ap)(CPUHexagonState *env) { BOGUS_HELPER(L4_loadrd_ap); }
)
DEF_QEMU(L2_loadrd_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); fLOAD(1,8,u,EA,RddV);},
DEF_HELPER_1(L2_loadrd_pr, void, env),
{
/* L2_loadrd_pr */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadrd_pr(gen_helper_L2_loadrd_pr(RddV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_M(RxV,MuV); fLOAD(1,8,u,EA,RddV);})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadrd_pr */
},
void HELPER(L2_loadrd_pr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrd_pr); }
)
DEF_QEMU(L2_loadrd_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); fLOAD(1,8,u,EA,RddV);},
DEF_HELPER_1(L2_loadrd_pbr, void, env),
{
/* L2_loadrd_pbr */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadrd_pbr(gen_helper_L2_loadrd_pbr(RddV, RxV, cpu_env, RxV, MuV);,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fLOAD(1,8,u,EA,RddV);})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadrd_pbr */
},
void HELPER(L2_loadrd_pbr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrd_pbr); }
)
DEF_QEMU(L2_loadrd_pi,{fEA_REG(RxV); fPM_I(RxV,siV); fLOAD(1,8,u,EA,RddV);},
DEF_HELPER_1(L2_loadrd_pi, void, env),
{
/* L2_loadrd_pi */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_L2_loadrd_pi(gen_helper_L2_loadrd_pi(RddV, RxV, cpu_env, RxV, siV);,
{fEA_REG(RxV); fPM_I(RxV,siV); fLOAD(1,8,u,EA,RddV);})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_loadrd_pi */
},
void HELPER(L2_loadrd_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrd_pi); }
)
DEF_QEMU(L2_loadrd_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fLOAD(1,8,u,EA,RddV);},
DEF_HELPER_1(L2_loadrd_pci, void, env),
{
/* L2_loadrd_pci */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadrd_pci(gen_helper_L2_loadrd_pci(RddV, RxV, cpu_env, RxV, MuV, siV);,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fLOAD(1,8,u,EA,RddV);})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_IMM(siV);
/* L2_loadrd_pci */
},
void HELPER(L2_loadrd_pci)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrd_pci); }
)
DEF_QEMU(L2_loadrd_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<3,MuV); fLOAD(1,8,u,EA,RddV);},
DEF_HELPER_1(L2_loadrd_pcr, void, env),
{
/* L2_loadrd_pcr */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadrd_pcr(gen_helper_L2_loadrd_pcr(RddV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<3,MuV); fLOAD(1,8,u,EA,RddV);})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadrd_pcr */
},
void HELPER(L2_loadrd_pcr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadrd_pcr); }
)
DEF_QEMU(L2_loadbzw2_io,{fIMMEXT(siV); fEA_RI(RsV,siV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } }; },
DEF_HELPER_3(L2_loadbzw2_io, s32, env, s32, s32),
{
/* L2_loadbzw2_io */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_L2_loadbzw2_io(gen_helper_L2_loadbzw2_io(RdV, cpu_env, RsV, siV);,
{fIMMEXT(siV); fEA_RI(RsV,siV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } }; })
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* L2_loadbzw2_io */
},
int32_t HELPER(L2_loadbzw2_io)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(siV); fEA_RI(RsV,siV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } }; }
COUNT_HELPER(L2_loadbzw2_io);
return RdV;
})
DEF_QEMU(L4_loadbzw2_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } };},
DEF_HELPER_4(L4_loadbzw2_ur, s32, env, s32, s32, s32),
{
/* L4_loadbzw2_ur */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadbzw2_ur(gen_helper_L4_loadbzw2_ur(RdV, cpu_env, RtV, uiV, UiV);,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } };})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_loadbzw2_ur */
},
int32_t HELPER(L4_loadbzw2_ur)(CPUHexagonState *env, int32_t RtV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } };}
COUNT_HELPER(L4_loadbzw2_ur);
return RdV;
})
DEF_QEMU(L4_loadbzw2_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } }; ReV=UiV; },
DEF_HELPER_1(L4_loadbzw2_ap, void, env),
{
/* L4_loadbzw2_ap */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_e(TCGv, ReV, ReN, 1, 0);
DECL_IMM(UiV,1);
fWRAP_L4_loadbzw2_ap(gen_helper_L4_loadbzw2_ap(RdV, ReV, cpu_env, UiV);,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } }; ReV=UiV; })
WRITE_RREG(RdN,RdV);
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_e(ReV);
FREE_IMM(UiV);
/* L4_loadbzw2_ap */
},
void HELPER(L4_loadbzw2_ap)(CPUHexagonState *env) { BOGUS_HELPER(L4_loadbzw2_ap); }
)
DEF_QEMU(L2_loadbzw2_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbzw2_pr, void, env),
{
/* L2_loadbzw2_pr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadbzw2_pr(gen_helper_L2_loadbzw2_pr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_M(RxV,MuV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } };})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadbzw2_pr */
},
void HELPER(L2_loadbzw2_pr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbzw2_pr); }
)
DEF_QEMU(L2_loadbzw2_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbzw2_pbr, void, env),
{
/* L2_loadbzw2_pbr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadbzw2_pbr(gen_helper_L2_loadbzw2_pbr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } };})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadbzw2_pbr */
},
void HELPER(L2_loadbzw2_pbr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbzw2_pbr); }
)
DEF_QEMU(L2_loadbzw2_pi,{fEA_REG(RxV); fPM_I(RxV,siV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbzw2_pi, void, env),
{
/* L2_loadbzw2_pi */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_L2_loadbzw2_pi(gen_helper_L2_loadbzw2_pi(RdV, RxV, cpu_env, RxV, siV);,
{fEA_REG(RxV); fPM_I(RxV,siV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } };})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_loadbzw2_pi */
},
void HELPER(L2_loadbzw2_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbzw2_pi); }
)
DEF_QEMU(L2_loadbzw2_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbzw2_pci, void, env),
{
/* L2_loadbzw2_pci */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadbzw2_pci(gen_helper_L2_loadbzw2_pci(RdV, RxV, cpu_env, RxV, MuV, siV);,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } };})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_IMM(siV);
/* L2_loadbzw2_pci */
},
void HELPER(L2_loadbzw2_pci)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbzw2_pci); }
)
DEF_QEMU(L2_loadbzw2_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbzw2_pcr, void, env),
{
/* L2_loadbzw2_pcr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadbzw2_pcr(gen_helper_L2_loadbzw2_pcr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETUBYTE(i,tmpV)); } };})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadbzw2_pcr */
},
void HELPER(L2_loadbzw2_pcr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbzw2_pcr); }
)
DEF_QEMU(L2_loadbzw4_io,{fIMMEXT(siV); fEA_RI(RsV,siV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } }; },
DEF_HELPER_3(L2_loadbzw4_io, s64, env, s32, s32),
{
/* L2_loadbzw4_io */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_L2_loadbzw4_io(gen_helper_L2_loadbzw4_io(RddV, cpu_env, RsV, siV);,
{fIMMEXT(siV); fEA_RI(RsV,siV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } }; })
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* L2_loadbzw4_io */
},
int64_t HELPER(L2_loadbzw4_io)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int64_t RddV = 0;
{fIMMEXT(siV); fEA_RI(RsV,siV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } }; }
COUNT_HELPER(L2_loadbzw4_io);
return RddV;
})
DEF_QEMU(L4_loadbzw4_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } };},
DEF_HELPER_4(L4_loadbzw4_ur, s64, env, s32, s32, s32),
{
/* L4_loadbzw4_ur */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadbzw4_ur(gen_helper_L4_loadbzw4_ur(RddV, cpu_env, RtV, uiV, UiV);,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } };})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_loadbzw4_ur */
},
int64_t HELPER(L4_loadbzw4_ur)(CPUHexagonState *env, int32_t RtV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int64_t RddV = 0;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } };}
COUNT_HELPER(L4_loadbzw4_ur);
return RddV;
})
DEF_QEMU(L4_loadbzw4_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } }; ReV=UiV; },
DEF_HELPER_1(L4_loadbzw4_ap, void, env),
{
/* L4_loadbzw4_ap */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_e(TCGv, ReV, ReN, 1, 0);
DECL_IMM(UiV,1);
fWRAP_L4_loadbzw4_ap(gen_helper_L4_loadbzw4_ap(RddV, ReV, cpu_env, UiV);,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } }; ReV=UiV; })
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_e(ReV);
FREE_IMM(UiV);
/* L4_loadbzw4_ap */
},
void HELPER(L4_loadbzw4_ap)(CPUHexagonState *env) { BOGUS_HELPER(L4_loadbzw4_ap); }
)
DEF_QEMU(L2_loadbzw4_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbzw4_pr, void, env),
{
/* L2_loadbzw4_pr */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadbzw4_pr(gen_helper_L2_loadbzw4_pr(RddV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_M(RxV,MuV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } };})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadbzw4_pr */
},
void HELPER(L2_loadbzw4_pr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbzw4_pr); }
)
DEF_QEMU(L2_loadbzw4_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbzw4_pbr, void, env),
{
/* L2_loadbzw4_pbr */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadbzw4_pbr(gen_helper_L2_loadbzw4_pbr(RddV, RxV, cpu_env, RxV, MuV);,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } };})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadbzw4_pbr */
},
void HELPER(L2_loadbzw4_pbr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbzw4_pbr); }
)
DEF_QEMU(L2_loadbzw4_pi,{fEA_REG(RxV); fPM_I(RxV,siV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbzw4_pi, void, env),
{
/* L2_loadbzw4_pi */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_L2_loadbzw4_pi(gen_helper_L2_loadbzw4_pi(RddV, RxV, cpu_env, RxV, siV);,
{fEA_REG(RxV); fPM_I(RxV,siV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } };})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_loadbzw4_pi */
},
void HELPER(L2_loadbzw4_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbzw4_pi); }
)
DEF_QEMU(L2_loadbzw4_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbzw4_pci, void, env),
{
/* L2_loadbzw4_pci */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadbzw4_pci(gen_helper_L2_loadbzw4_pci(RddV, RxV, cpu_env, RxV, MuV, siV);,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } };})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_IMM(siV);
/* L2_loadbzw4_pci */
},
void HELPER(L2_loadbzw4_pci)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbzw4_pci); }
)
DEF_QEMU(L2_loadbzw4_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<2,MuV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbzw4_pcr, void, env),
{
/* L2_loadbzw4_pcr */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadbzw4_pcr(gen_helper_L2_loadbzw4_pcr(RddV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<2,MuV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,tmpV)); } };})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadbzw4_pcr */
},
void HELPER(L2_loadbzw4_pcr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbzw4_pcr); }
)
DEF_QEMU(L2_loadbsw2_io,{fIMMEXT(siV); fEA_RI(RsV,siV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } }; },
DEF_HELPER_3(L2_loadbsw2_io, s32, env, s32, s32),
{
/* L2_loadbsw2_io */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_L2_loadbsw2_io(gen_helper_L2_loadbsw2_io(RdV, cpu_env, RsV, siV);,
{fIMMEXT(siV); fEA_RI(RsV,siV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } }; })
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* L2_loadbsw2_io */
},
int32_t HELPER(L2_loadbsw2_io)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(siV); fEA_RI(RsV,siV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } }; }
COUNT_HELPER(L2_loadbsw2_io);
return RdV;
})
DEF_QEMU(L4_loadbsw2_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } };},
DEF_HELPER_4(L4_loadbsw2_ur, s32, env, s32, s32, s32),
{
/* L4_loadbsw2_ur */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadbsw2_ur(gen_helper_L4_loadbsw2_ur(RdV, cpu_env, RtV, uiV, UiV);,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } };})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_loadbsw2_ur */
},
int32_t HELPER(L4_loadbsw2_ur)(CPUHexagonState *env, int32_t RtV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } };}
COUNT_HELPER(L4_loadbsw2_ur);
return RdV;
})
DEF_QEMU(L4_loadbsw2_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } }; ReV=UiV; },
DEF_HELPER_1(L4_loadbsw2_ap, void, env),
{
/* L4_loadbsw2_ap */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_e(TCGv, ReV, ReN, 1, 0);
DECL_IMM(UiV,1);
fWRAP_L4_loadbsw2_ap(gen_helper_L4_loadbsw2_ap(RdV, ReV, cpu_env, UiV);,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } }; ReV=UiV; })
WRITE_RREG(RdN,RdV);
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_e(ReV);
FREE_IMM(UiV);
/* L4_loadbsw2_ap */
},
void HELPER(L4_loadbsw2_ap)(CPUHexagonState *env) { BOGUS_HELPER(L4_loadbsw2_ap); }
)
DEF_QEMU(L2_loadbsw2_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbsw2_pr, void, env),
{
/* L2_loadbsw2_pr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadbsw2_pr(gen_helper_L2_loadbsw2_pr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_M(RxV,MuV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } };})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadbsw2_pr */
},
void HELPER(L2_loadbsw2_pr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbsw2_pr); }
)
DEF_QEMU(L2_loadbsw2_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbsw2_pbr, void, env),
{
/* L2_loadbsw2_pbr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadbsw2_pbr(gen_helper_L2_loadbsw2_pbr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } };})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadbsw2_pbr */
},
void HELPER(L2_loadbsw2_pbr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbsw2_pbr); }
)
DEF_QEMU(L2_loadbsw2_pi,{fEA_REG(RxV); fPM_I(RxV,siV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbsw2_pi, void, env),
{
/* L2_loadbsw2_pi */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_L2_loadbsw2_pi(gen_helper_L2_loadbsw2_pi(RdV, RxV, cpu_env, RxV, siV);,
{fEA_REG(RxV); fPM_I(RxV,siV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } };})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_loadbsw2_pi */
},
void HELPER(L2_loadbsw2_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbsw2_pi); }
)
DEF_QEMU(L2_loadbsw2_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbsw2_pci, void, env),
{
/* L2_loadbsw2_pci */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadbsw2_pci(gen_helper_L2_loadbsw2_pci(RdV, RxV, cpu_env, RxV, MuV, siV);,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } };})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_IMM(siV);
/* L2_loadbsw2_pci */
},
void HELPER(L2_loadbsw2_pci)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbsw2_pci); }
)
DEF_QEMU(L2_loadbsw2_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbsw2_pcr, void, env),
{
/* L2_loadbsw2_pcr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadbsw2_pcr(gen_helper_L2_loadbsw2_pcr(RdV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); {fHIDE(size2u_t tmpV; int i;) fLOAD(1,2,u,EA,tmpV); for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETBYTE(i,tmpV)); } };})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadbsw2_pcr */
},
void HELPER(L2_loadbsw2_pcr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbsw2_pcr); }
)
DEF_QEMU(L2_loadbsw4_io,{fIMMEXT(siV); fEA_RI(RsV,siV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } }; },
DEF_HELPER_3(L2_loadbsw4_io, s64, env, s32, s32),
{
/* L2_loadbsw4_io */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_L2_loadbsw4_io(gen_helper_L2_loadbsw4_io(RddV, cpu_env, RsV, siV);,
{fIMMEXT(siV); fEA_RI(RsV,siV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } }; })
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* L2_loadbsw4_io */
},
int64_t HELPER(L2_loadbsw4_io)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int64_t RddV = 0;
{fIMMEXT(siV); fEA_RI(RsV,siV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } }; }
COUNT_HELPER(L2_loadbsw4_io);
return RddV;
})
DEF_QEMU(L4_loadbsw4_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } };},
DEF_HELPER_4(L4_loadbsw4_ur, s64, env, s32, s32, s32),
{
/* L4_loadbsw4_ur */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadbsw4_ur(gen_helper_L4_loadbsw4_ur(RddV, cpu_env, RtV, uiV, UiV);,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } };})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_loadbsw4_ur */
},
int64_t HELPER(L4_loadbsw4_ur)(CPUHexagonState *env, int32_t RtV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int64_t RddV = 0;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } };}
COUNT_HELPER(L4_loadbsw4_ur);
return RddV;
})
DEF_QEMU(L4_loadbsw4_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } }; ReV=UiV; },
DEF_HELPER_1(L4_loadbsw4_ap, void, env),
{
/* L4_loadbsw4_ap */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_e(TCGv, ReV, ReN, 1, 0);
DECL_IMM(UiV,1);
fWRAP_L4_loadbsw4_ap(gen_helper_L4_loadbsw4_ap(RddV, ReV, cpu_env, UiV);,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } }; ReV=UiV; })
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_e(ReV);
FREE_IMM(UiV);
/* L4_loadbsw4_ap */
},
void HELPER(L4_loadbsw4_ap)(CPUHexagonState *env) { BOGUS_HELPER(L4_loadbsw4_ap); }
)
DEF_QEMU(L2_loadbsw4_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbsw4_pr, void, env),
{
/* L2_loadbsw4_pr */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadbsw4_pr(gen_helper_L2_loadbsw4_pr(RddV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_M(RxV,MuV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } };})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadbsw4_pr */
},
void HELPER(L2_loadbsw4_pr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbsw4_pr); }
)
DEF_QEMU(L2_loadbsw4_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbsw4_pbr, void, env),
{
/* L2_loadbsw4_pbr */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadbsw4_pbr(gen_helper_L2_loadbsw4_pbr(RddV, RxV, cpu_env, RxV, MuV);,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } };})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadbsw4_pbr */
},
void HELPER(L2_loadbsw4_pbr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbsw4_pbr); }
)
DEF_QEMU(L2_loadbsw4_pi,{fEA_REG(RxV); fPM_I(RxV,siV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbsw4_pi, void, env),
{
/* L2_loadbsw4_pi */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_L2_loadbsw4_pi(gen_helper_L2_loadbsw4_pi(RddV, RxV, cpu_env, RxV, siV);,
{fEA_REG(RxV); fPM_I(RxV,siV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } };})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_loadbsw4_pi */
},
void HELPER(L2_loadbsw4_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbsw4_pi); }
)
DEF_QEMU(L2_loadbsw4_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbsw4_pci, void, env),
{
/* L2_loadbsw4_pci */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadbsw4_pci(gen_helper_L2_loadbsw4_pci(RddV, RxV, cpu_env, RxV, MuV, siV);,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } };})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_IMM(siV);
/* L2_loadbsw4_pci */
},
void HELPER(L2_loadbsw4_pci)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbsw4_pci); }
)
DEF_QEMU(L2_loadbsw4_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<2,MuV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } };},
DEF_HELPER_1(L2_loadbsw4_pcr, void, env),
{
/* L2_loadbsw4_pcr */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadbsw4_pcr(gen_helper_L2_loadbsw4_pcr(RddV, RxV, cpu_env, RxV, MuV);,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<2,MuV); {fHIDE(size4u_t tmpV; int i;) fLOAD(1,4,u,EA,tmpV); for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,tmpV)); } };})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadbsw4_pcr */
},
void HELPER(L2_loadbsw4_pcr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadbsw4_pcr); }
)
DEF_QEMU(L2_loadalignh_io,{fIMMEXT(siV); fEA_RI(RsV,siV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); }; },
DEF_HELPER_4(L2_loadalignh_io, s64, env, s64, s32, s32),
{
/* L2_loadalignh_io */
DECL_EA;
DECL_PAIR_yy(TCGv_i64, RyyV, RyyN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_PAIR(RyyV, RyyN);
READ_RREG_s(RsV, RsN);
fWRAP_L2_loadalignh_io(gen_helper_L2_loadalignh_io(RyyV, cpu_env, RyyV, RsV, siV);,
{fIMMEXT(siV); fEA_RI(RsV,siV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); }; })
WRITE_RREG_PAIR(RyyN,RyyV);
FREE_EA;
FREE_REG_PAIR(RyyV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* L2_loadalignh_io */
},
int64_t HELPER(L2_loadalignh_io)(CPUHexagonState *env, int64_t RyyV, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
{fIMMEXT(siV); fEA_RI(RsV,siV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); }; }
COUNT_HELPER(L2_loadalignh_io);
return RyyV;
})
DEF_QEMU(L4_loadalignh_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); };},
DEF_HELPER_5(L4_loadalignh_ur, s64, env, s64, s32, s32, s32),
{
/* L4_loadalignh_ur */
DECL_EA;
DECL_PAIR_yy(TCGv_i64, RyyV, RyyN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_PAIR(RyyV, RyyN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadalignh_ur(gen_helper_L4_loadalignh_ur(RyyV, cpu_env, RyyV, RtV, uiV, UiV);,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); };})
WRITE_RREG_PAIR(RyyN,RyyV);
FREE_EA;
FREE_REG_PAIR(RyyV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_loadalignh_ur */
},
int64_t HELPER(L4_loadalignh_ur)(CPUHexagonState *env, int64_t RyyV, int32_t RtV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); };}
COUNT_HELPER(L4_loadalignh_ur);
return RyyV;
})
DEF_QEMU(L4_loadalignh_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); }; ReV=UiV; },
DEF_HELPER_1(L4_loadalignh_ap, void, env),
{
/* L4_loadalignh_ap */
DECL_EA;
DECL_PAIR_yy(TCGv_i64, RyyV, RyyN, 0, 0);
DECL_RREG_e(TCGv, ReV, ReN, 1, 0);
DECL_IMM(UiV,1);
READ_RREG_PAIR(RyyV, RyyN);
fWRAP_L4_loadalignh_ap(gen_helper_L4_loadalignh_ap(RyyV, ReV, cpu_env, RyyV, UiV);,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); }; ReV=UiV; })
WRITE_RREG_PAIR(RyyN,RyyV);
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_PAIR(RyyV);
FREE_REG_e(ReV);
FREE_IMM(UiV);
/* L4_loadalignh_ap */
},
void HELPER(L4_loadalignh_ap)(CPUHexagonState *env) { BOGUS_HELPER(L4_loadalignh_ap); }
)
DEF_QEMU(L2_loadalignh_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); };},
DEF_HELPER_1(L2_loadalignh_pr, void, env),
{
/* L2_loadalignh_pr */
DECL_EA;
DECL_PAIR_yy(TCGv_i64, RyyV, RyyN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_PAIR(RyyV, RyyN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadalignh_pr(gen_helper_L2_loadalignh_pr(RyyV, RxV, cpu_env, RyyV, RxV, MuV);,
{fEA_REG(RxV); fPM_M(RxV,MuV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); };})
WRITE_RREG_PAIR(RyyN,RyyV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RyyV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadalignh_pr */
},
void HELPER(L2_loadalignh_pr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadalignh_pr); }
)
DEF_QEMU(L2_loadalignh_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); };},
DEF_HELPER_1(L2_loadalignh_pbr, void, env),
{
/* L2_loadalignh_pbr */
DECL_EA;
DECL_PAIR_yy(TCGv_i64, RyyV, RyyN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_PAIR(RyyV, RyyN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadalignh_pbr(gen_helper_L2_loadalignh_pbr(RyyV, RxV, cpu_env, RyyV, RxV, MuV);,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); };})
WRITE_RREG_PAIR(RyyN,RyyV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RyyV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadalignh_pbr */
},
void HELPER(L2_loadalignh_pbr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadalignh_pbr); }
)
DEF_QEMU(L2_loadalignh_pi,{fEA_REG(RxV); fPM_I(RxV,siV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); };},
DEF_HELPER_1(L2_loadalignh_pi, void, env),
{
/* L2_loadalignh_pi */
DECL_EA;
DECL_PAIR_yy(TCGv_i64, RyyV, RyyN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_PAIR(RyyV, RyyN);
READ_RREG_x(RxV, RxN);
fWRAP_L2_loadalignh_pi(gen_helper_L2_loadalignh_pi(RyyV, RxV, cpu_env, RyyV, RxV, siV);,
{fEA_REG(RxV); fPM_I(RxV,siV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); };})
WRITE_RREG_PAIR(RyyN,RyyV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RyyV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_loadalignh_pi */
},
void HELPER(L2_loadalignh_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadalignh_pi); }
)
DEF_QEMU(L2_loadalignh_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); };},
DEF_HELPER_1(L2_loadalignh_pci, void, env),
{
/* L2_loadalignh_pci */
DECL_EA;
DECL_PAIR_yy(TCGv_i64, RyyV, RyyN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_PAIR(RyyV, RyyN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadalignh_pci(gen_helper_L2_loadalignh_pci(RyyV, RxV, cpu_env, RyyV, RxV, MuV, siV);,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); };})
WRITE_RREG_PAIR(RyyN,RyyV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RyyV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_IMM(siV);
/* L2_loadalignh_pci */
},
void HELPER(L2_loadalignh_pci)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadalignh_pci); }
)
DEF_QEMU(L2_loadalignh_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); };},
DEF_HELPER_1(L2_loadalignh_pcr, void, env),
{
/* L2_loadalignh_pcr */
DECL_EA;
DECL_PAIR_yy(TCGv_i64, RyyV, RyyN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_PAIR(RyyV, RyyN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadalignh_pcr(gen_helper_L2_loadalignh_pcr(RyyV, RxV, cpu_env, RyyV, RxV, MuV);,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); { fHIDE(size8u_t tmpV;) fLOAD(1,2,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>16)|(tmpV<<48); };})
WRITE_RREG_PAIR(RyyN,RyyV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RyyV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadalignh_pcr */
},
void HELPER(L2_loadalignh_pcr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadalignh_pcr); }
)
DEF_QEMU(L2_loadalignb_io,{fIMMEXT(siV); fEA_RI(RsV,siV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); }; },
DEF_HELPER_4(L2_loadalignb_io, s64, env, s64, s32, s32),
{
/* L2_loadalignb_io */
DECL_EA;
DECL_PAIR_yy(TCGv_i64, RyyV, RyyN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_PAIR(RyyV, RyyN);
READ_RREG_s(RsV, RsN);
fWRAP_L2_loadalignb_io(gen_helper_L2_loadalignb_io(RyyV, cpu_env, RyyV, RsV, siV);,
{fIMMEXT(siV); fEA_RI(RsV,siV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); }; })
WRITE_RREG_PAIR(RyyN,RyyV);
FREE_EA;
FREE_REG_PAIR(RyyV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* L2_loadalignb_io */
},
int64_t HELPER(L2_loadalignb_io)(CPUHexagonState *env, int64_t RyyV, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
{fIMMEXT(siV); fEA_RI(RsV,siV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); }; }
COUNT_HELPER(L2_loadalignb_io);
return RyyV;
})
DEF_QEMU(L4_loadalignb_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); };},
DEF_HELPER_5(L4_loadalignb_ur, s64, env, s64, s32, s32, s32),
{
/* L4_loadalignb_ur */
DECL_EA;
DECL_PAIR_yy(TCGv_i64, RyyV, RyyN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_PAIR(RyyV, RyyN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadalignb_ur(gen_helper_L4_loadalignb_ur(RyyV, cpu_env, RyyV, RtV, uiV, UiV);,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); };})
WRITE_RREG_PAIR(RyyN,RyyV);
FREE_EA;
FREE_REG_PAIR(RyyV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_loadalignb_ur */
},
int64_t HELPER(L4_loadalignb_ur)(CPUHexagonState *env, int64_t RyyV, int32_t RtV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RtV,uiV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); };}
COUNT_HELPER(L4_loadalignb_ur);
return RyyV;
})
DEF_QEMU(L4_loadalignb_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); }; ReV=UiV; },
DEF_HELPER_1(L4_loadalignb_ap, void, env),
{
/* L4_loadalignb_ap */
DECL_EA;
DECL_PAIR_yy(TCGv_i64, RyyV, RyyN, 0, 0);
DECL_RREG_e(TCGv, ReV, ReN, 1, 0);
DECL_IMM(UiV,1);
READ_RREG_PAIR(RyyV, RyyN);
fWRAP_L4_loadalignb_ap(gen_helper_L4_loadalignb_ap(RyyV, ReV, cpu_env, RyyV, UiV);,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); }; ReV=UiV; })
WRITE_RREG_PAIR(RyyN,RyyV);
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_PAIR(RyyV);
FREE_REG_e(ReV);
FREE_IMM(UiV);
/* L4_loadalignb_ap */
},
void HELPER(L4_loadalignb_ap)(CPUHexagonState *env) { BOGUS_HELPER(L4_loadalignb_ap); }
)
DEF_QEMU(L2_loadalignb_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); };},
DEF_HELPER_1(L2_loadalignb_pr, void, env),
{
/* L2_loadalignb_pr */
DECL_EA;
DECL_PAIR_yy(TCGv_i64, RyyV, RyyN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_PAIR(RyyV, RyyN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadalignb_pr(gen_helper_L2_loadalignb_pr(RyyV, RxV, cpu_env, RyyV, RxV, MuV);,
{fEA_REG(RxV); fPM_M(RxV,MuV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); };})
WRITE_RREG_PAIR(RyyN,RyyV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RyyV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadalignb_pr */
},
void HELPER(L2_loadalignb_pr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadalignb_pr); }
)
DEF_QEMU(L2_loadalignb_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); };},
DEF_HELPER_1(L2_loadalignb_pbr, void, env),
{
/* L2_loadalignb_pbr */
DECL_EA;
DECL_PAIR_yy(TCGv_i64, RyyV, RyyN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_PAIR(RyyV, RyyN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadalignb_pbr(gen_helper_L2_loadalignb_pbr(RyyV, RxV, cpu_env, RyyV, RxV, MuV);,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); };})
WRITE_RREG_PAIR(RyyN,RyyV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RyyV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadalignb_pbr */
},
void HELPER(L2_loadalignb_pbr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadalignb_pbr); }
)
DEF_QEMU(L2_loadalignb_pi,{fEA_REG(RxV); fPM_I(RxV,siV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); };},
DEF_HELPER_1(L2_loadalignb_pi, void, env),
{
/* L2_loadalignb_pi */
DECL_EA;
DECL_PAIR_yy(TCGv_i64, RyyV, RyyN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_PAIR(RyyV, RyyN);
READ_RREG_x(RxV, RxN);
fWRAP_L2_loadalignb_pi(gen_helper_L2_loadalignb_pi(RyyV, RxV, cpu_env, RyyV, RxV, siV);,
{fEA_REG(RxV); fPM_I(RxV,siV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); };})
WRITE_RREG_PAIR(RyyN,RyyV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RyyV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_loadalignb_pi */
},
void HELPER(L2_loadalignb_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadalignb_pi); }
)
DEF_QEMU(L2_loadalignb_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); };},
DEF_HELPER_1(L2_loadalignb_pci, void, env),
{
/* L2_loadalignb_pci */
DECL_EA;
DECL_PAIR_yy(TCGv_i64, RyyV, RyyN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_PAIR(RyyV, RyyN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadalignb_pci(gen_helper_L2_loadalignb_pci(RyyV, RxV, cpu_env, RyyV, RxV, MuV, siV);,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); };})
WRITE_RREG_PAIR(RyyN,RyyV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RyyV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_IMM(siV);
/* L2_loadalignb_pci */
},
void HELPER(L2_loadalignb_pci)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadalignb_pci); }
)
DEF_QEMU(L2_loadalignb_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<0,MuV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); };},
DEF_HELPER_1(L2_loadalignb_pcr, void, env),
{
/* L2_loadalignb_pcr */
DECL_EA;
DECL_PAIR_yy(TCGv_i64, RyyV, RyyN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_PAIR(RyyV, RyyN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_L2_loadalignb_pcr(gen_helper_L2_loadalignb_pcr(RyyV, RxV, cpu_env, RyyV, RxV, MuV);,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<0,MuV); { fHIDE(size8u_t tmpV;) fLOAD(1,1,u,EA,tmpV); RyyV = (((size8u_t)RyyV)>>8)|(tmpV<<56); };})
WRITE_RREG_PAIR(RyyN,RyyV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_PAIR(RyyV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* L2_loadalignb_pcr */
},
void HELPER(L2_loadalignb_pcr)(CPUHexagonState *env) { BOGUS_HELPER(L2_loadalignb_pcr); }
)
DEF_QEMU(S2_storerb_io,{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); },
DEF_HELPER_5(S2_storerb_io, void, env, s32, s32, s32, i32),
{
/* S2_storerb_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerb_io(SLOT_WRAP(gen_helper_S2_storerb_io(cpu_env, RsV, RtV, siV, slot));,
{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); })
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_storerb_io */
},
void HELPER(S2_storerb_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); }
COUNT_HELPER(S2_storerb_io);
})
DEF_QEMU(S2_storerb_pi,{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); },
DEF_HELPER_5(S2_storerb_pi, s32, env, s32, s32, s32, i32),
{
/* S2_storerb_pi */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerb_pi(SLOT_WRAP(gen_helper_S2_storerb_pi(RxV, cpu_env, RxV, RtV, siV, slot));,
{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_storerb_pi */
},
int32_t HELPER(S2_storerb_pi)(CPUHexagonState *env, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); }
COUNT_HELPER(S2_storerb_pi);
return RxV;
})
DEF_QEMU(S4_storerb_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); ReV=UiV; },
DEF_HELPER_4(S4_storerb_ap, s32, env, s32, s32, i32),
{
/* S4_storerb_ap */
DECL_EA;
DECL_RREG_e(TCGv, ReV, ReN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(UiV,1);
READ_RREG_t(RtV, RtN);
fWRAP_S4_storerb_ap(SLOT_WRAP(gen_helper_S4_storerb_ap(ReV, cpu_env, RtV, UiV, slot));,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); ReV=UiV; })
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_e(ReV);
FREE_REG_t(RtV);
FREE_IMM(UiV);
/* S4_storerb_ap */
},
int32_t HELPER(S4_storerb_ap)(CPUHexagonState *env, int32_t RtV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
int32_t ReV = 0;
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); ReV=UiV; }
COUNT_HELPER(S4_storerb_ap);
return ReV;
})
DEF_QEMU(S2_storerb_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); },
DEF_HELPER_5(S2_storerb_pr, s32, env, s32, s32, s32, i32),
{
/* S2_storerb_pr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerb_pr(SLOT_WRAP(gen_helper_S2_storerb_pr(RxV, cpu_env, RxV, MuV, RtV, slot));,
{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_t(RtV);
/* S2_storerb_pr */
},
int32_t HELPER(S2_storerb_pr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t RtV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); }
COUNT_HELPER(S2_storerb_pr);
return RxV;
})
DEF_QEMU(S4_storerb_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,1,EA,fGETBYTE(0,RtV));},
DEF_HELPER_6(S4_storerb_ur, void, env, s32, s32, s32, s32, i32),
{
/* S4_storerb_ur */
DECL_EA;
DECL_RREG_u(TCGv, RuV, RuN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_storerb_ur(SLOT_WRAP(gen_helper_S4_storerb_ur(cpu_env, RuV, RtV, uiV, UiV, slot));,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,1,EA,fGETBYTE(0,RtV));})
FREE_EA;
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_storerb_ur */
},
void HELPER(S4_storerb_ur)(CPUHexagonState *env, int32_t RuV, int32_t RtV, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,1,EA,fGETBYTE(0,RtV));}
COUNT_HELPER(S4_storerb_ur);
})
DEF_QEMU(S2_storerb_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); },
DEF_HELPER_5(S2_storerb_pbr, s32, env, s32, s32, s32, i32),
{
/* S2_storerb_pbr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerb_pbr(SLOT_WRAP(gen_helper_S2_storerb_pbr(RxV, cpu_env, RxV, MuV, RtV, slot));,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_t(RtV);
/* S2_storerb_pbr */
},
int32_t HELPER(S2_storerb_pbr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t RtV, uint32_t slot)
{
size4u_t EA;
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); }
COUNT_HELPER(S2_storerb_pbr);
return RxV;
})
DEF_QEMU(S2_storerb_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,1,EA,fGETBYTE(0,RtV));},
DEF_HELPER_6(S2_storerb_pci, s32, env, s32, s32, s32, s32, i32),
{
/* S2_storerb_pci */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerb_pci(SLOT_WRAP(gen_helper_S2_storerb_pci(RxV, cpu_env, RxV, MuV, RtV, siV, slot));,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,1,EA,fGETBYTE(0,RtV));})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_storerb_pci */
},
int32_t HELPER(S2_storerb_pci)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,1,EA,fGETBYTE(0,RtV));}
COUNT_HELPER(S2_storerb_pci);
return RxV;
})
DEF_QEMU(S2_storerb_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<0,MuV); fSTORE(1,1,EA,fGETBYTE(0,RtV));},
DEF_HELPER_5(S2_storerb_pcr, s32, env, s32, s32, s32, i32),
{
/* S2_storerb_pcr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerb_pcr(SLOT_WRAP(gen_helper_S2_storerb_pcr(RxV, cpu_env, RxV, MuV, RtV, slot));,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<0,MuV); fSTORE(1,1,EA,fGETBYTE(0,RtV));})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_t(RtV);
/* S2_storerb_pcr */
},
int32_t HELPER(S2_storerb_pcr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t RtV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<0,MuV); fSTORE(1,1,EA,fGETBYTE(0,RtV));}
COUNT_HELPER(S2_storerb_pcr);
return RxV;
})
DEF_QEMU(S2_storerh_io,{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV)); },
DEF_HELPER_5(S2_storerh_io, void, env, s32, s32, s32, i32),
{
/* S2_storerh_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerh_io(SLOT_WRAP(gen_helper_S2_storerh_io(cpu_env, RsV, RtV, siV, slot));,
{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV)); })
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_storerh_io */
},
void HELPER(S2_storerh_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV)); }
COUNT_HELPER(S2_storerh_io);
})
DEF_QEMU(S2_storerh_pi,{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV)); },
DEF_HELPER_5(S2_storerh_pi, s32, env, s32, s32, s32, i32),
{
/* S2_storerh_pi */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerh_pi(SLOT_WRAP(gen_helper_S2_storerh_pi(RxV, cpu_env, RxV, RtV, siV, slot));,
{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV)); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_storerh_pi */
},
int32_t HELPER(S2_storerh_pi)(CPUHexagonState *env, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV)); }
COUNT_HELPER(S2_storerh_pi);
return RxV;
})
DEF_QEMU(S4_storerh_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,2,EA,fGETHALF(0,RtV)); ReV=UiV; },
DEF_HELPER_4(S4_storerh_ap, s32, env, s32, s32, i32),
{
/* S4_storerh_ap */
DECL_EA;
DECL_RREG_e(TCGv, ReV, ReN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(UiV,1);
READ_RREG_t(RtV, RtN);
fWRAP_S4_storerh_ap(SLOT_WRAP(gen_helper_S4_storerh_ap(ReV, cpu_env, RtV, UiV, slot));,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,2,EA,fGETHALF(0,RtV)); ReV=UiV; })
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_e(ReV);
FREE_REG_t(RtV);
FREE_IMM(UiV);
/* S4_storerh_ap */
},
int32_t HELPER(S4_storerh_ap)(CPUHexagonState *env, int32_t RtV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
int32_t ReV = 0;
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,2,EA,fGETHALF(0,RtV)); ReV=UiV; }
COUNT_HELPER(S4_storerh_ap);
return ReV;
})
DEF_QEMU(S2_storerh_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(0,RtV)); },
DEF_HELPER_5(S2_storerh_pr, s32, env, s32, s32, s32, i32),
{
/* S2_storerh_pr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerh_pr(SLOT_WRAP(gen_helper_S2_storerh_pr(RxV, cpu_env, RxV, MuV, RtV, slot));,
{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(0,RtV)); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_t(RtV);
/* S2_storerh_pr */
},
int32_t HELPER(S2_storerh_pr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t RtV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(0,RtV)); }
COUNT_HELPER(S2_storerh_pr);
return RxV;
})
DEF_QEMU(S4_storerh_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(0,RtV));},
DEF_HELPER_6(S4_storerh_ur, void, env, s32, s32, s32, s32, i32),
{
/* S4_storerh_ur */
DECL_EA;
DECL_RREG_u(TCGv, RuV, RuN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_storerh_ur(SLOT_WRAP(gen_helper_S4_storerh_ur(cpu_env, RuV, RtV, uiV, UiV, slot));,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(0,RtV));})
FREE_EA;
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_storerh_ur */
},
void HELPER(S4_storerh_ur)(CPUHexagonState *env, int32_t RuV, int32_t RtV, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(0,RtV));}
COUNT_HELPER(S4_storerh_ur);
})
DEF_QEMU(S2_storerh_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(0,RtV)); },
DEF_HELPER_5(S2_storerh_pbr, s32, env, s32, s32, s32, i32),
{
/* S2_storerh_pbr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerh_pbr(SLOT_WRAP(gen_helper_S2_storerh_pbr(RxV, cpu_env, RxV, MuV, RtV, slot));,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(0,RtV)); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_t(RtV);
/* S2_storerh_pbr */
},
int32_t HELPER(S2_storerh_pbr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t RtV, uint32_t slot)
{
size4u_t EA;
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(0,RtV)); }
COUNT_HELPER(S2_storerh_pbr);
return RxV;
})
DEF_QEMU(S2_storerh_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,2,EA,fGETHALF(0,RtV));},
DEF_HELPER_6(S2_storerh_pci, s32, env, s32, s32, s32, s32, i32),
{
/* S2_storerh_pci */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerh_pci(SLOT_WRAP(gen_helper_S2_storerh_pci(RxV, cpu_env, RxV, MuV, RtV, siV, slot));,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,2,EA,fGETHALF(0,RtV));})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_storerh_pci */
},
int32_t HELPER(S2_storerh_pci)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,2,EA,fGETHALF(0,RtV));}
COUNT_HELPER(S2_storerh_pci);
return RxV;
})
DEF_QEMU(S2_storerh_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); fSTORE(1,2,EA,fGETHALF(0,RtV));},
DEF_HELPER_5(S2_storerh_pcr, s32, env, s32, s32, s32, i32),
{
/* S2_storerh_pcr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerh_pcr(SLOT_WRAP(gen_helper_S2_storerh_pcr(RxV, cpu_env, RxV, MuV, RtV, slot));,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); fSTORE(1,2,EA,fGETHALF(0,RtV));})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_t(RtV);
/* S2_storerh_pcr */
},
int32_t HELPER(S2_storerh_pcr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t RtV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); fSTORE(1,2,EA,fGETHALF(0,RtV));}
COUNT_HELPER(S2_storerh_pcr);
return RxV;
})
DEF_QEMU(S2_storerf_io,{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV)); },
DEF_HELPER_5(S2_storerf_io, void, env, s32, s32, s32, i32),
{
/* S2_storerf_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerf_io(SLOT_WRAP(gen_helper_S2_storerf_io(cpu_env, RsV, RtV, siV, slot));,
{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV)); })
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_storerf_io */
},
void HELPER(S2_storerf_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV)); }
COUNT_HELPER(S2_storerf_io);
})
DEF_QEMU(S2_storerf_pi,{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV)); },
DEF_HELPER_5(S2_storerf_pi, s32, env, s32, s32, s32, i32),
{
/* S2_storerf_pi */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerf_pi(SLOT_WRAP(gen_helper_S2_storerf_pi(RxV, cpu_env, RxV, RtV, siV, slot));,
{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV)); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_storerf_pi */
},
int32_t HELPER(S2_storerf_pi)(CPUHexagonState *env, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV)); }
COUNT_HELPER(S2_storerf_pi);
return RxV;
})
DEF_QEMU(S4_storerf_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,2,EA,fGETHALF(1,RtV)); ReV=UiV; },
DEF_HELPER_4(S4_storerf_ap, s32, env, s32, s32, i32),
{
/* S4_storerf_ap */
DECL_EA;
DECL_RREG_e(TCGv, ReV, ReN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(UiV,1);
READ_RREG_t(RtV, RtN);
fWRAP_S4_storerf_ap(SLOT_WRAP(gen_helper_S4_storerf_ap(ReV, cpu_env, RtV, UiV, slot));,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,2,EA,fGETHALF(1,RtV)); ReV=UiV; })
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_e(ReV);
FREE_REG_t(RtV);
FREE_IMM(UiV);
/* S4_storerf_ap */
},
int32_t HELPER(S4_storerf_ap)(CPUHexagonState *env, int32_t RtV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
int32_t ReV = 0;
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,2,EA,fGETHALF(1,RtV)); ReV=UiV; }
COUNT_HELPER(S4_storerf_ap);
return ReV;
})
DEF_QEMU(S2_storerf_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(1,RtV)); },
DEF_HELPER_5(S2_storerf_pr, s32, env, s32, s32, s32, i32),
{
/* S2_storerf_pr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerf_pr(SLOT_WRAP(gen_helper_S2_storerf_pr(RxV, cpu_env, RxV, MuV, RtV, slot));,
{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(1,RtV)); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_t(RtV);
/* S2_storerf_pr */
},
int32_t HELPER(S2_storerf_pr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t RtV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(1,RtV)); }
COUNT_HELPER(S2_storerf_pr);
return RxV;
})
DEF_QEMU(S4_storerf_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(1,RtV));},
DEF_HELPER_6(S4_storerf_ur, void, env, s32, s32, s32, s32, i32),
{
/* S4_storerf_ur */
DECL_EA;
DECL_RREG_u(TCGv, RuV, RuN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_storerf_ur(SLOT_WRAP(gen_helper_S4_storerf_ur(cpu_env, RuV, RtV, uiV, UiV, slot));,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(1,RtV));})
FREE_EA;
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_storerf_ur */
},
void HELPER(S4_storerf_ur)(CPUHexagonState *env, int32_t RuV, int32_t RtV, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(1,RtV));}
COUNT_HELPER(S4_storerf_ur);
})
DEF_QEMU(S2_storerf_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(1,RtV)); },
DEF_HELPER_5(S2_storerf_pbr, s32, env, s32, s32, s32, i32),
{
/* S2_storerf_pbr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerf_pbr(SLOT_WRAP(gen_helper_S2_storerf_pbr(RxV, cpu_env, RxV, MuV, RtV, slot));,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(1,RtV)); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_t(RtV);
/* S2_storerf_pbr */
},
int32_t HELPER(S2_storerf_pbr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t RtV, uint32_t slot)
{
size4u_t EA;
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(1,RtV)); }
COUNT_HELPER(S2_storerf_pbr);
return RxV;
})
DEF_QEMU(S2_storerf_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,2,EA,fGETHALF(1,RtV));},
DEF_HELPER_6(S2_storerf_pci, s32, env, s32, s32, s32, s32, i32),
{
/* S2_storerf_pci */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerf_pci(SLOT_WRAP(gen_helper_S2_storerf_pci(RxV, cpu_env, RxV, MuV, RtV, siV, slot));,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,2,EA,fGETHALF(1,RtV));})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_storerf_pci */
},
int32_t HELPER(S2_storerf_pci)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,2,EA,fGETHALF(1,RtV));}
COUNT_HELPER(S2_storerf_pci);
return RxV;
})
DEF_QEMU(S2_storerf_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); fSTORE(1,2,EA,fGETHALF(1,RtV));},
DEF_HELPER_5(S2_storerf_pcr, s32, env, s32, s32, s32, i32),
{
/* S2_storerf_pcr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerf_pcr(SLOT_WRAP(gen_helper_S2_storerf_pcr(RxV, cpu_env, RxV, MuV, RtV, slot));,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); fSTORE(1,2,EA,fGETHALF(1,RtV));})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_t(RtV);
/* S2_storerf_pcr */
},
int32_t HELPER(S2_storerf_pcr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t RtV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); fSTORE(1,2,EA,fGETHALF(1,RtV));}
COUNT_HELPER(S2_storerf_pcr);
return RxV;
})
DEF_QEMU(S2_storeri_io,{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,4,EA,RtV); },
DEF_HELPER_5(S2_storeri_io, void, env, s32, s32, s32, i32),
{
/* S2_storeri_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storeri_io(SLOT_WRAP(gen_helper_S2_storeri_io(cpu_env, RsV, RtV, siV, slot));,
{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,4,EA,RtV); })
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_storeri_io */
},
void HELPER(S2_storeri_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,4,EA,RtV); }
COUNT_HELPER(S2_storeri_io);
})
DEF_QEMU(S2_storeri_pi,{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,4,EA,RtV); },
DEF_HELPER_5(S2_storeri_pi, s32, env, s32, s32, s32, i32),
{
/* S2_storeri_pi */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storeri_pi(SLOT_WRAP(gen_helper_S2_storeri_pi(RxV, cpu_env, RxV, RtV, siV, slot));,
{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,4,EA,RtV); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_storeri_pi */
},
int32_t HELPER(S2_storeri_pi)(CPUHexagonState *env, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,4,EA,RtV); }
COUNT_HELPER(S2_storeri_pi);
return RxV;
})
DEF_QEMU(S4_storeri_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,4,EA,RtV); ReV=UiV; },
DEF_HELPER_4(S4_storeri_ap, s32, env, s32, s32, i32),
{
/* S4_storeri_ap */
DECL_EA;
DECL_RREG_e(TCGv, ReV, ReN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(UiV,1);
READ_RREG_t(RtV, RtN);
fWRAP_S4_storeri_ap(SLOT_WRAP(gen_helper_S4_storeri_ap(ReV, cpu_env, RtV, UiV, slot));,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,4,EA,RtV); ReV=UiV; })
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_e(ReV);
FREE_REG_t(RtV);
FREE_IMM(UiV);
/* S4_storeri_ap */
},
int32_t HELPER(S4_storeri_ap)(CPUHexagonState *env, int32_t RtV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
int32_t ReV = 0;
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,4,EA,RtV); ReV=UiV; }
COUNT_HELPER(S4_storeri_ap);
return ReV;
})
DEF_QEMU(S2_storeri_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,4,EA,RtV); },
DEF_HELPER_5(S2_storeri_pr, s32, env, s32, s32, s32, i32),
{
/* S2_storeri_pr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storeri_pr(SLOT_WRAP(gen_helper_S2_storeri_pr(RxV, cpu_env, RxV, MuV, RtV, slot));,
{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,4,EA,RtV); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_t(RtV);
/* S2_storeri_pr */
},
int32_t HELPER(S2_storeri_pr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t RtV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,4,EA,RtV); }
COUNT_HELPER(S2_storeri_pr);
return RxV;
})
DEF_QEMU(S4_storeri_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,4,EA,RtV);},
DEF_HELPER_6(S4_storeri_ur, void, env, s32, s32, s32, s32, i32),
{
/* S4_storeri_ur */
DECL_EA;
DECL_RREG_u(TCGv, RuV, RuN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_storeri_ur(SLOT_WRAP(gen_helper_S4_storeri_ur(cpu_env, RuV, RtV, uiV, UiV, slot));,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,4,EA,RtV);})
FREE_EA;
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_storeri_ur */
},
void HELPER(S4_storeri_ur)(CPUHexagonState *env, int32_t RuV, int32_t RtV, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,4,EA,RtV);}
COUNT_HELPER(S4_storeri_ur);
})
DEF_QEMU(S2_storeri_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,4,EA,RtV); },
DEF_HELPER_5(S2_storeri_pbr, s32, env, s32, s32, s32, i32),
{
/* S2_storeri_pbr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storeri_pbr(SLOT_WRAP(gen_helper_S2_storeri_pbr(RxV, cpu_env, RxV, MuV, RtV, slot));,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,4,EA,RtV); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_t(RtV);
/* S2_storeri_pbr */
},
int32_t HELPER(S2_storeri_pbr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t RtV, uint32_t slot)
{
size4u_t EA;
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,4,EA,RtV); }
COUNT_HELPER(S2_storeri_pbr);
return RxV;
})
DEF_QEMU(S2_storeri_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,4,EA,RtV);},
DEF_HELPER_6(S2_storeri_pci, s32, env, s32, s32, s32, s32, i32),
{
/* S2_storeri_pci */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storeri_pci(SLOT_WRAP(gen_helper_S2_storeri_pci(RxV, cpu_env, RxV, MuV, RtV, siV, slot));,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,4,EA,RtV);})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_storeri_pci */
},
int32_t HELPER(S2_storeri_pci)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,4,EA,RtV);}
COUNT_HELPER(S2_storeri_pci);
return RxV;
})
DEF_QEMU(S2_storeri_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<2,MuV); fSTORE(1,4,EA,RtV);},
DEF_HELPER_5(S2_storeri_pcr, s32, env, s32, s32, s32, i32),
{
/* S2_storeri_pcr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storeri_pcr(SLOT_WRAP(gen_helper_S2_storeri_pcr(RxV, cpu_env, RxV, MuV, RtV, slot));,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<2,MuV); fSTORE(1,4,EA,RtV);})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_t(RtV);
/* S2_storeri_pcr */
},
int32_t HELPER(S2_storeri_pcr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t RtV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<2,MuV); fSTORE(1,4,EA,RtV);}
COUNT_HELPER(S2_storeri_pcr);
return RxV;
})
DEF_QEMU(S2_storerd_io,{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,8,EA,RttV); },
DEF_HELPER_5(S2_storerd_io, void, env, s32, s64, s32, i32),
{
/* S2_storerd_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_storerd_io(SLOT_WRAP(gen_helper_S2_storerd_io(cpu_env, RsV, RttV, siV, slot));,
{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,8,EA,RttV); })
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_PAIR(RttV);
FREE_IMM(siV);
/* S2_storerd_io */
},
void HELPER(S2_storerd_io)(CPUHexagonState *env, int32_t RsV, int64_t RttV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,8,EA,RttV); }
COUNT_HELPER(S2_storerd_io);
})
DEF_QEMU(S2_storerd_pi,{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,8,EA,RttV); },
DEF_HELPER_5(S2_storerd_pi, s32, env, s32, s64, s32, i32),
{
/* S2_storerd_pi */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_storerd_pi(SLOT_WRAP(gen_helper_S2_storerd_pi(RxV, cpu_env, RxV, RttV, siV, slot));,
{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,8,EA,RttV); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_PAIR(RttV);
FREE_IMM(siV);
/* S2_storerd_pi */
},
int32_t HELPER(S2_storerd_pi)(CPUHexagonState *env, int32_t RxV, int64_t RttV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,8,EA,RttV); }
COUNT_HELPER(S2_storerd_pi);
return RxV;
})
DEF_QEMU(S4_storerd_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,8,EA,RttV); ReV=UiV; },
DEF_HELPER_4(S4_storerd_ap, s32, env, s64, s32, i32),
{
/* S4_storerd_ap */
DECL_EA;
DECL_RREG_e(TCGv, ReV, ReN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_IMM(UiV,1);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_storerd_ap(SLOT_WRAP(gen_helper_S4_storerd_ap(ReV, cpu_env, RttV, UiV, slot));,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,8,EA,RttV); ReV=UiV; })
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_e(ReV);
FREE_REG_PAIR(RttV);
FREE_IMM(UiV);
/* S4_storerd_ap */
},
int32_t HELPER(S4_storerd_ap)(CPUHexagonState *env, int64_t RttV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
int32_t ReV = 0;
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,8,EA,RttV); ReV=UiV; }
COUNT_HELPER(S4_storerd_ap);
return ReV;
})
DEF_QEMU(S2_storerd_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,8,EA,RttV); },
DEF_HELPER_5(S2_storerd_pr, s32, env, s32, s32, s64, i32),
{
/* S2_storerd_pr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_storerd_pr(SLOT_WRAP(gen_helper_S2_storerd_pr(RxV, cpu_env, RxV, MuV, RttV, slot));,
{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,8,EA,RttV); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_PAIR(RttV);
/* S2_storerd_pr */
},
int32_t HELPER(S2_storerd_pr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int64_t RttV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,8,EA,RttV); }
COUNT_HELPER(S2_storerd_pr);
return RxV;
})
DEF_QEMU(S4_storerd_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,8,EA,RttV);},
DEF_HELPER_6(S4_storerd_ur, void, env, s32, s64, s32, s32, i32),
{
/* S4_storerd_ur */
DECL_EA;
DECL_RREG_u(TCGv, RuV, RuN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_u(RuV, RuN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_storerd_ur(SLOT_WRAP(gen_helper_S4_storerd_ur(cpu_env, RuV, RttV, uiV, UiV, slot));,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,8,EA,RttV);})
FREE_EA;
FREE_REG_u(RuV);
FREE_REG_PAIR(RttV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_storerd_ur */
},
void HELPER(S4_storerd_ur)(CPUHexagonState *env, int32_t RuV, int64_t RttV, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,8,EA,RttV);}
COUNT_HELPER(S4_storerd_ur);
})
DEF_QEMU(S2_storerd_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,8,EA,RttV); },
DEF_HELPER_5(S2_storerd_pbr, s32, env, s32, s32, s64, i32),
{
/* S2_storerd_pbr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_storerd_pbr(SLOT_WRAP(gen_helper_S2_storerd_pbr(RxV, cpu_env, RxV, MuV, RttV, slot));,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,8,EA,RttV); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_PAIR(RttV);
/* S2_storerd_pbr */
},
int32_t HELPER(S2_storerd_pbr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int64_t RttV, uint32_t slot)
{
size4u_t EA;
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,8,EA,RttV); }
COUNT_HELPER(S2_storerd_pbr);
return RxV;
})
DEF_QEMU(S2_storerd_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,8,EA,RttV);},
DEF_HELPER_6(S2_storerd_pci, s32, env, s32, s32, s64, s32, i32),
{
/* S2_storerd_pci */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_storerd_pci(SLOT_WRAP(gen_helper_S2_storerd_pci(RxV, cpu_env, RxV, MuV, RttV, siV, slot));,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,8,EA,RttV);})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_PAIR(RttV);
FREE_IMM(siV);
/* S2_storerd_pci */
},
int32_t HELPER(S2_storerd_pci)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int64_t RttV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,8,EA,RttV);}
COUNT_HELPER(S2_storerd_pci);
return RxV;
})
DEF_QEMU(S2_storerd_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<3,MuV); fSTORE(1,8,EA,RttV);},
DEF_HELPER_5(S2_storerd_pcr, s32, env, s32, s32, s64, i32),
{
/* S2_storerd_pcr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_storerd_pcr(SLOT_WRAP(gen_helper_S2_storerd_pcr(RxV, cpu_env, RxV, MuV, RttV, slot));,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<3,MuV); fSTORE(1,8,EA,RttV);})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_REG_PAIR(RttV);
/* S2_storerd_pcr */
},
int32_t HELPER(S2_storerd_pcr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int64_t RttV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<3,MuV); fSTORE(1,8,EA,RttV);}
COUNT_HELPER(S2_storerd_pcr);
return RxV;
})
DEF_QEMU(S2_storerinew_io,{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); },
DEF_HELPER_5(S2_storerinew_io, void, env, s32, s32, s32, i32),
{
/* S2_storerinew_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerinew_io(SLOT_WRAP(gen_helper_S2_storerinew_io(cpu_env, RsV, NtN, siV, slot));,
{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); })
FREE_EA;
FREE_REG_s(RsV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_storerinew_io */
},
void HELPER(S2_storerinew_io)(CPUHexagonState *env, int32_t RsV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); }
COUNT_HELPER(S2_storerinew_io);
})
DEF_QEMU(S2_storerinew_pi,{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); },
DEF_HELPER_5(S2_storerinew_pi, s32, env, s32, s32, s32, i32),
{
/* S2_storerinew_pi */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerinew_pi(SLOT_WRAP(gen_helper_S2_storerinew_pi(RxV, cpu_env, RxV, NtN, siV, slot));,
{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_storerinew_pi */
},
int32_t HELPER(S2_storerinew_pi)(CPUHexagonState *env, int32_t RxV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); }
COUNT_HELPER(S2_storerinew_pi);
return RxV;
})
DEF_QEMU(S4_storerinew_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); ReV=UiV; },
DEF_HELPER_4(S4_storerinew_ap, s32, env, s32, s32, i32),
{
/* S4_storerinew_ap */
DECL_EA;
DECL_RREG_e(TCGv, ReV, ReN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(UiV,1);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_storerinew_ap(SLOT_WRAP(gen_helper_S4_storerinew_ap(ReV, cpu_env, NtN, UiV, slot));,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); ReV=UiV; })
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_e(ReV);
FREE_NEW_NREG(NtN);
FREE_IMM(UiV);
/* S4_storerinew_ap */
},
int32_t HELPER(S4_storerinew_ap)(CPUHexagonState *env, int32_t NtN, int32_t UiV, uint32_t slot)
{
size4u_t EA;
int32_t ReV = 0;
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); ReV=UiV; }
COUNT_HELPER(S4_storerinew_ap);
return ReV;
})
DEF_QEMU(S2_storerinew_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); },
DEF_HELPER_5(S2_storerinew_pr, s32, env, s32, s32, s32, i32),
{
/* S2_storerinew_pr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerinew_pr(SLOT_WRAP(gen_helper_S2_storerinew_pr(RxV, cpu_env, RxV, MuV, NtN, slot));,
{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_NREG(NtN);
/* S2_storerinew_pr */
},
int32_t HELPER(S2_storerinew_pr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t NtN, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); }
COUNT_HELPER(S2_storerinew_pr);
return RxV;
})
DEF_QEMU(S4_storerinew_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,4,EA,fNEWREG_ST(NtN));},
DEF_HELPER_6(S4_storerinew_ur, void, env, s32, s32, s32, s32, i32),
{
/* S4_storerinew_ur */
DECL_EA;
DECL_RREG_u(TCGv, RuV, RuN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_storerinew_ur(SLOT_WRAP(gen_helper_S4_storerinew_ur(cpu_env, RuV, NtN, uiV, UiV, slot));,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,4,EA,fNEWREG_ST(NtN));})
FREE_EA;
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_storerinew_ur */
},
void HELPER(S4_storerinew_ur)(CPUHexagonState *env, int32_t RuV, int32_t NtN, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,4,EA,fNEWREG_ST(NtN));}
COUNT_HELPER(S4_storerinew_ur);
})
DEF_QEMU(S2_storerinew_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); },
DEF_HELPER_5(S2_storerinew_pbr, s32, env, s32, s32, s32, i32),
{
/* S2_storerinew_pbr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerinew_pbr(SLOT_WRAP(gen_helper_S2_storerinew_pbr(RxV, cpu_env, RxV, MuV, NtN, slot));,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_NREG(NtN);
/* S2_storerinew_pbr */
},
int32_t HELPER(S2_storerinew_pbr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t NtN, uint32_t slot)
{
size4u_t EA;
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); }
COUNT_HELPER(S2_storerinew_pbr);
return RxV;
})
DEF_QEMU(S2_storerinew_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,4,EA,fNEWREG_ST(NtN));},
DEF_HELPER_6(S2_storerinew_pci, s32, env, s32, s32, s32, s32, i32),
{
/* S2_storerinew_pci */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerinew_pci(SLOT_WRAP(gen_helper_S2_storerinew_pci(RxV, cpu_env, RxV, MuV, NtN, siV, slot));,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,4,EA,fNEWREG_ST(NtN));})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_storerinew_pci */
},
int32_t HELPER(S2_storerinew_pci)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,4,EA,fNEWREG_ST(NtN));}
COUNT_HELPER(S2_storerinew_pci);
return RxV;
})
DEF_QEMU(S2_storerinew_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<2,MuV); fSTORE(1,4,EA,fNEWREG_ST(NtN));},
DEF_HELPER_5(S2_storerinew_pcr, s32, env, s32, s32, s32, i32),
{
/* S2_storerinew_pcr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerinew_pcr(SLOT_WRAP(gen_helper_S2_storerinew_pcr(RxV, cpu_env, RxV, MuV, NtN, slot));,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<2,MuV); fSTORE(1,4,EA,fNEWREG_ST(NtN));})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_NREG(NtN);
/* S2_storerinew_pcr */
},
int32_t HELPER(S2_storerinew_pcr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t NtN, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<2,MuV); fSTORE(1,4,EA,fNEWREG_ST(NtN));}
COUNT_HELPER(S2_storerinew_pcr);
return RxV;
})
DEF_QEMU(S2_storerbnew_io,{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); },
DEF_HELPER_5(S2_storerbnew_io, void, env, s32, s32, s32, i32),
{
/* S2_storerbnew_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerbnew_io(SLOT_WRAP(gen_helper_S2_storerbnew_io(cpu_env, RsV, NtN, siV, slot));,
{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); })
FREE_EA;
FREE_REG_s(RsV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_storerbnew_io */
},
void HELPER(S2_storerbnew_io)(CPUHexagonState *env, int32_t RsV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); }
COUNT_HELPER(S2_storerbnew_io);
})
DEF_QEMU(S2_storerbnew_pi,{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); },
DEF_HELPER_5(S2_storerbnew_pi, s32, env, s32, s32, s32, i32),
{
/* S2_storerbnew_pi */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerbnew_pi(SLOT_WRAP(gen_helper_S2_storerbnew_pi(RxV, cpu_env, RxV, NtN, siV, slot));,
{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_storerbnew_pi */
},
int32_t HELPER(S2_storerbnew_pi)(CPUHexagonState *env, int32_t RxV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); }
COUNT_HELPER(S2_storerbnew_pi);
return RxV;
})
DEF_QEMU(S4_storerbnew_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); ReV=UiV; },
DEF_HELPER_4(S4_storerbnew_ap, s32, env, s32, s32, i32),
{
/* S4_storerbnew_ap */
DECL_EA;
DECL_RREG_e(TCGv, ReV, ReN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(UiV,1);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_storerbnew_ap(SLOT_WRAP(gen_helper_S4_storerbnew_ap(ReV, cpu_env, NtN, UiV, slot));,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); ReV=UiV; })
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_e(ReV);
FREE_NEW_NREG(NtN);
FREE_IMM(UiV);
/* S4_storerbnew_ap */
},
int32_t HELPER(S4_storerbnew_ap)(CPUHexagonState *env, int32_t NtN, int32_t UiV, uint32_t slot)
{
size4u_t EA;
int32_t ReV = 0;
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); ReV=UiV; }
COUNT_HELPER(S4_storerbnew_ap);
return ReV;
})
DEF_QEMU(S2_storerbnew_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); },
DEF_HELPER_5(S2_storerbnew_pr, s32, env, s32, s32, s32, i32),
{
/* S2_storerbnew_pr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerbnew_pr(SLOT_WRAP(gen_helper_S2_storerbnew_pr(RxV, cpu_env, RxV, MuV, NtN, slot));,
{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_NREG(NtN);
/* S2_storerbnew_pr */
},
int32_t HELPER(S2_storerbnew_pr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t NtN, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); }
COUNT_HELPER(S2_storerbnew_pr);
return RxV;
})
DEF_QEMU(S4_storerbnew_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));},
DEF_HELPER_6(S4_storerbnew_ur, void, env, s32, s32, s32, s32, i32),
{
/* S4_storerbnew_ur */
DECL_EA;
DECL_RREG_u(TCGv, RuV, RuN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_storerbnew_ur(SLOT_WRAP(gen_helper_S4_storerbnew_ur(cpu_env, RuV, NtN, uiV, UiV, slot));,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));})
FREE_EA;
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_storerbnew_ur */
},
void HELPER(S4_storerbnew_ur)(CPUHexagonState *env, int32_t RuV, int32_t NtN, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));}
COUNT_HELPER(S4_storerbnew_ur);
})
DEF_QEMU(S2_storerbnew_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); },
DEF_HELPER_5(S2_storerbnew_pbr, s32, env, s32, s32, s32, i32),
{
/* S2_storerbnew_pbr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerbnew_pbr(SLOT_WRAP(gen_helper_S2_storerbnew_pbr(RxV, cpu_env, RxV, MuV, NtN, slot));,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_NREG(NtN);
/* S2_storerbnew_pbr */
},
int32_t HELPER(S2_storerbnew_pbr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t NtN, uint32_t slot)
{
size4u_t EA;
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); }
COUNT_HELPER(S2_storerbnew_pbr);
return RxV;
})
DEF_QEMU(S2_storerbnew_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));},
DEF_HELPER_6(S2_storerbnew_pci, s32, env, s32, s32, s32, s32, i32),
{
/* S2_storerbnew_pci */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerbnew_pci(SLOT_WRAP(gen_helper_S2_storerbnew_pci(RxV, cpu_env, RxV, MuV, NtN, siV, slot));,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_storerbnew_pci */
},
int32_t HELPER(S2_storerbnew_pci)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));}
COUNT_HELPER(S2_storerbnew_pci);
return RxV;
})
DEF_QEMU(S2_storerbnew_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<0,MuV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));},
DEF_HELPER_5(S2_storerbnew_pcr, s32, env, s32, s32, s32, i32),
{
/* S2_storerbnew_pcr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerbnew_pcr(SLOT_WRAP(gen_helper_S2_storerbnew_pcr(RxV, cpu_env, RxV, MuV, NtN, slot));,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<0,MuV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_NREG(NtN);
/* S2_storerbnew_pcr */
},
int32_t HELPER(S2_storerbnew_pcr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t NtN, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<0,MuV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));}
COUNT_HELPER(S2_storerbnew_pcr);
return RxV;
})
DEF_QEMU(S2_storerhnew_io,{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); },
DEF_HELPER_5(S2_storerhnew_io, void, env, s32, s32, s32, i32),
{
/* S2_storerhnew_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerhnew_io(SLOT_WRAP(gen_helper_S2_storerhnew_io(cpu_env, RsV, NtN, siV, slot));,
{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); })
FREE_EA;
FREE_REG_s(RsV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_storerhnew_io */
},
void HELPER(S2_storerhnew_io)(CPUHexagonState *env, int32_t RsV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(siV); fEA_RI(RsV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); }
COUNT_HELPER(S2_storerhnew_io);
})
DEF_QEMU(S2_storerhnew_pi,{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); },
DEF_HELPER_5(S2_storerhnew_pi, s32, env, s32, s32, s32, i32),
{
/* S2_storerhnew_pi */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerhnew_pi(SLOT_WRAP(gen_helper_S2_storerhnew_pi(RxV, cpu_env, RxV, NtN, siV, slot));,
{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_storerhnew_pi */
},
int32_t HELPER(S2_storerhnew_pi)(CPUHexagonState *env, int32_t RxV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); }
COUNT_HELPER(S2_storerhnew_pi);
return RxV;
})
DEF_QEMU(S4_storerhnew_ap,{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); ReV=UiV; },
DEF_HELPER_4(S4_storerhnew_ap, s32, env, s32, s32, i32),
{
/* S4_storerhnew_ap */
DECL_EA;
DECL_RREG_e(TCGv, ReV, ReN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(UiV,1);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_storerhnew_ap(SLOT_WRAP(gen_helper_S4_storerhnew_ap(ReV, cpu_env, NtN, UiV, slot));,
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); ReV=UiV; })
WRITE_RREG(ReN,ReV);
FREE_EA;
FREE_REG_e(ReV);
FREE_NEW_NREG(NtN);
FREE_IMM(UiV);
/* S4_storerhnew_ap */
},
int32_t HELPER(S4_storerhnew_ap)(CPUHexagonState *env, int32_t NtN, int32_t UiV, uint32_t slot)
{
size4u_t EA;
int32_t ReV = 0;
{fMUST_IMMEXT(UiV); fEA_IMM(UiV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); ReV=UiV; }
COUNT_HELPER(S4_storerhnew_ap);
return ReV;
})
DEF_QEMU(S2_storerhnew_pr,{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); },
DEF_HELPER_5(S2_storerhnew_pr, s32, env, s32, s32, s32, i32),
{
/* S2_storerhnew_pr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerhnew_pr(SLOT_WRAP(gen_helper_S2_storerhnew_pr(RxV, cpu_env, RxV, MuV, NtN, slot));,
{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_NREG(NtN);
/* S2_storerhnew_pr */
},
int32_t HELPER(S2_storerhnew_pr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t NtN, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); }
COUNT_HELPER(S2_storerhnew_pr);
return RxV;
})
DEF_QEMU(S4_storerhnew_ur,{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));},
DEF_HELPER_6(S4_storerhnew_ur, void, env, s32, s32, s32, s32, i32),
{
/* S4_storerhnew_ur */
DECL_EA;
DECL_RREG_u(TCGv, RuV, RuN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_storerhnew_ur(SLOT_WRAP(gen_helper_S4_storerhnew_ur(cpu_env, RuV, NtN, uiV, UiV, slot));,
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));})
FREE_EA;
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_storerhnew_ur */
},
void HELPER(S4_storerhnew_ur)(CPUHexagonState *env, int32_t RuV, int32_t NtN, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(UiV); fEA_IRs(UiV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));}
COUNT_HELPER(S4_storerhnew_ur);
})
DEF_QEMU(S2_storerhnew_pbr,{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); },
DEF_HELPER_5(S2_storerhnew_pbr, s32, env, s32, s32, s32, i32),
{
/* S2_storerhnew_pbr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerhnew_pbr(SLOT_WRAP(gen_helper_S2_storerhnew_pbr(RxV, cpu_env, RxV, MuV, NtN, slot));,
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_NREG(NtN);
/* S2_storerhnew_pbr */
},
int32_t HELPER(S2_storerhnew_pbr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t NtN, uint32_t slot)
{
size4u_t EA;
{fEA_BREVR(RxV); fPM_M(RxV,MuV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); }
COUNT_HELPER(S2_storerhnew_pbr);
return RxV;
})
DEF_QEMU(S2_storerhnew_pci,{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));},
DEF_HELPER_6(S2_storerhnew_pci, s32, env, s32, s32, s32, s32, i32),
{
/* S2_storerhnew_pci */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerhnew_pci(SLOT_WRAP(gen_helper_S2_storerhnew_pci(RxV, cpu_env, RxV, MuV, NtN, siV, slot));,
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_storerhnew_pci */
},
int32_t HELPER(S2_storerhnew_pci)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_CIRI(RxV,siV,MuV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));}
COUNT_HELPER(S2_storerhnew_pci);
return RxV;
})
DEF_QEMU(S2_storerhnew_pcr,{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));},
DEF_HELPER_5(S2_storerhnew_pcr, s32, env, s32, s32, s32, i32),
{
/* S2_storerhnew_pcr */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerhnew_pcr(SLOT_WRAP(gen_helper_S2_storerhnew_pcr(RxV, cpu_env, RxV, MuV, NtN, slot));,
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_NREG(NtN);
/* S2_storerhnew_pcr */
},
int32_t HELPER(S2_storerhnew_pcr)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t NtN, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); fPM_CIRR(RxV,fREAD_IREG(MuV)<<1,MuV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));}
COUNT_HELPER(S2_storerhnew_pcr);
return RxV;
})
DEF_QEMU(S2_allocframe,{ fEA_RI(RxV,-8); fSTORE(1,8,EA,fFRAME_SCRAMBLE((fCAST8_8u(fREAD_LR()) << 32) | fCAST4_4u(fREAD_FP()))); fWRITE_FP(EA); fFRAMECHECK(EA-uiV,EA); RxV = EA-uiV; },
DEF_HELPER_4(S2_allocframe, s32, env, s32, s32, i32),
{
/* S2_allocframe */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
fWRAP_S2_allocframe(SLOT_WRAP(gen_helper_S2_allocframe(RxV, cpu_env, RxV, uiV, slot));,
{ fEA_RI(RxV,-8); fSTORE(1,8,EA,fFRAME_SCRAMBLE((fCAST8_8u(fREAD_LR()) << 32) | fCAST4_4u(fREAD_FP()))); fWRITE_FP(EA); fFRAMECHECK(EA-uiV,EA); RxV = EA-uiV; })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_IMM(uiV);
/* S2_allocframe */
},
int32_t HELPER(S2_allocframe)(CPUHexagonState *env, int32_t RxV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{ fEA_RI(RxV,-8); fSTORE(1,8,EA,fFRAME_SCRAMBLE((fCAST8_8u(fREAD_LR()) << 32) | fCAST4_4u(fREAD_FP()))); fWRITE_FP(EA); fFRAMECHECK(EA-uiV,EA); RxV = EA-uiV; }
COUNT_HELPER(S2_allocframe);
return RxV;
})
DEF_QEMU(L2_deallocframe,{ fHIDE(size8u_t tmp;) fEA_REG(RsV); fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); },
DEF_HELPER_2(L2_deallocframe, s64, env, s32),
{
/* L2_deallocframe */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_L2_deallocframe(gen_helper_L2_deallocframe(RddV, cpu_env, RsV);,
{ fHIDE(size8u_t tmp;) fEA_REG(RsV); fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* L2_deallocframe */
},
int64_t HELPER(L2_deallocframe)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int64_t RddV = 0;
{ fHIDE(size8u_t tmp;) fEA_REG(RsV); fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); }
COUNT_HELPER(L2_deallocframe);
return RddV;
})
DEF_QEMU(L4_return,{ fHIDE(size8u_t tmp;) fEA_REG(RsV); fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR);},
DEF_HELPER_2(L4_return, s64, env, s32),
{
/* L4_return */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_L4_return(gen_helper_L4_return(RddV, cpu_env, RsV);,
{ fHIDE(size8u_t tmp;) fEA_REG(RsV); fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR);})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* L4_return */
},
int64_t HELPER(L4_return)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int64_t RddV = 0;
{ fHIDE(size8u_t tmp;) fEA_REG(RsV); fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR);}
COUNT_HELPER(L4_return);
return RddV;
})
DEF_QEMU(L4_return_t,{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBOLD(PvV),,SPECULATE_NOT_TAKEN,7,0); fEA_REG(RsV); if (fLSBOLD(PvV)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } },
DEF_HELPER_4(L4_return_t, s64, env, s32, s32, i32),
{
/* L4_return_t */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
fWRAP_L4_return_t(SLOT_WRAP(gen_helper_L4_return_t(RddV, cpu_env, PvV, RsV, slot));,
{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBOLD(PvV),,SPECULATE_NOT_TAKEN,7,0); fEA_REG(RsV); if (fLSBOLD(PvV)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* L4_return_t */
},
int64_t HELPER(L4_return_t)(CPUHexagonState *env, int32_t PvV, int32_t RsV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBOLD(PvV),,SPECULATE_NOT_TAKEN,7,0); fEA_REG(RsV); if (fLSBOLD(PvV)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } }
COUNT_HELPER(L4_return_t);
return RddV;
})
DEF_QEMU(L4_return_f,{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PvV),,SPECULATE_NOT_TAKEN,7,0); fEA_REG(RsV); if (fLSBOLDNOT(PvV)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } },
DEF_HELPER_4(L4_return_f, s64, env, s32, s32, i32),
{
/* L4_return_f */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
fWRAP_L4_return_f(SLOT_WRAP(gen_helper_L4_return_f(RddV, cpu_env, PvV, RsV, slot));,
{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PvV),,SPECULATE_NOT_TAKEN,7,0); fEA_REG(RsV); if (fLSBOLDNOT(PvV)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* L4_return_f */
},
int64_t HELPER(L4_return_f)(CPUHexagonState *env, int32_t PvV, int32_t RsV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PvV),,SPECULATE_NOT_TAKEN,7,0); fEA_REG(RsV); if (fLSBOLDNOT(PvV)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } }
COUNT_HELPER(L4_return_f);
return RddV;
})
DEF_QEMU(L4_return_tnew_pt,{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEW(PvN),,SPECULATE_TAKEN,12,0); fEA_REG(RsV); if (fLSBNEW(PvN)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } },
DEF_HELPER_4(L4_return_tnew_pt, s64, env, s32, s32, i32),
{
/* L4_return_tnew_pt */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
fWRAP_L4_return_tnew_pt(SLOT_WRAP(gen_helper_L4_return_tnew_pt(RddV, cpu_env, PvN, RsV, slot));,
{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEW(PvN),,SPECULATE_TAKEN,12,0); fEA_REG(RsV); if (fLSBNEW(PvN)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* L4_return_tnew_pt */
},
int64_t HELPER(L4_return_tnew_pt)(CPUHexagonState *env, int32_t PvN, int32_t RsV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEW(PvN),,SPECULATE_TAKEN,12,0); fEA_REG(RsV); if (fLSBNEW(PvN)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } }
COUNT_HELPER(L4_return_tnew_pt);
return RddV;
})
DEF_QEMU(L4_return_fnew_pt,{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PvN),,SPECULATE_TAKEN,12,0); fEA_REG(RsV); if (fLSBNEWNOT(PvN)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } },
DEF_HELPER_4(L4_return_fnew_pt, s64, env, s32, s32, i32),
{
/* L4_return_fnew_pt */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
fWRAP_L4_return_fnew_pt(SLOT_WRAP(gen_helper_L4_return_fnew_pt(RddV, cpu_env, PvN, RsV, slot));,
{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PvN),,SPECULATE_TAKEN,12,0); fEA_REG(RsV); if (fLSBNEWNOT(PvN)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* L4_return_fnew_pt */
},
int64_t HELPER(L4_return_fnew_pt)(CPUHexagonState *env, int32_t PvN, int32_t RsV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PvN),,SPECULATE_TAKEN,12,0); fEA_REG(RsV); if (fLSBNEWNOT(PvN)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } }
COUNT_HELPER(L4_return_fnew_pt);
return RddV;
})
DEF_QEMU(L4_return_tnew_pnt,{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEW(PvN),,SPECULATE_NOT_TAKEN,12,0); fEA_REG(RsV); if (fLSBNEW(PvN)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } },
DEF_HELPER_4(L4_return_tnew_pnt, s64, env, s32, s32, i32),
{
/* L4_return_tnew_pnt */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
fWRAP_L4_return_tnew_pnt(SLOT_WRAP(gen_helper_L4_return_tnew_pnt(RddV, cpu_env, PvN, RsV, slot));,
{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEW(PvN),,SPECULATE_NOT_TAKEN,12,0); fEA_REG(RsV); if (fLSBNEW(PvN)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* L4_return_tnew_pnt */
},
int64_t HELPER(L4_return_tnew_pnt)(CPUHexagonState *env, int32_t PvN, int32_t RsV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEW(PvN),,SPECULATE_NOT_TAKEN,12,0); fEA_REG(RsV); if (fLSBNEW(PvN)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } }
COUNT_HELPER(L4_return_tnew_pnt);
return RddV;
})
DEF_QEMU(L4_return_fnew_pnt,{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PvN),,SPECULATE_NOT_TAKEN,12,0); fEA_REG(RsV); if (fLSBNEWNOT(PvN)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } },
DEF_HELPER_4(L4_return_fnew_pnt, s64, env, s32, s32, i32),
{
/* L4_return_fnew_pnt */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
fWRAP_L4_return_fnew_pnt(SLOT_WRAP(gen_helper_L4_return_fnew_pnt(RddV, cpu_env, PvN, RsV, slot));,
{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PvN),,SPECULATE_NOT_TAKEN,12,0); fEA_REG(RsV); if (fLSBNEWNOT(PvN)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* L4_return_fnew_pnt */
},
int64_t HELPER(L4_return_fnew_pnt)(CPUHexagonState *env, int32_t PvN, int32_t RsV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PvN),,SPECULATE_NOT_TAKEN,12,0); fEA_REG(RsV); if (fLSBNEWNOT(PvN)) { fLOAD(1,8,u,EA,tmp); RddV = fFRAME_UNSCRAMBLE(tmp); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,RddV),COF_TYPE_JUMPR); } else { LOAD_CANCEL(EA); } }
COUNT_HELPER(L4_return_fnew_pnt);
return RddV;
})
DEF_QEMU(L2_loadw_locked,{ fEA_REG(RsV); fLOAD_LOCKED(1,4,u,EA,RdV) },
DEF_HELPER_2(L2_loadw_locked, s32, env, s32),
{
/* L2_loadw_locked */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_L2_loadw_locked(gen_helper_L2_loadw_locked(RdV, cpu_env, RsV);,
{ fEA_REG(RsV); fLOAD_LOCKED(1,4,u,EA,RdV) })
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* L2_loadw_locked */
},
int32_t HELPER(L2_loadw_locked)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{ fEA_REG(RsV); fLOAD_LOCKED(1,4,u,EA,RdV) }
COUNT_HELPER(L2_loadw_locked);
return RdV;
})
DEF_QEMU(S2_storew_locked,{ fEA_REG(RsV); fSTORE_LOCKED(1,4,EA,RtV,PdV) fHIDE(MARK_LATE_PRED_WRITE(PdN)) },
DEF_HELPER_4(S2_storew_locked, s32, env, s32, s32, i32),
{
/* S2_storew_locked */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_PREG_d(TCGv, PdV, PdN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storew_locked(SLOT_WRAP(gen_helper_S2_storew_locked(PdV, cpu_env, RsV, RtV, slot));,
{ fEA_REG(RsV); fSTORE_LOCKED(1,4,EA,RtV,PdV) fHIDE(MARK_LATE_PRED_WRITE(PdN)) })
WRITE_PREG(PdN,PdV);
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_d(PdV);
FREE_REG_t(RtV);
/* S2_storew_locked */
},
int32_t HELPER(S2_storew_locked)(CPUHexagonState *env, int32_t RsV, int32_t RtV, uint32_t slot)
{
size4u_t EA;
int32_t PdV = 0;
{ fEA_REG(RsV); fSTORE_LOCKED(1,4,EA,RtV,PdV) fHIDE(MARK_LATE_PRED_WRITE(PdN)) }
COUNT_HELPER(S2_storew_locked);
return PdV;
})
DEF_QEMU(L4_loadd_locked,{ fEA_REG(RsV); fLOAD_LOCKED(1,8,u,EA,RddV) },
DEF_HELPER_2(L4_loadd_locked, s64, env, s32),
{
/* L4_loadd_locked */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_L4_loadd_locked(gen_helper_L4_loadd_locked(RddV, cpu_env, RsV);,
{ fEA_REG(RsV); fLOAD_LOCKED(1,8,u,EA,RddV) })
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* L4_loadd_locked */
},
int64_t HELPER(L4_loadd_locked)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int64_t RddV = 0;
{ fEA_REG(RsV); fLOAD_LOCKED(1,8,u,EA,RddV) }
COUNT_HELPER(L4_loadd_locked);
return RddV;
})
DEF_QEMU(S4_stored_locked,{ fEA_REG(RsV); fSTORE_LOCKED(1,8,EA,RttV,PdV) fHIDE(MARK_LATE_PRED_WRITE(PdN)) },
DEF_HELPER_4(S4_stored_locked, s32, env, s32, s64, i32),
{
/* S4_stored_locked */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_PREG_d(TCGv, PdV, PdN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_stored_locked(SLOT_WRAP(gen_helper_S4_stored_locked(PdV, cpu_env, RsV, RttV, slot));,
{ fEA_REG(RsV); fSTORE_LOCKED(1,8,EA,RttV,PdV) fHIDE(MARK_LATE_PRED_WRITE(PdN)) })
WRITE_PREG(PdN,PdV);
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RttV);
/* S4_stored_locked */
},
int32_t HELPER(S4_stored_locked)(CPUHexagonState *env, int32_t RsV, int64_t RttV, uint32_t slot)
{
size4u_t EA;
int32_t PdV = 0;
{ fEA_REG(RsV); fSTORE_LOCKED(1,8,EA,RttV,PdV) fHIDE(MARK_LATE_PRED_WRITE(PdN)) }
COUNT_HELPER(S4_stored_locked);
return PdV;
})
DEF_QEMU(L4_loadrub_rr,{fEA_RRs(RsV,RtV,uiV); fLOAD(1,1,u,EA,RdV);},
DEF_HELPER_4(L4_loadrub_rr, s32, env, s32, s32, s32),
{
/* L4_loadrub_rr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadrub_rr(gen_helper_L4_loadrub_rr(RdV, cpu_env, RsV, RtV, uiV);,
{fEA_RRs(RsV,RtV,uiV); fLOAD(1,1,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_loadrub_rr */
},
int32_t HELPER(L4_loadrub_rr)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); fLOAD(1,1,u,EA,RdV);}
COUNT_HELPER(L4_loadrub_rr);
return RdV;
})
DEF_QEMU(L2_ploadrubt_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,1,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrubt_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadrubt_io */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrubt_io(SLOT_WRAP(gen_helper_L2_ploadrubt_io(RdV, cpu_env, PtV, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,1,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrubt_io */
},
int32_t HELPER(L2_ploadrubt_io)(CPUHexagonState *env, int32_t PtV, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,1,u,EA,RdV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrubt_io);
return RdV;
})
DEF_QEMU(L2_ploadrubt_pi,{fEA_REG(RxV); if(fLSBOLD(PtV)){ fPM_I(RxV,siV); fLOAD(1,1,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrubt_pi, void, env),
{
/* L2_ploadrubt_pi */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrubt_pi(SLOT_WRAP(gen_helper_L2_ploadrubt_pi(RdV, RxV, cpu_env, PtV, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBOLD(PtV)){ fPM_I(RxV,siV); fLOAD(1,1,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrubt_pi */
},
void HELPER(L2_ploadrubt_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrubt_pi); }
)
DEF_QEMU(L2_ploadrubf_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrubf_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadrubf_io */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrubf_io(SLOT_WRAP(gen_helper_L2_ploadrubf_io(RdV, cpu_env, PtV, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrubf_io */
},
int32_t HELPER(L2_ploadrubf_io)(CPUHexagonState *env, int32_t PtV, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrubf_io);
return RdV;
})
DEF_QEMU(L2_ploadrubf_pi,{fEA_REG(RxV); if(fLSBOLDNOT(PtV)){ fPM_I(RxV,siV); fLOAD(1,1,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrubf_pi, void, env),
{
/* L2_ploadrubf_pi */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrubf_pi(SLOT_WRAP(gen_helper_L2_ploadrubf_pi(RdV, RxV, cpu_env, PtV, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBOLDNOT(PtV)){ fPM_I(RxV,siV); fLOAD(1,1,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrubf_pi */
},
void HELPER(L2_ploadrubf_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrubf_pi); }
)
DEF_QEMU(L2_ploadrubtnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrubtnew_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadrubtnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrubtnew_io(SLOT_WRAP(gen_helper_L2_ploadrubtnew_io(RdV, cpu_env, PtN, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrubtnew_io */
},
int32_t HELPER(L2_ploadrubtnew_io)(CPUHexagonState *env, int32_t PtN, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrubtnew_io);
return RdV;
})
DEF_QEMU(L2_ploadrubfnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrubfnew_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadrubfnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrubfnew_io(SLOT_WRAP(gen_helper_L2_ploadrubfnew_io(RdV, cpu_env, PtN, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrubfnew_io */
},
int32_t HELPER(L2_ploadrubfnew_io)(CPUHexagonState *env, int32_t PtN, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrubfnew_io);
return RdV;
})
DEF_QEMU(L4_ploadrubt_rr,{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,1,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrubt_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrubt_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrubt_rr(SLOT_WRAP(gen_helper_L4_ploadrubt_rr(RdV, cpu_env, PvV, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,1,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrubt_rr */
},
int32_t HELPER(L4_ploadrubt_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,1,u,EA,RdV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrubt_rr);
return RdV;
})
DEF_QEMU(L4_ploadrubf_rr,{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrubf_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrubf_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrubf_rr(SLOT_WRAP(gen_helper_L4_ploadrubf_rr(RdV, cpu_env, PvV, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrubf_rr */
},
int32_t HELPER(L4_ploadrubf_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrubf_rr);
return RdV;
})
DEF_QEMU(L4_ploadrubtnew_rr,{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrubtnew_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrubtnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrubtnew_rr(SLOT_WRAP(gen_helper_L4_ploadrubtnew_rr(RdV, cpu_env, PvN, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrubtnew_rr */
},
int32_t HELPER(L4_ploadrubtnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrubtnew_rr);
return RdV;
})
DEF_QEMU(L4_ploadrubfnew_rr,{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrubfnew_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrubfnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrubfnew_rr(SLOT_WRAP(gen_helper_L4_ploadrubfnew_rr(RdV, cpu_env, PvN, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrubfnew_rr */
},
int32_t HELPER(L4_ploadrubfnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrubfnew_rr);
return RdV;
})
DEF_QEMU(L2_ploadrubtnew_pi,{fEA_REG(RxV); if(fLSBNEW(PtN)){ fPM_I(RxV,siV); fLOAD(1,1,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrubtnew_pi, void, env),
{
/* L2_ploadrubtnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrubtnew_pi(SLOT_WRAP(gen_helper_L2_ploadrubtnew_pi(RdV, RxV, cpu_env, PtN, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBNEW(PtN)){ fPM_I(RxV,siV); fLOAD(1,1,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrubtnew_pi */
},
void HELPER(L2_ploadrubtnew_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrubtnew_pi); }
)
DEF_QEMU(L2_ploadrubfnew_pi,{fEA_REG(RxV); if(fLSBNEWNOT(PtN)){ fPM_I(RxV,siV); fLOAD(1,1,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrubfnew_pi, void, env),
{
/* L2_ploadrubfnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrubfnew_pi(SLOT_WRAP(gen_helper_L2_ploadrubfnew_pi(RdV, RxV, cpu_env, PtN, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBNEWNOT(PtN)){ fPM_I(RxV,siV); fLOAD(1,1,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrubfnew_pi */
},
void HELPER(L2_ploadrubfnew_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrubfnew_pi); }
)
DEF_QEMU(L4_ploadrubt_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,1,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrubt_abs, s32, env, s32, s32, i32),
{
/* L4_ploadrubt_abs */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
fWRAP_L4_ploadrubt_abs(SLOT_WRAP(gen_helper_L4_ploadrubt_abs(RdV, cpu_env, PtV, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,1,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadrubt_abs */
},
int32_t HELPER(L4_ploadrubt_abs)(CPUHexagonState *env, int32_t PtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,1,u,EA,RdV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrubt_abs);
return RdV;
})
DEF_QEMU(L4_ploadrubf_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrubf_abs, s32, env, s32, s32, i32),
{
/* L4_ploadrubf_abs */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
fWRAP_L4_ploadrubf_abs(SLOT_WRAP(gen_helper_L4_ploadrubf_abs(RdV, cpu_env, PtV, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadrubf_abs */
},
int32_t HELPER(L4_ploadrubf_abs)(CPUHexagonState *env, int32_t PtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrubf_abs);
return RdV;
})
DEF_QEMU(L4_ploadrubtnew_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrubtnew_abs, s32, env, s32, s32, i32),
{
/* L4_ploadrubtnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
fWRAP_L4_ploadrubtnew_abs(SLOT_WRAP(gen_helper_L4_ploadrubtnew_abs(RdV, cpu_env, PtN, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadrubtnew_abs */
},
int32_t HELPER(L4_ploadrubtnew_abs)(CPUHexagonState *env, int32_t PtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrubtnew_abs);
return RdV;
})
DEF_QEMU(L4_ploadrubfnew_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrubfnew_abs, s32, env, s32, s32, i32),
{
/* L4_ploadrubfnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
fWRAP_L4_ploadrubfnew_abs(SLOT_WRAP(gen_helper_L4_ploadrubfnew_abs(RdV, cpu_env, PtN, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadrubfnew_abs */
},
int32_t HELPER(L4_ploadrubfnew_abs)(CPUHexagonState *env, int32_t PtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,1,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrubfnew_abs);
return RdV;
})
DEF_QEMU(L4_loadrb_rr,{fEA_RRs(RsV,RtV,uiV); fLOAD(1,1,s,EA,RdV);},
DEF_HELPER_4(L4_loadrb_rr, s32, env, s32, s32, s32),
{
/* L4_loadrb_rr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadrb_rr(gen_helper_L4_loadrb_rr(RdV, cpu_env, RsV, RtV, uiV);,
{fEA_RRs(RsV,RtV,uiV); fLOAD(1,1,s,EA,RdV);})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_loadrb_rr */
},
int32_t HELPER(L4_loadrb_rr)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); fLOAD(1,1,s,EA,RdV);}
COUNT_HELPER(L4_loadrb_rr);
return RdV;
})
DEF_QEMU(L2_ploadrbt_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,1,s,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrbt_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadrbt_io */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrbt_io(SLOT_WRAP(gen_helper_L2_ploadrbt_io(RdV, cpu_env, PtV, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,1,s,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrbt_io */
},
int32_t HELPER(L2_ploadrbt_io)(CPUHexagonState *env, int32_t PtV, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,1,s,EA,RdV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrbt_io);
return RdV;
})
DEF_QEMU(L2_ploadrbt_pi,{fEA_REG(RxV); if(fLSBOLD(PtV)){ fPM_I(RxV,siV); fLOAD(1,1,s,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrbt_pi, void, env),
{
/* L2_ploadrbt_pi */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrbt_pi(SLOT_WRAP(gen_helper_L2_ploadrbt_pi(RdV, RxV, cpu_env, PtV, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBOLD(PtV)){ fPM_I(RxV,siV); fLOAD(1,1,s,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrbt_pi */
},
void HELPER(L2_ploadrbt_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrbt_pi); }
)
DEF_QEMU(L2_ploadrbf_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrbf_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadrbf_io */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrbf_io(SLOT_WRAP(gen_helper_L2_ploadrbf_io(RdV, cpu_env, PtV, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrbf_io */
},
int32_t HELPER(L2_ploadrbf_io)(CPUHexagonState *env, int32_t PtV, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrbf_io);
return RdV;
})
DEF_QEMU(L2_ploadrbf_pi,{fEA_REG(RxV); if(fLSBOLDNOT(PtV)){ fPM_I(RxV,siV); fLOAD(1,1,s,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrbf_pi, void, env),
{
/* L2_ploadrbf_pi */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrbf_pi(SLOT_WRAP(gen_helper_L2_ploadrbf_pi(RdV, RxV, cpu_env, PtV, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBOLDNOT(PtV)){ fPM_I(RxV,siV); fLOAD(1,1,s,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrbf_pi */
},
void HELPER(L2_ploadrbf_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrbf_pi); }
)
DEF_QEMU(L2_ploadrbtnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrbtnew_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadrbtnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrbtnew_io(SLOT_WRAP(gen_helper_L2_ploadrbtnew_io(RdV, cpu_env, PtN, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrbtnew_io */
},
int32_t HELPER(L2_ploadrbtnew_io)(CPUHexagonState *env, int32_t PtN, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrbtnew_io);
return RdV;
})
DEF_QEMU(L2_ploadrbfnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrbfnew_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadrbfnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrbfnew_io(SLOT_WRAP(gen_helper_L2_ploadrbfnew_io(RdV, cpu_env, PtN, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrbfnew_io */
},
int32_t HELPER(L2_ploadrbfnew_io)(CPUHexagonState *env, int32_t PtN, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrbfnew_io);
return RdV;
})
DEF_QEMU(L4_ploadrbt_rr,{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,1,s,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrbt_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrbt_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrbt_rr(SLOT_WRAP(gen_helper_L4_ploadrbt_rr(RdV, cpu_env, PvV, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,1,s,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrbt_rr */
},
int32_t HELPER(L4_ploadrbt_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,1,s,EA,RdV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrbt_rr);
return RdV;
})
DEF_QEMU(L4_ploadrbf_rr,{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrbf_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrbf_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrbf_rr(SLOT_WRAP(gen_helper_L4_ploadrbf_rr(RdV, cpu_env, PvV, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrbf_rr */
},
int32_t HELPER(L4_ploadrbf_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrbf_rr);
return RdV;
})
DEF_QEMU(L4_ploadrbtnew_rr,{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrbtnew_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrbtnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrbtnew_rr(SLOT_WRAP(gen_helper_L4_ploadrbtnew_rr(RdV, cpu_env, PvN, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrbtnew_rr */
},
int32_t HELPER(L4_ploadrbtnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrbtnew_rr);
return RdV;
})
DEF_QEMU(L4_ploadrbfnew_rr,{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrbfnew_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrbfnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrbfnew_rr(SLOT_WRAP(gen_helper_L4_ploadrbfnew_rr(RdV, cpu_env, PvN, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrbfnew_rr */
},
int32_t HELPER(L4_ploadrbfnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrbfnew_rr);
return RdV;
})
DEF_QEMU(L2_ploadrbtnew_pi,{fEA_REG(RxV); if(fLSBNEW(PtN)){ fPM_I(RxV,siV); fLOAD(1,1,s,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrbtnew_pi, void, env),
{
/* L2_ploadrbtnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrbtnew_pi(SLOT_WRAP(gen_helper_L2_ploadrbtnew_pi(RdV, RxV, cpu_env, PtN, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBNEW(PtN)){ fPM_I(RxV,siV); fLOAD(1,1,s,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrbtnew_pi */
},
void HELPER(L2_ploadrbtnew_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrbtnew_pi); }
)
DEF_QEMU(L2_ploadrbfnew_pi,{fEA_REG(RxV); if(fLSBNEWNOT(PtN)){ fPM_I(RxV,siV); fLOAD(1,1,s,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrbfnew_pi, void, env),
{
/* L2_ploadrbfnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrbfnew_pi(SLOT_WRAP(gen_helper_L2_ploadrbfnew_pi(RdV, RxV, cpu_env, PtN, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBNEWNOT(PtN)){ fPM_I(RxV,siV); fLOAD(1,1,s,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrbfnew_pi */
},
void HELPER(L2_ploadrbfnew_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrbfnew_pi); }
)
DEF_QEMU(L4_ploadrbt_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,1,s,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrbt_abs, s32, env, s32, s32, i32),
{
/* L4_ploadrbt_abs */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
fWRAP_L4_ploadrbt_abs(SLOT_WRAP(gen_helper_L4_ploadrbt_abs(RdV, cpu_env, PtV, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,1,s,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadrbt_abs */
},
int32_t HELPER(L4_ploadrbt_abs)(CPUHexagonState *env, int32_t PtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,1,s,EA,RdV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrbt_abs);
return RdV;
})
DEF_QEMU(L4_ploadrbf_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrbf_abs, s32, env, s32, s32, i32),
{
/* L4_ploadrbf_abs */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
fWRAP_L4_ploadrbf_abs(SLOT_WRAP(gen_helper_L4_ploadrbf_abs(RdV, cpu_env, PtV, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadrbf_abs */
},
int32_t HELPER(L4_ploadrbf_abs)(CPUHexagonState *env, int32_t PtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrbf_abs);
return RdV;
})
DEF_QEMU(L4_ploadrbtnew_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrbtnew_abs, s32, env, s32, s32, i32),
{
/* L4_ploadrbtnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
fWRAP_L4_ploadrbtnew_abs(SLOT_WRAP(gen_helper_L4_ploadrbtnew_abs(RdV, cpu_env, PtN, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadrbtnew_abs */
},
int32_t HELPER(L4_ploadrbtnew_abs)(CPUHexagonState *env, int32_t PtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrbtnew_abs);
return RdV;
})
DEF_QEMU(L4_ploadrbfnew_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrbfnew_abs, s32, env, s32, s32, i32),
{
/* L4_ploadrbfnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
fWRAP_L4_ploadrbfnew_abs(SLOT_WRAP(gen_helper_L4_ploadrbfnew_abs(RdV, cpu_env, PtN, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadrbfnew_abs */
},
int32_t HELPER(L4_ploadrbfnew_abs)(CPUHexagonState *env, int32_t PtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,1,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrbfnew_abs);
return RdV;
})
DEF_QEMU(L4_loadruh_rr,{fEA_RRs(RsV,RtV,uiV); fLOAD(1,2,u,EA,RdV);},
DEF_HELPER_4(L4_loadruh_rr, s32, env, s32, s32, s32),
{
/* L4_loadruh_rr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadruh_rr(gen_helper_L4_loadruh_rr(RdV, cpu_env, RsV, RtV, uiV);,
{fEA_RRs(RsV,RtV,uiV); fLOAD(1,2,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_loadruh_rr */
},
int32_t HELPER(L4_loadruh_rr)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); fLOAD(1,2,u,EA,RdV);}
COUNT_HELPER(L4_loadruh_rr);
return RdV;
})
DEF_QEMU(L2_ploadruht_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,2,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadruht_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadruht_io */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadruht_io(SLOT_WRAP(gen_helper_L2_ploadruht_io(RdV, cpu_env, PtV, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,2,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadruht_io */
},
int32_t HELPER(L2_ploadruht_io)(CPUHexagonState *env, int32_t PtV, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,2,u,EA,RdV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadruht_io);
return RdV;
})
DEF_QEMU(L2_ploadruht_pi,{fEA_REG(RxV); if(fLSBOLD(PtV)){ fPM_I(RxV,siV); fLOAD(1,2,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadruht_pi, void, env),
{
/* L2_ploadruht_pi */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadruht_pi(SLOT_WRAP(gen_helper_L2_ploadruht_pi(RdV, RxV, cpu_env, PtV, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBOLD(PtV)){ fPM_I(RxV,siV); fLOAD(1,2,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadruht_pi */
},
void HELPER(L2_ploadruht_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadruht_pi); }
)
DEF_QEMU(L2_ploadruhf_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadruhf_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadruhf_io */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadruhf_io(SLOT_WRAP(gen_helper_L2_ploadruhf_io(RdV, cpu_env, PtV, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadruhf_io */
},
int32_t HELPER(L2_ploadruhf_io)(CPUHexagonState *env, int32_t PtV, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadruhf_io);
return RdV;
})
DEF_QEMU(L2_ploadruhf_pi,{fEA_REG(RxV); if(fLSBOLDNOT(PtV)){ fPM_I(RxV,siV); fLOAD(1,2,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadruhf_pi, void, env),
{
/* L2_ploadruhf_pi */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadruhf_pi(SLOT_WRAP(gen_helper_L2_ploadruhf_pi(RdV, RxV, cpu_env, PtV, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBOLDNOT(PtV)){ fPM_I(RxV,siV); fLOAD(1,2,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadruhf_pi */
},
void HELPER(L2_ploadruhf_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadruhf_pi); }
)
DEF_QEMU(L2_ploadruhtnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadruhtnew_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadruhtnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadruhtnew_io(SLOT_WRAP(gen_helper_L2_ploadruhtnew_io(RdV, cpu_env, PtN, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadruhtnew_io */
},
int32_t HELPER(L2_ploadruhtnew_io)(CPUHexagonState *env, int32_t PtN, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadruhtnew_io);
return RdV;
})
DEF_QEMU(L2_ploadruhfnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadruhfnew_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadruhfnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadruhfnew_io(SLOT_WRAP(gen_helper_L2_ploadruhfnew_io(RdV, cpu_env, PtN, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadruhfnew_io */
},
int32_t HELPER(L2_ploadruhfnew_io)(CPUHexagonState *env, int32_t PtN, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadruhfnew_io);
return RdV;
})
DEF_QEMU(L4_ploadruht_rr,{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,2,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadruht_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadruht_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadruht_rr(SLOT_WRAP(gen_helper_L4_ploadruht_rr(RdV, cpu_env, PvV, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,2,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadruht_rr */
},
int32_t HELPER(L4_ploadruht_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,2,u,EA,RdV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadruht_rr);
return RdV;
})
DEF_QEMU(L4_ploadruhf_rr,{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadruhf_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadruhf_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadruhf_rr(SLOT_WRAP(gen_helper_L4_ploadruhf_rr(RdV, cpu_env, PvV, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadruhf_rr */
},
int32_t HELPER(L4_ploadruhf_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadruhf_rr);
return RdV;
})
DEF_QEMU(L4_ploadruhtnew_rr,{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadruhtnew_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadruhtnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadruhtnew_rr(SLOT_WRAP(gen_helper_L4_ploadruhtnew_rr(RdV, cpu_env, PvN, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadruhtnew_rr */
},
int32_t HELPER(L4_ploadruhtnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadruhtnew_rr);
return RdV;
})
DEF_QEMU(L4_ploadruhfnew_rr,{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadruhfnew_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadruhfnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadruhfnew_rr(SLOT_WRAP(gen_helper_L4_ploadruhfnew_rr(RdV, cpu_env, PvN, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadruhfnew_rr */
},
int32_t HELPER(L4_ploadruhfnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadruhfnew_rr);
return RdV;
})
DEF_QEMU(L2_ploadruhtnew_pi,{fEA_REG(RxV); if(fLSBNEW(PtN)){ fPM_I(RxV,siV); fLOAD(1,2,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadruhtnew_pi, void, env),
{
/* L2_ploadruhtnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadruhtnew_pi(SLOT_WRAP(gen_helper_L2_ploadruhtnew_pi(RdV, RxV, cpu_env, PtN, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBNEW(PtN)){ fPM_I(RxV,siV); fLOAD(1,2,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadruhtnew_pi */
},
void HELPER(L2_ploadruhtnew_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadruhtnew_pi); }
)
DEF_QEMU(L2_ploadruhfnew_pi,{fEA_REG(RxV); if(fLSBNEWNOT(PtN)){ fPM_I(RxV,siV); fLOAD(1,2,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadruhfnew_pi, void, env),
{
/* L2_ploadruhfnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadruhfnew_pi(SLOT_WRAP(gen_helper_L2_ploadruhfnew_pi(RdV, RxV, cpu_env, PtN, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBNEWNOT(PtN)){ fPM_I(RxV,siV); fLOAD(1,2,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadruhfnew_pi */
},
void HELPER(L2_ploadruhfnew_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadruhfnew_pi); }
)
DEF_QEMU(L4_ploadruht_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,2,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadruht_abs, s32, env, s32, s32, i32),
{
/* L4_ploadruht_abs */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
fWRAP_L4_ploadruht_abs(SLOT_WRAP(gen_helper_L4_ploadruht_abs(RdV, cpu_env, PtV, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,2,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadruht_abs */
},
int32_t HELPER(L4_ploadruht_abs)(CPUHexagonState *env, int32_t PtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,2,u,EA,RdV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadruht_abs);
return RdV;
})
DEF_QEMU(L4_ploadruhf_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadruhf_abs, s32, env, s32, s32, i32),
{
/* L4_ploadruhf_abs */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
fWRAP_L4_ploadruhf_abs(SLOT_WRAP(gen_helper_L4_ploadruhf_abs(RdV, cpu_env, PtV, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadruhf_abs */
},
int32_t HELPER(L4_ploadruhf_abs)(CPUHexagonState *env, int32_t PtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadruhf_abs);
return RdV;
})
DEF_QEMU(L4_ploadruhtnew_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadruhtnew_abs, s32, env, s32, s32, i32),
{
/* L4_ploadruhtnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
fWRAP_L4_ploadruhtnew_abs(SLOT_WRAP(gen_helper_L4_ploadruhtnew_abs(RdV, cpu_env, PtN, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadruhtnew_abs */
},
int32_t HELPER(L4_ploadruhtnew_abs)(CPUHexagonState *env, int32_t PtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadruhtnew_abs);
return RdV;
})
DEF_QEMU(L4_ploadruhfnew_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadruhfnew_abs, s32, env, s32, s32, i32),
{
/* L4_ploadruhfnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
fWRAP_L4_ploadruhfnew_abs(SLOT_WRAP(gen_helper_L4_ploadruhfnew_abs(RdV, cpu_env, PtN, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadruhfnew_abs */
},
int32_t HELPER(L4_ploadruhfnew_abs)(CPUHexagonState *env, int32_t PtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,2,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadruhfnew_abs);
return RdV;
})
DEF_QEMU(L4_loadrh_rr,{fEA_RRs(RsV,RtV,uiV); fLOAD(1,2,s,EA,RdV);},
DEF_HELPER_4(L4_loadrh_rr, s32, env, s32, s32, s32),
{
/* L4_loadrh_rr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadrh_rr(gen_helper_L4_loadrh_rr(RdV, cpu_env, RsV, RtV, uiV);,
{fEA_RRs(RsV,RtV,uiV); fLOAD(1,2,s,EA,RdV);})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_loadrh_rr */
},
int32_t HELPER(L4_loadrh_rr)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); fLOAD(1,2,s,EA,RdV);}
COUNT_HELPER(L4_loadrh_rr);
return RdV;
})
DEF_QEMU(L2_ploadrht_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,2,s,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrht_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadrht_io */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrht_io(SLOT_WRAP(gen_helper_L2_ploadrht_io(RdV, cpu_env, PtV, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,2,s,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrht_io */
},
int32_t HELPER(L2_ploadrht_io)(CPUHexagonState *env, int32_t PtV, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,2,s,EA,RdV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrht_io);
return RdV;
})
DEF_QEMU(L2_ploadrht_pi,{fEA_REG(RxV); if(fLSBOLD(PtV)){ fPM_I(RxV,siV); fLOAD(1,2,s,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrht_pi, void, env),
{
/* L2_ploadrht_pi */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrht_pi(SLOT_WRAP(gen_helper_L2_ploadrht_pi(RdV, RxV, cpu_env, PtV, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBOLD(PtV)){ fPM_I(RxV,siV); fLOAD(1,2,s,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrht_pi */
},
void HELPER(L2_ploadrht_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrht_pi); }
)
DEF_QEMU(L2_ploadrhf_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrhf_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadrhf_io */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrhf_io(SLOT_WRAP(gen_helper_L2_ploadrhf_io(RdV, cpu_env, PtV, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrhf_io */
},
int32_t HELPER(L2_ploadrhf_io)(CPUHexagonState *env, int32_t PtV, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrhf_io);
return RdV;
})
DEF_QEMU(L2_ploadrhf_pi,{fEA_REG(RxV); if(fLSBOLDNOT(PtV)){ fPM_I(RxV,siV); fLOAD(1,2,s,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrhf_pi, void, env),
{
/* L2_ploadrhf_pi */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrhf_pi(SLOT_WRAP(gen_helper_L2_ploadrhf_pi(RdV, RxV, cpu_env, PtV, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBOLDNOT(PtV)){ fPM_I(RxV,siV); fLOAD(1,2,s,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrhf_pi */
},
void HELPER(L2_ploadrhf_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrhf_pi); }
)
DEF_QEMU(L2_ploadrhtnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrhtnew_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadrhtnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrhtnew_io(SLOT_WRAP(gen_helper_L2_ploadrhtnew_io(RdV, cpu_env, PtN, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrhtnew_io */
},
int32_t HELPER(L2_ploadrhtnew_io)(CPUHexagonState *env, int32_t PtN, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrhtnew_io);
return RdV;
})
DEF_QEMU(L2_ploadrhfnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrhfnew_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadrhfnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrhfnew_io(SLOT_WRAP(gen_helper_L2_ploadrhfnew_io(RdV, cpu_env, PtN, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrhfnew_io */
},
int32_t HELPER(L2_ploadrhfnew_io)(CPUHexagonState *env, int32_t PtN, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrhfnew_io);
return RdV;
})
DEF_QEMU(L4_ploadrht_rr,{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,2,s,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrht_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrht_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrht_rr(SLOT_WRAP(gen_helper_L4_ploadrht_rr(RdV, cpu_env, PvV, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,2,s,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrht_rr */
},
int32_t HELPER(L4_ploadrht_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,2,s,EA,RdV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrht_rr);
return RdV;
})
DEF_QEMU(L4_ploadrhf_rr,{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrhf_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrhf_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrhf_rr(SLOT_WRAP(gen_helper_L4_ploadrhf_rr(RdV, cpu_env, PvV, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrhf_rr */
},
int32_t HELPER(L4_ploadrhf_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrhf_rr);
return RdV;
})
DEF_QEMU(L4_ploadrhtnew_rr,{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrhtnew_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrhtnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrhtnew_rr(SLOT_WRAP(gen_helper_L4_ploadrhtnew_rr(RdV, cpu_env, PvN, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrhtnew_rr */
},
int32_t HELPER(L4_ploadrhtnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrhtnew_rr);
return RdV;
})
DEF_QEMU(L4_ploadrhfnew_rr,{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrhfnew_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrhfnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrhfnew_rr(SLOT_WRAP(gen_helper_L4_ploadrhfnew_rr(RdV, cpu_env, PvN, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrhfnew_rr */
},
int32_t HELPER(L4_ploadrhfnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrhfnew_rr);
return RdV;
})
DEF_QEMU(L2_ploadrhtnew_pi,{fEA_REG(RxV); if(fLSBNEW(PtN)){ fPM_I(RxV,siV); fLOAD(1,2,s,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrhtnew_pi, void, env),
{
/* L2_ploadrhtnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrhtnew_pi(SLOT_WRAP(gen_helper_L2_ploadrhtnew_pi(RdV, RxV, cpu_env, PtN, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBNEW(PtN)){ fPM_I(RxV,siV); fLOAD(1,2,s,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrhtnew_pi */
},
void HELPER(L2_ploadrhtnew_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrhtnew_pi); }
)
DEF_QEMU(L2_ploadrhfnew_pi,{fEA_REG(RxV); if(fLSBNEWNOT(PtN)){ fPM_I(RxV,siV); fLOAD(1,2,s,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrhfnew_pi, void, env),
{
/* L2_ploadrhfnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrhfnew_pi(SLOT_WRAP(gen_helper_L2_ploadrhfnew_pi(RdV, RxV, cpu_env, PtN, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBNEWNOT(PtN)){ fPM_I(RxV,siV); fLOAD(1,2,s,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrhfnew_pi */
},
void HELPER(L2_ploadrhfnew_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrhfnew_pi); }
)
DEF_QEMU(L4_ploadrht_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,2,s,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrht_abs, s32, env, s32, s32, i32),
{
/* L4_ploadrht_abs */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
fWRAP_L4_ploadrht_abs(SLOT_WRAP(gen_helper_L4_ploadrht_abs(RdV, cpu_env, PtV, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,2,s,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadrht_abs */
},
int32_t HELPER(L4_ploadrht_abs)(CPUHexagonState *env, int32_t PtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,2,s,EA,RdV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrht_abs);
return RdV;
})
DEF_QEMU(L4_ploadrhf_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrhf_abs, s32, env, s32, s32, i32),
{
/* L4_ploadrhf_abs */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
fWRAP_L4_ploadrhf_abs(SLOT_WRAP(gen_helper_L4_ploadrhf_abs(RdV, cpu_env, PtV, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadrhf_abs */
},
int32_t HELPER(L4_ploadrhf_abs)(CPUHexagonState *env, int32_t PtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrhf_abs);
return RdV;
})
DEF_QEMU(L4_ploadrhtnew_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrhtnew_abs, s32, env, s32, s32, i32),
{
/* L4_ploadrhtnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
fWRAP_L4_ploadrhtnew_abs(SLOT_WRAP(gen_helper_L4_ploadrhtnew_abs(RdV, cpu_env, PtN, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadrhtnew_abs */
},
int32_t HELPER(L4_ploadrhtnew_abs)(CPUHexagonState *env, int32_t PtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrhtnew_abs);
return RdV;
})
DEF_QEMU(L4_ploadrhfnew_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrhfnew_abs, s32, env, s32, s32, i32),
{
/* L4_ploadrhfnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
fWRAP_L4_ploadrhfnew_abs(SLOT_WRAP(gen_helper_L4_ploadrhfnew_abs(RdV, cpu_env, PtN, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadrhfnew_abs */
},
int32_t HELPER(L4_ploadrhfnew_abs)(CPUHexagonState *env, int32_t PtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,2,s,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrhfnew_abs);
return RdV;
})
DEF_QEMU(L4_loadri_rr,{fEA_RRs(RsV,RtV,uiV); fLOAD(1,4,u,EA,RdV);},
DEF_HELPER_4(L4_loadri_rr, s32, env, s32, s32, s32),
{
/* L4_loadri_rr */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadri_rr(gen_helper_L4_loadri_rr(RdV, cpu_env, RsV, RtV, uiV);,
{fEA_RRs(RsV,RtV,uiV); fLOAD(1,4,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_loadri_rr */
},
int32_t HELPER(L4_loadri_rr)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); fLOAD(1,4,u,EA,RdV);}
COUNT_HELPER(L4_loadri_rr);
return RdV;
})
DEF_QEMU(L2_ploadrit_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,4,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrit_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadrit_io */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrit_io(SLOT_WRAP(gen_helper_L2_ploadrit_io(RdV, cpu_env, PtV, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,4,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrit_io */
},
int32_t HELPER(L2_ploadrit_io)(CPUHexagonState *env, int32_t PtV, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,4,u,EA,RdV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrit_io);
return RdV;
})
DEF_QEMU(L2_ploadrit_pi,{fEA_REG(RxV); if(fLSBOLD(PtV)){ fPM_I(RxV,siV); fLOAD(1,4,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrit_pi, void, env),
{
/* L2_ploadrit_pi */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrit_pi(SLOT_WRAP(gen_helper_L2_ploadrit_pi(RdV, RxV, cpu_env, PtV, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBOLD(PtV)){ fPM_I(RxV,siV); fLOAD(1,4,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrit_pi */
},
void HELPER(L2_ploadrit_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrit_pi); }
)
DEF_QEMU(L2_ploadrif_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrif_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadrif_io */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrif_io(SLOT_WRAP(gen_helper_L2_ploadrif_io(RdV, cpu_env, PtV, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrif_io */
},
int32_t HELPER(L2_ploadrif_io)(CPUHexagonState *env, int32_t PtV, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrif_io);
return RdV;
})
DEF_QEMU(L2_ploadrif_pi,{fEA_REG(RxV); if(fLSBOLDNOT(PtV)){ fPM_I(RxV,siV); fLOAD(1,4,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrif_pi, void, env),
{
/* L2_ploadrif_pi */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrif_pi(SLOT_WRAP(gen_helper_L2_ploadrif_pi(RdV, RxV, cpu_env, PtV, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBOLDNOT(PtV)){ fPM_I(RxV,siV); fLOAD(1,4,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrif_pi */
},
void HELPER(L2_ploadrif_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrif_pi); }
)
DEF_QEMU(L2_ploadritnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadritnew_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadritnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadritnew_io(SLOT_WRAP(gen_helper_L2_ploadritnew_io(RdV, cpu_env, PtN, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadritnew_io */
},
int32_t HELPER(L2_ploadritnew_io)(CPUHexagonState *env, int32_t PtN, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadritnew_io);
return RdV;
})
DEF_QEMU(L2_ploadrifnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrifnew_io, s32, env, s32, s32, s32, i32),
{
/* L2_ploadrifnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrifnew_io(SLOT_WRAP(gen_helper_L2_ploadrifnew_io(RdV, cpu_env, PtN, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrifnew_io */
},
int32_t HELPER(L2_ploadrifnew_io)(CPUHexagonState *env, int32_t PtN, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrifnew_io);
return RdV;
})
DEF_QEMU(L4_ploadrit_rr,{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,4,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrit_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrit_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrit_rr(SLOT_WRAP(gen_helper_L4_ploadrit_rr(RdV, cpu_env, PvV, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,4,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrit_rr */
},
int32_t HELPER(L4_ploadrit_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,4,u,EA,RdV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrit_rr);
return RdV;
})
DEF_QEMU(L4_ploadrif_rr,{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrif_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrif_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrif_rr(SLOT_WRAP(gen_helper_L4_ploadrif_rr(RdV, cpu_env, PvV, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrif_rr */
},
int32_t HELPER(L4_ploadrif_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrif_rr);
return RdV;
})
DEF_QEMU(L4_ploadritnew_rr,{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadritnew_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadritnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadritnew_rr(SLOT_WRAP(gen_helper_L4_ploadritnew_rr(RdV, cpu_env, PvN, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadritnew_rr */
},
int32_t HELPER(L4_ploadritnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadritnew_rr);
return RdV;
})
DEF_QEMU(L4_ploadrifnew_rr,{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrifnew_rr, s32, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrifnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrifnew_rr(SLOT_WRAP(gen_helper_L4_ploadrifnew_rr(RdV, cpu_env, PvN, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrifnew_rr */
},
int32_t HELPER(L4_ploadrifnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrifnew_rr);
return RdV;
})
DEF_QEMU(L2_ploadritnew_pi,{fEA_REG(RxV); if(fLSBNEW(PtN)){ fPM_I(RxV,siV); fLOAD(1,4,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadritnew_pi, void, env),
{
/* L2_ploadritnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadritnew_pi(SLOT_WRAP(gen_helper_L2_ploadritnew_pi(RdV, RxV, cpu_env, PtN, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBNEW(PtN)){ fPM_I(RxV,siV); fLOAD(1,4,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadritnew_pi */
},
void HELPER(L2_ploadritnew_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadritnew_pi); }
)
DEF_QEMU(L2_ploadrifnew_pi,{fEA_REG(RxV); if(fLSBNEWNOT(PtN)){ fPM_I(RxV,siV); fLOAD(1,4,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrifnew_pi, void, env),
{
/* L2_ploadrifnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrifnew_pi(SLOT_WRAP(gen_helper_L2_ploadrifnew_pi(RdV, RxV, cpu_env, PtN, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBNEWNOT(PtN)){ fPM_I(RxV,siV); fLOAD(1,4,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrifnew_pi */
},
void HELPER(L2_ploadrifnew_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrifnew_pi); }
)
DEF_QEMU(L4_ploadrit_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,4,u,EA,RdV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrit_abs, s32, env, s32, s32, i32),
{
/* L4_ploadrit_abs */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
fWRAP_L4_ploadrit_abs(SLOT_WRAP(gen_helper_L4_ploadrit_abs(RdV, cpu_env, PtV, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,4,u,EA,RdV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadrit_abs */
},
int32_t HELPER(L4_ploadrit_abs)(CPUHexagonState *env, int32_t PtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,4,u,EA,RdV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrit_abs);
return RdV;
})
DEF_QEMU(L4_ploadrif_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrif_abs, s32, env, s32, s32, i32),
{
/* L4_ploadrif_abs */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
fWRAP_L4_ploadrif_abs(SLOT_WRAP(gen_helper_L4_ploadrif_abs(RdV, cpu_env, PtV, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadrif_abs */
},
int32_t HELPER(L4_ploadrif_abs)(CPUHexagonState *env, int32_t PtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrif_abs);
return RdV;
})
DEF_QEMU(L4_ploadritnew_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadritnew_abs, s32, env, s32, s32, i32),
{
/* L4_ploadritnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
fWRAP_L4_ploadritnew_abs(SLOT_WRAP(gen_helper_L4_ploadritnew_abs(RdV, cpu_env, PtN, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadritnew_abs */
},
int32_t HELPER(L4_ploadritnew_abs)(CPUHexagonState *env, int32_t PtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadritnew_abs);
return RdV;
})
DEF_QEMU(L4_ploadrifnew_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrifnew_abs, s32, env, s32, s32, i32),
{
/* L4_ploadrifnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
fWRAP_L4_ploadrifnew_abs(SLOT_WRAP(gen_helper_L4_ploadrifnew_abs(RdV, cpu_env, PtN, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L4_ploadrifnew_abs */
},
int32_t HELPER(L4_ploadrifnew_abs)(CPUHexagonState *env, int32_t PtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int32_t RdV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,4,u,EA,RdV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrifnew_abs);
return RdV;
})
DEF_QEMU(L4_loadrd_rr,{fEA_RRs(RsV,RtV,uiV); fLOAD(1,8,u,EA,RddV);},
DEF_HELPER_4(L4_loadrd_rr, s64, env, s32, s32, s32),
{
/* L4_loadrd_rr */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_loadrd_rr(gen_helper_L4_loadrd_rr(RddV, cpu_env, RsV, RtV, uiV);,
{fEA_RRs(RsV,RtV,uiV); fLOAD(1,8,u,EA,RddV);})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_loadrd_rr */
},
int64_t HELPER(L4_loadrd_rr)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int64_t RddV = 0;
{fEA_RRs(RsV,RtV,uiV); fLOAD(1,8,u,EA,RddV);}
COUNT_HELPER(L4_loadrd_rr);
return RddV;
})
DEF_QEMU(L2_ploadrdt_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,8,u,EA,RddV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrdt_io, s64, env, s32, s32, s32, i32),
{
/* L2_ploadrdt_io */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrdt_io(SLOT_WRAP(gen_helper_L2_ploadrdt_io(RddV, cpu_env, PtV, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,8,u,EA,RddV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrdt_io */
},
int64_t HELPER(L2_ploadrdt_io)(CPUHexagonState *env, int32_t PtV, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLD(PtV)){fLOAD(1,8,u,EA,RddV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrdt_io);
return RddV;
})
DEF_QEMU(L2_ploadrdt_pi,{fEA_REG(RxV); if(fLSBOLD(PtV)){ fPM_I(RxV,siV); fLOAD(1,8,u,EA,RddV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrdt_pi, void, env),
{
/* L2_ploadrdt_pi */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrdt_pi(SLOT_WRAP(gen_helper_L2_ploadrdt_pi(RddV, RxV, cpu_env, PtV, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBOLD(PtV)){ fPM_I(RxV,siV); fLOAD(1,8,u,EA,RddV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrdt_pi */
},
void HELPER(L2_ploadrdt_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrdt_pi); }
)
DEF_QEMU(L2_ploadrdf_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrdf_io, s64, env, s32, s32, s32, i32),
{
/* L2_ploadrdf_io */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrdf_io(SLOT_WRAP(gen_helper_L2_ploadrdf_io(RddV, cpu_env, PtV, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrdf_io */
},
int64_t HELPER(L2_ploadrdf_io)(CPUHexagonState *env, int32_t PtV, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrdf_io);
return RddV;
})
DEF_QEMU(L2_ploadrdf_pi,{fEA_REG(RxV); if(fLSBOLDNOT(PtV)){ fPM_I(RxV,siV); fLOAD(1,8,u,EA,RddV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrdf_pi, void, env),
{
/* L2_ploadrdf_pi */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_t(PtV, PtN);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrdf_pi(SLOT_WRAP(gen_helper_L2_ploadrdf_pi(RddV, RxV, cpu_env, PtV, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBOLDNOT(PtV)){ fPM_I(RxV,siV); fLOAD(1,8,u,EA,RddV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrdf_pi */
},
void HELPER(L2_ploadrdf_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrdf_pi); }
)
DEF_QEMU(L2_ploadrdtnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrdtnew_io, s64, env, s32, s32, s32, i32),
{
/* L2_ploadrdtnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrdtnew_io(SLOT_WRAP(gen_helper_L2_ploadrdtnew_io(RddV, cpu_env, PtN, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrdtnew_io */
},
int64_t HELPER(L2_ploadrdtnew_io)(CPUHexagonState *env, int32_t PtN, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEW(PtN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrdtnew_io);
return RddV;
})
DEF_QEMU(L2_ploadrdfnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_5(L2_ploadrdfnew_io, s64, env, s32, s32, s32, i32),
{
/* L2_ploadrdfnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_s(RsV, RsN);
fWRAP_L2_ploadrdfnew_io(SLOT_WRAP(gen_helper_L2_ploadrdfnew_io(RddV, cpu_env, PtN, RsV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* L2_ploadrdfnew_io */
},
int64_t HELPER(L2_ploadrdfnew_io)(CPUHexagonState *env, int32_t PtN, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PtN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L2_ploadrdfnew_io);
return RddV;
})
DEF_QEMU(L4_ploadrdt_rr,{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,8,u,EA,RddV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrdt_rr, s64, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrdt_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrdt_rr(SLOT_WRAP(gen_helper_L4_ploadrdt_rr(RddV, cpu_env, PvV, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,8,u,EA,RddV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrdt_rr */
},
int64_t HELPER(L4_ploadrdt_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLD(PvV)){ fLOAD(1,8,u,EA,RddV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrdt_rr);
return RddV;
})
DEF_QEMU(L4_ploadrdf_rr,{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrdf_rr, s64, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrdf_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrdf_rr(SLOT_WRAP(gen_helper_L4_ploadrdf_rr(RddV, cpu_env, PvV, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrdf_rr */
},
int64_t HELPER(L4_ploadrdf_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{fEA_RRs(RsV,RtV,uiV); if(fLSBOLDNOT(PvV)){ fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrdf_rr);
return RddV;
})
DEF_QEMU(L4_ploadrdtnew_rr,{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrdtnew_rr, s64, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrdtnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrdtnew_rr(SLOT_WRAP(gen_helper_L4_ploadrdtnew_rr(RddV, cpu_env, PvN, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrdtnew_rr */
},
int64_t HELPER(L4_ploadrdtnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEW(PvN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrdtnew_rr);
return RddV;
})
DEF_QEMU(L4_ploadrdfnew_rr,{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_6(L4_ploadrdfnew_rr, s64, env, s32, s32, s32, s32, i32),
{
/* L4_ploadrdfnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_ploadrdfnew_rr(SLOT_WRAP(gen_helper_L4_ploadrdfnew_rr(RddV, cpu_env, PvN, RsV, RtV, uiV, slot));,
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_ploadrdfnew_rr */
},
int64_t HELPER(L4_ploadrdfnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{fEA_RRs(RsV,RtV,uiV); if (fLSBNEWNOT(PvN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrdfnew_rr);
return RddV;
})
DEF_QEMU(L2_ploadrdtnew_pi,{fEA_REG(RxV); if(fLSBNEW(PtN)){ fPM_I(RxV,siV); fLOAD(1,8,u,EA,RddV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrdtnew_pi, void, env),
{
/* L2_ploadrdtnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrdtnew_pi(SLOT_WRAP(gen_helper_L2_ploadrdtnew_pi(RddV, RxV, cpu_env, PtN, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBNEW(PtN)){ fPM_I(RxV,siV); fLOAD(1,8,u,EA,RddV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrdtnew_pi */
},
void HELPER(L2_ploadrdtnew_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrdtnew_pi); }
)
DEF_QEMU(L2_ploadrdfnew_pi,{fEA_REG(RxV); if(fLSBNEWNOT(PtN)){ fPM_I(RxV,siV); fLOAD(1,8,u,EA,RddV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_1(L2_ploadrdfnew_pi, void, env),
{
/* L2_ploadrdfnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PtN, PtX);
READ_RREG_x(RxV, RxN);
fWRAP_L2_ploadrdfnew_pi(SLOT_WRAP(gen_helper_L2_ploadrdfnew_pi(RddV, RxV, cpu_env, PtN, RxV, siV, slot));,
{fEA_REG(RxV); if(fLSBNEWNOT(PtN)){ fPM_I(RxV,siV); fLOAD(1,8,u,EA,RddV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG_PAIR(RddN,RddV);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_PAIR(RddV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* L2_ploadrdfnew_pi */
},
void HELPER(L2_ploadrdfnew_pi)(CPUHexagonState *env) { BOGUS_HELPER(L2_ploadrdfnew_pi); }
)
DEF_QEMU(L4_ploadrdt_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,8,u,EA,RddV);} else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrdt_abs, s64, env, s32, s32, i32),
{
/* L4_ploadrdt_abs */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
fWRAP_L4_ploadrdt_abs(SLOT_WRAP(gen_helper_L4_ploadrdt_abs(RddV, cpu_env, PtV, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,8,u,EA,RddV);} else {LOAD_CANCEL(EA);}})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_PAIR(RddV);
FREE_IMM(uiV);
/* L4_ploadrdt_abs */
},
int64_t HELPER(L4_ploadrdt_abs)(CPUHexagonState *env, int32_t PtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLD(PtV)){ fLOAD(1,8,u,EA,RddV);} else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrdt_abs);
return RddV;
})
DEF_QEMU(L4_ploadrdf_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrdf_abs, s64, env, s32, s32, i32),
{
/* L4_ploadrdf_abs */
DECL_EA;
DECL_PREG_t(TCGv, PtV, PtN, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_t(PtV, PtN);
fWRAP_L4_ploadrdf_abs(SLOT_WRAP(gen_helper_L4_ploadrdf_abs(RddV, cpu_env, PtV, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_t(PtV);
FREE_REG_PAIR(RddV);
FREE_IMM(uiV);
/* L4_ploadrdf_abs */
},
int64_t HELPER(L4_ploadrdf_abs)(CPUHexagonState *env, int32_t PtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if(fLSBOLDNOT(PtV)){ fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrdf_abs);
return RddV;
})
DEF_QEMU(L4_ploadrdtnew_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrdtnew_abs, s64, env, s32, s32, i32),
{
/* L4_ploadrdtnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
fWRAP_L4_ploadrdtnew_abs(SLOT_WRAP(gen_helper_L4_ploadrdtnew_abs(RddV, cpu_env, PtN, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_PAIR(RddV);
FREE_IMM(uiV);
/* L4_ploadrdtnew_abs */
},
int64_t HELPER(L4_ploadrdtnew_abs)(CPUHexagonState *env, int32_t PtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEW(PtN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrdtnew_abs);
return RddV;
})
DEF_QEMU(L4_ploadrdfnew_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}},
DEF_HELPER_4(L4_ploadrdfnew_abs, s64, env, s32, s32, i32),
{
/* L4_ploadrdfnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PtN, PtX, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PtN, PtX);
fWRAP_L4_ploadrdfnew_abs(SLOT_WRAP(gen_helper_L4_ploadrdfnew_abs(RddV, cpu_env, PtN, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_NEW_PREG(PtN);
FREE_REG_PAIR(RddV);
FREE_IMM(uiV);
/* L4_ploadrdfnew_abs */
},
int64_t HELPER(L4_ploadrdfnew_abs)(CPUHexagonState *env, int32_t PtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
int64_t RddV = 0;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV);if (fLSBNEWNOT(PtN)) { fLOAD(1,8,u,EA,RddV); } else {LOAD_CANCEL(EA);}}
COUNT_HELPER(L4_ploadrdfnew_abs);
return RddV;
})
DEF_QEMU(S4_storerb_rr,{fEA_RRs(RsV,RuV,uiV); fSTORE(1,1,EA,fGETBYTE(0,RtV));},
DEF_HELPER_6(S4_storerb_rr, void, env, s32, s32, s32, s32, i32),
{
/* S4_storerb_rr */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_u(TCGv, RuV, RuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_storerb_rr(SLOT_WRAP(gen_helper_S4_storerb_rr(cpu_env, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); fSTORE(1,1,EA,fGETBYTE(0,RtV));})
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_storerb_rr */
},
void HELPER(S4_storerb_rr)(CPUHexagonState *env, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); fSTORE(1,1,EA,fGETBYTE(0,RtV));}
COUNT_HELPER(S4_storerb_rr);
})
DEF_QEMU(S2_pstorerbt_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerbt_io, void, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerbt_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerbt_io(SLOT_WRAP(gen_helper_S2_pstorerbt_io(cpu_env, PvV, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S2_pstorerbt_io */
},
void HELPER(S2_pstorerbt_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerbt_io);
})
DEF_QEMU(S2_pstorerbt_pi,{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerbt_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerbt_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerbt_pi(SLOT_WRAP(gen_helper_S2_pstorerbt_pi(RxV, cpu_env, PvV, RxV, RtV, siV, slot));,
{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_pstorerbt_pi */
},
int32_t HELPER(S2_pstorerbt_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerbt_pi);
return RxV;
})
DEF_QEMU(S2_pstorerbf_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerbf_io, void, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerbf_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerbf_io(SLOT_WRAP(gen_helper_S2_pstorerbf_io(cpu_env, PvV, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S2_pstorerbf_io */
},
void HELPER(S2_pstorerbf_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerbf_io);
})
DEF_QEMU(S2_pstorerbf_pi,{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerbf_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerbf_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerbf_pi(SLOT_WRAP(gen_helper_S2_pstorerbf_pi(RxV, cpu_env, PvV, RxV, RtV, siV, slot));,
{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_pstorerbf_pi */
},
int32_t HELPER(S2_pstorerbf_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerbf_pi);
return RxV;
})
DEF_QEMU(S4_pstorerbt_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerbt_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerbt_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerbt_rr(SLOT_WRAP(gen_helper_S4_pstorerbt_rr(cpu_env, PvV, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerbt_rr */
},
void HELPER(S4_pstorerbt_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbt_rr);
})
DEF_QEMU(S4_pstorerbf_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerbf_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerbf_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerbf_rr(SLOT_WRAP(gen_helper_S4_pstorerbf_rr(cpu_env, PvV, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerbf_rr */
},
void HELPER(S4_pstorerbf_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbf_rr);
})
DEF_QEMU(S4_pstorerbtnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_pstorerbtnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_pstorerbtnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerbtnew_io(SLOT_WRAP(gen_helper_S4_pstorerbtnew_io(cpu_env, PvN, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerbtnew_io */
},
void HELPER(S4_pstorerbtnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbtnew_io);
})
DEF_QEMU(S4_pstorerbfnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_pstorerbfnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_pstorerbfnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerbfnew_io(SLOT_WRAP(gen_helper_S4_pstorerbfnew_io(cpu_env, PvN, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerbfnew_io */
},
void HELPER(S4_pstorerbfnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbfnew_io);
})
DEF_QEMU(S4_pstorerbtnew_rr,{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerbtnew_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerbtnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerbtnew_rr(SLOT_WRAP(gen_helper_S4_pstorerbtnew_rr(cpu_env, PvN, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerbtnew_rr */
},
void HELPER(S4_pstorerbtnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbtnew_rr);
})
DEF_QEMU(S4_pstorerbfnew_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerbfnew_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerbfnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerbfnew_rr(SLOT_WRAP(gen_helper_S4_pstorerbfnew_rr(cpu_env, PvN, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerbfnew_rr */
},
void HELPER(S4_pstorerbfnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbfnew_rr);
})
DEF_QEMU(S2_pstorerbtnew_pi,{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerbtnew_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerbtnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerbtnew_pi(SLOT_WRAP(gen_helper_S2_pstorerbtnew_pi(RxV, cpu_env, PvN, RxV, RtV, siV, slot));,
{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_pstorerbtnew_pi */
},
int32_t HELPER(S2_pstorerbtnew_pi)(CPUHexagonState *env, int32_t PvN, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerbtnew_pi);
return RxV;
})
DEF_QEMU(S2_pstorerbfnew_pi,{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerbfnew_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerbfnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerbfnew_pi(SLOT_WRAP(gen_helper_S2_pstorerbfnew_pi(RxV, cpu_env, PvN, RxV, RtV, siV, slot));,
{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_pstorerbfnew_pi */
},
int32_t HELPER(S2_pstorerbfnew_pi)(CPUHexagonState *env, int32_t PvN, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,RtV));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerbfnew_pi);
return RxV;
})
DEF_QEMU(S4_pstorerbt_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerbt_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerbt_abs */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerbt_abs(SLOT_WRAP(gen_helper_S4_pstorerbt_abs(cpu_env, PvV, RtV, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerbt_abs */
},
void HELPER(S4_pstorerbt_abs)(CPUHexagonState *env, int32_t PvV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbt_abs);
})
DEF_QEMU(S4_pstorerbf_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerbf_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerbf_abs */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerbf_abs(SLOT_WRAP(gen_helper_S4_pstorerbf_abs(cpu_env, PvV, RtV, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerbf_abs */
},
void HELPER(S4_pstorerbf_abs)(CPUHexagonState *env, int32_t PvV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbf_abs);
})
DEF_QEMU(S4_pstorerbtnew_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerbtnew_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerbtnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerbtnew_abs(SLOT_WRAP(gen_helper_S4_pstorerbtnew_abs(cpu_env, PvN, RtV, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerbtnew_abs */
},
void HELPER(S4_pstorerbtnew_abs)(CPUHexagonState *env, int32_t PvN, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbtnew_abs);
})
DEF_QEMU(S4_pstorerbfnew_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerbfnew_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerbfnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerbfnew_abs(SLOT_WRAP(gen_helper_S4_pstorerbfnew_abs(cpu_env, PvN, RtV, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerbfnew_abs */
},
void HELPER(S4_pstorerbfnew_abs)(CPUHexagonState *env, int32_t PvN, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbfnew_abs);
})
DEF_QEMU(S4_storerh_rr,{fEA_RRs(RsV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(0,RtV));},
DEF_HELPER_6(S4_storerh_rr, void, env, s32, s32, s32, s32, i32),
{
/* S4_storerh_rr */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_u(TCGv, RuV, RuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_storerh_rr(SLOT_WRAP(gen_helper_S4_storerh_rr(cpu_env, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(0,RtV));})
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_storerh_rr */
},
void HELPER(S4_storerh_rr)(CPUHexagonState *env, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(0,RtV));}
COUNT_HELPER(S4_storerh_rr);
})
DEF_QEMU(S2_pstorerht_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerht_io, void, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerht_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerht_io(SLOT_WRAP(gen_helper_S2_pstorerht_io(cpu_env, PvV, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S2_pstorerht_io */
},
void HELPER(S2_pstorerht_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerht_io);
})
DEF_QEMU(S2_pstorerht_pi,{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerht_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerht_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerht_pi(SLOT_WRAP(gen_helper_S2_pstorerht_pi(RxV, cpu_env, PvV, RxV, RtV, siV, slot));,
{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_pstorerht_pi */
},
int32_t HELPER(S2_pstorerht_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerht_pi);
return RxV;
})
DEF_QEMU(S2_pstorerhf_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerhf_io, void, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerhf_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerhf_io(SLOT_WRAP(gen_helper_S2_pstorerhf_io(cpu_env, PvV, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S2_pstorerhf_io */
},
void HELPER(S2_pstorerhf_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerhf_io);
})
DEF_QEMU(S2_pstorerhf_pi,{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerhf_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerhf_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerhf_pi(SLOT_WRAP(gen_helper_S2_pstorerhf_pi(RxV, cpu_env, PvV, RxV, RtV, siV, slot));,
{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_pstorerhf_pi */
},
int32_t HELPER(S2_pstorerhf_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerhf_pi);
return RxV;
})
DEF_QEMU(S4_pstorerht_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerht_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerht_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerht_rr(SLOT_WRAP(gen_helper_S4_pstorerht_rr(cpu_env, PvV, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerht_rr */
},
void HELPER(S4_pstorerht_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerht_rr);
})
DEF_QEMU(S4_pstorerhf_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerhf_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerhf_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerhf_rr(SLOT_WRAP(gen_helper_S4_pstorerhf_rr(cpu_env, PvV, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerhf_rr */
},
void HELPER(S4_pstorerhf_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhf_rr);
})
DEF_QEMU(S4_pstorerhtnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_pstorerhtnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_pstorerhtnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerhtnew_io(SLOT_WRAP(gen_helper_S4_pstorerhtnew_io(cpu_env, PvN, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerhtnew_io */
},
void HELPER(S4_pstorerhtnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhtnew_io);
})
DEF_QEMU(S4_pstorerhfnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_pstorerhfnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_pstorerhfnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerhfnew_io(SLOT_WRAP(gen_helper_S4_pstorerhfnew_io(cpu_env, PvN, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerhfnew_io */
},
void HELPER(S4_pstorerhfnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhfnew_io);
})
DEF_QEMU(S4_pstorerhtnew_rr,{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerhtnew_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerhtnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerhtnew_rr(SLOT_WRAP(gen_helper_S4_pstorerhtnew_rr(cpu_env, PvN, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerhtnew_rr */
},
void HELPER(S4_pstorerhtnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhtnew_rr);
})
DEF_QEMU(S4_pstorerhfnew_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerhfnew_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerhfnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerhfnew_rr(SLOT_WRAP(gen_helper_S4_pstorerhfnew_rr(cpu_env, PvN, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerhfnew_rr */
},
void HELPER(S4_pstorerhfnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhfnew_rr);
})
DEF_QEMU(S2_pstorerhtnew_pi,{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerhtnew_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerhtnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerhtnew_pi(SLOT_WRAP(gen_helper_S2_pstorerhtnew_pi(RxV, cpu_env, PvN, RxV, RtV, siV, slot));,
{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_pstorerhtnew_pi */
},
int32_t HELPER(S2_pstorerhtnew_pi)(CPUHexagonState *env, int32_t PvN, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerhtnew_pi);
return RxV;
})
DEF_QEMU(S2_pstorerhfnew_pi,{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerhfnew_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerhfnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerhfnew_pi(SLOT_WRAP(gen_helper_S2_pstorerhfnew_pi(RxV, cpu_env, PvN, RxV, RtV, siV, slot));,
{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_pstorerhfnew_pi */
},
int32_t HELPER(S2_pstorerhfnew_pi)(CPUHexagonState *env, int32_t PvN, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,RtV));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerhfnew_pi);
return RxV;
})
DEF_QEMU(S4_pstorerht_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerht_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerht_abs */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerht_abs(SLOT_WRAP(gen_helper_S4_pstorerht_abs(cpu_env, PvV, RtV, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerht_abs */
},
void HELPER(S4_pstorerht_abs)(CPUHexagonState *env, int32_t PvV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerht_abs);
})
DEF_QEMU(S4_pstorerhf_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerhf_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerhf_abs */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerhf_abs(SLOT_WRAP(gen_helper_S4_pstorerhf_abs(cpu_env, PvV, RtV, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerhf_abs */
},
void HELPER(S4_pstorerhf_abs)(CPUHexagonState *env, int32_t PvV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhf_abs);
})
DEF_QEMU(S4_pstorerhtnew_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerhtnew_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerhtnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerhtnew_abs(SLOT_WRAP(gen_helper_S4_pstorerhtnew_abs(cpu_env, PvN, RtV, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerhtnew_abs */
},
void HELPER(S4_pstorerhtnew_abs)(CPUHexagonState *env, int32_t PvN, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhtnew_abs);
})
DEF_QEMU(S4_pstorerhfnew_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerhfnew_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerhfnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerhfnew_abs(SLOT_WRAP(gen_helper_S4_pstorerhfnew_abs(cpu_env, PvN, RtV, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerhfnew_abs */
},
void HELPER(S4_pstorerhfnew_abs)(CPUHexagonState *env, int32_t PvN, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhfnew_abs);
})
DEF_QEMU(S4_storerf_rr,{fEA_RRs(RsV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(1,RtV));},
DEF_HELPER_6(S4_storerf_rr, void, env, s32, s32, s32, s32, i32),
{
/* S4_storerf_rr */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_u(TCGv, RuV, RuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_storerf_rr(SLOT_WRAP(gen_helper_S4_storerf_rr(cpu_env, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(1,RtV));})
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_storerf_rr */
},
void HELPER(S4_storerf_rr)(CPUHexagonState *env, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(1,RtV));}
COUNT_HELPER(S4_storerf_rr);
})
DEF_QEMU(S2_pstorerft_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerft_io, void, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerft_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerft_io(SLOT_WRAP(gen_helper_S2_pstorerft_io(cpu_env, PvV, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S2_pstorerft_io */
},
void HELPER(S2_pstorerft_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerft_io);
})
DEF_QEMU(S2_pstorerft_pi,{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerft_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerft_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerft_pi(SLOT_WRAP(gen_helper_S2_pstorerft_pi(RxV, cpu_env, PvV, RxV, RtV, siV, slot));,
{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_pstorerft_pi */
},
int32_t HELPER(S2_pstorerft_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerft_pi);
return RxV;
})
DEF_QEMU(S2_pstorerff_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerff_io, void, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerff_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerff_io(SLOT_WRAP(gen_helper_S2_pstorerff_io(cpu_env, PvV, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S2_pstorerff_io */
},
void HELPER(S2_pstorerff_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerff_io);
})
DEF_QEMU(S2_pstorerff_pi,{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerff_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerff_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerff_pi(SLOT_WRAP(gen_helper_S2_pstorerff_pi(RxV, cpu_env, PvV, RxV, RtV, siV, slot));,
{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_pstorerff_pi */
},
int32_t HELPER(S2_pstorerff_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerff_pi);
return RxV;
})
DEF_QEMU(S4_pstorerft_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerft_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerft_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerft_rr(SLOT_WRAP(gen_helper_S4_pstorerft_rr(cpu_env, PvV, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerft_rr */
},
void HELPER(S4_pstorerft_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerft_rr);
})
DEF_QEMU(S4_pstorerff_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerff_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerff_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerff_rr(SLOT_WRAP(gen_helper_S4_pstorerff_rr(cpu_env, PvV, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerff_rr */
},
void HELPER(S4_pstorerff_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerff_rr);
})
DEF_QEMU(S4_pstorerftnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_pstorerftnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_pstorerftnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerftnew_io(SLOT_WRAP(gen_helper_S4_pstorerftnew_io(cpu_env, PvN, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerftnew_io */
},
void HELPER(S4_pstorerftnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerftnew_io);
})
DEF_QEMU(S4_pstorerffnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_pstorerffnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_pstorerffnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerffnew_io(SLOT_WRAP(gen_helper_S4_pstorerffnew_io(cpu_env, PvN, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerffnew_io */
},
void HELPER(S4_pstorerffnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerffnew_io);
})
DEF_QEMU(S4_pstorerftnew_rr,{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerftnew_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerftnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerftnew_rr(SLOT_WRAP(gen_helper_S4_pstorerftnew_rr(cpu_env, PvN, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerftnew_rr */
},
void HELPER(S4_pstorerftnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerftnew_rr);
})
DEF_QEMU(S4_pstorerffnew_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerffnew_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerffnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerffnew_rr(SLOT_WRAP(gen_helper_S4_pstorerffnew_rr(cpu_env, PvN, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerffnew_rr */
},
void HELPER(S4_pstorerffnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerffnew_rr);
})
DEF_QEMU(S2_pstorerftnew_pi,{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerftnew_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerftnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerftnew_pi(SLOT_WRAP(gen_helper_S2_pstorerftnew_pi(RxV, cpu_env, PvN, RxV, RtV, siV, slot));,
{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_pstorerftnew_pi */
},
int32_t HELPER(S2_pstorerftnew_pi)(CPUHexagonState *env, int32_t PvN, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerftnew_pi);
return RxV;
})
DEF_QEMU(S2_pstorerffnew_pi,{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerffnew_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerffnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerffnew_pi(SLOT_WRAP(gen_helper_S2_pstorerffnew_pi(RxV, cpu_env, PvN, RxV, RtV, siV, slot));,
{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_pstorerffnew_pi */
},
int32_t HELPER(S2_pstorerffnew_pi)(CPUHexagonState *env, int32_t PvN, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(1,RtV));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerffnew_pi);
return RxV;
})
DEF_QEMU(S4_pstorerft_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerft_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerft_abs */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerft_abs(SLOT_WRAP(gen_helper_S4_pstorerft_abs(cpu_env, PvV, RtV, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerft_abs */
},
void HELPER(S4_pstorerft_abs)(CPUHexagonState *env, int32_t PvV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerft_abs);
})
DEF_QEMU(S4_pstorerff_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerff_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerff_abs */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerff_abs(SLOT_WRAP(gen_helper_S4_pstorerff_abs(cpu_env, PvV, RtV, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerff_abs */
},
void HELPER(S4_pstorerff_abs)(CPUHexagonState *env, int32_t PvV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerff_abs);
})
DEF_QEMU(S4_pstorerftnew_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerftnew_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerftnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerftnew_abs(SLOT_WRAP(gen_helper_S4_pstorerftnew_abs(cpu_env, PvN, RtV, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerftnew_abs */
},
void HELPER(S4_pstorerftnew_abs)(CPUHexagonState *env, int32_t PvN, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerftnew_abs);
})
DEF_QEMU(S4_pstorerffnew_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerffnew_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerffnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerffnew_abs(SLOT_WRAP(gen_helper_S4_pstorerffnew_abs(cpu_env, PvN, RtV, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerffnew_abs */
},
void HELPER(S4_pstorerffnew_abs)(CPUHexagonState *env, int32_t PvN, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(1,RtV)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerffnew_abs);
})
DEF_QEMU(S4_storeri_rr,{fEA_RRs(RsV,RuV,uiV); fSTORE(1,4,EA,RtV);},
DEF_HELPER_6(S4_storeri_rr, void, env, s32, s32, s32, s32, i32),
{
/* S4_storeri_rr */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_u(TCGv, RuV, RuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_storeri_rr(SLOT_WRAP(gen_helper_S4_storeri_rr(cpu_env, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); fSTORE(1,4,EA,RtV);})
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_storeri_rr */
},
void HELPER(S4_storeri_rr)(CPUHexagonState *env, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); fSTORE(1,4,EA,RtV);}
COUNT_HELPER(S4_storeri_rr);
})
DEF_QEMU(S2_pstorerit_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerit_io, void, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerit_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerit_io(SLOT_WRAP(gen_helper_S2_pstorerit_io(cpu_env, PvV, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S2_pstorerit_io */
},
void HELPER(S2_pstorerit_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerit_io);
})
DEF_QEMU(S2_pstorerit_pi,{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,4,EA,RtV);} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerit_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerit_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerit_pi(SLOT_WRAP(gen_helper_S2_pstorerit_pi(RxV, cpu_env, PvV, RxV, RtV, siV, slot));,
{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,4,EA,RtV);} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_pstorerit_pi */
},
int32_t HELPER(S2_pstorerit_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,4,EA,RtV);} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerit_pi);
return RxV;
})
DEF_QEMU(S2_pstorerif_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerif_io, void, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerif_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerif_io(SLOT_WRAP(gen_helper_S2_pstorerif_io(cpu_env, PvV, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S2_pstorerif_io */
},
void HELPER(S2_pstorerif_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerif_io);
})
DEF_QEMU(S2_pstorerif_pi,{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,4,EA,RtV);} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerif_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerif_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerif_pi(SLOT_WRAP(gen_helper_S2_pstorerif_pi(RxV, cpu_env, PvV, RxV, RtV, siV, slot));,
{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,4,EA,RtV);} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_pstorerif_pi */
},
int32_t HELPER(S2_pstorerif_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,4,EA,RtV);} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerif_pi);
return RxV;
})
DEF_QEMU(S4_pstorerit_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerit_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerit_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerit_rr(SLOT_WRAP(gen_helper_S4_pstorerit_rr(cpu_env, PvV, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerit_rr */
},
void HELPER(S4_pstorerit_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerit_rr);
})
DEF_QEMU(S4_pstorerif_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerif_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerif_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerif_rr(SLOT_WRAP(gen_helper_S4_pstorerif_rr(cpu_env, PvV, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerif_rr */
},
void HELPER(S4_pstorerif_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerif_rr);
})
DEF_QEMU(S4_pstoreritnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_pstoreritnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_pstoreritnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstoreritnew_io(SLOT_WRAP(gen_helper_S4_pstoreritnew_io(cpu_env, PvN, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstoreritnew_io */
},
void HELPER(S4_pstoreritnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstoreritnew_io);
})
DEF_QEMU(S4_pstorerifnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_pstorerifnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_pstorerifnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerifnew_io(SLOT_WRAP(gen_helper_S4_pstorerifnew_io(cpu_env, PvN, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerifnew_io */
},
void HELPER(S4_pstorerifnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerifnew_io);
})
DEF_QEMU(S4_pstoreritnew_rr,{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstoreritnew_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstoreritnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstoreritnew_rr(SLOT_WRAP(gen_helper_S4_pstoreritnew_rr(cpu_env, PvN, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstoreritnew_rr */
},
void HELPER(S4_pstoreritnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstoreritnew_rr);
})
DEF_QEMU(S4_pstorerifnew_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerifnew_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerifnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerifnew_rr(SLOT_WRAP(gen_helper_S4_pstorerifnew_rr(cpu_env, PvN, RsV, RuV, RtV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerifnew_rr */
},
void HELPER(S4_pstorerifnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RuV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerifnew_rr);
})
DEF_QEMU(S2_pstoreritnew_pi,{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,4,EA,RtV);} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstoreritnew_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstoreritnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstoreritnew_pi(SLOT_WRAP(gen_helper_S2_pstoreritnew_pi(RxV, cpu_env, PvN, RxV, RtV, siV, slot));,
{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,4,EA,RtV);} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_pstoreritnew_pi */
},
int32_t HELPER(S2_pstoreritnew_pi)(CPUHexagonState *env, int32_t PvN, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,4,EA,RtV);} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstoreritnew_pi);
return RxV;
})
DEF_QEMU(S2_pstorerifnew_pi,{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,4,EA,RtV);} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerifnew_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerifnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_pstorerifnew_pi(SLOT_WRAP(gen_helper_S2_pstorerifnew_pi(RxV, cpu_env, PvN, RxV, RtV, siV, slot));,
{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,4,EA,RtV);} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S2_pstorerifnew_pi */
},
int32_t HELPER(S2_pstorerifnew_pi)(CPUHexagonState *env, int32_t PvN, int32_t RxV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,4,EA,RtV);} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerifnew_pi);
return RxV;
})
DEF_QEMU(S4_pstorerit_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerit_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerit_abs */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerit_abs(SLOT_WRAP(gen_helper_S4_pstorerit_abs(cpu_env, PvV, RtV, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerit_abs */
},
void HELPER(S4_pstorerit_abs)(CPUHexagonState *env, int32_t PvV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerit_abs);
})
DEF_QEMU(S4_pstorerif_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerif_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerif_abs */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerif_abs(SLOT_WRAP(gen_helper_S4_pstorerif_abs(cpu_env, PvV, RtV, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerif_abs */
},
void HELPER(S4_pstorerif_abs)(CPUHexagonState *env, int32_t PvV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerif_abs);
})
DEF_QEMU(S4_pstoreritnew_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstoreritnew_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstoreritnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstoreritnew_abs(SLOT_WRAP(gen_helper_S4_pstoreritnew_abs(cpu_env, PvN, RtV, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstoreritnew_abs */
},
void HELPER(S4_pstoreritnew_abs)(CPUHexagonState *env, int32_t PvN, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstoreritnew_abs);
})
DEF_QEMU(S4_pstorerifnew_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerifnew_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerifnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_t(RtV, RtN);
fWRAP_S4_pstorerifnew_abs(SLOT_WRAP(gen_helper_S4_pstorerifnew_abs(cpu_env, PvN, RtV, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_pstorerifnew_abs */
},
void HELPER(S4_pstorerifnew_abs)(CPUHexagonState *env, int32_t PvN, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,RtV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerifnew_abs);
})
DEF_QEMU(S4_storerd_rr,{fEA_RRs(RsV,RuV,uiV); fSTORE(1,8,EA,RttV);},
DEF_HELPER_6(S4_storerd_rr, void, env, s32, s32, s64, s32, i32),
{
/* S4_storerd_rr */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_u(TCGv, RuV, RuN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_storerd_rr(SLOT_WRAP(gen_helper_S4_storerd_rr(cpu_env, RsV, RuV, RttV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); fSTORE(1,8,EA,RttV);})
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_PAIR(RttV);
FREE_IMM(uiV);
/* S4_storerd_rr */
},
void HELPER(S4_storerd_rr)(CPUHexagonState *env, int32_t RsV, int32_t RuV, int64_t RttV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); fSTORE(1,8,EA,RttV);}
COUNT_HELPER(S4_storerd_rr);
})
DEF_QEMU(S2_pstorerdt_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerdt_io, void, env, s32, s32, s64, s32, i32),
{
/* S2_pstorerdt_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_pstorerdt_io(SLOT_WRAP(gen_helper_S2_pstorerdt_io(cpu_env, PvV, RsV, RttV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_PAIR(RttV);
FREE_IMM(uiV);
/* S2_pstorerdt_io */
},
void HELPER(S2_pstorerdt_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int64_t RttV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerdt_io);
})
DEF_QEMU(S2_pstorerdt_pi,{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,8,EA,RttV);} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerdt_pi, s32, env, s32, s32, s64, s32, i32),
{
/* S2_pstorerdt_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_pstorerdt_pi(SLOT_WRAP(gen_helper_S2_pstorerdt_pi(RxV, cpu_env, PvV, RxV, RttV, siV, slot));,
{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,8,EA,RttV);} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_PAIR(RttV);
FREE_IMM(siV);
/* S2_pstorerdt_pi */
},
int32_t HELPER(S2_pstorerdt_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int64_t RttV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,8,EA,RttV);} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerdt_pi);
return RxV;
})
DEF_QEMU(S2_pstorerdf_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerdf_io, void, env, s32, s32, s64, s32, i32),
{
/* S2_pstorerdf_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_pstorerdf_io(SLOT_WRAP(gen_helper_S2_pstorerdf_io(cpu_env, PvV, RsV, RttV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_PAIR(RttV);
FREE_IMM(uiV);
/* S2_pstorerdf_io */
},
void HELPER(S2_pstorerdf_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int64_t RttV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerdf_io);
})
DEF_QEMU(S2_pstorerdf_pi,{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,8,EA,RttV);} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerdf_pi, s32, env, s32, s32, s64, s32, i32),
{
/* S2_pstorerdf_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_pstorerdf_pi(SLOT_WRAP(gen_helper_S2_pstorerdf_pi(RxV, cpu_env, PvV, RxV, RttV, siV, slot));,
{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,8,EA,RttV);} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_PAIR(RttV);
FREE_IMM(siV);
/* S2_pstorerdf_pi */
},
int32_t HELPER(S2_pstorerdf_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int64_t RttV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,8,EA,RttV);} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerdf_pi);
return RxV;
})
DEF_QEMU(S4_pstorerdt_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerdt_rr, void, env, s32, s32, s32, s64, s32, i32),
{
/* S4_pstorerdt_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_pstorerdt_rr(SLOT_WRAP(gen_helper_S4_pstorerdt_rr(cpu_env, PvV, RsV, RuV, RttV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_PAIR(RttV);
FREE_IMM(uiV);
/* S4_pstorerdt_rr */
},
void HELPER(S4_pstorerdt_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RuV, int64_t RttV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerdt_rr);
})
DEF_QEMU(S4_pstorerdf_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerdf_rr, void, env, s32, s32, s32, s64, s32, i32),
{
/* S4_pstorerdf_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_pstorerdf_rr(SLOT_WRAP(gen_helper_S4_pstorerdf_rr(cpu_env, PvV, RsV, RuV, RttV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_PAIR(RttV);
FREE_IMM(uiV);
/* S4_pstorerdf_rr */
},
void HELPER(S4_pstorerdf_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RuV, int64_t RttV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerdf_rr);
})
DEF_QEMU(S4_pstorerdtnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_pstorerdtnew_io, void, env, s32, s32, s64, s32, i32),
{
/* S4_pstorerdtnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_pstorerdtnew_io(SLOT_WRAP(gen_helper_S4_pstorerdtnew_io(cpu_env, PvN, RsV, RttV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_PAIR(RttV);
FREE_IMM(uiV);
/* S4_pstorerdtnew_io */
},
void HELPER(S4_pstorerdtnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int64_t RttV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerdtnew_io);
})
DEF_QEMU(S4_pstorerdfnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_pstorerdfnew_io, void, env, s32, s32, s64, s32, i32),
{
/* S4_pstorerdfnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_pstorerdfnew_io(SLOT_WRAP(gen_helper_S4_pstorerdfnew_io(cpu_env, PvN, RsV, RttV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_PAIR(RttV);
FREE_IMM(uiV);
/* S4_pstorerdfnew_io */
},
void HELPER(S4_pstorerdfnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int64_t RttV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerdfnew_io);
})
DEF_QEMU(S4_pstorerdtnew_rr,{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerdtnew_rr, void, env, s32, s32, s32, s64, s32, i32),
{
/* S4_pstorerdtnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_pstorerdtnew_rr(SLOT_WRAP(gen_helper_S4_pstorerdtnew_rr(cpu_env, PvN, RsV, RuV, RttV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_PAIR(RttV);
FREE_IMM(uiV);
/* S4_pstorerdtnew_rr */
},
void HELPER(S4_pstorerdtnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RuV, int64_t RttV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerdtnew_rr);
})
DEF_QEMU(S4_pstorerdfnew_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerdfnew_rr, void, env, s32, s32, s32, s64, s32, i32),
{
/* S4_pstorerdfnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_pstorerdfnew_rr(SLOT_WRAP(gen_helper_S4_pstorerdfnew_rr(cpu_env, PvN, RsV, RuV, RttV, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_REG_PAIR(RttV);
FREE_IMM(uiV);
/* S4_pstorerdfnew_rr */
},
void HELPER(S4_pstorerdfnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RuV, int64_t RttV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerdfnew_rr);
})
DEF_QEMU(S2_pstorerdtnew_pi,{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,8,EA,RttV);} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerdtnew_pi, s32, env, s32, s32, s64, s32, i32),
{
/* S2_pstorerdtnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_x(RxV, RxN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_pstorerdtnew_pi(SLOT_WRAP(gen_helper_S2_pstorerdtnew_pi(RxV, cpu_env, PvN, RxV, RttV, siV, slot));,
{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,8,EA,RttV);} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_x(RxV);
FREE_REG_PAIR(RttV);
FREE_IMM(siV);
/* S2_pstorerdtnew_pi */
},
int32_t HELPER(S2_pstorerdtnew_pi)(CPUHexagonState *env, int32_t PvN, int32_t RxV, int64_t RttV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,8,EA,RttV);} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerdtnew_pi);
return RxV;
})
DEF_QEMU(S2_pstorerdfnew_pi,{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,8,EA,RttV);} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerdfnew_pi, s32, env, s32, s32, s64, s32, i32),
{
/* S2_pstorerdfnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_x(RxV, RxN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_pstorerdfnew_pi(SLOT_WRAP(gen_helper_S2_pstorerdfnew_pi(RxV, cpu_env, PvN, RxV, RttV, siV, slot));,
{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,8,EA,RttV);} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_x(RxV);
FREE_REG_PAIR(RttV);
FREE_IMM(siV);
/* S2_pstorerdfnew_pi */
},
int32_t HELPER(S2_pstorerdfnew_pi)(CPUHexagonState *env, int32_t PvN, int32_t RxV, int64_t RttV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,8,EA,RttV);} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerdfnew_pi);
return RxV;
})
DEF_QEMU(S4_pstorerdt_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerdt_abs, void, env, s32, s64, s32, i32),
{
/* S4_pstorerdt_abs */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_pstorerdt_abs(SLOT_WRAP(gen_helper_S4_pstorerdt_abs(cpu_env, PvV, RttV, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_PAIR(RttV);
FREE_IMM(uiV);
/* S4_pstorerdt_abs */
},
void HELPER(S4_pstorerdt_abs)(CPUHexagonState *env, int32_t PvV, int64_t RttV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerdt_abs);
})
DEF_QEMU(S4_pstorerdf_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerdf_abs, void, env, s32, s64, s32, i32),
{
/* S4_pstorerdf_abs */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_pstorerdf_abs(SLOT_WRAP(gen_helper_S4_pstorerdf_abs(cpu_env, PvV, RttV, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_PAIR(RttV);
FREE_IMM(uiV);
/* S4_pstorerdf_abs */
},
void HELPER(S4_pstorerdf_abs)(CPUHexagonState *env, int32_t PvV, int64_t RttV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerdf_abs);
})
DEF_QEMU(S4_pstorerdtnew_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerdtnew_abs, void, env, s32, s64, s32, i32),
{
/* S4_pstorerdtnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_pstorerdtnew_abs(SLOT_WRAP(gen_helper_S4_pstorerdtnew_abs(cpu_env, PvN, RttV, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_PAIR(RttV);
FREE_IMM(uiV);
/* S4_pstorerdtnew_abs */
},
void HELPER(S4_pstorerdtnew_abs)(CPUHexagonState *env, int32_t PvN, int64_t RttV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerdtnew_abs);
})
DEF_QEMU(S4_pstorerdfnew_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerdfnew_abs, void, env, s32, s64, s32, i32),
{
/* S4_pstorerdfnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_pstorerdfnew_abs(SLOT_WRAP(gen_helper_S4_pstorerdfnew_abs(cpu_env, PvN, RttV, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_PAIR(RttV);
FREE_IMM(uiV);
/* S4_pstorerdfnew_abs */
},
void HELPER(S4_pstorerdfnew_abs)(CPUHexagonState *env, int32_t PvN, int64_t RttV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,8,EA,RttV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerdfnew_abs);
})
DEF_QEMU(S4_storerinew_rr,{fEA_RRs(RsV,RuV,uiV); fSTORE(1,4,EA,fNEWREG_ST(NtN));},
DEF_HELPER_6(S4_storerinew_rr, void, env, s32, s32, s32, s32, i32),
{
/* S4_storerinew_rr */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_u(TCGv, RuV, RuN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_storerinew_rr(SLOT_WRAP(gen_helper_S4_storerinew_rr(cpu_env, RsV, RuV, NtN, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); fSTORE(1,4,EA,fNEWREG_ST(NtN));})
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_storerinew_rr */
},
void HELPER(S4_storerinew_rr)(CPUHexagonState *env, int32_t RsV, int32_t RuV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); fSTORE(1,4,EA,fNEWREG_ST(NtN));}
COUNT_HELPER(S4_storerinew_rr);
})
DEF_QEMU(S2_pstorerinewt_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerinewt_io, void, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerinewt_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerinewt_io(SLOT_WRAP(gen_helper_S2_pstorerinewt_io(cpu_env, PvV, RsV, NtN, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S2_pstorerinewt_io */
},
void HELPER(S2_pstorerinewt_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerinewt_io);
})
DEF_QEMU(S2_pstorerinewt_pi,{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerinewt_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerinewt_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerinewt_pi(SLOT_WRAP(gen_helper_S2_pstorerinewt_pi(RxV, cpu_env, PvV, RxV, NtN, siV, slot));,
{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_pstorerinewt_pi */
},
int32_t HELPER(S2_pstorerinewt_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerinewt_pi);
return RxV;
})
DEF_QEMU(S2_pstorerinewf_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerinewf_io, void, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerinewf_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerinewf_io(SLOT_WRAP(gen_helper_S2_pstorerinewf_io(cpu_env, PvV, RsV, NtN, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S2_pstorerinewf_io */
},
void HELPER(S2_pstorerinewf_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerinewf_io);
})
DEF_QEMU(S2_pstorerinewf_pi,{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerinewf_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerinewf_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerinewf_pi(SLOT_WRAP(gen_helper_S2_pstorerinewf_pi(RxV, cpu_env, PvV, RxV, NtN, siV, slot));,
{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_pstorerinewf_pi */
},
int32_t HELPER(S2_pstorerinewf_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerinewf_pi);
return RxV;
})
DEF_QEMU(S4_pstorerinewt_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerinewt_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerinewt_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerinewt_rr(SLOT_WRAP(gen_helper_S4_pstorerinewt_rr(cpu_env, PvV, RsV, RuV, NtN, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerinewt_rr */
},
void HELPER(S4_pstorerinewt_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RuV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerinewt_rr);
})
DEF_QEMU(S4_pstorerinewf_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerinewf_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerinewf_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerinewf_rr(SLOT_WRAP(gen_helper_S4_pstorerinewf_rr(cpu_env, PvV, RsV, RuV, NtN, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerinewf_rr */
},
void HELPER(S4_pstorerinewf_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RuV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerinewf_rr);
})
DEF_QEMU(S4_pstorerinewtnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_pstorerinewtnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_pstorerinewtnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerinewtnew_io(SLOT_WRAP(gen_helper_S4_pstorerinewtnew_io(cpu_env, PvN, RsV, NtN, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerinewtnew_io */
},
void HELPER(S4_pstorerinewtnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerinewtnew_io);
})
DEF_QEMU(S4_pstorerinewfnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_pstorerinewfnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_pstorerinewfnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerinewfnew_io(SLOT_WRAP(gen_helper_S4_pstorerinewfnew_io(cpu_env, PvN, RsV, NtN, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerinewfnew_io */
},
void HELPER(S4_pstorerinewfnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerinewfnew_io);
})
DEF_QEMU(S4_pstorerinewtnew_rr,{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerinewtnew_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerinewtnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerinewtnew_rr(SLOT_WRAP(gen_helper_S4_pstorerinewtnew_rr(cpu_env, PvN, RsV, RuV, NtN, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerinewtnew_rr */
},
void HELPER(S4_pstorerinewtnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RuV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerinewtnew_rr);
})
DEF_QEMU(S4_pstorerinewfnew_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerinewfnew_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerinewfnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerinewfnew_rr(SLOT_WRAP(gen_helper_S4_pstorerinewfnew_rr(cpu_env, PvN, RsV, RuV, NtN, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerinewfnew_rr */
},
void HELPER(S4_pstorerinewfnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RuV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerinewfnew_rr);
})
DEF_QEMU(S2_pstorerinewtnew_pi,{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerinewtnew_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerinewtnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_x(RxV, RxN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerinewtnew_pi(SLOT_WRAP(gen_helper_S2_pstorerinewtnew_pi(RxV, cpu_env, PvN, RxV, NtN, siV, slot));,
{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_x(RxV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_pstorerinewtnew_pi */
},
int32_t HELPER(S2_pstorerinewtnew_pi)(CPUHexagonState *env, int32_t PvN, int32_t RxV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerinewtnew_pi);
return RxV;
})
DEF_QEMU(S2_pstorerinewfnew_pi,{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerinewfnew_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerinewfnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_x(RxV, RxN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerinewfnew_pi(SLOT_WRAP(gen_helper_S2_pstorerinewfnew_pi(RxV, cpu_env, PvN, RxV, NtN, siV, slot));,
{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_x(RxV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_pstorerinewfnew_pi */
},
int32_t HELPER(S2_pstorerinewfnew_pi)(CPUHexagonState *env, int32_t PvN, int32_t RxV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,4,EA,fNEWREG_ST(NtN));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerinewfnew_pi);
return RxV;
})
DEF_QEMU(S4_pstorerinewt_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerinewt_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerinewt_abs */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerinewt_abs(SLOT_WRAP(gen_helper_S4_pstorerinewt_abs(cpu_env, PvV, NtN, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerinewt_abs */
},
void HELPER(S4_pstorerinewt_abs)(CPUHexagonState *env, int32_t PvV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerinewt_abs);
})
DEF_QEMU(S4_pstorerinewf_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerinewf_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerinewf_abs */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerinewf_abs(SLOT_WRAP(gen_helper_S4_pstorerinewf_abs(cpu_env, PvV, NtN, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerinewf_abs */
},
void HELPER(S4_pstorerinewf_abs)(CPUHexagonState *env, int32_t PvV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerinewf_abs);
})
DEF_QEMU(S4_pstorerinewtnew_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerinewtnew_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerinewtnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerinewtnew_abs(SLOT_WRAP(gen_helper_S4_pstorerinewtnew_abs(cpu_env, PvN, NtN, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerinewtnew_abs */
},
void HELPER(S4_pstorerinewtnew_abs)(CPUHexagonState *env, int32_t PvN, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerinewtnew_abs);
})
DEF_QEMU(S4_pstorerinewfnew_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerinewfnew_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerinewfnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerinewfnew_abs(SLOT_WRAP(gen_helper_S4_pstorerinewfnew_abs(cpu_env, PvN, NtN, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerinewfnew_abs */
},
void HELPER(S4_pstorerinewfnew_abs)(CPUHexagonState *env, int32_t PvN, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,4,EA,fNEWREG_ST(NtN)); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerinewfnew_abs);
})
DEF_QEMU(S4_storerbnew_rr,{fEA_RRs(RsV,RuV,uiV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));},
DEF_HELPER_6(S4_storerbnew_rr, void, env, s32, s32, s32, s32, i32),
{
/* S4_storerbnew_rr */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_u(TCGv, RuV, RuN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_storerbnew_rr(SLOT_WRAP(gen_helper_S4_storerbnew_rr(cpu_env, RsV, RuV, NtN, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));})
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_storerbnew_rr */
},
void HELPER(S4_storerbnew_rr)(CPUHexagonState *env, int32_t RsV, int32_t RuV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));}
COUNT_HELPER(S4_storerbnew_rr);
})
DEF_QEMU(S2_pstorerbnewt_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerbnewt_io, void, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerbnewt_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerbnewt_io(SLOT_WRAP(gen_helper_S2_pstorerbnewt_io(cpu_env, PvV, RsV, NtN, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S2_pstorerbnewt_io */
},
void HELPER(S2_pstorerbnewt_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerbnewt_io);
})
DEF_QEMU(S2_pstorerbnewt_pi,{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerbnewt_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerbnewt_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerbnewt_pi(SLOT_WRAP(gen_helper_S2_pstorerbnewt_pi(RxV, cpu_env, PvV, RxV, NtN, siV, slot));,
{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_pstorerbnewt_pi */
},
int32_t HELPER(S2_pstorerbnewt_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerbnewt_pi);
return RxV;
})
DEF_QEMU(S2_pstorerbnewf_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerbnewf_io, void, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerbnewf_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerbnewf_io(SLOT_WRAP(gen_helper_S2_pstorerbnewf_io(cpu_env, PvV, RsV, NtN, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S2_pstorerbnewf_io */
},
void HELPER(S2_pstorerbnewf_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerbnewf_io);
})
DEF_QEMU(S2_pstorerbnewf_pi,{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerbnewf_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerbnewf_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerbnewf_pi(SLOT_WRAP(gen_helper_S2_pstorerbnewf_pi(RxV, cpu_env, PvV, RxV, NtN, siV, slot));,
{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_pstorerbnewf_pi */
},
int32_t HELPER(S2_pstorerbnewf_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerbnewf_pi);
return RxV;
})
DEF_QEMU(S4_pstorerbnewt_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerbnewt_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerbnewt_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerbnewt_rr(SLOT_WRAP(gen_helper_S4_pstorerbnewt_rr(cpu_env, PvV, RsV, RuV, NtN, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerbnewt_rr */
},
void HELPER(S4_pstorerbnewt_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RuV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbnewt_rr);
})
DEF_QEMU(S4_pstorerbnewf_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerbnewf_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerbnewf_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerbnewf_rr(SLOT_WRAP(gen_helper_S4_pstorerbnewf_rr(cpu_env, PvV, RsV, RuV, NtN, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerbnewf_rr */
},
void HELPER(S4_pstorerbnewf_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RuV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbnewf_rr);
})
DEF_QEMU(S4_pstorerbnewtnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_pstorerbnewtnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_pstorerbnewtnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerbnewtnew_io(SLOT_WRAP(gen_helper_S4_pstorerbnewtnew_io(cpu_env, PvN, RsV, NtN, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerbnewtnew_io */
},
void HELPER(S4_pstorerbnewtnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbnewtnew_io);
})
DEF_QEMU(S4_pstorerbnewfnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_pstorerbnewfnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_pstorerbnewfnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerbnewfnew_io(SLOT_WRAP(gen_helper_S4_pstorerbnewfnew_io(cpu_env, PvN, RsV, NtN, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerbnewfnew_io */
},
void HELPER(S4_pstorerbnewfnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbnewfnew_io);
})
DEF_QEMU(S4_pstorerbnewtnew_rr,{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerbnewtnew_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerbnewtnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerbnewtnew_rr(SLOT_WRAP(gen_helper_S4_pstorerbnewtnew_rr(cpu_env, PvN, RsV, RuV, NtN, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerbnewtnew_rr */
},
void HELPER(S4_pstorerbnewtnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RuV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbnewtnew_rr);
})
DEF_QEMU(S4_pstorerbnewfnew_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerbnewfnew_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerbnewfnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerbnewfnew_rr(SLOT_WRAP(gen_helper_S4_pstorerbnewfnew_rr(cpu_env, PvN, RsV, RuV, NtN, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerbnewfnew_rr */
},
void HELPER(S4_pstorerbnewfnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RuV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbnewfnew_rr);
})
DEF_QEMU(S2_pstorerbnewtnew_pi,{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerbnewtnew_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerbnewtnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_x(RxV, RxN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerbnewtnew_pi(SLOT_WRAP(gen_helper_S2_pstorerbnewtnew_pi(RxV, cpu_env, PvN, RxV, NtN, siV, slot));,
{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_x(RxV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_pstorerbnewtnew_pi */
},
int32_t HELPER(S2_pstorerbnewtnew_pi)(CPUHexagonState *env, int32_t PvN, int32_t RxV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerbnewtnew_pi);
return RxV;
})
DEF_QEMU(S2_pstorerbnewfnew_pi,{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerbnewfnew_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerbnewfnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_x(RxV, RxN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerbnewfnew_pi(SLOT_WRAP(gen_helper_S2_pstorerbnewfnew_pi(RxV, cpu_env, PvN, RxV, NtN, siV, slot));,
{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_x(RxV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_pstorerbnewfnew_pi */
},
int32_t HELPER(S2_pstorerbnewfnew_pi)(CPUHexagonState *env, int32_t PvN, int32_t RxV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerbnewfnew_pi);
return RxV;
})
DEF_QEMU(S4_pstorerbnewt_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerbnewt_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerbnewt_abs */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerbnewt_abs(SLOT_WRAP(gen_helper_S4_pstorerbnewt_abs(cpu_env, PvV, NtN, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerbnewt_abs */
},
void HELPER(S4_pstorerbnewt_abs)(CPUHexagonState *env, int32_t PvV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbnewt_abs);
})
DEF_QEMU(S4_pstorerbnewf_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerbnewf_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerbnewf_abs */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerbnewf_abs(SLOT_WRAP(gen_helper_S4_pstorerbnewf_abs(cpu_env, PvV, NtN, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerbnewf_abs */
},
void HELPER(S4_pstorerbnewf_abs)(CPUHexagonState *env, int32_t PvV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbnewf_abs);
})
DEF_QEMU(S4_pstorerbnewtnew_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerbnewtnew_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerbnewtnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerbnewtnew_abs(SLOT_WRAP(gen_helper_S4_pstorerbnewtnew_abs(cpu_env, PvN, NtN, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerbnewtnew_abs */
},
void HELPER(S4_pstorerbnewtnew_abs)(CPUHexagonState *env, int32_t PvN, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbnewtnew_abs);
})
DEF_QEMU(S4_pstorerbnewfnew_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerbnewfnew_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerbnewfnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerbnewfnew_abs(SLOT_WRAP(gen_helper_S4_pstorerbnewfnew_abs(cpu_env, PvN, NtN, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerbnewfnew_abs */
},
void HELPER(S4_pstorerbnewfnew_abs)(CPUHexagonState *env, int32_t PvN, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerbnewfnew_abs);
})
DEF_QEMU(S4_storerhnew_rr,{fEA_RRs(RsV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));},
DEF_HELPER_6(S4_storerhnew_rr, void, env, s32, s32, s32, s32, i32),
{
/* S4_storerhnew_rr */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_u(TCGv, RuV, RuN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_storerhnew_rr(SLOT_WRAP(gen_helper_S4_storerhnew_rr(cpu_env, RsV, RuV, NtN, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));})
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_storerhnew_rr */
},
void HELPER(S4_storerhnew_rr)(CPUHexagonState *env, int32_t RsV, int32_t RuV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));}
COUNT_HELPER(S4_storerhnew_rr);
})
DEF_QEMU(S2_pstorerhnewt_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerhnewt_io, void, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerhnewt_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerhnewt_io(SLOT_WRAP(gen_helper_S2_pstorerhnewt_io(cpu_env, PvV, RsV, NtN, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S2_pstorerhnewt_io */
},
void HELPER(S2_pstorerhnewt_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerhnewt_io);
})
DEF_QEMU(S2_pstorerhnewt_pi,{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerhnewt_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerhnewt_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerhnewt_pi(SLOT_WRAP(gen_helper_S2_pstorerhnewt_pi(RxV, cpu_env, PvV, RxV, NtN, siV, slot));,
{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_pstorerhnewt_pi */
},
int32_t HELPER(S2_pstorerhnewt_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBOLD(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerhnewt_pi);
return RxV;
})
DEF_QEMU(S2_pstorerhnewf_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerhnewf_io, void, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerhnewf_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerhnewf_io(SLOT_WRAP(gen_helper_S2_pstorerhnewf_io(cpu_env, PvV, RsV, NtN, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S2_pstorerhnewf_io */
},
void HELPER(S2_pstorerhnewf_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerhnewf_io);
})
DEF_QEMU(S2_pstorerhnewf_pi,{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerhnewf_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerhnewf_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerhnewf_pi(SLOT_WRAP(gen_helper_S2_pstorerhnewf_pi(RxV, cpu_env, PvV, RxV, NtN, siV, slot));,
{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_pstorerhnewf_pi */
},
int32_t HELPER(S2_pstorerhnewf_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBOLDNOT(PvV)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerhnewf_pi);
return RxV;
})
DEF_QEMU(S4_pstorerhnewt_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerhnewt_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerhnewt_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerhnewt_rr(SLOT_WRAP(gen_helper_S4_pstorerhnewt_rr(cpu_env, PvV, RsV, RuV, NtN, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerhnewt_rr */
},
void HELPER(S4_pstorerhnewt_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RuV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhnewt_rr);
})
DEF_QEMU(S4_pstorerhnewf_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerhnewf_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerhnewf_rr */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 3, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerhnewf_rr(SLOT_WRAP(gen_helper_S4_pstorerhnewf_rr(cpu_env, PvV, RsV, RuV, NtN, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerhnewf_rr */
},
void HELPER(S4_pstorerhnewf_rr)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t RuV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhnewf_rr);
})
DEF_QEMU(S4_pstorerhnewtnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_pstorerhnewtnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_pstorerhnewtnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerhnewtnew_io(SLOT_WRAP(gen_helper_S4_pstorerhnewtnew_io(cpu_env, PvN, RsV, NtN, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerhnewtnew_io */
},
void HELPER(S4_pstorerhnewtnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhnewtnew_io);
})
DEF_QEMU(S4_pstorerhnewfnew_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_pstorerhnewfnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_pstorerhnewfnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerhnewfnew_io(SLOT_WRAP(gen_helper_S4_pstorerhnewfnew_io(cpu_env, PvN, RsV, NtN, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerhnewfnew_io */
},
void HELPER(S4_pstorerhnewfnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhnewfnew_io);
})
DEF_QEMU(S4_pstorerhnewtnew_rr,{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerhnewtnew_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerhnewtnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerhnewtnew_rr(SLOT_WRAP(gen_helper_S4_pstorerhnewtnew_rr(cpu_env, PvN, RsV, RuV, NtN, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerhnewtnew_rr */
},
void HELPER(S4_pstorerhnewtnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RuV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhnewtnew_rr);
})
DEF_QEMU(S4_pstorerhnewfnew_rr,{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_7(S4_pstorerhnewfnew_rr, void, env, s32, s32, s32, s32, s32, i32),
{
/* S4_pstorerhnewfnew_rr */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 3, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerhnewfnew_rr(SLOT_WRAP(gen_helper_S4_pstorerhnewfnew_rr(cpu_env, PvN, RsV, RuV, NtN, uiV, slot));,
{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerhnewfnew_rr */
},
void HELPER(S4_pstorerhnewfnew_rr)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t RuV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RRs(RsV,RuV,uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhnewfnew_rr);
})
DEF_QEMU(S2_pstorerhnewtnew_pi,{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerhnewtnew_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerhnewtnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_x(RxV, RxN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerhnewtnew_pi(SLOT_WRAP(gen_helper_S2_pstorerhnewtnew_pi(RxV, cpu_env, PvN, RxV, NtN, siV, slot));,
{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_x(RxV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_pstorerhnewtnew_pi */
},
int32_t HELPER(S2_pstorerhnewtnew_pi)(CPUHexagonState *env, int32_t PvN, int32_t RxV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBNEW(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerhnewtnew_pi);
return RxV;
})
DEF_QEMU(S2_pstorerhnewfnew_pi,{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S2_pstorerhnewfnew_pi, s32, env, s32, s32, s32, s32, i32),
{
/* S2_pstorerhnewfnew_pi */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PvN, PvX);
READ_RREG_x(RxV, RxN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_pstorerhnewfnew_pi(SLOT_WRAP(gen_helper_S2_pstorerhnewfnew_pi(RxV, cpu_env, PvN, RxV, NtN, siV, slot));,
{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_x(RxV);
FREE_NEW_NREG(NtN);
FREE_IMM(siV);
/* S2_pstorerhnewfnew_pi */
},
int32_t HELPER(S2_pstorerhnewfnew_pi)(CPUHexagonState *env, int32_t PvN, int32_t RxV, int32_t NtN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RxV); if (fLSBNEWNOT(PvN)){ fPM_I(RxV,siV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN)));} else {STORE_CANCEL(EA);}}
COUNT_HELPER(S2_pstorerhnewfnew_pi);
return RxV;
})
DEF_QEMU(S4_pstorerhnewt_abs,{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerhnewt_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerhnewt_abs */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerhnewt_abs(SLOT_WRAP(gen_helper_S4_pstorerhnewt_abs(cpu_env, PvV, NtN, uiV, slot));,
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerhnewt_abs */
},
void HELPER(S4_pstorerhnewt_abs)(CPUHexagonState *env, int32_t PvV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV); fEA_IMM(uiV); if (fLSBOLD(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhnewt_abs);
})
DEF_QEMU(S4_pstorerhnewf_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerhnewf_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerhnewf_abs */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(uiV,0);
READ_PREG_v(PvV, PvN);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerhnewf_abs(SLOT_WRAP(gen_helper_S4_pstorerhnewf_abs(cpu_env, PvV, NtN, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerhnewf_abs */
},
void HELPER(S4_pstorerhnewf_abs)(CPUHexagonState *env, int32_t PvV, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBOLDNOT(PvV)){ fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhnewf_abs);
})
DEF_QEMU(S4_pstorerhnewtnew_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerhnewtnew_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerhnewtnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerhnewtnew_abs(SLOT_WRAP(gen_helper_S4_pstorerhnewtnew_abs(cpu_env, PvN, NtN, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerhnewtnew_abs */
},
void HELPER(S4_pstorerhnewtnew_abs)(CPUHexagonState *env, int32_t PvN, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if ( fLSBNEW(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhnewtnew_abs);
})
DEF_QEMU(S4_pstorerhnewfnew_abs,{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}},
DEF_HELPER_5(S4_pstorerhnewfnew_abs, void, env, s32, s32, s32, i32),
{
/* S4_pstorerhnewfnew_abs */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_NEW_NREG(TCGv, NtN, NtX, 1, 0);
DECL_IMM(uiV,0);
READ_NEW_PREG(PvN, PvX);
READ_NEW_NREG(NtN, NtX);
fWRAP_S4_pstorerhnewfnew_abs(SLOT_WRAP(gen_helper_S4_pstorerhnewfnew_abs(cpu_env, PvN, NtN, uiV, slot));,
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S4_pstorerhnewfnew_abs */
},
void HELPER(S4_pstorerhnewfnew_abs)(CPUHexagonState *env, int32_t PvN, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fMUST_IMMEXT(uiV);fEA_IMM(uiV); if (fLSBNEWNOT(PvN)) { fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_pstorerhnewfnew_abs);
})
DEF_QEMU(L4_add_memopw_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp += RtV; fSTORE(1,4,EA,tmp); },
DEF_HELPER_5(L4_add_memopw_io, void, env, s32, s32, s32, i32),
{
/* L4_add_memopw_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_add_memopw_io(SLOT_WRAP(gen_helper_L4_add_memopw_io(cpu_env, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp += RtV; fSTORE(1,4,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_add_memopw_io */
},
void HELPER(L4_add_memopw_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp += RtV; fSTORE(1,4,EA,tmp); }
COUNT_HELPER(L4_add_memopw_io);
})
DEF_QEMU(L4_add_memopb_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp += RtV; fSTORE(1,1,EA,tmp); },
DEF_HELPER_5(L4_add_memopb_io, void, env, s32, s32, s32, i32),
{
/* L4_add_memopb_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_add_memopb_io(SLOT_WRAP(gen_helper_L4_add_memopb_io(cpu_env, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp += RtV; fSTORE(1,1,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_add_memopb_io */
},
void HELPER(L4_add_memopb_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp += RtV; fSTORE(1,1,EA,tmp); }
COUNT_HELPER(L4_add_memopb_io);
})
DEF_QEMU(L4_add_memoph_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp += RtV; fSTORE(1,2,EA,tmp); },
DEF_HELPER_5(L4_add_memoph_io, void, env, s32, s32, s32, i32),
{
/* L4_add_memoph_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_add_memoph_io(SLOT_WRAP(gen_helper_L4_add_memoph_io(cpu_env, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp += RtV; fSTORE(1,2,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_add_memoph_io */
},
void HELPER(L4_add_memoph_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp += RtV; fSTORE(1,2,EA,tmp); }
COUNT_HELPER(L4_add_memoph_io);
})
DEF_QEMU(L4_sub_memopw_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp -= RtV; fSTORE(1,4,EA,tmp); },
DEF_HELPER_5(L4_sub_memopw_io, void, env, s32, s32, s32, i32),
{
/* L4_sub_memopw_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_sub_memopw_io(SLOT_WRAP(gen_helper_L4_sub_memopw_io(cpu_env, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp -= RtV; fSTORE(1,4,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_sub_memopw_io */
},
void HELPER(L4_sub_memopw_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp -= RtV; fSTORE(1,4,EA,tmp); }
COUNT_HELPER(L4_sub_memopw_io);
})
DEF_QEMU(L4_sub_memopb_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp -= RtV; fSTORE(1,1,EA,tmp); },
DEF_HELPER_5(L4_sub_memopb_io, void, env, s32, s32, s32, i32),
{
/* L4_sub_memopb_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_sub_memopb_io(SLOT_WRAP(gen_helper_L4_sub_memopb_io(cpu_env, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp -= RtV; fSTORE(1,1,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_sub_memopb_io */
},
void HELPER(L4_sub_memopb_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp -= RtV; fSTORE(1,1,EA,tmp); }
COUNT_HELPER(L4_sub_memopb_io);
})
DEF_QEMU(L4_sub_memoph_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp -= RtV; fSTORE(1,2,EA,tmp); },
DEF_HELPER_5(L4_sub_memoph_io, void, env, s32, s32, s32, i32),
{
/* L4_sub_memoph_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_sub_memoph_io(SLOT_WRAP(gen_helper_L4_sub_memoph_io(cpu_env, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp -= RtV; fSTORE(1,2,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_sub_memoph_io */
},
void HELPER(L4_sub_memoph_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp -= RtV; fSTORE(1,2,EA,tmp); }
COUNT_HELPER(L4_sub_memoph_io);
})
DEF_QEMU(L4_and_memopw_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp &= RtV; fSTORE(1,4,EA,tmp); },
DEF_HELPER_5(L4_and_memopw_io, void, env, s32, s32, s32, i32),
{
/* L4_and_memopw_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_and_memopw_io(SLOT_WRAP(gen_helper_L4_and_memopw_io(cpu_env, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp &= RtV; fSTORE(1,4,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_and_memopw_io */
},
void HELPER(L4_and_memopw_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp &= RtV; fSTORE(1,4,EA,tmp); }
COUNT_HELPER(L4_and_memopw_io);
})
DEF_QEMU(L4_and_memopb_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp &= RtV; fSTORE(1,1,EA,tmp); },
DEF_HELPER_5(L4_and_memopb_io, void, env, s32, s32, s32, i32),
{
/* L4_and_memopb_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_and_memopb_io(SLOT_WRAP(gen_helper_L4_and_memopb_io(cpu_env, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp &= RtV; fSTORE(1,1,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_and_memopb_io */
},
void HELPER(L4_and_memopb_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp &= RtV; fSTORE(1,1,EA,tmp); }
COUNT_HELPER(L4_and_memopb_io);
})
DEF_QEMU(L4_and_memoph_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp &= RtV; fSTORE(1,2,EA,tmp); },
DEF_HELPER_5(L4_and_memoph_io, void, env, s32, s32, s32, i32),
{
/* L4_and_memoph_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_and_memoph_io(SLOT_WRAP(gen_helper_L4_and_memoph_io(cpu_env, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp &= RtV; fSTORE(1,2,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_and_memoph_io */
},
void HELPER(L4_and_memoph_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp &= RtV; fSTORE(1,2,EA,tmp); }
COUNT_HELPER(L4_and_memoph_io);
})
DEF_QEMU(L4_or_memopw_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp |= RtV; fSTORE(1,4,EA,tmp); },
DEF_HELPER_5(L4_or_memopw_io, void, env, s32, s32, s32, i32),
{
/* L4_or_memopw_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_or_memopw_io(SLOT_WRAP(gen_helper_L4_or_memopw_io(cpu_env, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp |= RtV; fSTORE(1,4,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_or_memopw_io */
},
void HELPER(L4_or_memopw_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp |= RtV; fSTORE(1,4,EA,tmp); }
COUNT_HELPER(L4_or_memopw_io);
})
DEF_QEMU(L4_or_memopb_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp |= RtV; fSTORE(1,1,EA,tmp); },
DEF_HELPER_5(L4_or_memopb_io, void, env, s32, s32, s32, i32),
{
/* L4_or_memopb_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_or_memopb_io(SLOT_WRAP(gen_helper_L4_or_memopb_io(cpu_env, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp |= RtV; fSTORE(1,1,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_or_memopb_io */
},
void HELPER(L4_or_memopb_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp |= RtV; fSTORE(1,1,EA,tmp); }
COUNT_HELPER(L4_or_memopb_io);
})
DEF_QEMU(L4_or_memoph_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp |= RtV; fSTORE(1,2,EA,tmp); },
DEF_HELPER_5(L4_or_memoph_io, void, env, s32, s32, s32, i32),
{
/* L4_or_memoph_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_L4_or_memoph_io(SLOT_WRAP(gen_helper_L4_or_memoph_io(cpu_env, RsV, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp |= RtV; fSTORE(1,2,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* L4_or_memoph_io */
},
void HELPER(L4_or_memoph_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp |= RtV; fSTORE(1,2,EA,tmp); }
COUNT_HELPER(L4_or_memoph_io);
})
DEF_QEMU(L4_iadd_memopw_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp += UiV; fSTORE(1,4,EA,tmp); },
DEF_HELPER_5(L4_iadd_memopw_io, void, env, s32, s32, s32, i32),
{
/* L4_iadd_memopw_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_L4_iadd_memopw_io(SLOT_WRAP(gen_helper_L4_iadd_memopw_io(cpu_env, RsV, uiV, UiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp += UiV; fSTORE(1,4,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_iadd_memopw_io */
},
void HELPER(L4_iadd_memopw_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp += UiV; fSTORE(1,4,EA,tmp); }
COUNT_HELPER(L4_iadd_memopw_io);
})
DEF_QEMU(L4_iadd_memopb_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp += UiV; fSTORE(1,1,EA,tmp); },
DEF_HELPER_5(L4_iadd_memopb_io, void, env, s32, s32, s32, i32),
{
/* L4_iadd_memopb_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_L4_iadd_memopb_io(SLOT_WRAP(gen_helper_L4_iadd_memopb_io(cpu_env, RsV, uiV, UiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp += UiV; fSTORE(1,1,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_iadd_memopb_io */
},
void HELPER(L4_iadd_memopb_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp += UiV; fSTORE(1,1,EA,tmp); }
COUNT_HELPER(L4_iadd_memopb_io);
})
DEF_QEMU(L4_iadd_memoph_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp += UiV; fSTORE(1,2,EA,tmp); },
DEF_HELPER_5(L4_iadd_memoph_io, void, env, s32, s32, s32, i32),
{
/* L4_iadd_memoph_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_L4_iadd_memoph_io(SLOT_WRAP(gen_helper_L4_iadd_memoph_io(cpu_env, RsV, uiV, UiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp += UiV; fSTORE(1,2,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_iadd_memoph_io */
},
void HELPER(L4_iadd_memoph_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp += UiV; fSTORE(1,2,EA,tmp); }
COUNT_HELPER(L4_iadd_memoph_io);
})
DEF_QEMU(L4_isub_memopw_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp -= UiV; fSTORE(1,4,EA,tmp); },
DEF_HELPER_5(L4_isub_memopw_io, void, env, s32, s32, s32, i32),
{
/* L4_isub_memopw_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_L4_isub_memopw_io(SLOT_WRAP(gen_helper_L4_isub_memopw_io(cpu_env, RsV, uiV, UiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp -= UiV; fSTORE(1,4,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_isub_memopw_io */
},
void HELPER(L4_isub_memopw_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp -= UiV; fSTORE(1,4,EA,tmp); }
COUNT_HELPER(L4_isub_memopw_io);
})
DEF_QEMU(L4_isub_memopb_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp -= UiV; fSTORE(1,1,EA,tmp); },
DEF_HELPER_5(L4_isub_memopb_io, void, env, s32, s32, s32, i32),
{
/* L4_isub_memopb_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_L4_isub_memopb_io(SLOT_WRAP(gen_helper_L4_isub_memopb_io(cpu_env, RsV, uiV, UiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp -= UiV; fSTORE(1,1,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_isub_memopb_io */
},
void HELPER(L4_isub_memopb_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp -= UiV; fSTORE(1,1,EA,tmp); }
COUNT_HELPER(L4_isub_memopb_io);
})
DEF_QEMU(L4_isub_memoph_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp -= UiV; fSTORE(1,2,EA,tmp); },
DEF_HELPER_5(L4_isub_memoph_io, void, env, s32, s32, s32, i32),
{
/* L4_isub_memoph_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_L4_isub_memoph_io(SLOT_WRAP(gen_helper_L4_isub_memoph_io(cpu_env, RsV, uiV, UiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp -= UiV; fSTORE(1,2,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_isub_memoph_io */
},
void HELPER(L4_isub_memoph_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp -= UiV; fSTORE(1,2,EA,tmp); }
COUNT_HELPER(L4_isub_memoph_io);
})
DEF_QEMU(L4_iand_memopw_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp &= (~(1<<UiV)); fSTORE(1,4,EA,tmp); },
DEF_HELPER_5(L4_iand_memopw_io, void, env, s32, s32, s32, i32),
{
/* L4_iand_memopw_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_L4_iand_memopw_io(SLOT_WRAP(gen_helper_L4_iand_memopw_io(cpu_env, RsV, uiV, UiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp &= (~(1<<UiV)); fSTORE(1,4,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_iand_memopw_io */
},
void HELPER(L4_iand_memopw_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp &= (~(1<<UiV)); fSTORE(1,4,EA,tmp); }
COUNT_HELPER(L4_iand_memopw_io);
})
DEF_QEMU(L4_iand_memopb_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp &= (~(1<<UiV)); fSTORE(1,1,EA,tmp); },
DEF_HELPER_5(L4_iand_memopb_io, void, env, s32, s32, s32, i32),
{
/* L4_iand_memopb_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_L4_iand_memopb_io(SLOT_WRAP(gen_helper_L4_iand_memopb_io(cpu_env, RsV, uiV, UiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp &= (~(1<<UiV)); fSTORE(1,1,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_iand_memopb_io */
},
void HELPER(L4_iand_memopb_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp &= (~(1<<UiV)); fSTORE(1,1,EA,tmp); }
COUNT_HELPER(L4_iand_memopb_io);
})
DEF_QEMU(L4_iand_memoph_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp &= (~(1<<UiV)); fSTORE(1,2,EA,tmp); },
DEF_HELPER_5(L4_iand_memoph_io, void, env, s32, s32, s32, i32),
{
/* L4_iand_memoph_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_L4_iand_memoph_io(SLOT_WRAP(gen_helper_L4_iand_memoph_io(cpu_env, RsV, uiV, UiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp &= (~(1<<UiV)); fSTORE(1,2,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_iand_memoph_io */
},
void HELPER(L4_iand_memoph_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp &= (~(1<<UiV)); fSTORE(1,2,EA,tmp); }
COUNT_HELPER(L4_iand_memoph_io);
})
DEF_QEMU(L4_ior_memopw_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp |= (1<<UiV); fSTORE(1,4,EA,tmp); },
DEF_HELPER_5(L4_ior_memopw_io, void, env, s32, s32, s32, i32),
{
/* L4_ior_memopw_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_L4_ior_memopw_io(SLOT_WRAP(gen_helper_L4_ior_memopw_io(cpu_env, RsV, uiV, UiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp |= (1<<UiV); fSTORE(1,4,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_ior_memopw_io */
},
void HELPER(L4_ior_memopw_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,4,s,EA,tmp); tmp |= (1<<UiV); fSTORE(1,4,EA,tmp); }
COUNT_HELPER(L4_ior_memopw_io);
})
DEF_QEMU(L4_ior_memopb_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp |= (1<<UiV); fSTORE(1,1,EA,tmp); },
DEF_HELPER_5(L4_ior_memopb_io, void, env, s32, s32, s32, i32),
{
/* L4_ior_memopb_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_L4_ior_memopb_io(SLOT_WRAP(gen_helper_L4_ior_memopb_io(cpu_env, RsV, uiV, UiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp |= (1<<UiV); fSTORE(1,1,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_ior_memopb_io */
},
void HELPER(L4_ior_memopb_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,1,s,EA,tmp); tmp |= (1<<UiV); fSTORE(1,1,EA,tmp); }
COUNT_HELPER(L4_ior_memopb_io);
})
DEF_QEMU(L4_ior_memoph_io,{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp |= (1<<UiV); fSTORE(1,2,EA,tmp); },
DEF_HELPER_5(L4_ior_memoph_io, void, env, s32, s32, s32, i32),
{
/* L4_ior_memoph_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_L4_ior_memoph_io(SLOT_WRAP(gen_helper_L4_ior_memoph_io(cpu_env, RsV, uiV, UiV, slot));,
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp |= (1<<UiV); fSTORE(1,2,EA,tmp); })
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* L4_ior_memoph_io */
},
void HELPER(L4_ior_memoph_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t UiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_RI(RsV,uiV); fHIDE(size4s_t tmp;) fLOAD(1,2,s,EA,tmp); tmp |= (1<<UiV); fSTORE(1,2,EA,tmp); }
COUNT_HELPER(L4_ior_memoph_io);
})
DEF_QEMU(S4_storeirbt_io,{fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fIMMEXT(SiV); fSTORE(1,1,EA,SiV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_storeirbt_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_storeirbt_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
fWRAP_S4_storeirbt_io(SLOT_WRAP(gen_helper_S4_storeirbt_io(cpu_env, PvV, RsV, uiV, SiV, slot));,
{fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fIMMEXT(SiV); fSTORE(1,1,EA,SiV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S4_storeirbt_io */
},
void HELPER(S4_storeirbt_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t uiV, int32_t SiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fIMMEXT(SiV); fSTORE(1,1,EA,SiV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_storeirbt_io);
})
DEF_QEMU(S4_storeirbf_io,{fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fIMMEXT(SiV); fSTORE(1,1,EA,SiV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_storeirbf_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_storeirbf_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
fWRAP_S4_storeirbf_io(SLOT_WRAP(gen_helper_S4_storeirbf_io(cpu_env, PvV, RsV, uiV, SiV, slot));,
{fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fIMMEXT(SiV); fSTORE(1,1,EA,SiV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S4_storeirbf_io */
},
void HELPER(S4_storeirbf_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t uiV, int32_t SiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fIMMEXT(SiV); fSTORE(1,1,EA,SiV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_storeirbf_io);
})
DEF_QEMU(S4_storeirbtnew_io,{fEA_RI(RsV,uiV); if (fLSBNEW(PvN)){ fIMMEXT(SiV); fSTORE(1,1,EA,SiV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_storeirbtnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_storeirbtnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
fWRAP_S4_storeirbtnew_io(SLOT_WRAP(gen_helper_S4_storeirbtnew_io(cpu_env, PvN, RsV, uiV, SiV, slot));,
{fEA_RI(RsV,uiV); if (fLSBNEW(PvN)){ fIMMEXT(SiV); fSTORE(1,1,EA,SiV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S4_storeirbtnew_io */
},
void HELPER(S4_storeirbtnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t uiV, int32_t SiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); if (fLSBNEW(PvN)){ fIMMEXT(SiV); fSTORE(1,1,EA,SiV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_storeirbtnew_io);
})
DEF_QEMU(S4_storeirbfnew_io,{fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)){ fIMMEXT(SiV); fSTORE(1,1,EA,SiV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_storeirbfnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_storeirbfnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
fWRAP_S4_storeirbfnew_io(SLOT_WRAP(gen_helper_S4_storeirbfnew_io(cpu_env, PvN, RsV, uiV, SiV, slot));,
{fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)){ fIMMEXT(SiV); fSTORE(1,1,EA,SiV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S4_storeirbfnew_io */
},
void HELPER(S4_storeirbfnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t uiV, int32_t SiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)){ fIMMEXT(SiV); fSTORE(1,1,EA,SiV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_storeirbfnew_io);
})
DEF_QEMU(S4_storeirht_io,{fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fIMMEXT(SiV); fSTORE(1,2,EA,SiV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_storeirht_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_storeirht_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
fWRAP_S4_storeirht_io(SLOT_WRAP(gen_helper_S4_storeirht_io(cpu_env, PvV, RsV, uiV, SiV, slot));,
{fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fIMMEXT(SiV); fSTORE(1,2,EA,SiV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S4_storeirht_io */
},
void HELPER(S4_storeirht_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t uiV, int32_t SiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fIMMEXT(SiV); fSTORE(1,2,EA,SiV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_storeirht_io);
})
DEF_QEMU(S4_storeirhf_io,{fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fIMMEXT(SiV); fSTORE(1,2,EA,SiV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_storeirhf_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_storeirhf_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
fWRAP_S4_storeirhf_io(SLOT_WRAP(gen_helper_S4_storeirhf_io(cpu_env, PvV, RsV, uiV, SiV, slot));,
{fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fIMMEXT(SiV); fSTORE(1,2,EA,SiV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S4_storeirhf_io */
},
void HELPER(S4_storeirhf_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t uiV, int32_t SiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fIMMEXT(SiV); fSTORE(1,2,EA,SiV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_storeirhf_io);
})
DEF_QEMU(S4_storeirhtnew_io,{fEA_RI(RsV,uiV); if (fLSBNEW(PvN)){ fIMMEXT(SiV); fSTORE(1,2,EA,SiV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_storeirhtnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_storeirhtnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
fWRAP_S4_storeirhtnew_io(SLOT_WRAP(gen_helper_S4_storeirhtnew_io(cpu_env, PvN, RsV, uiV, SiV, slot));,
{fEA_RI(RsV,uiV); if (fLSBNEW(PvN)){ fIMMEXT(SiV); fSTORE(1,2,EA,SiV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S4_storeirhtnew_io */
},
void HELPER(S4_storeirhtnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t uiV, int32_t SiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); if (fLSBNEW(PvN)){ fIMMEXT(SiV); fSTORE(1,2,EA,SiV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_storeirhtnew_io);
})
DEF_QEMU(S4_storeirhfnew_io,{fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)){ fIMMEXT(SiV); fSTORE(1,2,EA,SiV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_storeirhfnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_storeirhfnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
fWRAP_S4_storeirhfnew_io(SLOT_WRAP(gen_helper_S4_storeirhfnew_io(cpu_env, PvN, RsV, uiV, SiV, slot));,
{fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)){ fIMMEXT(SiV); fSTORE(1,2,EA,SiV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S4_storeirhfnew_io */
},
void HELPER(S4_storeirhfnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t uiV, int32_t SiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)){ fIMMEXT(SiV); fSTORE(1,2,EA,SiV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_storeirhfnew_io);
})
DEF_QEMU(S4_storeirit_io,{fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fIMMEXT(SiV); fSTORE(1,4,EA,SiV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_storeirit_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_storeirit_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
fWRAP_S4_storeirit_io(SLOT_WRAP(gen_helper_S4_storeirit_io(cpu_env, PvV, RsV, uiV, SiV, slot));,
{fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fIMMEXT(SiV); fSTORE(1,4,EA,SiV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S4_storeirit_io */
},
void HELPER(S4_storeirit_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t uiV, int32_t SiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); if (fLSBOLD(PvV)){ fIMMEXT(SiV); fSTORE(1,4,EA,SiV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_storeirit_io);
})
DEF_QEMU(S4_storeirif_io,{fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fIMMEXT(SiV); fSTORE(1,4,EA,SiV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_storeirif_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_storeirif_io */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_PREG_v(PvV, PvN);
READ_RREG_s(RsV, RsN);
fWRAP_S4_storeirif_io(SLOT_WRAP(gen_helper_S4_storeirif_io(cpu_env, PvV, RsV, uiV, SiV, slot));,
{fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fIMMEXT(SiV); fSTORE(1,4,EA,SiV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S4_storeirif_io */
},
void HELPER(S4_storeirif_io)(CPUHexagonState *env, int32_t PvV, int32_t RsV, int32_t uiV, int32_t SiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); if (fLSBOLDNOT(PvV)){ fIMMEXT(SiV); fSTORE(1,4,EA,SiV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_storeirif_io);
})
DEF_QEMU(S4_storeiritnew_io,{fEA_RI(RsV,uiV); if (fLSBNEW(PvN)){ fIMMEXT(SiV); fSTORE(1,4,EA,SiV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_storeiritnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_storeiritnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
fWRAP_S4_storeiritnew_io(SLOT_WRAP(gen_helper_S4_storeiritnew_io(cpu_env, PvN, RsV, uiV, SiV, slot));,
{fEA_RI(RsV,uiV); if (fLSBNEW(PvN)){ fIMMEXT(SiV); fSTORE(1,4,EA,SiV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S4_storeiritnew_io */
},
void HELPER(S4_storeiritnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t uiV, int32_t SiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); if (fLSBNEW(PvN)){ fIMMEXT(SiV); fSTORE(1,4,EA,SiV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_storeiritnew_io);
})
DEF_QEMU(S4_storeirifnew_io,{fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)){ fIMMEXT(SiV); fSTORE(1,4,EA,SiV); } else {STORE_CANCEL(EA);}},
DEF_HELPER_6(S4_storeirifnew_io, void, env, s32, s32, s32, s32, i32),
{
/* S4_storeirifnew_io */
DECL_EA;
DECL_NEW_PREG(TCGv, PvN, PvX, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_NEW_PREG(PvN, PvX);
READ_RREG_s(RsV, RsN);
fWRAP_S4_storeirifnew_io(SLOT_WRAP(gen_helper_S4_storeirifnew_io(cpu_env, PvN, RsV, uiV, SiV, slot));,
{fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)){ fIMMEXT(SiV); fSTORE(1,4,EA,SiV); } else {STORE_CANCEL(EA);}})
FREE_EA;
FREE_NEW_PREG(PvN);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S4_storeirifnew_io */
},
void HELPER(S4_storeirifnew_io)(CPUHexagonState *env, int32_t PvN, int32_t RsV, int32_t uiV, int32_t SiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); if (fLSBNEWNOT(PvN)){ fIMMEXT(SiV); fSTORE(1,4,EA,SiV); } else {STORE_CANCEL(EA);}}
COUNT_HELPER(S4_storeirifnew_io);
})
DEF_QEMU(S4_storeirb_io,{fEA_RI(RsV,uiV); fIMMEXT(SiV); fSTORE(1,1,EA,SiV); },
DEF_HELPER_5(S4_storeirb_io, void, env, s32, s32, s32, i32),
{
/* S4_storeirb_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_S4_storeirb_io(SLOT_WRAP(gen_helper_S4_storeirb_io(cpu_env, RsV, uiV, SiV, slot));,
{fEA_RI(RsV,uiV); fIMMEXT(SiV); fSTORE(1,1,EA,SiV); })
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S4_storeirb_io */
},
void HELPER(S4_storeirb_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t SiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); fIMMEXT(SiV); fSTORE(1,1,EA,SiV); }
COUNT_HELPER(S4_storeirb_io);
})
DEF_QEMU(S4_storeirh_io,{fEA_RI(RsV,uiV); fIMMEXT(SiV); fSTORE(1,2,EA,SiV); },
DEF_HELPER_5(S4_storeirh_io, void, env, s32, s32, s32, i32),
{
/* S4_storeirh_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_S4_storeirh_io(SLOT_WRAP(gen_helper_S4_storeirh_io(cpu_env, RsV, uiV, SiV, slot));,
{fEA_RI(RsV,uiV); fIMMEXT(SiV); fSTORE(1,2,EA,SiV); })
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S4_storeirh_io */
},
void HELPER(S4_storeirh_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t SiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); fIMMEXT(SiV); fSTORE(1,2,EA,SiV); }
COUNT_HELPER(S4_storeirh_io);
})
DEF_QEMU(S4_storeiri_io,{fEA_RI(RsV,uiV); fIMMEXT(SiV); fSTORE(1,4,EA,SiV); },
DEF_HELPER_5(S4_storeiri_io, void, env, s32, s32, s32, i32),
{
/* S4_storeiri_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_S4_storeiri_io(SLOT_WRAP(gen_helper_S4_storeiri_io(cpu_env, RsV, uiV, SiV, slot));,
{fEA_RI(RsV,uiV); fIMMEXT(SiV); fSTORE(1,4,EA,SiV); })
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S4_storeiri_io */
},
void HELPER(S4_storeiri_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t SiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); fIMMEXT(SiV); fSTORE(1,4,EA,SiV); }
COUNT_HELPER(S4_storeiri_io);
})
DEF_QEMU(L2_loadrubgp,{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,1,u,EA,RdV); },
DEF_HELPER_2(L2_loadrubgp, s32, env, s32),
{
/* L2_loadrubgp */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_L2_loadrubgp(gen_helper_L2_loadrubgp(RdV, cpu_env, uiV);,
{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,1,u,EA,RdV); })
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L2_loadrubgp */
},
int32_t HELPER(L2_loadrubgp)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,1,u,EA,RdV); }
COUNT_HELPER(L2_loadrubgp);
return RdV;
})
DEF_QEMU(L2_loadrbgp,{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,1,s,EA,RdV); },
DEF_HELPER_2(L2_loadrbgp, s32, env, s32),
{
/* L2_loadrbgp */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_L2_loadrbgp(gen_helper_L2_loadrbgp(RdV, cpu_env, uiV);,
{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,1,s,EA,RdV); })
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L2_loadrbgp */
},
int32_t HELPER(L2_loadrbgp)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,1,s,EA,RdV); }
COUNT_HELPER(L2_loadrbgp);
return RdV;
})
DEF_QEMU(L2_loadruhgp,{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,2,u,EA,RdV); },
DEF_HELPER_2(L2_loadruhgp, s32, env, s32),
{
/* L2_loadruhgp */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_L2_loadruhgp(gen_helper_L2_loadruhgp(RdV, cpu_env, uiV);,
{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,2,u,EA,RdV); })
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L2_loadruhgp */
},
int32_t HELPER(L2_loadruhgp)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,2,u,EA,RdV); }
COUNT_HELPER(L2_loadruhgp);
return RdV;
})
DEF_QEMU(L2_loadrhgp,{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,2,s,EA,RdV); },
DEF_HELPER_2(L2_loadrhgp, s32, env, s32),
{
/* L2_loadrhgp */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_L2_loadrhgp(gen_helper_L2_loadrhgp(RdV, cpu_env, uiV);,
{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,2,s,EA,RdV); })
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L2_loadrhgp */
},
int32_t HELPER(L2_loadrhgp)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,2,s,EA,RdV); }
COUNT_HELPER(L2_loadrhgp);
return RdV;
})
DEF_QEMU(L2_loadrigp,{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,4,u,EA,RdV); },
DEF_HELPER_2(L2_loadrigp, s32, env, s32),
{
/* L2_loadrigp */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_L2_loadrigp(gen_helper_L2_loadrigp(RdV, cpu_env, uiV);,
{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,4,u,EA,RdV); })
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* L2_loadrigp */
},
int32_t HELPER(L2_loadrigp)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,4,u,EA,RdV); }
COUNT_HELPER(L2_loadrigp);
return RdV;
})
DEF_QEMU(L2_loadrdgp,{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,8,u,EA,RddV); },
DEF_HELPER_2(L2_loadrdgp, s64, env, s32),
{
/* L2_loadrdgp */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_L2_loadrdgp(gen_helper_L2_loadrdgp(RddV, cpu_env, uiV);,
{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,8,u,EA,RddV); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_IMM(uiV);
/* L2_loadrdgp */
},
int64_t HELPER(L2_loadrdgp)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int64_t RddV = 0;
{fIMMEXT(uiV); fEA_GPI(uiV); fLOAD(1,8,u,EA,RddV); }
COUNT_HELPER(L2_loadrdgp);
return RddV;
})
DEF_QEMU(S2_storerbgp,{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); },
DEF_HELPER_4(S2_storerbgp, void, env, s32, s32, i32),
{
/* S2_storerbgp */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_IMM(uiV,0);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerbgp(SLOT_WRAP(gen_helper_S2_storerbgp(cpu_env, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); })
FREE_EA;
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S2_storerbgp */
},
void HELPER(S2_storerbgp)(CPUHexagonState *env, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,1,EA,fGETBYTE(0,RtV)); }
COUNT_HELPER(S2_storerbgp);
})
DEF_QEMU(S2_storerhgp,{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,2,EA,fGETHALF(0,RtV)); },
DEF_HELPER_4(S2_storerhgp, void, env, s32, s32, i32),
{
/* S2_storerhgp */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_IMM(uiV,0);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerhgp(SLOT_WRAP(gen_helper_S2_storerhgp(cpu_env, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,2,EA,fGETHALF(0,RtV)); })
FREE_EA;
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S2_storerhgp */
},
void HELPER(S2_storerhgp)(CPUHexagonState *env, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,2,EA,fGETHALF(0,RtV)); }
COUNT_HELPER(S2_storerhgp);
})
DEF_QEMU(S2_storerfgp,{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,2,EA,fGETHALF(1,RtV)); },
DEF_HELPER_4(S2_storerfgp, void, env, s32, s32, i32),
{
/* S2_storerfgp */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_IMM(uiV,0);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerfgp(SLOT_WRAP(gen_helper_S2_storerfgp(cpu_env, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,2,EA,fGETHALF(1,RtV)); })
FREE_EA;
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S2_storerfgp */
},
void HELPER(S2_storerfgp)(CPUHexagonState *env, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,2,EA,fGETHALF(1,RtV)); }
COUNT_HELPER(S2_storerfgp);
})
DEF_QEMU(S2_storerigp,{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,4,EA,RtV); },
DEF_HELPER_4(S2_storerigp, void, env, s32, s32, i32),
{
/* S2_storerigp */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_IMM(uiV,0);
READ_RREG_t(RtV, RtN);
fWRAP_S2_storerigp(SLOT_WRAP(gen_helper_S2_storerigp(cpu_env, RtV, uiV, slot));,
{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,4,EA,RtV); })
FREE_EA;
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S2_storerigp */
},
void HELPER(S2_storerigp)(CPUHexagonState *env, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,4,EA,RtV); }
COUNT_HELPER(S2_storerigp);
})
DEF_QEMU(S2_storerdgp,{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,8,EA,RttV); },
DEF_HELPER_4(S2_storerdgp, void, env, s64, s32, i32),
{
/* S2_storerdgp */
DECL_EA;
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 0, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_storerdgp(SLOT_WRAP(gen_helper_S2_storerdgp(cpu_env, RttV, uiV, slot));,
{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,8,EA,RttV); })
FREE_EA;
FREE_REG_PAIR(RttV);
FREE_IMM(uiV);
/* S2_storerdgp */
},
void HELPER(S2_storerdgp)(CPUHexagonState *env, int64_t RttV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,8,EA,RttV); }
COUNT_HELPER(S2_storerdgp);
})
DEF_QEMU(S2_storerinewgp,{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); },
DEF_HELPER_4(S2_storerinewgp, void, env, s32, s32, i32),
{
/* S2_storerinewgp */
DECL_EA;
DECL_NEW_NREG(TCGv, NtN, NtX, 0, 0);
DECL_IMM(uiV,0);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerinewgp(SLOT_WRAP(gen_helper_S2_storerinewgp(cpu_env, NtN, uiV, slot));,
{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); })
FREE_EA;
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S2_storerinewgp */
},
void HELPER(S2_storerinewgp)(CPUHexagonState *env, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,4,EA,fNEWREG_ST(NtN)); }
COUNT_HELPER(S2_storerinewgp);
})
DEF_QEMU(S2_storerbnewgp,{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); },
DEF_HELPER_4(S2_storerbnewgp, void, env, s32, s32, i32),
{
/* S2_storerbnewgp */
DECL_EA;
DECL_NEW_NREG(TCGv, NtN, NtX, 0, 0);
DECL_IMM(uiV,0);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerbnewgp(SLOT_WRAP(gen_helper_S2_storerbnewgp(cpu_env, NtN, uiV, slot));,
{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); })
FREE_EA;
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S2_storerbnewgp */
},
void HELPER(S2_storerbnewgp)(CPUHexagonState *env, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,1,EA,fGETBYTE(0,fNEWREG_ST(NtN))); }
COUNT_HELPER(S2_storerbnewgp);
})
DEF_QEMU(S2_storerhnewgp,{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); },
DEF_HELPER_4(S2_storerhnewgp, void, env, s32, s32, i32),
{
/* S2_storerhnewgp */
DECL_EA;
DECL_NEW_NREG(TCGv, NtN, NtX, 0, 0);
DECL_IMM(uiV,0);
READ_NEW_NREG(NtN, NtX);
fWRAP_S2_storerhnewgp(SLOT_WRAP(gen_helper_S2_storerhnewgp(cpu_env, NtN, uiV, slot));,
{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); })
FREE_EA;
FREE_NEW_NREG(NtN);
FREE_IMM(uiV);
/* S2_storerhnewgp */
},
void HELPER(S2_storerhnewgp)(CPUHexagonState *env, int32_t NtN, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fIMMEXT(uiV); fEA_GPI(uiV); fSTORE(1,2,EA,fGETHALF(0,fNEWREG_ST(NtN))); }
COUNT_HELPER(S2_storerhnewgp);
})
DEF_QEMU(L6_memcpy,{ fVTCM_MEMCPY(RsV, RtV, MuV) },
DEF_HELPER_5(L6_memcpy, void, env, s32, s32, s32, i32),
{
/* L6_memcpy */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
READ_MREG_u(MuV, MuN);
fWRAP_L6_memcpy(SLOT_WRAP(gen_helper_L6_memcpy(cpu_env, RsV, RtV, MuV, slot));,
{ fVTCM_MEMCPY(RsV, RtV, MuV) })
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_REG_u(MuV);
/* L6_memcpy */
},
void HELPER(L6_memcpy)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t MuV, uint32_t slot)
{
{ fVTCM_MEMCPY(RsV, RtV, MuV) }
COUNT_HELPER(L6_memcpy);
})
DEF_QEMU(C2_cmpeq,{PdV=f8BITSOF(RsV==RtV);},
DEF_HELPER_3(C2_cmpeq, s32, env, s32, s32),
{
/* C2_cmpeq */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_C2_cmpeq(gen_helper_C2_cmpeq(PdV, cpu_env, RsV, RtV);,
{PdV=f8BITSOF(RsV==RtV);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* C2_cmpeq */
},
int32_t HELPER(C2_cmpeq)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{PdV=f8BITSOF(RsV==RtV);}
COUNT_HELPER(C2_cmpeq);
return PdV;
})
DEF_QEMU(C2_cmpgt,{PdV=f8BITSOF(RsV>RtV);},
DEF_HELPER_3(C2_cmpgt, s32, env, s32, s32),
{
/* C2_cmpgt */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_C2_cmpgt(gen_helper_C2_cmpgt(PdV, cpu_env, RsV, RtV);,
{PdV=f8BITSOF(RsV>RtV);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* C2_cmpgt */
},
int32_t HELPER(C2_cmpgt)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{PdV=f8BITSOF(RsV>RtV);}
COUNT_HELPER(C2_cmpgt);
return PdV;
})
DEF_QEMU(C2_cmpgtu,{PdV=f8BITSOF(fCAST4u(RsV)>fCAST4u(RtV));},
DEF_HELPER_3(C2_cmpgtu, s32, env, s32, s32),
{
/* C2_cmpgtu */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_C2_cmpgtu(gen_helper_C2_cmpgtu(PdV, cpu_env, RsV, RtV);,
{PdV=f8BITSOF(fCAST4u(RsV)>fCAST4u(RtV));})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* C2_cmpgtu */
},
int32_t HELPER(C2_cmpgtu)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{PdV=f8BITSOF(fCAST4u(RsV)>fCAST4u(RtV));}
COUNT_HELPER(C2_cmpgtu);
return PdV;
})
DEF_QEMU(C2_cmpeqp,{PdV=f8BITSOF(RssV==RttV);},
DEF_HELPER_3(C2_cmpeqp, s32, env, s64, s64),
{
/* C2_cmpeqp */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_C2_cmpeqp(gen_helper_C2_cmpeqp(PdV, cpu_env, RssV, RttV);,
{PdV=f8BITSOF(RssV==RttV);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* C2_cmpeqp */
},
int32_t HELPER(C2_cmpeqp)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{PdV=f8BITSOF(RssV==RttV);}
COUNT_HELPER(C2_cmpeqp);
return PdV;
})
DEF_QEMU(C2_cmpgtp,{PdV=f8BITSOF(RssV>RttV);},
DEF_HELPER_3(C2_cmpgtp, s32, env, s64, s64),
{
/* C2_cmpgtp */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_C2_cmpgtp(gen_helper_C2_cmpgtp(PdV, cpu_env, RssV, RttV);,
{PdV=f8BITSOF(RssV>RttV);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* C2_cmpgtp */
},
int32_t HELPER(C2_cmpgtp)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{PdV=f8BITSOF(RssV>RttV);}
COUNT_HELPER(C2_cmpgtp);
return PdV;
})
DEF_QEMU(C2_cmpgtup,{PdV=f8BITSOF(fCAST8u(RssV)>fCAST8u(RttV));},
DEF_HELPER_3(C2_cmpgtup, s32, env, s64, s64),
{
/* C2_cmpgtup */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_C2_cmpgtup(gen_helper_C2_cmpgtup(PdV, cpu_env, RssV, RttV);,
{PdV=f8BITSOF(fCAST8u(RssV)>fCAST8u(RttV));})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* C2_cmpgtup */
},
int32_t HELPER(C2_cmpgtup)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{PdV=f8BITSOF(fCAST8u(RssV)>fCAST8u(RttV));}
COUNT_HELPER(C2_cmpgtup);
return PdV;
})
DEF_QEMU(A4_rcmpeqi,{fIMMEXT(siV); RdV=(RsV==siV); },
DEF_HELPER_3(A4_rcmpeqi, s32, env, s32, s32),
{
/* A4_rcmpeqi */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A4_rcmpeqi(gen_helper_A4_rcmpeqi(RdV, cpu_env, RsV, siV);,
{fIMMEXT(siV); RdV=(RsV==siV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* A4_rcmpeqi */
},
int32_t HELPER(A4_rcmpeqi)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{fIMMEXT(siV); RdV=(RsV==siV); }
COUNT_HELPER(A4_rcmpeqi);
return RdV;
})
DEF_QEMU(A4_rcmpneqi,{fIMMEXT(siV); RdV=(RsV!=siV); },
DEF_HELPER_3(A4_rcmpneqi, s32, env, s32, s32),
{
/* A4_rcmpneqi */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A4_rcmpneqi(gen_helper_A4_rcmpneqi(RdV, cpu_env, RsV, siV);,
{fIMMEXT(siV); RdV=(RsV!=siV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* A4_rcmpneqi */
},
int32_t HELPER(A4_rcmpneqi)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{fIMMEXT(siV); RdV=(RsV!=siV); }
COUNT_HELPER(A4_rcmpneqi);
return RdV;
})
DEF_QEMU(A4_rcmpeq,{RdV=(RsV==RtV); },
DEF_HELPER_3(A4_rcmpeq, s32, env, s32, s32),
{
/* A4_rcmpeq */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A4_rcmpeq(gen_helper_A4_rcmpeq(RdV, cpu_env, RsV, RtV);,
{RdV=(RsV==RtV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A4_rcmpeq */
},
int32_t HELPER(A4_rcmpeq)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(RsV==RtV); }
COUNT_HELPER(A4_rcmpeq);
return RdV;
})
DEF_QEMU(A4_rcmpneq,{RdV=(RsV!=RtV); },
DEF_HELPER_3(A4_rcmpneq, s32, env, s32, s32),
{
/* A4_rcmpneq */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A4_rcmpneq(gen_helper_A4_rcmpneq(RdV, cpu_env, RsV, RtV);,
{RdV=(RsV!=RtV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A4_rcmpneq */
},
int32_t HELPER(A4_rcmpneq)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(RsV!=RtV); }
COUNT_HELPER(A4_rcmpneq);
return RdV;
})
DEF_QEMU(C2_bitsset,{PdV=f8BITSOF((RsV&RtV)==RtV);},
DEF_HELPER_3(C2_bitsset, s32, env, s32, s32),
{
/* C2_bitsset */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_C2_bitsset(gen_helper_C2_bitsset(PdV, cpu_env, RsV, RtV);,
{PdV=f8BITSOF((RsV&RtV)==RtV);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* C2_bitsset */
},
int32_t HELPER(C2_bitsset)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{PdV=f8BITSOF((RsV&RtV)==RtV);}
COUNT_HELPER(C2_bitsset);
return PdV;
})
DEF_QEMU(C2_bitsclr,{PdV=f8BITSOF((RsV&RtV)==0);},
DEF_HELPER_3(C2_bitsclr, s32, env, s32, s32),
{
/* C2_bitsclr */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_C2_bitsclr(gen_helper_C2_bitsclr(PdV, cpu_env, RsV, RtV);,
{PdV=f8BITSOF((RsV&RtV)==0);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* C2_bitsclr */
},
int32_t HELPER(C2_bitsclr)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{PdV=f8BITSOF((RsV&RtV)==0);}
COUNT_HELPER(C2_bitsclr);
return PdV;
})
DEF_QEMU(C4_nbitsset,{PdV=f8BITSOF((RsV&RtV)!=RtV);},
DEF_HELPER_3(C4_nbitsset, s32, env, s32, s32),
{
/* C4_nbitsset */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_C4_nbitsset(gen_helper_C4_nbitsset(PdV, cpu_env, RsV, RtV);,
{PdV=f8BITSOF((RsV&RtV)!=RtV);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* C4_nbitsset */
},
int32_t HELPER(C4_nbitsset)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{PdV=f8BITSOF((RsV&RtV)!=RtV);}
COUNT_HELPER(C4_nbitsset);
return PdV;
})
DEF_QEMU(C4_nbitsclr,{PdV=f8BITSOF((RsV&RtV)!=0);},
DEF_HELPER_3(C4_nbitsclr, s32, env, s32, s32),
{
/* C4_nbitsclr */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_C4_nbitsclr(gen_helper_C4_nbitsclr(PdV, cpu_env, RsV, RtV);,
{PdV=f8BITSOF((RsV&RtV)!=0);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* C4_nbitsclr */
},
int32_t HELPER(C4_nbitsclr)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{PdV=f8BITSOF((RsV&RtV)!=0);}
COUNT_HELPER(C4_nbitsclr);
return PdV;
})
DEF_QEMU(C2_cmpeqi,{fIMMEXT(siV); PdV=f8BITSOF(RsV==siV);},
DEF_HELPER_3(C2_cmpeqi, s32, env, s32, s32),
{
/* C2_cmpeqi */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_C2_cmpeqi(gen_helper_C2_cmpeqi(PdV, cpu_env, RsV, siV);,
{fIMMEXT(siV); PdV=f8BITSOF(RsV==siV);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* C2_cmpeqi */
},
int32_t HELPER(C2_cmpeqi)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{fIMMEXT(siV); PdV=f8BITSOF(RsV==siV);}
COUNT_HELPER(C2_cmpeqi);
return PdV;
})
DEF_QEMU(C2_cmpgti,{fIMMEXT(siV); PdV=f8BITSOF(RsV>siV);},
DEF_HELPER_3(C2_cmpgti, s32, env, s32, s32),
{
/* C2_cmpgti */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_C2_cmpgti(gen_helper_C2_cmpgti(PdV, cpu_env, RsV, siV);,
{fIMMEXT(siV); PdV=f8BITSOF(RsV>siV);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* C2_cmpgti */
},
int32_t HELPER(C2_cmpgti)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{fIMMEXT(siV); PdV=f8BITSOF(RsV>siV);}
COUNT_HELPER(C2_cmpgti);
return PdV;
})
DEF_QEMU(C2_cmpgtui,{fIMMEXT(uiV); PdV=f8BITSOF(fCAST4u(RsV)>fCAST4u(uiV));},
DEF_HELPER_3(C2_cmpgtui, s32, env, s32, s32),
{
/* C2_cmpgtui */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_C2_cmpgtui(gen_helper_C2_cmpgtui(PdV, cpu_env, RsV, uiV);,
{fIMMEXT(uiV); PdV=f8BITSOF(fCAST4u(RsV)>fCAST4u(uiV));})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* C2_cmpgtui */
},
int32_t HELPER(C2_cmpgtui)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{fIMMEXT(uiV); PdV=f8BITSOF(fCAST4u(RsV)>fCAST4u(uiV));}
COUNT_HELPER(C2_cmpgtui);
return PdV;
})
DEF_QEMU(C2_bitsclri,{PdV=f8BITSOF((RsV&uiV)==0);},
DEF_HELPER_3(C2_bitsclri, s32, env, s32, s32),
{
/* C2_bitsclri */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_C2_bitsclri(gen_helper_C2_bitsclri(PdV, cpu_env, RsV, uiV);,
{PdV=f8BITSOF((RsV&uiV)==0);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* C2_bitsclri */
},
int32_t HELPER(C2_bitsclri)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{PdV=f8BITSOF((RsV&uiV)==0);}
COUNT_HELPER(C2_bitsclri);
return PdV;
})
DEF_QEMU(C4_nbitsclri,{PdV=f8BITSOF((RsV&uiV)!=0);},
DEF_HELPER_3(C4_nbitsclri, s32, env, s32, s32),
{
/* C4_nbitsclri */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_C4_nbitsclri(gen_helper_C4_nbitsclri(PdV, cpu_env, RsV, uiV);,
{PdV=f8BITSOF((RsV&uiV)!=0);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* C4_nbitsclri */
},
int32_t HELPER(C4_nbitsclri)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{PdV=f8BITSOF((RsV&uiV)!=0);}
COUNT_HELPER(C4_nbitsclri);
return PdV;
})
DEF_QEMU(C4_cmpneqi,{fIMMEXT(siV); PdV=f8BITSOF(RsV!=siV);},
DEF_HELPER_3(C4_cmpneqi, s32, env, s32, s32),
{
/* C4_cmpneqi */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_C4_cmpneqi(gen_helper_C4_cmpneqi(PdV, cpu_env, RsV, siV);,
{fIMMEXT(siV); PdV=f8BITSOF(RsV!=siV);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* C4_cmpneqi */
},
int32_t HELPER(C4_cmpneqi)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{fIMMEXT(siV); PdV=f8BITSOF(RsV!=siV);}
COUNT_HELPER(C4_cmpneqi);
return PdV;
})
DEF_QEMU(C4_cmpltei,{fIMMEXT(siV); PdV=f8BITSOF(RsV<=siV);},
DEF_HELPER_3(C4_cmpltei, s32, env, s32, s32),
{
/* C4_cmpltei */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_C4_cmpltei(gen_helper_C4_cmpltei(PdV, cpu_env, RsV, siV);,
{fIMMEXT(siV); PdV=f8BITSOF(RsV<=siV);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* C4_cmpltei */
},
int32_t HELPER(C4_cmpltei)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{fIMMEXT(siV); PdV=f8BITSOF(RsV<=siV);}
COUNT_HELPER(C4_cmpltei);
return PdV;
})
DEF_QEMU(C4_cmplteui,{fIMMEXT(uiV); PdV=f8BITSOF(fCAST4u(RsV)<=fCAST4u(uiV));},
DEF_HELPER_3(C4_cmplteui, s32, env, s32, s32),
{
/* C4_cmplteui */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_C4_cmplteui(gen_helper_C4_cmplteui(PdV, cpu_env, RsV, uiV);,
{fIMMEXT(uiV); PdV=f8BITSOF(fCAST4u(RsV)<=fCAST4u(uiV));})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* C4_cmplteui */
},
int32_t HELPER(C4_cmplteui)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{fIMMEXT(uiV); PdV=f8BITSOF(fCAST4u(RsV)<=fCAST4u(uiV));}
COUNT_HELPER(C4_cmplteui);
return PdV;
})
DEF_QEMU(C4_cmpneq,{PdV=f8BITSOF(RsV!=RtV);},
DEF_HELPER_3(C4_cmpneq, s32, env, s32, s32),
{
/* C4_cmpneq */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_C4_cmpneq(gen_helper_C4_cmpneq(PdV, cpu_env, RsV, RtV);,
{PdV=f8BITSOF(RsV!=RtV);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* C4_cmpneq */
},
int32_t HELPER(C4_cmpneq)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{PdV=f8BITSOF(RsV!=RtV);}
COUNT_HELPER(C4_cmpneq);
return PdV;
})
DEF_QEMU(C4_cmplte,{PdV=f8BITSOF(RsV<=RtV);},
DEF_HELPER_3(C4_cmplte, s32, env, s32, s32),
{
/* C4_cmplte */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_C4_cmplte(gen_helper_C4_cmplte(PdV, cpu_env, RsV, RtV);,
{PdV=f8BITSOF(RsV<=RtV);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* C4_cmplte */
},
int32_t HELPER(C4_cmplte)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{PdV=f8BITSOF(RsV<=RtV);}
COUNT_HELPER(C4_cmplte);
return PdV;
})
DEF_QEMU(C4_cmplteu,{PdV=f8BITSOF(fCAST4u(RsV)<=fCAST4u(RtV));},
DEF_HELPER_3(C4_cmplteu, s32, env, s32, s32),
{
/* C4_cmplteu */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_C4_cmplteu(gen_helper_C4_cmplteu(PdV, cpu_env, RsV, RtV);,
{PdV=f8BITSOF(fCAST4u(RsV)<=fCAST4u(RtV));})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* C4_cmplteu */
},
int32_t HELPER(C4_cmplteu)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{PdV=f8BITSOF(fCAST4u(RsV)<=fCAST4u(RtV));}
COUNT_HELPER(C4_cmplteu);
return PdV;
})
DEF_QEMU(C2_and,{fPREDUSE_TIMING();PdV=PsV & PtV;},
DEF_HELPER_3(C2_and, s32, env, s32, s32),
{
/* C2_and */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_t(TCGv, PtV, PtN, 1, 0);
DECL_PREG_s(TCGv, PsV, PsN, 2, 0);
READ_PREG_t(PtV, PtN);
READ_PREG_s(PsV, PsN);
fWRAP_C2_and(gen_helper_C2_and(PdV, cpu_env, PtV, PsV);,
{fPREDUSE_TIMING();PdV=PsV & PtV;})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_t(PtV);
FREE_REG_s(PsV);
/* C2_and */
},
int32_t HELPER(C2_and)(CPUHexagonState *env, int32_t PtV, int32_t PsV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{fPREDUSE_TIMING();PdV=PsV & PtV;}
COUNT_HELPER(C2_and);
return PdV;
})
DEF_QEMU(C2_or,{fPREDUSE_TIMING();PdV=PsV | PtV;},
DEF_HELPER_3(C2_or, s32, env, s32, s32),
{
/* C2_or */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_t(TCGv, PtV, PtN, 1, 0);
DECL_PREG_s(TCGv, PsV, PsN, 2, 0);
READ_PREG_t(PtV, PtN);
READ_PREG_s(PsV, PsN);
fWRAP_C2_or(gen_helper_C2_or(PdV, cpu_env, PtV, PsV);,
{fPREDUSE_TIMING();PdV=PsV | PtV;})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_t(PtV);
FREE_REG_s(PsV);
/* C2_or */
},
int32_t HELPER(C2_or)(CPUHexagonState *env, int32_t PtV, int32_t PsV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{fPREDUSE_TIMING();PdV=PsV | PtV;}
COUNT_HELPER(C2_or);
return PdV;
})
DEF_QEMU(C2_xor,{fPREDUSE_TIMING();PdV=PsV ^ PtV;},
DEF_HELPER_3(C2_xor, s32, env, s32, s32),
{
/* C2_xor */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_s(TCGv, PsV, PsN, 1, 0);
DECL_PREG_t(TCGv, PtV, PtN, 2, 0);
READ_PREG_s(PsV, PsN);
READ_PREG_t(PtV, PtN);
fWRAP_C2_xor(gen_helper_C2_xor(PdV, cpu_env, PsV, PtV);,
{fPREDUSE_TIMING();PdV=PsV ^ PtV;})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(PsV);
FREE_REG_t(PtV);
/* C2_xor */
},
int32_t HELPER(C2_xor)(CPUHexagonState *env, int32_t PsV, int32_t PtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{fPREDUSE_TIMING();PdV=PsV ^ PtV;}
COUNT_HELPER(C2_xor);
return PdV;
})
DEF_QEMU(C2_andn,{fPREDUSE_TIMING();PdV=PtV & (~PsV);},
DEF_HELPER_3(C2_andn, s32, env, s32, s32),
{
/* C2_andn */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_t(TCGv, PtV, PtN, 1, 0);
DECL_PREG_s(TCGv, PsV, PsN, 2, 0);
READ_PREG_t(PtV, PtN);
READ_PREG_s(PsV, PsN);
fWRAP_C2_andn(gen_helper_C2_andn(PdV, cpu_env, PtV, PsV);,
{fPREDUSE_TIMING();PdV=PtV & (~PsV);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_t(PtV);
FREE_REG_s(PsV);
/* C2_andn */
},
int32_t HELPER(C2_andn)(CPUHexagonState *env, int32_t PtV, int32_t PsV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{fPREDUSE_TIMING();PdV=PtV & (~PsV);}
COUNT_HELPER(C2_andn);
return PdV;
})
DEF_QEMU(C2_not,{fPREDUSE_TIMING();PdV=~PsV;},
DEF_HELPER_2(C2_not, s32, env, s32),
{
/* C2_not */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_s(TCGv, PsV, PsN, 1, 0);
READ_PREG_s(PsV, PsN);
fWRAP_C2_not(gen_helper_C2_not(PdV, cpu_env, PsV);,
{fPREDUSE_TIMING();PdV=~PsV;})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(PsV);
/* C2_not */
},
int32_t HELPER(C2_not)(CPUHexagonState *env, int32_t PsV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{fPREDUSE_TIMING();PdV=~PsV;}
COUNT_HELPER(C2_not);
return PdV;
})
DEF_QEMU(C2_orn,{fPREDUSE_TIMING();PdV=PtV | (~PsV);},
DEF_HELPER_3(C2_orn, s32, env, s32, s32),
{
/* C2_orn */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_t(TCGv, PtV, PtN, 1, 0);
DECL_PREG_s(TCGv, PsV, PsN, 2, 0);
READ_PREG_t(PtV, PtN);
READ_PREG_s(PsV, PsN);
fWRAP_C2_orn(gen_helper_C2_orn(PdV, cpu_env, PtV, PsV);,
{fPREDUSE_TIMING();PdV=PtV | (~PsV);})
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_t(PtV);
FREE_REG_s(PsV);
/* C2_orn */
},
int32_t HELPER(C2_orn)(CPUHexagonState *env, int32_t PtV, int32_t PsV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{fPREDUSE_TIMING();PdV=PtV | (~PsV);}
COUNT_HELPER(C2_orn);
return PdV;
})
DEF_QEMU(C4_and_and,{ fPREDUSE_TIMING();PdV = PsV & PtV & PuV; },
DEF_HELPER_4(C4_and_and, s32, env, s32, s32, s32),
{
/* C4_and_and */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_s(TCGv, PsV, PsN, 1, 0);
DECL_PREG_t(TCGv, PtV, PtN, 2, 0);
DECL_PREG_u(TCGv, PuV, PuN, 3, 0);
READ_PREG_s(PsV, PsN);
READ_PREG_t(PtV, PtN);
READ_PREG_u(PuV, PuN);
fWRAP_C4_and_and(gen_helper_C4_and_and(PdV, cpu_env, PsV, PtV, PuV);,
{ fPREDUSE_TIMING();PdV = PsV & PtV & PuV; })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(PsV);
FREE_REG_t(PtV);
FREE_REG_u(PuV);
/* C4_and_and */
},
int32_t HELPER(C4_and_and)(CPUHexagonState *env, int32_t PsV, int32_t PtV, int32_t PuV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fPREDUSE_TIMING();PdV = PsV & PtV & PuV; }
COUNT_HELPER(C4_and_and);
return PdV;
})
DEF_QEMU(C4_and_or,{ fPREDUSE_TIMING();PdV = PsV & (PtV | PuV); },
DEF_HELPER_4(C4_and_or, s32, env, s32, s32, s32),
{
/* C4_and_or */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_s(TCGv, PsV, PsN, 1, 0);
DECL_PREG_t(TCGv, PtV, PtN, 2, 0);
DECL_PREG_u(TCGv, PuV, PuN, 3, 0);
READ_PREG_s(PsV, PsN);
READ_PREG_t(PtV, PtN);
READ_PREG_u(PuV, PuN);
fWRAP_C4_and_or(gen_helper_C4_and_or(PdV, cpu_env, PsV, PtV, PuV);,
{ fPREDUSE_TIMING();PdV = PsV & (PtV | PuV); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(PsV);
FREE_REG_t(PtV);
FREE_REG_u(PuV);
/* C4_and_or */
},
int32_t HELPER(C4_and_or)(CPUHexagonState *env, int32_t PsV, int32_t PtV, int32_t PuV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fPREDUSE_TIMING();PdV = PsV & (PtV | PuV); }
COUNT_HELPER(C4_and_or);
return PdV;
})
DEF_QEMU(C4_or_and,{ fPREDUSE_TIMING();PdV = PsV | (PtV & PuV); },
DEF_HELPER_4(C4_or_and, s32, env, s32, s32, s32),
{
/* C4_or_and */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_s(TCGv, PsV, PsN, 1, 0);
DECL_PREG_t(TCGv, PtV, PtN, 2, 0);
DECL_PREG_u(TCGv, PuV, PuN, 3, 0);
READ_PREG_s(PsV, PsN);
READ_PREG_t(PtV, PtN);
READ_PREG_u(PuV, PuN);
fWRAP_C4_or_and(gen_helper_C4_or_and(PdV, cpu_env, PsV, PtV, PuV);,
{ fPREDUSE_TIMING();PdV = PsV | (PtV & PuV); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(PsV);
FREE_REG_t(PtV);
FREE_REG_u(PuV);
/* C4_or_and */
},
int32_t HELPER(C4_or_and)(CPUHexagonState *env, int32_t PsV, int32_t PtV, int32_t PuV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fPREDUSE_TIMING();PdV = PsV | (PtV & PuV); }
COUNT_HELPER(C4_or_and);
return PdV;
})
DEF_QEMU(C4_or_or,{ fPREDUSE_TIMING();PdV = PsV | PtV | PuV; },
DEF_HELPER_4(C4_or_or, s32, env, s32, s32, s32),
{
/* C4_or_or */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_s(TCGv, PsV, PsN, 1, 0);
DECL_PREG_t(TCGv, PtV, PtN, 2, 0);
DECL_PREG_u(TCGv, PuV, PuN, 3, 0);
READ_PREG_s(PsV, PsN);
READ_PREG_t(PtV, PtN);
READ_PREG_u(PuV, PuN);
fWRAP_C4_or_or(gen_helper_C4_or_or(PdV, cpu_env, PsV, PtV, PuV);,
{ fPREDUSE_TIMING();PdV = PsV | PtV | PuV; })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(PsV);
FREE_REG_t(PtV);
FREE_REG_u(PuV);
/* C4_or_or */
},
int32_t HELPER(C4_or_or)(CPUHexagonState *env, int32_t PsV, int32_t PtV, int32_t PuV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fPREDUSE_TIMING();PdV = PsV | PtV | PuV; }
COUNT_HELPER(C4_or_or);
return PdV;
})
DEF_QEMU(C4_and_andn,{ fPREDUSE_TIMING();PdV = PsV & PtV & (~PuV); },
DEF_HELPER_4(C4_and_andn, s32, env, s32, s32, s32),
{
/* C4_and_andn */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_s(TCGv, PsV, PsN, 1, 0);
DECL_PREG_t(TCGv, PtV, PtN, 2, 0);
DECL_PREG_u(TCGv, PuV, PuN, 3, 0);
READ_PREG_s(PsV, PsN);
READ_PREG_t(PtV, PtN);
READ_PREG_u(PuV, PuN);
fWRAP_C4_and_andn(gen_helper_C4_and_andn(PdV, cpu_env, PsV, PtV, PuV);,
{ fPREDUSE_TIMING();PdV = PsV & PtV & (~PuV); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(PsV);
FREE_REG_t(PtV);
FREE_REG_u(PuV);
/* C4_and_andn */
},
int32_t HELPER(C4_and_andn)(CPUHexagonState *env, int32_t PsV, int32_t PtV, int32_t PuV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fPREDUSE_TIMING();PdV = PsV & PtV & (~PuV); }
COUNT_HELPER(C4_and_andn);
return PdV;
})
DEF_QEMU(C4_and_orn,{ fPREDUSE_TIMING();PdV = PsV & (PtV | (~PuV)); },
DEF_HELPER_4(C4_and_orn, s32, env, s32, s32, s32),
{
/* C4_and_orn */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_s(TCGv, PsV, PsN, 1, 0);
DECL_PREG_t(TCGv, PtV, PtN, 2, 0);
DECL_PREG_u(TCGv, PuV, PuN, 3, 0);
READ_PREG_s(PsV, PsN);
READ_PREG_t(PtV, PtN);
READ_PREG_u(PuV, PuN);
fWRAP_C4_and_orn(gen_helper_C4_and_orn(PdV, cpu_env, PsV, PtV, PuV);,
{ fPREDUSE_TIMING();PdV = PsV & (PtV | (~PuV)); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(PsV);
FREE_REG_t(PtV);
FREE_REG_u(PuV);
/* C4_and_orn */
},
int32_t HELPER(C4_and_orn)(CPUHexagonState *env, int32_t PsV, int32_t PtV, int32_t PuV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fPREDUSE_TIMING();PdV = PsV & (PtV | (~PuV)); }
COUNT_HELPER(C4_and_orn);
return PdV;
})
DEF_QEMU(C4_or_andn,{ fPREDUSE_TIMING();PdV = PsV | (PtV & (~PuV)); },
DEF_HELPER_4(C4_or_andn, s32, env, s32, s32, s32),
{
/* C4_or_andn */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_s(TCGv, PsV, PsN, 1, 0);
DECL_PREG_t(TCGv, PtV, PtN, 2, 0);
DECL_PREG_u(TCGv, PuV, PuN, 3, 0);
READ_PREG_s(PsV, PsN);
READ_PREG_t(PtV, PtN);
READ_PREG_u(PuV, PuN);
fWRAP_C4_or_andn(gen_helper_C4_or_andn(PdV, cpu_env, PsV, PtV, PuV);,
{ fPREDUSE_TIMING();PdV = PsV | (PtV & (~PuV)); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(PsV);
FREE_REG_t(PtV);
FREE_REG_u(PuV);
/* C4_or_andn */
},
int32_t HELPER(C4_or_andn)(CPUHexagonState *env, int32_t PsV, int32_t PtV, int32_t PuV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fPREDUSE_TIMING();PdV = PsV | (PtV & (~PuV)); }
COUNT_HELPER(C4_or_andn);
return PdV;
})
DEF_QEMU(C4_or_orn,{ fPREDUSE_TIMING();PdV = PsV | PtV | (~PuV); },
DEF_HELPER_4(C4_or_orn, s32, env, s32, s32, s32),
{
/* C4_or_orn */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_s(TCGv, PsV, PsN, 1, 0);
DECL_PREG_t(TCGv, PtV, PtN, 2, 0);
DECL_PREG_u(TCGv, PuV, PuN, 3, 0);
READ_PREG_s(PsV, PsN);
READ_PREG_t(PtV, PtN);
READ_PREG_u(PuV, PuN);
fWRAP_C4_or_orn(gen_helper_C4_or_orn(PdV, cpu_env, PsV, PtV, PuV);,
{ fPREDUSE_TIMING();PdV = PsV | PtV | (~PuV); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(PsV);
FREE_REG_t(PtV);
FREE_REG_u(PuV);
/* C4_or_orn */
},
int32_t HELPER(C4_or_orn)(CPUHexagonState *env, int32_t PsV, int32_t PtV, int32_t PuV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fPREDUSE_TIMING();PdV = PsV | PtV | (~PuV); }
COUNT_HELPER(C4_or_orn);
return PdV;
})
DEF_QEMU(C2_any8,{ fPREDUSE_TIMING();PsV ? (PdV=0xff) : (PdV=0x00); },
DEF_HELPER_2(C2_any8, s32, env, s32),
{
/* C2_any8 */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_s(TCGv, PsV, PsN, 1, 0);
READ_PREG_s(PsV, PsN);
fWRAP_C2_any8(gen_helper_C2_any8(PdV, cpu_env, PsV);,
{ fPREDUSE_TIMING();PsV ? (PdV=0xff) : (PdV=0x00); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(PsV);
/* C2_any8 */
},
int32_t HELPER(C2_any8)(CPUHexagonState *env, int32_t PsV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fPREDUSE_TIMING();PsV ? (PdV=0xff) : (PdV=0x00); }
COUNT_HELPER(C2_any8);
return PdV;
})
DEF_QEMU(C2_all8,{ fPREDUSE_TIMING();(PsV==0xff) ? (PdV=0xff) : (PdV=0x00); },
DEF_HELPER_2(C2_all8, s32, env, s32),
{
/* C2_all8 */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_s(TCGv, PsV, PsN, 1, 0);
READ_PREG_s(PsV, PsN);
fWRAP_C2_all8(gen_helper_C2_all8(PdV, cpu_env, PsV);,
{ fPREDUSE_TIMING();(PsV==0xff) ? (PdV=0xff) : (PdV=0x00); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(PsV);
/* C2_all8 */
},
int32_t HELPER(C2_all8)(CPUHexagonState *env, int32_t PsV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fPREDUSE_TIMING();(PsV==0xff) ? (PdV=0xff) : (PdV=0x00); }
COUNT_HELPER(C2_all8);
return PdV;
})
DEF_QEMU(C2_vitpack,{ fPREDUSE_TIMING();RdV = (PsV&0x55) | (PtV&0xAA); },
DEF_HELPER_3(C2_vitpack, s32, env, s32, s32),
{
/* C2_vitpack */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PREG_s(TCGv, PsV, PsN, 1, 0);
DECL_PREG_t(TCGv, PtV, PtN, 2, 0);
READ_PREG_s(PsV, PsN);
READ_PREG_t(PtV, PtN);
fWRAP_C2_vitpack(gen_helper_C2_vitpack(RdV, cpu_env, PsV, PtV);,
{ fPREDUSE_TIMING();RdV = (PsV&0x55) | (PtV&0xAA); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(PsV);
FREE_REG_t(PtV);
/* C2_vitpack */
},
int32_t HELPER(C2_vitpack)(CPUHexagonState *env, int32_t PsV, int32_t PtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fPREDUSE_TIMING();RdV = (PsV&0x55) | (PtV&0xAA); }
COUNT_HELPER(C2_vitpack);
return RdV;
})
DEF_QEMU(C2_mux,{ fPREDUSE_TIMING();(fLSBOLD(PuV)) ? (RdV=RsV):(RdV=RtV); },
DEF_HELPER_4(C2_mux, s32, env, s32, s32, s32),
{
/* C2_mux */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PREG_u(TCGv, PuV, PuN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_C2_mux(gen_helper_C2_mux(RdV, cpu_env, PuV, RsV, RtV);,
{ fPREDUSE_TIMING();(fLSBOLD(PuV)) ? (RdV=RsV):(RdV=RtV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_u(PuV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* C2_mux */
},
int32_t HELPER(C2_mux)(CPUHexagonState *env, int32_t PuV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fPREDUSE_TIMING();(fLSBOLD(PuV)) ? (RdV=RsV):(RdV=RtV); }
COUNT_HELPER(C2_mux);
return RdV;
})
DEF_QEMU(C2_cmovenewit,{ fIMMEXT(siV); if (fLSBNEW(PuN)) RdV=siV; else CANCEL;},
DEF_HELPER_4(C2_cmovenewit, s32, env, s32, s32, i32),
{
/* C2_cmovenewit */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PuN, PuX);
fWRAP_C2_cmovenewit(SLOT_WRAP(gen_helper_C2_cmovenewit(RdV, cpu_env, PuN, siV, slot));,
{ fIMMEXT(siV); if (fLSBNEW(PuN)) RdV=siV; else CANCEL;})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_IMM(siV);
/* C2_cmovenewit */
},
int32_t HELPER(C2_cmovenewit)(CPUHexagonState *env, int32_t PuN, int32_t siV, uint32_t slot)
{
int32_t RdV = 0;
{ fIMMEXT(siV); if (fLSBNEW(PuN)) RdV=siV; else CANCEL;}
COUNT_HELPER(C2_cmovenewit);
return RdV;
})
DEF_QEMU(C2_cmovenewif,{ fIMMEXT(siV); if (fLSBNEWNOT(PuN)) RdV=siV; else CANCEL;},
DEF_HELPER_4(C2_cmovenewif, s32, env, s32, s32, i32),
{
/* C2_cmovenewif */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PuN, PuX);
fWRAP_C2_cmovenewif(SLOT_WRAP(gen_helper_C2_cmovenewif(RdV, cpu_env, PuN, siV, slot));,
{ fIMMEXT(siV); if (fLSBNEWNOT(PuN)) RdV=siV; else CANCEL;})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_IMM(siV);
/* C2_cmovenewif */
},
int32_t HELPER(C2_cmovenewif)(CPUHexagonState *env, int32_t PuN, int32_t siV, uint32_t slot)
{
int32_t RdV = 0;
{ fIMMEXT(siV); if (fLSBNEWNOT(PuN)) RdV=siV; else CANCEL;}
COUNT_HELPER(C2_cmovenewif);
return RdV;
})
DEF_QEMU(C2_cmoveit,{ fIMMEXT(siV); if (fLSBOLD(PuV)) RdV=siV; else CANCEL;},
DEF_HELPER_4(C2_cmoveit, s32, env, s32, s32, i32),
{
/* C2_cmoveit */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(siV,0);
READ_PREG_u(PuV, PuN);
fWRAP_C2_cmoveit(SLOT_WRAP(gen_helper_C2_cmoveit(RdV, cpu_env, PuV, siV, slot));,
{ fIMMEXT(siV); if (fLSBOLD(PuV)) RdV=siV; else CANCEL;})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_IMM(siV);
/* C2_cmoveit */
},
int32_t HELPER(C2_cmoveit)(CPUHexagonState *env, int32_t PuV, int32_t siV, uint32_t slot)
{
int32_t RdV = 0;
{ fIMMEXT(siV); if (fLSBOLD(PuV)) RdV=siV; else CANCEL;}
COUNT_HELPER(C2_cmoveit);
return RdV;
})
DEF_QEMU(C2_cmoveif,{ fIMMEXT(siV); if (fLSBOLDNOT(PuV)) RdV=siV; else CANCEL;},
DEF_HELPER_4(C2_cmoveif, s32, env, s32, s32, i32),
{
/* C2_cmoveif */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_IMM(siV,0);
READ_PREG_u(PuV, PuN);
fWRAP_C2_cmoveif(SLOT_WRAP(gen_helper_C2_cmoveif(RdV, cpu_env, PuV, siV, slot));,
{ fIMMEXT(siV); if (fLSBOLDNOT(PuV)) RdV=siV; else CANCEL;})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_IMM(siV);
/* C2_cmoveif */
},
int32_t HELPER(C2_cmoveif)(CPUHexagonState *env, int32_t PuV, int32_t siV, uint32_t slot)
{
int32_t RdV = 0;
{ fIMMEXT(siV); if (fLSBOLDNOT(PuV)) RdV=siV; else CANCEL;}
COUNT_HELPER(C2_cmoveif);
return RdV;
})
DEF_QEMU(C2_ccombinewnewt,{ if (fLSBNEW(PuN)) { fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); } else {CANCEL;} },
DEF_HELPER_5(C2_ccombinewnewt, s64, env, s32, s32, s32, i32),
{
/* C2_ccombinewnewt */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_C2_ccombinewnewt(SLOT_WRAP(gen_helper_C2_ccombinewnewt(RddV, cpu_env, PuN, RsV, RtV, slot));,
{ if (fLSBNEW(PuN)) { fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); } else {CANCEL;} })
WRITE_RREG_PAIR(RddN,RddV);
FREE_NEW_PREG(PuN);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* C2_ccombinewnewt */
},
int64_t HELPER(C2_ccombinewnewt)(CPUHexagonState *env, int32_t PuN, int32_t RsV, int32_t RtV, uint32_t slot)
{
int64_t RddV = 0;
{ if (fLSBNEW(PuN)) { fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); } else {CANCEL;} }
COUNT_HELPER(C2_ccombinewnewt);
return RddV;
})
DEF_QEMU(C2_ccombinewnewf,{ if (fLSBNEWNOT(PuN)) { fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); } else {CANCEL;} },
DEF_HELPER_5(C2_ccombinewnewf, s64, env, s32, s32, s32, i32),
{
/* C2_ccombinewnewf */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_C2_ccombinewnewf(SLOT_WRAP(gen_helper_C2_ccombinewnewf(RddV, cpu_env, PuN, RsV, RtV, slot));,
{ if (fLSBNEWNOT(PuN)) { fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); } else {CANCEL;} })
WRITE_RREG_PAIR(RddN,RddV);
FREE_NEW_PREG(PuN);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* C2_ccombinewnewf */
},
int64_t HELPER(C2_ccombinewnewf)(CPUHexagonState *env, int32_t PuN, int32_t RsV, int32_t RtV, uint32_t slot)
{
int64_t RddV = 0;
{ if (fLSBNEWNOT(PuN)) { fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); } else {CANCEL;} }
COUNT_HELPER(C2_ccombinewnewf);
return RddV;
})
DEF_QEMU(C2_ccombinewt,{ if (fLSBOLD(PuV)) { fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); } else {CANCEL;} },
DEF_HELPER_5(C2_ccombinewt, s64, env, s32, s32, s32, i32),
{
/* C2_ccombinewt */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_C2_ccombinewt(SLOT_WRAP(gen_helper_C2_ccombinewt(RddV, cpu_env, PuV, RsV, RtV, slot));,
{ if (fLSBOLD(PuV)) { fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); } else {CANCEL;} })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_u(PuV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* C2_ccombinewt */
},
int64_t HELPER(C2_ccombinewt)(CPUHexagonState *env, int32_t PuV, int32_t RsV, int32_t RtV, uint32_t slot)
{
int64_t RddV = 0;
{ if (fLSBOLD(PuV)) { fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); } else {CANCEL;} }
COUNT_HELPER(C2_ccombinewt);
return RddV;
})
DEF_QEMU(C2_ccombinewf,{ if (fLSBOLDNOT(PuV)) { fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); } else {CANCEL;} },
DEF_HELPER_5(C2_ccombinewf, s64, env, s32, s32, s32, i32),
{
/* C2_ccombinewf */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_C2_ccombinewf(SLOT_WRAP(gen_helper_C2_ccombinewf(RddV, cpu_env, PuV, RsV, RtV, slot));,
{ if (fLSBOLDNOT(PuV)) { fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); } else {CANCEL;} })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_u(PuV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* C2_ccombinewf */
},
int64_t HELPER(C2_ccombinewf)(CPUHexagonState *env, int32_t PuV, int32_t RsV, int32_t RtV, uint32_t slot)
{
int64_t RddV = 0;
{ if (fLSBOLDNOT(PuV)) { fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); } else {CANCEL;} }
COUNT_HELPER(C2_ccombinewf);
return RddV;
})
DEF_QEMU(C2_muxii,{ fPREDUSE_TIMING();fIMMEXT(siV); (fLSBOLD(PuV)) ? (RdV=siV):(RdV=SiV); },
DEF_HELPER_4(C2_muxii, s32, env, s32, s32, s32),
{
/* C2_muxii */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PREG_u(TCGv, PuV, PuN, 1, 0);
DECL_IMM(siV,0);
DECL_IMM(SiV,1);
READ_PREG_u(PuV, PuN);
fWRAP_C2_muxii(gen_helper_C2_muxii(RdV, cpu_env, PuV, siV, SiV);,
{ fPREDUSE_TIMING();fIMMEXT(siV); (fLSBOLD(PuV)) ? (RdV=siV):(RdV=SiV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_u(PuV);
FREE_IMM(siV);
FREE_IMM(SiV);
/* C2_muxii */
},
int32_t HELPER(C2_muxii)(CPUHexagonState *env, int32_t PuV, int32_t siV, int32_t SiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fPREDUSE_TIMING();fIMMEXT(siV); (fLSBOLD(PuV)) ? (RdV=siV):(RdV=SiV); }
COUNT_HELPER(C2_muxii);
return RdV;
})
DEF_QEMU(C2_muxir,{ fPREDUSE_TIMING();fIMMEXT(siV); (fLSBOLD(PuV)) ? (RdV=RsV):(RdV=siV); },
DEF_HELPER_4(C2_muxir, s32, env, s32, s32, s32),
{
/* C2_muxir */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PREG_u(TCGv, PuV, PuN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_C2_muxir(gen_helper_C2_muxir(RdV, cpu_env, PuV, RsV, siV);,
{ fPREDUSE_TIMING();fIMMEXT(siV); (fLSBOLD(PuV)) ? (RdV=RsV):(RdV=siV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_u(PuV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* C2_muxir */
},
int32_t HELPER(C2_muxir)(CPUHexagonState *env, int32_t PuV, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fPREDUSE_TIMING();fIMMEXT(siV); (fLSBOLD(PuV)) ? (RdV=RsV):(RdV=siV); }
COUNT_HELPER(C2_muxir);
return RdV;
})
DEF_QEMU(C2_muxri,{ fPREDUSE_TIMING();fIMMEXT(siV); (fLSBOLD(PuV)) ? (RdV=siV):(RdV=RsV); },
DEF_HELPER_4(C2_muxri, s32, env, s32, s32, s32),
{
/* C2_muxri */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PREG_u(TCGv, PuV, PuN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_C2_muxri(gen_helper_C2_muxri(RdV, cpu_env, PuV, RsV, siV);,
{ fPREDUSE_TIMING();fIMMEXT(siV); (fLSBOLD(PuV)) ? (RdV=siV):(RdV=RsV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_u(PuV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* C2_muxri */
},
int32_t HELPER(C2_muxri)(CPUHexagonState *env, int32_t PuV, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fPREDUSE_TIMING();fIMMEXT(siV); (fLSBOLD(PuV)) ? (RdV=siV):(RdV=RsV); }
COUNT_HELPER(C2_muxri);
return RdV;
})
DEF_QEMU(C2_vmux,{ fPREDUSE_TIMING(); fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,(fGETBIT(i,PuV)?(fGETBYTE(i,RssV)):(fGETBYTE(i,RttV)))); } },
DEF_HELPER_4(C2_vmux, s64, env, s32, s64, s64),
{
/* C2_vmux */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PREG_u(TCGv, PuV, PuN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 3, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_C2_vmux(gen_helper_C2_vmux(RddV, cpu_env, PuV, RssV, RttV);,
{ fPREDUSE_TIMING(); fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,(fGETBIT(i,PuV)?(fGETBYTE(i,RssV)):(fGETBYTE(i,RttV)))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_u(PuV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* C2_vmux */
},
int64_t HELPER(C2_vmux)(CPUHexagonState *env, int32_t PuV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fPREDUSE_TIMING(); fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,(fGETBIT(i,PuV)?(fGETBYTE(i,RssV)):(fGETBYTE(i,RttV)))); } }
COUNT_HELPER(C2_vmux);
return RddV;
})
DEF_QEMU(C2_mask,{ fPREDUSE_TIMING(); fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,(fGETBIT(i,PtV)?(0xff):(0x00))); } },
DEF_HELPER_2(C2_mask, s64, env, s32),
{
/* C2_mask */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PREG_t(TCGv, PtV, PtN, 1, 0);
READ_PREG_t(PtV, PtN);
fWRAP_C2_mask(gen_helper_C2_mask(RddV, cpu_env, PtV);,
{ fPREDUSE_TIMING(); fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,(fGETBIT(i,PtV)?(0xff):(0x00))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_t(PtV);
/* C2_mask */
},
int64_t HELPER(C2_mask)(CPUHexagonState *env, int32_t PtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fPREDUSE_TIMING(); fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,(fGETBIT(i,PtV)?(0xff):(0x00))); } }
COUNT_HELPER(C2_mask);
return RddV;
})
DEF_QEMU(A2_vcmpbeq,{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETBYTE(i,RssV) == fGETBYTE(i,RttV))); } },
DEF_HELPER_3(A2_vcmpbeq, s32, env, s64, s64),
{
/* A2_vcmpbeq */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vcmpbeq(gen_helper_A2_vcmpbeq(PdV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETBYTE(i,RssV) == fGETBYTE(i,RttV))); } })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vcmpbeq */
},
int32_t HELPER(A2_vcmpbeq)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETBYTE(i,RssV) == fGETBYTE(i,RttV))); } }
COUNT_HELPER(A2_vcmpbeq);
return PdV;
})
DEF_QEMU(A4_vcmpbeqi,{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETUBYTE(i,RssV) == uiV)); } },
DEF_HELPER_3(A4_vcmpbeqi, s32, env, s64, s32),
{
/* A4_vcmpbeqi */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A4_vcmpbeqi(gen_helper_A4_vcmpbeqi(PdV, cpu_env, RssV, uiV);,
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETUBYTE(i,RssV) == uiV)); } })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* A4_vcmpbeqi */
},
int32_t HELPER(A4_vcmpbeqi)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETUBYTE(i,RssV) == uiV)); } }
COUNT_HELPER(A4_vcmpbeqi);
return PdV;
})
DEF_QEMU(A4_vcmpbeq_any,{ fHIDE(int i;) PdV = 0; for (i = 0; i < 8; i++) { if (fGETBYTE(i,RssV) == fGETBYTE(i,RttV)) PdV = 0xff; } },
DEF_HELPER_3(A4_vcmpbeq_any, s32, env, s64, s64),
{
/* A4_vcmpbeq_any */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A4_vcmpbeq_any(gen_helper_A4_vcmpbeq_any(PdV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) PdV = 0; for (i = 0; i < 8; i++) { if (fGETBYTE(i,RssV) == fGETBYTE(i,RttV)) PdV = 0xff; } })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A4_vcmpbeq_any */
},
int32_t HELPER(A4_vcmpbeq_any)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fHIDE(int i;) PdV = 0; for (i = 0; i < 8; i++) { if (fGETBYTE(i,RssV) == fGETBYTE(i,RttV)) PdV = 0xff; } }
COUNT_HELPER(A4_vcmpbeq_any);
return PdV;
})
DEF_QEMU(A6_vcmpbeq_notany,{ fHIDE(int i;) PdV = 0; for (i = 0; i < 8; i++) { if (fGETBYTE(i,RssV) == fGETBYTE(i,RttV)) PdV = 0xff; } PdV = ~PdV; },
DEF_HELPER_3(A6_vcmpbeq_notany, s32, env, s64, s64),
{
/* A6_vcmpbeq_notany */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A6_vcmpbeq_notany(gen_helper_A6_vcmpbeq_notany(PdV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) PdV = 0; for (i = 0; i < 8; i++) { if (fGETBYTE(i,RssV) == fGETBYTE(i,RttV)) PdV = 0xff; } PdV = ~PdV; })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A6_vcmpbeq_notany */
},
int32_t HELPER(A6_vcmpbeq_notany)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fHIDE(int i;) PdV = 0; for (i = 0; i < 8; i++) { if (fGETBYTE(i,RssV) == fGETBYTE(i,RttV)) PdV = 0xff; } PdV = ~PdV; }
COUNT_HELPER(A6_vcmpbeq_notany);
return PdV;
})
DEF_QEMU(A2_vcmpbgtu,{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETUBYTE(i,RssV) > fGETUBYTE(i,RttV))); } },
DEF_HELPER_3(A2_vcmpbgtu, s32, env, s64, s64),
{
/* A2_vcmpbgtu */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vcmpbgtu(gen_helper_A2_vcmpbgtu(PdV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETUBYTE(i,RssV) > fGETUBYTE(i,RttV))); } })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vcmpbgtu */
},
int32_t HELPER(A2_vcmpbgtu)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETUBYTE(i,RssV) > fGETUBYTE(i,RttV))); } }
COUNT_HELPER(A2_vcmpbgtu);
return PdV;
})
DEF_QEMU(A4_vcmpbgtui,{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETUBYTE(i,RssV) > uiV)); } },
DEF_HELPER_3(A4_vcmpbgtui, s32, env, s64, s32),
{
/* A4_vcmpbgtui */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A4_vcmpbgtui(gen_helper_A4_vcmpbgtui(PdV, cpu_env, RssV, uiV);,
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETUBYTE(i,RssV) > uiV)); } })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* A4_vcmpbgtui */
},
int32_t HELPER(A4_vcmpbgtui)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETUBYTE(i,RssV) > uiV)); } }
COUNT_HELPER(A4_vcmpbgtui);
return PdV;
})
DEF_QEMU(A4_vcmpbgt,{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETBYTE(i,RssV) > fGETBYTE(i,RttV))); } },
DEF_HELPER_3(A4_vcmpbgt, s32, env, s64, s64),
{
/* A4_vcmpbgt */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A4_vcmpbgt(gen_helper_A4_vcmpbgt(PdV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETBYTE(i,RssV) > fGETBYTE(i,RttV))); } })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A4_vcmpbgt */
},
int32_t HELPER(A4_vcmpbgt)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETBYTE(i,RssV) > fGETBYTE(i,RttV))); } }
COUNT_HELPER(A4_vcmpbgt);
return PdV;
})
DEF_QEMU(A4_vcmpbgti,{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETBYTE(i,RssV) > siV)); } },
DEF_HELPER_3(A4_vcmpbgti, s32, env, s64, s32),
{
/* A4_vcmpbgti */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A4_vcmpbgti(gen_helper_A4_vcmpbgti(PdV, cpu_env, RssV, siV);,
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETBYTE(i,RssV) > siV)); } })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_IMM(siV);
/* A4_vcmpbgti */
},
int32_t HELPER(A4_vcmpbgti)(CPUHexagonState *env, int64_t RssV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETBYTE(i,RssV) > siV)); } }
COUNT_HELPER(A4_vcmpbgti);
return PdV;
})
DEF_QEMU(A4_cmpbeq,{ PdV=f8BITSOF(fGETBYTE(0,RsV) == fGETBYTE(0,RtV)); },
DEF_HELPER_3(A4_cmpbeq, s32, env, s32, s32),
{
/* A4_cmpbeq */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A4_cmpbeq(gen_helper_A4_cmpbeq(PdV, cpu_env, RsV, RtV);,
{ PdV=f8BITSOF(fGETBYTE(0,RsV) == fGETBYTE(0,RtV)); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A4_cmpbeq */
},
int32_t HELPER(A4_cmpbeq)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ PdV=f8BITSOF(fGETBYTE(0,RsV) == fGETBYTE(0,RtV)); }
COUNT_HELPER(A4_cmpbeq);
return PdV;
})
DEF_QEMU(A4_cmpbeqi,{ PdV=f8BITSOF(fGETUBYTE(0,RsV) == uiV); },
DEF_HELPER_3(A4_cmpbeqi, s32, env, s32, s32),
{
/* A4_cmpbeqi */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A4_cmpbeqi(gen_helper_A4_cmpbeqi(PdV, cpu_env, RsV, uiV);,
{ PdV=f8BITSOF(fGETUBYTE(0,RsV) == uiV); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* A4_cmpbeqi */
},
int32_t HELPER(A4_cmpbeqi)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ PdV=f8BITSOF(fGETUBYTE(0,RsV) == uiV); }
COUNT_HELPER(A4_cmpbeqi);
return PdV;
})
DEF_QEMU(A4_cmpbgtu,{ PdV=f8BITSOF(fGETUBYTE(0,RsV) > fGETUBYTE(0,RtV)); },
DEF_HELPER_3(A4_cmpbgtu, s32, env, s32, s32),
{
/* A4_cmpbgtu */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A4_cmpbgtu(gen_helper_A4_cmpbgtu(PdV, cpu_env, RsV, RtV);,
{ PdV=f8BITSOF(fGETUBYTE(0,RsV) > fGETUBYTE(0,RtV)); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A4_cmpbgtu */
},
int32_t HELPER(A4_cmpbgtu)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ PdV=f8BITSOF(fGETUBYTE(0,RsV) > fGETUBYTE(0,RtV)); }
COUNT_HELPER(A4_cmpbgtu);
return PdV;
})
DEF_QEMU(A4_cmpbgtui,{ fIMMEXT(uiV); PdV=f8BITSOF(fGETUBYTE(0,RsV) > fCAST4u(uiV)); },
DEF_HELPER_3(A4_cmpbgtui, s32, env, s32, s32),
{
/* A4_cmpbgtui */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A4_cmpbgtui(gen_helper_A4_cmpbgtui(PdV, cpu_env, RsV, uiV);,
{ fIMMEXT(uiV); PdV=f8BITSOF(fGETUBYTE(0,RsV) > fCAST4u(uiV)); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* A4_cmpbgtui */
},
int32_t HELPER(A4_cmpbgtui)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fIMMEXT(uiV); PdV=f8BITSOF(fGETUBYTE(0,RsV) > fCAST4u(uiV)); }
COUNT_HELPER(A4_cmpbgtui);
return PdV;
})
DEF_QEMU(A4_cmpbgt,{ PdV=f8BITSOF(fGETBYTE(0,RsV) > fGETBYTE(0,RtV)); },
DEF_HELPER_3(A4_cmpbgt, s32, env, s32, s32),
{
/* A4_cmpbgt */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A4_cmpbgt(gen_helper_A4_cmpbgt(PdV, cpu_env, RsV, RtV);,
{ PdV=f8BITSOF(fGETBYTE(0,RsV) > fGETBYTE(0,RtV)); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A4_cmpbgt */
},
int32_t HELPER(A4_cmpbgt)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ PdV=f8BITSOF(fGETBYTE(0,RsV) > fGETBYTE(0,RtV)); }
COUNT_HELPER(A4_cmpbgt);
return PdV;
})
DEF_QEMU(A4_cmpbgti,{ PdV=f8BITSOF(fGETBYTE(0,RsV) > siV); },
DEF_HELPER_3(A4_cmpbgti, s32, env, s32, s32),
{
/* A4_cmpbgti */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A4_cmpbgti(gen_helper_A4_cmpbgti(PdV, cpu_env, RsV, siV);,
{ PdV=f8BITSOF(fGETBYTE(0,RsV) > siV); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* A4_cmpbgti */
},
int32_t HELPER(A4_cmpbgti)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ PdV=f8BITSOF(fGETBYTE(0,RsV) > siV); }
COUNT_HELPER(A4_cmpbgti);
return PdV;
})
DEF_QEMU(A2_vcmpheq,{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2,PdV, (fGETHALF(i,RssV) == fGETHALF(i,RttV))); fSETBIT(i*2+1,PdV,(fGETHALF(i,RssV) == fGETHALF(i,RttV))); } },
DEF_HELPER_3(A2_vcmpheq, s32, env, s64, s64),
{
/* A2_vcmpheq */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vcmpheq(gen_helper_A2_vcmpheq(PdV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2,PdV, (fGETHALF(i,RssV) == fGETHALF(i,RttV))); fSETBIT(i*2+1,PdV,(fGETHALF(i,RssV) == fGETHALF(i,RttV))); } })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vcmpheq */
},
int32_t HELPER(A2_vcmpheq)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2,PdV, (fGETHALF(i,RssV) == fGETHALF(i,RttV))); fSETBIT(i*2+1,PdV,(fGETHALF(i,RssV) == fGETHALF(i,RttV))); } }
COUNT_HELPER(A2_vcmpheq);
return PdV;
})
DEF_QEMU(A2_vcmphgt,{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2, PdV, (fGETHALF(i,RssV) > fGETHALF(i,RttV))); fSETBIT(i*2+1,PdV, (fGETHALF(i,RssV) > fGETHALF(i,RttV))); } },
DEF_HELPER_3(A2_vcmphgt, s32, env, s64, s64),
{
/* A2_vcmphgt */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vcmphgt(gen_helper_A2_vcmphgt(PdV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2, PdV, (fGETHALF(i,RssV) > fGETHALF(i,RttV))); fSETBIT(i*2+1,PdV, (fGETHALF(i,RssV) > fGETHALF(i,RttV))); } })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vcmphgt */
},
int32_t HELPER(A2_vcmphgt)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2, PdV, (fGETHALF(i,RssV) > fGETHALF(i,RttV))); fSETBIT(i*2+1,PdV, (fGETHALF(i,RssV) > fGETHALF(i,RttV))); } }
COUNT_HELPER(A2_vcmphgt);
return PdV;
})
DEF_QEMU(A2_vcmphgtu,{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2, PdV, (fGETUHALF(i,RssV) > fGETUHALF(i,RttV))); fSETBIT(i*2+1,PdV, (fGETUHALF(i,RssV) > fGETUHALF(i,RttV))); } },
DEF_HELPER_3(A2_vcmphgtu, s32, env, s64, s64),
{
/* A2_vcmphgtu */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vcmphgtu(gen_helper_A2_vcmphgtu(PdV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2, PdV, (fGETUHALF(i,RssV) > fGETUHALF(i,RttV))); fSETBIT(i*2+1,PdV, (fGETUHALF(i,RssV) > fGETUHALF(i,RttV))); } })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vcmphgtu */
},
int32_t HELPER(A2_vcmphgtu)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2, PdV, (fGETUHALF(i,RssV) > fGETUHALF(i,RttV))); fSETBIT(i*2+1,PdV, (fGETUHALF(i,RssV) > fGETUHALF(i,RttV))); } }
COUNT_HELPER(A2_vcmphgtu);
return PdV;
})
DEF_QEMU(A4_vcmpheqi,{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2,PdV, (fGETHALF(i,RssV) == siV)); fSETBIT(i*2+1,PdV,(fGETHALF(i,RssV) == siV)); } },
DEF_HELPER_3(A4_vcmpheqi, s32, env, s64, s32),
{
/* A4_vcmpheqi */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A4_vcmpheqi(gen_helper_A4_vcmpheqi(PdV, cpu_env, RssV, siV);,
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2,PdV, (fGETHALF(i,RssV) == siV)); fSETBIT(i*2+1,PdV,(fGETHALF(i,RssV) == siV)); } })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_IMM(siV);
/* A4_vcmpheqi */
},
int32_t HELPER(A4_vcmpheqi)(CPUHexagonState *env, int64_t RssV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2,PdV, (fGETHALF(i,RssV) == siV)); fSETBIT(i*2+1,PdV,(fGETHALF(i,RssV) == siV)); } }
COUNT_HELPER(A4_vcmpheqi);
return PdV;
})
DEF_QEMU(A4_vcmphgti,{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2, PdV, (fGETHALF(i,RssV) > siV)); fSETBIT(i*2+1,PdV, (fGETHALF(i,RssV) > siV)); } },
DEF_HELPER_3(A4_vcmphgti, s32, env, s64, s32),
{
/* A4_vcmphgti */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A4_vcmphgti(gen_helper_A4_vcmphgti(PdV, cpu_env, RssV, siV);,
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2, PdV, (fGETHALF(i,RssV) > siV)); fSETBIT(i*2+1,PdV, (fGETHALF(i,RssV) > siV)); } })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_IMM(siV);
/* A4_vcmphgti */
},
int32_t HELPER(A4_vcmphgti)(CPUHexagonState *env, int64_t RssV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2, PdV, (fGETHALF(i,RssV) > siV)); fSETBIT(i*2+1,PdV, (fGETHALF(i,RssV) > siV)); } }
COUNT_HELPER(A4_vcmphgti);
return PdV;
})
DEF_QEMU(A4_vcmphgtui,{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2, PdV, (fGETUHALF(i,RssV) > uiV)); fSETBIT(i*2+1,PdV, (fGETUHALF(i,RssV) > uiV)); } },
DEF_HELPER_3(A4_vcmphgtui, s32, env, s64, s32),
{
/* A4_vcmphgtui */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A4_vcmphgtui(gen_helper_A4_vcmphgtui(PdV, cpu_env, RssV, uiV);,
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2, PdV, (fGETUHALF(i,RssV) > uiV)); fSETBIT(i*2+1,PdV, (fGETUHALF(i,RssV) > uiV)); } })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* A4_vcmphgtui */
},
int32_t HELPER(A4_vcmphgtui)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2, PdV, (fGETUHALF(i,RssV) > uiV)); fSETBIT(i*2+1,PdV, (fGETUHALF(i,RssV) > uiV)); } }
COUNT_HELPER(A4_vcmphgtui);
return PdV;
})
DEF_QEMU(A4_cmpheq,{ PdV=f8BITSOF(fGETHALF(0,RsV) == fGETHALF(0,RtV)); },
DEF_HELPER_3(A4_cmpheq, s32, env, s32, s32),
{
/* A4_cmpheq */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A4_cmpheq(gen_helper_A4_cmpheq(PdV, cpu_env, RsV, RtV);,
{ PdV=f8BITSOF(fGETHALF(0,RsV) == fGETHALF(0,RtV)); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A4_cmpheq */
},
int32_t HELPER(A4_cmpheq)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ PdV=f8BITSOF(fGETHALF(0,RsV) == fGETHALF(0,RtV)); }
COUNT_HELPER(A4_cmpheq);
return PdV;
})
DEF_QEMU(A4_cmphgt,{ PdV=f8BITSOF(fGETHALF(0,RsV) > fGETHALF(0,RtV)); },
DEF_HELPER_3(A4_cmphgt, s32, env, s32, s32),
{
/* A4_cmphgt */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A4_cmphgt(gen_helper_A4_cmphgt(PdV, cpu_env, RsV, RtV);,
{ PdV=f8BITSOF(fGETHALF(0,RsV) > fGETHALF(0,RtV)); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A4_cmphgt */
},
int32_t HELPER(A4_cmphgt)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ PdV=f8BITSOF(fGETHALF(0,RsV) > fGETHALF(0,RtV)); }
COUNT_HELPER(A4_cmphgt);
return PdV;
})
DEF_QEMU(A4_cmphgtu,{ PdV=f8BITSOF(fGETUHALF(0,RsV) > fGETUHALF(0,RtV)); },
DEF_HELPER_3(A4_cmphgtu, s32, env, s32, s32),
{
/* A4_cmphgtu */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A4_cmphgtu(gen_helper_A4_cmphgtu(PdV, cpu_env, RsV, RtV);,
{ PdV=f8BITSOF(fGETUHALF(0,RsV) > fGETUHALF(0,RtV)); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A4_cmphgtu */
},
int32_t HELPER(A4_cmphgtu)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ PdV=f8BITSOF(fGETUHALF(0,RsV) > fGETUHALF(0,RtV)); }
COUNT_HELPER(A4_cmphgtu);
return PdV;
})
DEF_QEMU(A4_cmpheqi,{ fIMMEXT(siV); PdV=f8BITSOF(fGETHALF(0,RsV) == siV); },
DEF_HELPER_3(A4_cmpheqi, s32, env, s32, s32),
{
/* A4_cmpheqi */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A4_cmpheqi(gen_helper_A4_cmpheqi(PdV, cpu_env, RsV, siV);,
{ fIMMEXT(siV); PdV=f8BITSOF(fGETHALF(0,RsV) == siV); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* A4_cmpheqi */
},
int32_t HELPER(A4_cmpheqi)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fIMMEXT(siV); PdV=f8BITSOF(fGETHALF(0,RsV) == siV); }
COUNT_HELPER(A4_cmpheqi);
return PdV;
})
DEF_QEMU(A4_cmphgti,{ fIMMEXT(siV); PdV=f8BITSOF(fGETHALF(0,RsV) > siV); },
DEF_HELPER_3(A4_cmphgti, s32, env, s32, s32),
{
/* A4_cmphgti */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A4_cmphgti(gen_helper_A4_cmphgti(PdV, cpu_env, RsV, siV);,
{ fIMMEXT(siV); PdV=f8BITSOF(fGETHALF(0,RsV) > siV); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* A4_cmphgti */
},
int32_t HELPER(A4_cmphgti)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fIMMEXT(siV); PdV=f8BITSOF(fGETHALF(0,RsV) > siV); }
COUNT_HELPER(A4_cmphgti);
return PdV;
})
DEF_QEMU(A4_cmphgtui,{ fIMMEXT(uiV); PdV=f8BITSOF(fGETUHALF(0,RsV) > fCAST4u(uiV)); },
DEF_HELPER_3(A4_cmphgtui, s32, env, s32, s32),
{
/* A4_cmphgtui */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A4_cmphgtui(gen_helper_A4_cmphgtui(PdV, cpu_env, RsV, uiV);,
{ fIMMEXT(uiV); PdV=f8BITSOF(fGETUHALF(0,RsV) > fCAST4u(uiV)); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* A4_cmphgtui */
},
int32_t HELPER(A4_cmphgtui)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fIMMEXT(uiV); PdV=f8BITSOF(fGETUHALF(0,RsV) > fCAST4u(uiV)); }
COUNT_HELPER(A4_cmphgtui);
return PdV;
})
DEF_QEMU(A2_vcmpweq,{ fSETBITS(3,0,PdV,(fGETWORD(0,RssV)==fGETWORD(0,RttV))); fSETBITS(7,4,PdV,(fGETWORD(1,RssV)==fGETWORD(1,RttV))); },
DEF_HELPER_3(A2_vcmpweq, s32, env, s64, s64),
{
/* A2_vcmpweq */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vcmpweq(gen_helper_A2_vcmpweq(PdV, cpu_env, RssV, RttV);,
{ fSETBITS(3,0,PdV,(fGETWORD(0,RssV)==fGETWORD(0,RttV))); fSETBITS(7,4,PdV,(fGETWORD(1,RssV)==fGETWORD(1,RttV))); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vcmpweq */
},
int32_t HELPER(A2_vcmpweq)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fSETBITS(3,0,PdV,(fGETWORD(0,RssV)==fGETWORD(0,RttV))); fSETBITS(7,4,PdV,(fGETWORD(1,RssV)==fGETWORD(1,RttV))); }
COUNT_HELPER(A2_vcmpweq);
return PdV;
})
DEF_QEMU(A2_vcmpwgt,{ fSETBITS(3,0,PdV,(fGETWORD(0,RssV)>fGETWORD(0,RttV))); fSETBITS(7,4,PdV,(fGETWORD(1,RssV)>fGETWORD(1,RttV))); },
DEF_HELPER_3(A2_vcmpwgt, s32, env, s64, s64),
{
/* A2_vcmpwgt */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vcmpwgt(gen_helper_A2_vcmpwgt(PdV, cpu_env, RssV, RttV);,
{ fSETBITS(3,0,PdV,(fGETWORD(0,RssV)>fGETWORD(0,RttV))); fSETBITS(7,4,PdV,(fGETWORD(1,RssV)>fGETWORD(1,RttV))); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vcmpwgt */
},
int32_t HELPER(A2_vcmpwgt)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fSETBITS(3,0,PdV,(fGETWORD(0,RssV)>fGETWORD(0,RttV))); fSETBITS(7,4,PdV,(fGETWORD(1,RssV)>fGETWORD(1,RttV))); }
COUNT_HELPER(A2_vcmpwgt);
return PdV;
})
DEF_QEMU(A2_vcmpwgtu,{ fSETBITS(3,0,PdV,(fGETUWORD(0,RssV)>fGETUWORD(0,RttV))); fSETBITS(7,4,PdV,(fGETUWORD(1,RssV)>fGETUWORD(1,RttV))); },
DEF_HELPER_3(A2_vcmpwgtu, s32, env, s64, s64),
{
/* A2_vcmpwgtu */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vcmpwgtu(gen_helper_A2_vcmpwgtu(PdV, cpu_env, RssV, RttV);,
{ fSETBITS(3,0,PdV,(fGETUWORD(0,RssV)>fGETUWORD(0,RttV))); fSETBITS(7,4,PdV,(fGETUWORD(1,RssV)>fGETUWORD(1,RttV))); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vcmpwgtu */
},
int32_t HELPER(A2_vcmpwgtu)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fSETBITS(3,0,PdV,(fGETUWORD(0,RssV)>fGETUWORD(0,RttV))); fSETBITS(7,4,PdV,(fGETUWORD(1,RssV)>fGETUWORD(1,RttV))); }
COUNT_HELPER(A2_vcmpwgtu);
return PdV;
})
DEF_QEMU(A4_vcmpweqi,{ fSETBITS(3,0,PdV,(fGETWORD(0,RssV)==siV)); fSETBITS(7,4,PdV,(fGETWORD(1,RssV)==siV)); },
DEF_HELPER_3(A4_vcmpweqi, s32, env, s64, s32),
{
/* A4_vcmpweqi */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A4_vcmpweqi(gen_helper_A4_vcmpweqi(PdV, cpu_env, RssV, siV);,
{ fSETBITS(3,0,PdV,(fGETWORD(0,RssV)==siV)); fSETBITS(7,4,PdV,(fGETWORD(1,RssV)==siV)); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_IMM(siV);
/* A4_vcmpweqi */
},
int32_t HELPER(A4_vcmpweqi)(CPUHexagonState *env, int64_t RssV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fSETBITS(3,0,PdV,(fGETWORD(0,RssV)==siV)); fSETBITS(7,4,PdV,(fGETWORD(1,RssV)==siV)); }
COUNT_HELPER(A4_vcmpweqi);
return PdV;
})
DEF_QEMU(A4_vcmpwgti,{ fSETBITS(3,0,PdV,(fGETWORD(0,RssV)>siV)); fSETBITS(7,4,PdV,(fGETWORD(1,RssV)>siV)); },
DEF_HELPER_3(A4_vcmpwgti, s32, env, s64, s32),
{
/* A4_vcmpwgti */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A4_vcmpwgti(gen_helper_A4_vcmpwgti(PdV, cpu_env, RssV, siV);,
{ fSETBITS(3,0,PdV,(fGETWORD(0,RssV)>siV)); fSETBITS(7,4,PdV,(fGETWORD(1,RssV)>siV)); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_IMM(siV);
/* A4_vcmpwgti */
},
int32_t HELPER(A4_vcmpwgti)(CPUHexagonState *env, int64_t RssV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fSETBITS(3,0,PdV,(fGETWORD(0,RssV)>siV)); fSETBITS(7,4,PdV,(fGETWORD(1,RssV)>siV)); }
COUNT_HELPER(A4_vcmpwgti);
return PdV;
})
DEF_QEMU(A4_vcmpwgtui,{ fSETBITS(3,0,PdV,(fGETUWORD(0,RssV)>fCAST4u(uiV))); fSETBITS(7,4,PdV,(fGETUWORD(1,RssV)>fCAST4u(uiV))); },
DEF_HELPER_3(A4_vcmpwgtui, s32, env, s64, s32),
{
/* A4_vcmpwgtui */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A4_vcmpwgtui(gen_helper_A4_vcmpwgtui(PdV, cpu_env, RssV, uiV);,
{ fSETBITS(3,0,PdV,(fGETUWORD(0,RssV)>fCAST4u(uiV))); fSETBITS(7,4,PdV,(fGETUWORD(1,RssV)>fCAST4u(uiV))); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* A4_vcmpwgtui */
},
int32_t HELPER(A4_vcmpwgtui)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fSETBITS(3,0,PdV,(fGETUWORD(0,RssV)>fCAST4u(uiV))); fSETBITS(7,4,PdV,(fGETUWORD(1,RssV)>fCAST4u(uiV))); }
COUNT_HELPER(A4_vcmpwgtui);
return PdV;
})
DEF_QEMU(A4_boundscheck_hi,{ fHIDE(size4u_t src;) src = fGETUWORD(1,RssV); PdV = f8BITSOF((fCAST4u(src) >= fGETUWORD(0,RttV)) && (fCAST4u(src) < fGETUWORD(1,RttV))); },
DEF_HELPER_3(A4_boundscheck_hi, s32, env, s64, s64),
{
/* A4_boundscheck_hi */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A4_boundscheck_hi(gen_helper_A4_boundscheck_hi(PdV, cpu_env, RssV, RttV);,
{ fHIDE(size4u_t src;) src = fGETUWORD(1,RssV); PdV = f8BITSOF((fCAST4u(src) >= fGETUWORD(0,RttV)) && (fCAST4u(src) < fGETUWORD(1,RttV))); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A4_boundscheck_hi */
},
int32_t HELPER(A4_boundscheck_hi)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fHIDE(size4u_t src;) src = fGETUWORD(1,RssV); PdV = f8BITSOF((fCAST4u(src) >= fGETUWORD(0,RttV)) && (fCAST4u(src) < fGETUWORD(1,RttV))); }
COUNT_HELPER(A4_boundscheck_hi);
return PdV;
})
DEF_QEMU(A4_boundscheck_lo,{ fHIDE(size4u_t src;) src = fGETUWORD(0,RssV); PdV = f8BITSOF((fCAST4u(src) >= fGETUWORD(0,RttV)) && (fCAST4u(src) < fGETUWORD(1,RttV))); },
DEF_HELPER_3(A4_boundscheck_lo, s32, env, s64, s64),
{
/* A4_boundscheck_lo */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A4_boundscheck_lo(gen_helper_A4_boundscheck_lo(PdV, cpu_env, RssV, RttV);,
{ fHIDE(size4u_t src;) src = fGETUWORD(0,RssV); PdV = f8BITSOF((fCAST4u(src) >= fGETUWORD(0,RttV)) && (fCAST4u(src) < fGETUWORD(1,RttV))); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A4_boundscheck_lo */
},
int32_t HELPER(A4_boundscheck_lo)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fHIDE(size4u_t src;) src = fGETUWORD(0,RssV); PdV = f8BITSOF((fCAST4u(src) >= fGETUWORD(0,RttV)) && (fCAST4u(src) < fGETUWORD(1,RttV))); }
COUNT_HELPER(A4_boundscheck_lo);
return PdV;
})
DEF_QEMU(A4_tlbmatch,{ fHIDE(size4u_t TLBHI; size4u_t TLBLO; size4u_t MASK; size4u_t SIZE;) MASK = 0x07ffffff; TLBLO = fGETUWORD(0,RssV); TLBHI = fGETUWORD(1,RssV); SIZE = fMIN(6,fCL1_4(~fBREV_4(TLBLO))); MASK &= (0xffffffff << 2*SIZE); PdV = f8BITSOF(fGETBIT(31,TLBHI) && ((TLBHI & MASK) == (RtV & MASK))); fHIDE(MARK_LATE_PRED_WRITE(PdN)) },
DEF_HELPER_3(A4_tlbmatch, s32, env, s64, s32),
{
/* A4_tlbmatch */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_A4_tlbmatch(gen_helper_A4_tlbmatch(PdV, cpu_env, RssV, RtV);,
{ fHIDE(size4u_t TLBHI; size4u_t TLBLO; size4u_t MASK; size4u_t SIZE;) MASK = 0x07ffffff; TLBLO = fGETUWORD(0,RssV); TLBHI = fGETUWORD(1,RssV); SIZE = fMIN(6,fCL1_4(~fBREV_4(TLBLO))); MASK &= (0xffffffff << 2*SIZE); PdV = f8BITSOF(fGETBIT(31,TLBHI) && ((TLBHI & MASK) == (RtV & MASK))); fHIDE(MARK_LATE_PRED_WRITE(PdN)) })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* A4_tlbmatch */
},
int32_t HELPER(A4_tlbmatch)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fHIDE(size4u_t TLBHI; size4u_t TLBLO; size4u_t MASK; size4u_t SIZE;) MASK = 0x07ffffff; TLBLO = fGETUWORD(0,RssV); TLBHI = fGETUWORD(1,RssV); SIZE = fMIN(6,fCL1_4(~fBREV_4(TLBLO))); MASK &= (0xffffffff << 2*SIZE); PdV = f8BITSOF(fGETBIT(31,TLBHI) && ((TLBHI & MASK) == (RtV & MASK))); fHIDE(MARK_LATE_PRED_WRITE(PdN)) }
COUNT_HELPER(A4_tlbmatch);
return PdV;
})
DEF_QEMU(C2_tfrpr,{ fPREDUSE_TIMING();RdV = fZXTN(8,32,PsV); },
DEF_HELPER_2(C2_tfrpr, s32, env, s32),
{
/* C2_tfrpr */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PREG_s(TCGv, PsV, PsN, 1, 0);
READ_PREG_s(PsV, PsN);
fWRAP_C2_tfrpr(gen_helper_C2_tfrpr(RdV, cpu_env, PsV);,
{ fPREDUSE_TIMING();RdV = fZXTN(8,32,PsV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(PsV);
/* C2_tfrpr */
},
int32_t HELPER(C2_tfrpr)(CPUHexagonState *env, int32_t PsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fPREDUSE_TIMING();RdV = fZXTN(8,32,PsV); }
COUNT_HELPER(C2_tfrpr);
return RdV;
})
DEF_QEMU(C2_tfrrp,{ PdV = fGETUBYTE(0,RsV); },
DEF_HELPER_2(C2_tfrrp, s32, env, s32),
{
/* C2_tfrrp */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_C2_tfrrp(gen_helper_C2_tfrrp(PdV, cpu_env, RsV);,
{ PdV = fGETUBYTE(0,RsV); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
/* C2_tfrrp */
},
int32_t HELPER(C2_tfrrp)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ PdV = fGETUBYTE(0,RsV); }
COUNT_HELPER(C2_tfrrp);
return PdV;
})
DEF_QEMU(C4_fastcorner9,{ fPREDUSE_TIMING(); fHIDE(size4u_t tmp = 0; size4u_t i;) fSETHALF(0,tmp,(PsV<<8)|PtV); fSETHALF(1,tmp,(PsV<<8)|PtV); for (i = 1; i < 9; i++) { tmp &= tmp >> 1; } PdV = f8BITSOF(tmp != 0); },
DEF_HELPER_3(C4_fastcorner9, s32, env, s32, s32),
{
/* C4_fastcorner9 */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_s(TCGv, PsV, PsN, 1, 0);
DECL_PREG_t(TCGv, PtV, PtN, 2, 0);
READ_PREG_s(PsV, PsN);
READ_PREG_t(PtV, PtN);
fWRAP_C4_fastcorner9(gen_helper_C4_fastcorner9(PdV, cpu_env, PsV, PtV);,
{ fPREDUSE_TIMING(); fHIDE(size4u_t tmp = 0; size4u_t i;) fSETHALF(0,tmp,(PsV<<8)|PtV); fSETHALF(1,tmp,(PsV<<8)|PtV); for (i = 1; i < 9; i++) { tmp &= tmp >> 1; } PdV = f8BITSOF(tmp != 0); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(PsV);
FREE_REG_t(PtV);
/* C4_fastcorner9 */
},
int32_t HELPER(C4_fastcorner9)(CPUHexagonState *env, int32_t PsV, int32_t PtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fPREDUSE_TIMING(); fHIDE(size4u_t tmp = 0; size4u_t i;) fSETHALF(0,tmp,(PsV<<8)|PtV); fSETHALF(1,tmp,(PsV<<8)|PtV); for (i = 1; i < 9; i++) { tmp &= tmp >> 1; } PdV = f8BITSOF(tmp != 0); }
COUNT_HELPER(C4_fastcorner9);
return PdV;
})
DEF_QEMU(C4_fastcorner9_not,{ fPREDUSE_TIMING(); fHIDE(size4u_t tmp = 0; size4u_t i;) fSETHALF(0,tmp,(PsV<<8)|PtV); fSETHALF(1,tmp,(PsV<<8)|PtV); for (i = 1; i < 9; i++) { tmp &= tmp >> 1; } PdV = f8BITSOF(tmp == 0); },
DEF_HELPER_3(C4_fastcorner9_not, s32, env, s32, s32),
{
/* C4_fastcorner9_not */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PREG_s(TCGv, PsV, PsN, 1, 0);
DECL_PREG_t(TCGv, PtV, PtN, 2, 0);
READ_PREG_s(PsV, PsN);
READ_PREG_t(PtV, PtN);
fWRAP_C4_fastcorner9_not(gen_helper_C4_fastcorner9_not(PdV, cpu_env, PsV, PtV);,
{ fPREDUSE_TIMING(); fHIDE(size4u_t tmp = 0; size4u_t i;) fSETHALF(0,tmp,(PsV<<8)|PtV); fSETHALF(1,tmp,(PsV<<8)|PtV); for (i = 1; i < 9; i++) { tmp &= tmp >> 1; } PdV = f8BITSOF(tmp == 0); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(PsV);
FREE_REG_t(PtV);
/* C4_fastcorner9_not */
},
int32_t HELPER(C4_fastcorner9_not)(CPUHexagonState *env, int32_t PsV, int32_t PtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ fPREDUSE_TIMING(); fHIDE(size4u_t tmp = 0; size4u_t i;) fSETHALF(0,tmp,(PsV<<8)|PtV); fSETHALF(1,tmp,(PsV<<8)|PtV); for (i = 1; i < 9; i++) { tmp &= tmp >> 1; } PdV = f8BITSOF(tmp == 0); }
COUNT_HELPER(C4_fastcorner9_not);
return PdV;
})
DEF_QEMU(M2_mpy_acc_hh_s0,{RxV=fPASS(fPASS(RxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();},
DEF_HELPER_4(M2_mpy_acc_hh_s0, s32, env, s32, s32, s32),
{
/* M2_mpy_acc_hh_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_acc_hh_s0(gen_helper_M2_mpy_acc_hh_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_acc_hh_s0 */
},
int32_t HELPER(M2_mpy_acc_hh_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();}
COUNT_HELPER(M2_mpy_acc_hh_s0);
return RxV;
})
DEF_QEMU(M2_mpy_acc_hh_s1,{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpy_acc_hh_s1, s32, env, s32, s32, s32),
{
/* M2_mpy_acc_hh_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_acc_hh_s1(gen_helper_M2_mpy_acc_hh_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_acc_hh_s1 */
},
int32_t HELPER(M2_mpy_acc_hh_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpy_acc_hh_s1);
return RxV;
})
DEF_QEMU(M2_mpy_acc_hl_s0,{RxV=fPASS(fPASS(RxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpy_acc_hl_s0, s32, env, s32, s32, s32),
{
/* M2_mpy_acc_hl_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_acc_hl_s0(gen_helper_M2_mpy_acc_hl_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_acc_hl_s0 */
},
int32_t HELPER(M2_mpy_acc_hl_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpy_acc_hl_s0);
return RxV;
})
DEF_QEMU(M2_mpy_acc_hl_s1,{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpy_acc_hl_s1, s32, env, s32, s32, s32),
{
/* M2_mpy_acc_hl_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_acc_hl_s1(gen_helper_M2_mpy_acc_hl_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_acc_hl_s1 */
},
int32_t HELPER(M2_mpy_acc_hl_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpy_acc_hl_s1);
return RxV;
})
DEF_QEMU(M2_mpy_acc_lh_s0,{RxV=fPASS(fPASS(RxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();},
DEF_HELPER_4(M2_mpy_acc_lh_s0, s32, env, s32, s32, s32),
{
/* M2_mpy_acc_lh_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_acc_lh_s0(gen_helper_M2_mpy_acc_lh_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_acc_lh_s0 */
},
int32_t HELPER(M2_mpy_acc_lh_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();}
COUNT_HELPER(M2_mpy_acc_lh_s0);
return RxV;
})
DEF_QEMU(M2_mpy_acc_lh_s1,{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpy_acc_lh_s1, s32, env, s32, s32, s32),
{
/* M2_mpy_acc_lh_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_acc_lh_s1(gen_helper_M2_mpy_acc_lh_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_acc_lh_s1 */
},
int32_t HELPER(M2_mpy_acc_lh_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpy_acc_lh_s1);
return RxV;
})
DEF_QEMU(M2_mpy_acc_ll_s0,{RxV=fPASS(fPASS(RxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpy_acc_ll_s0, s32, env, s32, s32, s32),
{
/* M2_mpy_acc_ll_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_acc_ll_s0(gen_helper_M2_mpy_acc_ll_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_acc_ll_s0 */
},
int32_t HELPER(M2_mpy_acc_ll_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpy_acc_ll_s0);
return RxV;
})
DEF_QEMU(M2_mpy_acc_ll_s1,{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpy_acc_ll_s1, s32, env, s32, s32, s32),
{
/* M2_mpy_acc_ll_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_acc_ll_s1(gen_helper_M2_mpy_acc_ll_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_acc_ll_s1 */
},
int32_t HELPER(M2_mpy_acc_ll_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpy_acc_ll_s1);
return RxV;
})
DEF_QEMU(M2_mpy_nac_hh_s0,{RxV=fPASS(fPASS(RxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();},
DEF_HELPER_4(M2_mpy_nac_hh_s0, s32, env, s32, s32, s32),
{
/* M2_mpy_nac_hh_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_nac_hh_s0(gen_helper_M2_mpy_nac_hh_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_nac_hh_s0 */
},
int32_t HELPER(M2_mpy_nac_hh_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();}
COUNT_HELPER(M2_mpy_nac_hh_s0);
return RxV;
})
DEF_QEMU(M2_mpy_nac_hh_s1,{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpy_nac_hh_s1, s32, env, s32, s32, s32),
{
/* M2_mpy_nac_hh_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_nac_hh_s1(gen_helper_M2_mpy_nac_hh_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_nac_hh_s1 */
},
int32_t HELPER(M2_mpy_nac_hh_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpy_nac_hh_s1);
return RxV;
})
DEF_QEMU(M2_mpy_nac_hl_s0,{RxV=fPASS(fPASS(RxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpy_nac_hl_s0, s32, env, s32, s32, s32),
{
/* M2_mpy_nac_hl_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_nac_hl_s0(gen_helper_M2_mpy_nac_hl_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_nac_hl_s0 */
},
int32_t HELPER(M2_mpy_nac_hl_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpy_nac_hl_s0);
return RxV;
})
DEF_QEMU(M2_mpy_nac_hl_s1,{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpy_nac_hl_s1, s32, env, s32, s32, s32),
{
/* M2_mpy_nac_hl_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_nac_hl_s1(gen_helper_M2_mpy_nac_hl_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_nac_hl_s1 */
},
int32_t HELPER(M2_mpy_nac_hl_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpy_nac_hl_s1);
return RxV;
})
DEF_QEMU(M2_mpy_nac_lh_s0,{RxV=fPASS(fPASS(RxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();},
DEF_HELPER_4(M2_mpy_nac_lh_s0, s32, env, s32, s32, s32),
{
/* M2_mpy_nac_lh_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_nac_lh_s0(gen_helper_M2_mpy_nac_lh_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_nac_lh_s0 */
},
int32_t HELPER(M2_mpy_nac_lh_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();}
COUNT_HELPER(M2_mpy_nac_lh_s0);
return RxV;
})
DEF_QEMU(M2_mpy_nac_lh_s1,{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpy_nac_lh_s1, s32, env, s32, s32, s32),
{
/* M2_mpy_nac_lh_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_nac_lh_s1(gen_helper_M2_mpy_nac_lh_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_nac_lh_s1 */
},
int32_t HELPER(M2_mpy_nac_lh_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpy_nac_lh_s1);
return RxV;
})
DEF_QEMU(M2_mpy_nac_ll_s0,{RxV=fPASS(fPASS(RxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpy_nac_ll_s0, s32, env, s32, s32, s32),
{
/* M2_mpy_nac_ll_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_nac_ll_s0(gen_helper_M2_mpy_nac_ll_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_nac_ll_s0 */
},
int32_t HELPER(M2_mpy_nac_ll_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpy_nac_ll_s0);
return RxV;
})
DEF_QEMU(M2_mpy_nac_ll_s1,{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpy_nac_ll_s1, s32, env, s32, s32, s32),
{
/* M2_mpy_nac_ll_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_nac_ll_s1(gen_helper_M2_mpy_nac_ll_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_nac_ll_s1 */
},
int32_t HELPER(M2_mpy_nac_ll_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpy_nac_ll_s1);
return RxV;
})
DEF_QEMU(M2_mpy_acc_sat_hh_s0,{RxV=fSAT(fPASS(RxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();},
DEF_HELPER_4(M2_mpy_acc_sat_hh_s0, s32, env, s32, s32, s32),
{
/* M2_mpy_acc_sat_hh_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_acc_sat_hh_s0(gen_helper_M2_mpy_acc_sat_hh_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT(fPASS(RxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_acc_sat_hh_s0 */
},
int32_t HELPER(M2_mpy_acc_sat_hh_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT(fPASS(RxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();}
COUNT_HELPER(M2_mpy_acc_sat_hh_s0);
return RxV;
})
DEF_QEMU(M2_mpy_acc_sat_hh_s1,{RxV=fSAT(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpy_acc_sat_hh_s1, s32, env, s32, s32, s32),
{
/* M2_mpy_acc_sat_hh_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_acc_sat_hh_s1(gen_helper_M2_mpy_acc_sat_hh_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_acc_sat_hh_s1 */
},
int32_t HELPER(M2_mpy_acc_sat_hh_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpy_acc_sat_hh_s1);
return RxV;
})
DEF_QEMU(M2_mpy_acc_sat_hl_s0,{RxV=fSAT(fPASS(RxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpy_acc_sat_hl_s0, s32, env, s32, s32, s32),
{
/* M2_mpy_acc_sat_hl_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_acc_sat_hl_s0(gen_helper_M2_mpy_acc_sat_hl_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT(fPASS(RxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_acc_sat_hl_s0 */
},
int32_t HELPER(M2_mpy_acc_sat_hl_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT(fPASS(RxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpy_acc_sat_hl_s0);
return RxV;
})
DEF_QEMU(M2_mpy_acc_sat_hl_s1,{RxV=fSAT(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpy_acc_sat_hl_s1, s32, env, s32, s32, s32),
{
/* M2_mpy_acc_sat_hl_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_acc_sat_hl_s1(gen_helper_M2_mpy_acc_sat_hl_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_acc_sat_hl_s1 */
},
int32_t HELPER(M2_mpy_acc_sat_hl_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpy_acc_sat_hl_s1);
return RxV;
})
DEF_QEMU(M2_mpy_acc_sat_lh_s0,{RxV=fSAT(fPASS(RxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();},
DEF_HELPER_4(M2_mpy_acc_sat_lh_s0, s32, env, s32, s32, s32),
{
/* M2_mpy_acc_sat_lh_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_acc_sat_lh_s0(gen_helper_M2_mpy_acc_sat_lh_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT(fPASS(RxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_acc_sat_lh_s0 */
},
int32_t HELPER(M2_mpy_acc_sat_lh_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT(fPASS(RxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();}
COUNT_HELPER(M2_mpy_acc_sat_lh_s0);
return RxV;
})
DEF_QEMU(M2_mpy_acc_sat_lh_s1,{RxV=fSAT(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpy_acc_sat_lh_s1, s32, env, s32, s32, s32),
{
/* M2_mpy_acc_sat_lh_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_acc_sat_lh_s1(gen_helper_M2_mpy_acc_sat_lh_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_acc_sat_lh_s1 */
},
int32_t HELPER(M2_mpy_acc_sat_lh_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpy_acc_sat_lh_s1);
return RxV;
})
DEF_QEMU(M2_mpy_acc_sat_ll_s0,{RxV=fSAT(fPASS(RxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpy_acc_sat_ll_s0, s32, env, s32, s32, s32),
{
/* M2_mpy_acc_sat_ll_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_acc_sat_ll_s0(gen_helper_M2_mpy_acc_sat_ll_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT(fPASS(RxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_acc_sat_ll_s0 */
},
int32_t HELPER(M2_mpy_acc_sat_ll_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT(fPASS(RxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpy_acc_sat_ll_s0);
return RxV;
})
DEF_QEMU(M2_mpy_acc_sat_ll_s1,{RxV=fSAT(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpy_acc_sat_ll_s1, s32, env, s32, s32, s32),
{
/* M2_mpy_acc_sat_ll_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_acc_sat_ll_s1(gen_helper_M2_mpy_acc_sat_ll_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_acc_sat_ll_s1 */
},
int32_t HELPER(M2_mpy_acc_sat_ll_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT(fPASS(RxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpy_acc_sat_ll_s1);
return RxV;
})
DEF_QEMU(M2_mpy_nac_sat_hh_s0,{RxV=fSAT(fPASS(RxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();},
DEF_HELPER_4(M2_mpy_nac_sat_hh_s0, s32, env, s32, s32, s32),
{
/* M2_mpy_nac_sat_hh_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_nac_sat_hh_s0(gen_helper_M2_mpy_nac_sat_hh_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT(fPASS(RxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_nac_sat_hh_s0 */
},
int32_t HELPER(M2_mpy_nac_sat_hh_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT(fPASS(RxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();}
COUNT_HELPER(M2_mpy_nac_sat_hh_s0);
return RxV;
})
DEF_QEMU(M2_mpy_nac_sat_hh_s1,{RxV=fSAT(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpy_nac_sat_hh_s1, s32, env, s32, s32, s32),
{
/* M2_mpy_nac_sat_hh_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_nac_sat_hh_s1(gen_helper_M2_mpy_nac_sat_hh_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_nac_sat_hh_s1 */
},
int32_t HELPER(M2_mpy_nac_sat_hh_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpy_nac_sat_hh_s1);
return RxV;
})
DEF_QEMU(M2_mpy_nac_sat_hl_s0,{RxV=fSAT(fPASS(RxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpy_nac_sat_hl_s0, s32, env, s32, s32, s32),
{
/* M2_mpy_nac_sat_hl_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_nac_sat_hl_s0(gen_helper_M2_mpy_nac_sat_hl_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT(fPASS(RxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_nac_sat_hl_s0 */
},
int32_t HELPER(M2_mpy_nac_sat_hl_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT(fPASS(RxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpy_nac_sat_hl_s0);
return RxV;
})
DEF_QEMU(M2_mpy_nac_sat_hl_s1,{RxV=fSAT(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpy_nac_sat_hl_s1, s32, env, s32, s32, s32),
{
/* M2_mpy_nac_sat_hl_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_nac_sat_hl_s1(gen_helper_M2_mpy_nac_sat_hl_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_nac_sat_hl_s1 */
},
int32_t HELPER(M2_mpy_nac_sat_hl_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpy_nac_sat_hl_s1);
return RxV;
})
DEF_QEMU(M2_mpy_nac_sat_lh_s0,{RxV=fSAT(fPASS(RxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();},
DEF_HELPER_4(M2_mpy_nac_sat_lh_s0, s32, env, s32, s32, s32),
{
/* M2_mpy_nac_sat_lh_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_nac_sat_lh_s0(gen_helper_M2_mpy_nac_sat_lh_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT(fPASS(RxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_nac_sat_lh_s0 */
},
int32_t HELPER(M2_mpy_nac_sat_lh_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT(fPASS(RxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();}
COUNT_HELPER(M2_mpy_nac_sat_lh_s0);
return RxV;
})
DEF_QEMU(M2_mpy_nac_sat_lh_s1,{RxV=fSAT(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpy_nac_sat_lh_s1, s32, env, s32, s32, s32),
{
/* M2_mpy_nac_sat_lh_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_nac_sat_lh_s1(gen_helper_M2_mpy_nac_sat_lh_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_nac_sat_lh_s1 */
},
int32_t HELPER(M2_mpy_nac_sat_lh_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpy_nac_sat_lh_s1);
return RxV;
})
DEF_QEMU(M2_mpy_nac_sat_ll_s0,{RxV=fSAT(fPASS(RxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpy_nac_sat_ll_s0, s32, env, s32, s32, s32),
{
/* M2_mpy_nac_sat_ll_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_nac_sat_ll_s0(gen_helper_M2_mpy_nac_sat_ll_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT(fPASS(RxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_nac_sat_ll_s0 */
},
int32_t HELPER(M2_mpy_nac_sat_ll_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT(fPASS(RxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpy_nac_sat_ll_s0);
return RxV;
})
DEF_QEMU(M2_mpy_nac_sat_ll_s1,{RxV=fSAT(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpy_nac_sat_ll_s1, s32, env, s32, s32, s32),
{
/* M2_mpy_nac_sat_ll_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_nac_sat_ll_s1(gen_helper_M2_mpy_nac_sat_ll_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_nac_sat_ll_s1 */
},
int32_t HELPER(M2_mpy_nac_sat_ll_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT(fPASS(RxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpy_nac_sat_ll_s1);
return RxV;
})
DEF_QEMU(M2_mpy_hh_s0,{RdV=fPASS(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;},
DEF_HELPER_3(M2_mpy_hh_s0, s32, env, s32, s32),
{
/* M2_mpy_hh_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_hh_s0(gen_helper_M2_mpy_hh_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_hh_s0 */
},
int32_t HELPER(M2_mpy_hh_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;}
COUNT_HELPER(M2_mpy_hh_s0);
return RdV;
})
DEF_QEMU(M2_mpy_hh_s1,{RdV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;},
DEF_HELPER_3(M2_mpy_hh_s1, s32, env, s32, s32),
{
/* M2_mpy_hh_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_hh_s1(gen_helper_M2_mpy_hh_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_hh_s1 */
},
int32_t HELPER(M2_mpy_hh_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;}
COUNT_HELPER(M2_mpy_hh_s1);
return RdV;
})
DEF_QEMU(M2_mpy_hl_s0,{RdV=fPASS(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;},
DEF_HELPER_3(M2_mpy_hl_s0, s32, env, s32, s32),
{
/* M2_mpy_hl_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_hl_s0(gen_helper_M2_mpy_hl_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_hl_s0 */
},
int32_t HELPER(M2_mpy_hl_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;}
COUNT_HELPER(M2_mpy_hl_s0);
return RdV;
})
DEF_QEMU(M2_mpy_hl_s1,{RdV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;},
DEF_HELPER_3(M2_mpy_hl_s1, s32, env, s32, s32),
{
/* M2_mpy_hl_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_hl_s1(gen_helper_M2_mpy_hl_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_hl_s1 */
},
int32_t HELPER(M2_mpy_hl_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;}
COUNT_HELPER(M2_mpy_hl_s1);
return RdV;
})
DEF_QEMU(M2_mpy_lh_s0,{RdV=fPASS(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;},
DEF_HELPER_3(M2_mpy_lh_s0, s32, env, s32, s32),
{
/* M2_mpy_lh_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_lh_s0(gen_helper_M2_mpy_lh_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_lh_s0 */
},
int32_t HELPER(M2_mpy_lh_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;}
COUNT_HELPER(M2_mpy_lh_s0);
return RdV;
})
DEF_QEMU(M2_mpy_lh_s1,{RdV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;},
DEF_HELPER_3(M2_mpy_lh_s1, s32, env, s32, s32),
{
/* M2_mpy_lh_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_lh_s1(gen_helper_M2_mpy_lh_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_lh_s1 */
},
int32_t HELPER(M2_mpy_lh_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;}
COUNT_HELPER(M2_mpy_lh_s1);
return RdV;
})
DEF_QEMU(M2_mpy_ll_s0,{RdV=fPASS(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;},
DEF_HELPER_3(M2_mpy_ll_s0, s32, env, s32, s32),
{
/* M2_mpy_ll_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_ll_s0(gen_helper_M2_mpy_ll_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_ll_s0 */
},
int32_t HELPER(M2_mpy_ll_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;}
COUNT_HELPER(M2_mpy_ll_s0);
return RdV;
})
DEF_QEMU(M2_mpy_ll_s1,{RdV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;},
DEF_HELPER_3(M2_mpy_ll_s1, s32, env, s32, s32),
{
/* M2_mpy_ll_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_ll_s1(gen_helper_M2_mpy_ll_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_ll_s1 */
},
int32_t HELPER(M2_mpy_ll_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;}
COUNT_HELPER(M2_mpy_ll_s1);
return RdV;
})
DEF_QEMU(M2_mpy_sat_hh_s0,{RdV=fSAT(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;},
DEF_HELPER_3(M2_mpy_sat_hh_s0, s32, env, s32, s32),
{
/* M2_mpy_sat_hh_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_sat_hh_s0(gen_helper_M2_mpy_sat_hh_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fSAT(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_sat_hh_s0 */
},
int32_t HELPER(M2_mpy_sat_hh_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSAT(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;}
COUNT_HELPER(M2_mpy_sat_hh_s0);
return RdV;
})
DEF_QEMU(M2_mpy_sat_hh_s1,{RdV=fSAT(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;},
DEF_HELPER_3(M2_mpy_sat_hh_s1, s32, env, s32, s32),
{
/* M2_mpy_sat_hh_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_sat_hh_s1(gen_helper_M2_mpy_sat_hh_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fSAT(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_sat_hh_s1 */
},
int32_t HELPER(M2_mpy_sat_hh_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSAT(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;}
COUNT_HELPER(M2_mpy_sat_hh_s1);
return RdV;
})
DEF_QEMU(M2_mpy_sat_hl_s0,{RdV=fSAT(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;},
DEF_HELPER_3(M2_mpy_sat_hl_s0, s32, env, s32, s32),
{
/* M2_mpy_sat_hl_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_sat_hl_s0(gen_helper_M2_mpy_sat_hl_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fSAT(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_sat_hl_s0 */
},
int32_t HELPER(M2_mpy_sat_hl_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSAT(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;}
COUNT_HELPER(M2_mpy_sat_hl_s0);
return RdV;
})
DEF_QEMU(M2_mpy_sat_hl_s1,{RdV=fSAT(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;},
DEF_HELPER_3(M2_mpy_sat_hl_s1, s32, env, s32, s32),
{
/* M2_mpy_sat_hl_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_sat_hl_s1(gen_helper_M2_mpy_sat_hl_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fSAT(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_sat_hl_s1 */
},
int32_t HELPER(M2_mpy_sat_hl_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSAT(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;}
COUNT_HELPER(M2_mpy_sat_hl_s1);
return RdV;
})
DEF_QEMU(M2_mpy_sat_lh_s0,{RdV=fSAT(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;},
DEF_HELPER_3(M2_mpy_sat_lh_s0, s32, env, s32, s32),
{
/* M2_mpy_sat_lh_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_sat_lh_s0(gen_helper_M2_mpy_sat_lh_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fSAT(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_sat_lh_s0 */
},
int32_t HELPER(M2_mpy_sat_lh_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSAT(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;}
COUNT_HELPER(M2_mpy_sat_lh_s0);
return RdV;
})
DEF_QEMU(M2_mpy_sat_lh_s1,{RdV=fSAT(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;},
DEF_HELPER_3(M2_mpy_sat_lh_s1, s32, env, s32, s32),
{
/* M2_mpy_sat_lh_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_sat_lh_s1(gen_helper_M2_mpy_sat_lh_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fSAT(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_sat_lh_s1 */
},
int32_t HELPER(M2_mpy_sat_lh_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSAT(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;}
COUNT_HELPER(M2_mpy_sat_lh_s1);
return RdV;
})
DEF_QEMU(M2_mpy_sat_ll_s0,{RdV=fSAT(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;},
DEF_HELPER_3(M2_mpy_sat_ll_s0, s32, env, s32, s32),
{
/* M2_mpy_sat_ll_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_sat_ll_s0(gen_helper_M2_mpy_sat_ll_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fSAT(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_sat_ll_s0 */
},
int32_t HELPER(M2_mpy_sat_ll_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSAT(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;}
COUNT_HELPER(M2_mpy_sat_ll_s0);
return RdV;
})
DEF_QEMU(M2_mpy_sat_ll_s1,{RdV=fSAT(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;},
DEF_HELPER_3(M2_mpy_sat_ll_s1, s32, env, s32, s32),
{
/* M2_mpy_sat_ll_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_sat_ll_s1(gen_helper_M2_mpy_sat_ll_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fSAT(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_sat_ll_s1 */
},
int32_t HELPER(M2_mpy_sat_ll_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSAT(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;}
COUNT_HELPER(M2_mpy_sat_ll_s1);
return RdV;
})
DEF_QEMU(M2_mpy_rnd_hh_s0,{RdV=fPASS(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;},
DEF_HELPER_3(M2_mpy_rnd_hh_s0, s32, env, s32, s32),
{
/* M2_mpy_rnd_hh_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_rnd_hh_s0(gen_helper_M2_mpy_rnd_hh_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_rnd_hh_s0 */
},
int32_t HELPER(M2_mpy_rnd_hh_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;}
COUNT_HELPER(M2_mpy_rnd_hh_s0);
return RdV;
})
DEF_QEMU(M2_mpy_rnd_hh_s1,{RdV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;},
DEF_HELPER_3(M2_mpy_rnd_hh_s1, s32, env, s32, s32),
{
/* M2_mpy_rnd_hh_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_rnd_hh_s1(gen_helper_M2_mpy_rnd_hh_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_rnd_hh_s1 */
},
int32_t HELPER(M2_mpy_rnd_hh_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;}
COUNT_HELPER(M2_mpy_rnd_hh_s1);
return RdV;
})
DEF_QEMU(M2_mpy_rnd_hl_s0,{RdV=fPASS(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;},
DEF_HELPER_3(M2_mpy_rnd_hl_s0, s32, env, s32, s32),
{
/* M2_mpy_rnd_hl_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_rnd_hl_s0(gen_helper_M2_mpy_rnd_hl_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_rnd_hl_s0 */
},
int32_t HELPER(M2_mpy_rnd_hl_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;}
COUNT_HELPER(M2_mpy_rnd_hl_s0);
return RdV;
})
DEF_QEMU(M2_mpy_rnd_hl_s1,{RdV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;},
DEF_HELPER_3(M2_mpy_rnd_hl_s1, s32, env, s32, s32),
{
/* M2_mpy_rnd_hl_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_rnd_hl_s1(gen_helper_M2_mpy_rnd_hl_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_rnd_hl_s1 */
},
int32_t HELPER(M2_mpy_rnd_hl_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;}
COUNT_HELPER(M2_mpy_rnd_hl_s1);
return RdV;
})
DEF_QEMU(M2_mpy_rnd_lh_s0,{RdV=fPASS(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;},
DEF_HELPER_3(M2_mpy_rnd_lh_s0, s32, env, s32, s32),
{
/* M2_mpy_rnd_lh_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_rnd_lh_s0(gen_helper_M2_mpy_rnd_lh_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_rnd_lh_s0 */
},
int32_t HELPER(M2_mpy_rnd_lh_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;}
COUNT_HELPER(M2_mpy_rnd_lh_s0);
return RdV;
})
DEF_QEMU(M2_mpy_rnd_lh_s1,{RdV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;},
DEF_HELPER_3(M2_mpy_rnd_lh_s1, s32, env, s32, s32),
{
/* M2_mpy_rnd_lh_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_rnd_lh_s1(gen_helper_M2_mpy_rnd_lh_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_rnd_lh_s1 */
},
int32_t HELPER(M2_mpy_rnd_lh_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;}
COUNT_HELPER(M2_mpy_rnd_lh_s1);
return RdV;
})
DEF_QEMU(M2_mpy_rnd_ll_s0,{RdV=fPASS(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;},
DEF_HELPER_3(M2_mpy_rnd_ll_s0, s32, env, s32, s32),
{
/* M2_mpy_rnd_ll_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_rnd_ll_s0(gen_helper_M2_mpy_rnd_ll_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_rnd_ll_s0 */
},
int32_t HELPER(M2_mpy_rnd_ll_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;}
COUNT_HELPER(M2_mpy_rnd_ll_s0);
return RdV;
})
DEF_QEMU(M2_mpy_rnd_ll_s1,{RdV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;},
DEF_HELPER_3(M2_mpy_rnd_ll_s1, s32, env, s32, s32),
{
/* M2_mpy_rnd_ll_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_rnd_ll_s1(gen_helper_M2_mpy_rnd_ll_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_rnd_ll_s1 */
},
int32_t HELPER(M2_mpy_rnd_ll_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;}
COUNT_HELPER(M2_mpy_rnd_ll_s1);
return RdV;
})
DEF_QEMU(M2_mpy_sat_rnd_hh_s0,{RdV=fSAT(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;},
DEF_HELPER_3(M2_mpy_sat_rnd_hh_s0, s32, env, s32, s32),
{
/* M2_mpy_sat_rnd_hh_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_sat_rnd_hh_s0(gen_helper_M2_mpy_sat_rnd_hh_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fSAT(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_sat_rnd_hh_s0 */
},
int32_t HELPER(M2_mpy_sat_rnd_hh_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSAT(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;}
COUNT_HELPER(M2_mpy_sat_rnd_hh_s0);
return RdV;
})
DEF_QEMU(M2_mpy_sat_rnd_hh_s1,{RdV=fSAT(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;},
DEF_HELPER_3(M2_mpy_sat_rnd_hh_s1, s32, env, s32, s32),
{
/* M2_mpy_sat_rnd_hh_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_sat_rnd_hh_s1(gen_helper_M2_mpy_sat_rnd_hh_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fSAT(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_sat_rnd_hh_s1 */
},
int32_t HELPER(M2_mpy_sat_rnd_hh_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSAT(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;}
COUNT_HELPER(M2_mpy_sat_rnd_hh_s1);
return RdV;
})
DEF_QEMU(M2_mpy_sat_rnd_hl_s0,{RdV=fSAT(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;},
DEF_HELPER_3(M2_mpy_sat_rnd_hl_s0, s32, env, s32, s32),
{
/* M2_mpy_sat_rnd_hl_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_sat_rnd_hl_s0(gen_helper_M2_mpy_sat_rnd_hl_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fSAT(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_sat_rnd_hl_s0 */
},
int32_t HELPER(M2_mpy_sat_rnd_hl_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSAT(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;}
COUNT_HELPER(M2_mpy_sat_rnd_hl_s0);
return RdV;
})
DEF_QEMU(M2_mpy_sat_rnd_hl_s1,{RdV=fSAT(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;},
DEF_HELPER_3(M2_mpy_sat_rnd_hl_s1, s32, env, s32, s32),
{
/* M2_mpy_sat_rnd_hl_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_sat_rnd_hl_s1(gen_helper_M2_mpy_sat_rnd_hl_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fSAT(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_sat_rnd_hl_s1 */
},
int32_t HELPER(M2_mpy_sat_rnd_hl_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSAT(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;}
COUNT_HELPER(M2_mpy_sat_rnd_hl_s1);
return RdV;
})
DEF_QEMU(M2_mpy_sat_rnd_lh_s0,{RdV=fSAT(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;},
DEF_HELPER_3(M2_mpy_sat_rnd_lh_s0, s32, env, s32, s32),
{
/* M2_mpy_sat_rnd_lh_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_sat_rnd_lh_s0(gen_helper_M2_mpy_sat_rnd_lh_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fSAT(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_sat_rnd_lh_s0 */
},
int32_t HELPER(M2_mpy_sat_rnd_lh_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSAT(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;}
COUNT_HELPER(M2_mpy_sat_rnd_lh_s0);
return RdV;
})
DEF_QEMU(M2_mpy_sat_rnd_lh_s1,{RdV=fSAT(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;},
DEF_HELPER_3(M2_mpy_sat_rnd_lh_s1, s32, env, s32, s32),
{
/* M2_mpy_sat_rnd_lh_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_sat_rnd_lh_s1(gen_helper_M2_mpy_sat_rnd_lh_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fSAT(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_sat_rnd_lh_s1 */
},
int32_t HELPER(M2_mpy_sat_rnd_lh_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSAT(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;}
COUNT_HELPER(M2_mpy_sat_rnd_lh_s1);
return RdV;
})
DEF_QEMU(M2_mpy_sat_rnd_ll_s0,{RdV=fSAT(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;},
DEF_HELPER_3(M2_mpy_sat_rnd_ll_s0, s32, env, s32, s32),
{
/* M2_mpy_sat_rnd_ll_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_sat_rnd_ll_s0(gen_helper_M2_mpy_sat_rnd_ll_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fSAT(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_sat_rnd_ll_s0 */
},
int32_t HELPER(M2_mpy_sat_rnd_ll_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSAT(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;}
COUNT_HELPER(M2_mpy_sat_rnd_ll_s0);
return RdV;
})
DEF_QEMU(M2_mpy_sat_rnd_ll_s1,{RdV=fSAT(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;},
DEF_HELPER_3(M2_mpy_sat_rnd_ll_s1, s32, env, s32, s32),
{
/* M2_mpy_sat_rnd_ll_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_sat_rnd_ll_s1(gen_helper_M2_mpy_sat_rnd_ll_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fSAT(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_sat_rnd_ll_s1 */
},
int32_t HELPER(M2_mpy_sat_rnd_ll_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSAT(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;}
COUNT_HELPER(M2_mpy_sat_rnd_ll_s1);
return RdV;
})
DEF_QEMU(M2_mpyd_acc_hh_s0,{RxxV=fPASS(fPASS(RxxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyd_acc_hh_s0, s64, env, s64, s32, s32),
{
/* M2_mpyd_acc_hh_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_acc_hh_s0(gen_helper_M2_mpyd_acc_hh_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_acc_hh_s0 */
},
int64_t HELPER(M2_mpyd_acc_hh_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();}
COUNT_HELPER(M2_mpyd_acc_hh_s0);
return RxxV;
})
DEF_QEMU(M2_mpyd_acc_hh_s1,{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyd_acc_hh_s1, s64, env, s64, s32, s32),
{
/* M2_mpyd_acc_hh_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_acc_hh_s1(gen_helper_M2_mpyd_acc_hh_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_acc_hh_s1 */
},
int64_t HELPER(M2_mpyd_acc_hh_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpyd_acc_hh_s1);
return RxxV;
})
DEF_QEMU(M2_mpyd_acc_hl_s0,{RxxV=fPASS(fPASS(RxxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyd_acc_hl_s0, s64, env, s64, s32, s32),
{
/* M2_mpyd_acc_hl_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_acc_hl_s0(gen_helper_M2_mpyd_acc_hl_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_acc_hl_s0 */
},
int64_t HELPER(M2_mpyd_acc_hl_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV+ fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpyd_acc_hl_s0);
return RxxV;
})
DEF_QEMU(M2_mpyd_acc_hl_s1,{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyd_acc_hl_s1, s64, env, s64, s32, s32),
{
/* M2_mpyd_acc_hl_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_acc_hl_s1(gen_helper_M2_mpyd_acc_hl_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_acc_hl_s1 */
},
int64_t HELPER(M2_mpyd_acc_hl_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpyd_acc_hl_s1);
return RxxV;
})
DEF_QEMU(M2_mpyd_acc_lh_s0,{RxxV=fPASS(fPASS(RxxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyd_acc_lh_s0, s64, env, s64, s32, s32),
{
/* M2_mpyd_acc_lh_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_acc_lh_s0(gen_helper_M2_mpyd_acc_lh_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_acc_lh_s0 */
},
int64_t HELPER(M2_mpyd_acc_lh_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();}
COUNT_HELPER(M2_mpyd_acc_lh_s0);
return RxxV;
})
DEF_QEMU(M2_mpyd_acc_lh_s1,{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyd_acc_lh_s1, s64, env, s64, s32, s32),
{
/* M2_mpyd_acc_lh_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_acc_lh_s1(gen_helper_M2_mpyd_acc_lh_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_acc_lh_s1 */
},
int64_t HELPER(M2_mpyd_acc_lh_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpyd_acc_lh_s1);
return RxxV;
})
DEF_QEMU(M2_mpyd_acc_ll_s0,{RxxV=fPASS(fPASS(RxxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyd_acc_ll_s0, s64, env, s64, s32, s32),
{
/* M2_mpyd_acc_ll_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_acc_ll_s0(gen_helper_M2_mpyd_acc_ll_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_acc_ll_s0 */
},
int64_t HELPER(M2_mpyd_acc_ll_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV+ fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpyd_acc_ll_s0);
return RxxV;
})
DEF_QEMU(M2_mpyd_acc_ll_s1,{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyd_acc_ll_s1, s64, env, s64, s32, s32),
{
/* M2_mpyd_acc_ll_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_acc_ll_s1(gen_helper_M2_mpyd_acc_ll_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_acc_ll_s1 */
},
int64_t HELPER(M2_mpyd_acc_ll_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpyd_acc_ll_s1);
return RxxV;
})
DEF_QEMU(M2_mpyd_nac_hh_s0,{RxxV=fPASS(fPASS(RxxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyd_nac_hh_s0, s64, env, s64, s32, s32),
{
/* M2_mpyd_nac_hh_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_nac_hh_s0(gen_helper_M2_mpyd_nac_hh_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_nac_hh_s0 */
},
int64_t HELPER(M2_mpyd_nac_hh_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); fACC();}
COUNT_HELPER(M2_mpyd_nac_hh_s0);
return RxxV;
})
DEF_QEMU(M2_mpyd_nac_hh_s1,{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyd_nac_hh_s1, s64, env, s64, s32, s32),
{
/* M2_mpyd_nac_hh_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_nac_hh_s1(gen_helper_M2_mpyd_nac_hh_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_nac_hh_s1 */
},
int64_t HELPER(M2_mpyd_nac_hh_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpyd_nac_hh_s1);
return RxxV;
})
DEF_QEMU(M2_mpyd_nac_hl_s0,{RxxV=fPASS(fPASS(RxxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyd_nac_hl_s0, s64, env, s64, s32, s32),
{
/* M2_mpyd_nac_hl_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_nac_hl_s0(gen_helper_M2_mpyd_nac_hl_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_nac_hl_s0 */
},
int64_t HELPER(M2_mpyd_nac_hl_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV- fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpyd_nac_hl_s0);
return RxxV;
})
DEF_QEMU(M2_mpyd_nac_hl_s1,{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyd_nac_hl_s1, s64, env, s64, s32, s32),
{
/* M2_mpyd_nac_hl_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_nac_hl_s1(gen_helper_M2_mpyd_nac_hl_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_nac_hl_s1 */
},
int64_t HELPER(M2_mpyd_nac_hl_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpyd_nac_hl_s1);
return RxxV;
})
DEF_QEMU(M2_mpyd_nac_lh_s0,{RxxV=fPASS(fPASS(RxxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyd_nac_lh_s0, s64, env, s64, s32, s32),
{
/* M2_mpyd_nac_lh_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_nac_lh_s0(gen_helper_M2_mpyd_nac_lh_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_nac_lh_s0 */
},
int64_t HELPER(M2_mpyd_nac_lh_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); fACC();}
COUNT_HELPER(M2_mpyd_nac_lh_s0);
return RxxV;
})
DEF_QEMU(M2_mpyd_nac_lh_s1,{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyd_nac_lh_s1, s64, env, s64, s32, s32),
{
/* M2_mpyd_nac_lh_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_nac_lh_s1(gen_helper_M2_mpyd_nac_lh_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_nac_lh_s1 */
},
int64_t HELPER(M2_mpyd_nac_lh_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpyd_nac_lh_s1);
return RxxV;
})
DEF_QEMU(M2_mpyd_nac_ll_s0,{RxxV=fPASS(fPASS(RxxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyd_nac_ll_s0, s64, env, s64, s32, s32),
{
/* M2_mpyd_nac_ll_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_nac_ll_s0(gen_helper_M2_mpyd_nac_ll_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_nac_ll_s0 */
},
int64_t HELPER(M2_mpyd_nac_ll_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV- fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpyd_nac_ll_s0);
return RxxV;
})
DEF_QEMU(M2_mpyd_nac_ll_s1,{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyd_nac_ll_s1, s64, env, s64, s32, s32),
{
/* M2_mpyd_nac_ll_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_nac_ll_s1(gen_helper_M2_mpyd_nac_ll_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_nac_ll_s1 */
},
int64_t HELPER(M2_mpyd_nac_ll_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpyd_nac_ll_s1);
return RxxV;
})
DEF_QEMU(M2_mpyd_hh_s0,{RddV=fPASS(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;},
DEF_HELPER_3(M2_mpyd_hh_s0, s64, env, s32, s32),
{
/* M2_mpyd_hh_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_hh_s0(gen_helper_M2_mpyd_hh_s0(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_hh_s0 */
},
int64_t HELPER(M2_mpyd_hh_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;}
COUNT_HELPER(M2_mpyd_hh_s0);
return RddV;
})
DEF_QEMU(M2_mpyd_hh_s1,{RddV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;},
DEF_HELPER_3(M2_mpyd_hh_s1, s64, env, s32, s32),
{
/* M2_mpyd_hh_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_hh_s1(gen_helper_M2_mpyd_hh_s1(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_hh_s1 */
},
int64_t HELPER(M2_mpyd_hh_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;}
COUNT_HELPER(M2_mpyd_hh_s1);
return RddV;
})
DEF_QEMU(M2_mpyd_hl_s0,{RddV=fPASS(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;},
DEF_HELPER_3(M2_mpyd_hl_s0, s64, env, s32, s32),
{
/* M2_mpyd_hl_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_hl_s0(gen_helper_M2_mpyd_hl_s0(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_hl_s0 */
},
int64_t HELPER(M2_mpyd_hl_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fPASS( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;}
COUNT_HELPER(M2_mpyd_hl_s0);
return RddV;
})
DEF_QEMU(M2_mpyd_hl_s1,{RddV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;},
DEF_HELPER_3(M2_mpyd_hl_s1, s64, env, s32, s32),
{
/* M2_mpyd_hl_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_hl_s1(gen_helper_M2_mpyd_hl_s1(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_hl_s1 */
},
int64_t HELPER(M2_mpyd_hl_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;}
COUNT_HELPER(M2_mpyd_hl_s1);
return RddV;
})
DEF_QEMU(M2_mpyd_lh_s0,{RddV=fPASS(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;},
DEF_HELPER_3(M2_mpyd_lh_s0, s64, env, s32, s32),
{
/* M2_mpyd_lh_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_lh_s0(gen_helper_M2_mpyd_lh_s0(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_lh_s0 */
},
int64_t HELPER(M2_mpyd_lh_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;}
COUNT_HELPER(M2_mpyd_lh_s0);
return RddV;
})
DEF_QEMU(M2_mpyd_lh_s1,{RddV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;},
DEF_HELPER_3(M2_mpyd_lh_s1, s64, env, s32, s32),
{
/* M2_mpyd_lh_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_lh_s1(gen_helper_M2_mpyd_lh_s1(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_lh_s1 */
},
int64_t HELPER(M2_mpyd_lh_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;}
COUNT_HELPER(M2_mpyd_lh_s1);
return RddV;
})
DEF_QEMU(M2_mpyd_ll_s0,{RddV=fPASS(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;},
DEF_HELPER_3(M2_mpyd_ll_s0, s64, env, s32, s32),
{
/* M2_mpyd_ll_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_ll_s0(gen_helper_M2_mpyd_ll_s0(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_ll_s0 */
},
int64_t HELPER(M2_mpyd_ll_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fPASS( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;}
COUNT_HELPER(M2_mpyd_ll_s0);
return RddV;
})
DEF_QEMU(M2_mpyd_ll_s1,{RddV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;},
DEF_HELPER_3(M2_mpyd_ll_s1, s64, env, s32, s32),
{
/* M2_mpyd_ll_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_ll_s1(gen_helper_M2_mpyd_ll_s1(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_ll_s1 */
},
int64_t HELPER(M2_mpyd_ll_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fPASS( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;}
COUNT_HELPER(M2_mpyd_ll_s1);
return RddV;
})
DEF_QEMU(M2_mpyd_rnd_hh_s0,{RddV=fPASS(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;},
DEF_HELPER_3(M2_mpyd_rnd_hh_s0, s64, env, s32, s32),
{
/* M2_mpyd_rnd_hh_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_rnd_hh_s0(gen_helper_M2_mpyd_rnd_hh_s0(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_rnd_hh_s0 */
},
int64_t HELPER(M2_mpyd_rnd_hh_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(1,RtV)))); ;}
COUNT_HELPER(M2_mpyd_rnd_hh_s0);
return RddV;
})
DEF_QEMU(M2_mpyd_rnd_hh_s1,{RddV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;},
DEF_HELPER_3(M2_mpyd_rnd_hh_s1, s64, env, s32, s32),
{
/* M2_mpyd_rnd_hh_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_rnd_hh_s1(gen_helper_M2_mpyd_rnd_hh_s1(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_rnd_hh_s1 */
},
int64_t HELPER(M2_mpyd_rnd_hh_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); ;}
COUNT_HELPER(M2_mpyd_rnd_hh_s1);
return RddV;
})
DEF_QEMU(M2_mpyd_rnd_hl_s0,{RddV=fPASS(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;},
DEF_HELPER_3(M2_mpyd_rnd_hl_s0, s64, env, s32, s32),
{
/* M2_mpyd_rnd_hl_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_rnd_hl_s0(gen_helper_M2_mpyd_rnd_hl_s0(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_rnd_hl_s0 */
},
int64_t HELPER(M2_mpyd_rnd_hl_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fROUND( fMPY16SS( fGETHALF(1,RsV),fGETHALF(0,RtV)))); ;}
COUNT_HELPER(M2_mpyd_rnd_hl_s0);
return RddV;
})
DEF_QEMU(M2_mpyd_rnd_hl_s1,{RddV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;},
DEF_HELPER_3(M2_mpyd_rnd_hl_s1, s64, env, s32, s32),
{
/* M2_mpyd_rnd_hl_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_rnd_hl_s1(gen_helper_M2_mpyd_rnd_hl_s1(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_rnd_hl_s1 */
},
int64_t HELPER(M2_mpyd_rnd_hl_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))))); ;}
COUNT_HELPER(M2_mpyd_rnd_hl_s1);
return RddV;
})
DEF_QEMU(M2_mpyd_rnd_lh_s0,{RddV=fPASS(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;},
DEF_HELPER_3(M2_mpyd_rnd_lh_s0, s64, env, s32, s32),
{
/* M2_mpyd_rnd_lh_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_rnd_lh_s0(gen_helper_M2_mpyd_rnd_lh_s0(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_rnd_lh_s0 */
},
int64_t HELPER(M2_mpyd_rnd_lh_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(1,RtV)))); ;}
COUNT_HELPER(M2_mpyd_rnd_lh_s0);
return RddV;
})
DEF_QEMU(M2_mpyd_rnd_lh_s1,{RddV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;},
DEF_HELPER_3(M2_mpyd_rnd_lh_s1, s64, env, s32, s32),
{
/* M2_mpyd_rnd_lh_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_rnd_lh_s1(gen_helper_M2_mpyd_rnd_lh_s1(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_rnd_lh_s1 */
},
int64_t HELPER(M2_mpyd_rnd_lh_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); ;}
COUNT_HELPER(M2_mpyd_rnd_lh_s1);
return RddV;
})
DEF_QEMU(M2_mpyd_rnd_ll_s0,{RddV=fPASS(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;},
DEF_HELPER_3(M2_mpyd_rnd_ll_s0, s64, env, s32, s32),
{
/* M2_mpyd_rnd_ll_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_rnd_ll_s0(gen_helper_M2_mpyd_rnd_ll_s0(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_rnd_ll_s0 */
},
int64_t HELPER(M2_mpyd_rnd_ll_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fROUND( fMPY16SS( fGETHALF(0,RsV),fGETHALF(0,RtV)))); ;}
COUNT_HELPER(M2_mpyd_rnd_ll_s0);
return RddV;
})
DEF_QEMU(M2_mpyd_rnd_ll_s1,{RddV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;},
DEF_HELPER_3(M2_mpyd_rnd_ll_s1, s64, env, s32, s32),
{
/* M2_mpyd_rnd_ll_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyd_rnd_ll_s1(gen_helper_M2_mpyd_rnd_ll_s1(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyd_rnd_ll_s1 */
},
int64_t HELPER(M2_mpyd_rnd_ll_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fROUND( fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); ;}
COUNT_HELPER(M2_mpyd_rnd_ll_s1);
return RddV;
})
DEF_QEMU(M2_mpyu_acc_hh_s0,{RxV=fPASS(fPASS(RxV+ fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyu_acc_hh_s0, s32, env, s32, s32, s32),
{
/* M2_mpyu_acc_hh_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_acc_hh_s0(gen_helper_M2_mpyu_acc_hh_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV+ fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_acc_hh_s0 */
},
int32_t HELPER(M2_mpyu_acc_hh_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV+ fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); fACC();}
COUNT_HELPER(M2_mpyu_acc_hh_s0);
return RxV;
})
DEF_QEMU(M2_mpyu_acc_hh_s1,{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyu_acc_hh_s1, s32, env, s32, s32, s32),
{
/* M2_mpyu_acc_hh_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_acc_hh_s1(gen_helper_M2_mpyu_acc_hh_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_acc_hh_s1 */
},
int32_t HELPER(M2_mpyu_acc_hh_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpyu_acc_hh_s1);
return RxV;
})
DEF_QEMU(M2_mpyu_acc_hl_s0,{RxV=fPASS(fPASS(RxV+ fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyu_acc_hl_s0, s32, env, s32, s32, s32),
{
/* M2_mpyu_acc_hl_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_acc_hl_s0(gen_helper_M2_mpyu_acc_hl_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV+ fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_acc_hl_s0 */
},
int32_t HELPER(M2_mpyu_acc_hl_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV+ fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpyu_acc_hl_s0);
return RxV;
})
DEF_QEMU(M2_mpyu_acc_hl_s1,{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyu_acc_hl_s1, s32, env, s32, s32, s32),
{
/* M2_mpyu_acc_hl_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_acc_hl_s1(gen_helper_M2_mpyu_acc_hl_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_acc_hl_s1 */
},
int32_t HELPER(M2_mpyu_acc_hl_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpyu_acc_hl_s1);
return RxV;
})
DEF_QEMU(M2_mpyu_acc_lh_s0,{RxV=fPASS(fPASS(RxV+ fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} fACC();,
DEF_HELPER_4(M2_mpyu_acc_lh_s0, s32, env, s32, s32, s32),
{
/* M2_mpyu_acc_lh_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_acc_lh_s0(gen_helper_M2_mpyu_acc_lh_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV+ fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} fACC();)
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_acc_lh_s0 */
},
int32_t HELPER(M2_mpyu_acc_lh_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV+ fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} fACC();
COUNT_HELPER(M2_mpyu_acc_lh_s0);
return RxV;
})
DEF_QEMU(M2_mpyu_acc_lh_s1,{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyu_acc_lh_s1, s32, env, s32, s32, s32),
{
/* M2_mpyu_acc_lh_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_acc_lh_s1(gen_helper_M2_mpyu_acc_lh_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_acc_lh_s1 */
},
int32_t HELPER(M2_mpyu_acc_lh_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpyu_acc_lh_s1);
return RxV;
})
DEF_QEMU(M2_mpyu_acc_ll_s0,{RxV=fPASS(fPASS(RxV+ fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyu_acc_ll_s0, s32, env, s32, s32, s32),
{
/* M2_mpyu_acc_ll_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_acc_ll_s0(gen_helper_M2_mpyu_acc_ll_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV+ fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_acc_ll_s0 */
},
int32_t HELPER(M2_mpyu_acc_ll_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV+ fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpyu_acc_ll_s0);
return RxV;
})
DEF_QEMU(M2_mpyu_acc_ll_s1,{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyu_acc_ll_s1, s32, env, s32, s32, s32),
{
/* M2_mpyu_acc_ll_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_acc_ll_s1(gen_helper_M2_mpyu_acc_ll_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_acc_ll_s1 */
},
int32_t HELPER(M2_mpyu_acc_ll_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV+ fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpyu_acc_ll_s1);
return RxV;
})
DEF_QEMU(M2_mpyu_nac_hh_s0,{RxV=fPASS(fPASS(RxV- fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyu_nac_hh_s0, s32, env, s32, s32, s32),
{
/* M2_mpyu_nac_hh_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_nac_hh_s0(gen_helper_M2_mpyu_nac_hh_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV- fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_nac_hh_s0 */
},
int32_t HELPER(M2_mpyu_nac_hh_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV- fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); fACC();}
COUNT_HELPER(M2_mpyu_nac_hh_s0);
return RxV;
})
DEF_QEMU(M2_mpyu_nac_hh_s1,{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyu_nac_hh_s1, s32, env, s32, s32, s32),
{
/* M2_mpyu_nac_hh_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_nac_hh_s1(gen_helper_M2_mpyu_nac_hh_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_nac_hh_s1 */
},
int32_t HELPER(M2_mpyu_nac_hh_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpyu_nac_hh_s1);
return RxV;
})
DEF_QEMU(M2_mpyu_nac_hl_s0,{RxV=fPASS(fPASS(RxV- fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyu_nac_hl_s0, s32, env, s32, s32, s32),
{
/* M2_mpyu_nac_hl_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_nac_hl_s0(gen_helper_M2_mpyu_nac_hl_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV- fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_nac_hl_s0 */
},
int32_t HELPER(M2_mpyu_nac_hl_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV- fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpyu_nac_hl_s0);
return RxV;
})
DEF_QEMU(M2_mpyu_nac_hl_s1,{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyu_nac_hl_s1, s32, env, s32, s32, s32),
{
/* M2_mpyu_nac_hl_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_nac_hl_s1(gen_helper_M2_mpyu_nac_hl_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_nac_hl_s1 */
},
int32_t HELPER(M2_mpyu_nac_hl_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpyu_nac_hl_s1);
return RxV;
})
DEF_QEMU(M2_mpyu_nac_lh_s0,{RxV=fPASS(fPASS(RxV- fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} fACC();,
DEF_HELPER_4(M2_mpyu_nac_lh_s0, s32, env, s32, s32, s32),
{
/* M2_mpyu_nac_lh_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_nac_lh_s0(gen_helper_M2_mpyu_nac_lh_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV- fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} fACC();)
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_nac_lh_s0 */
},
int32_t HELPER(M2_mpyu_nac_lh_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV- fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} fACC();
COUNT_HELPER(M2_mpyu_nac_lh_s0);
return RxV;
})
DEF_QEMU(M2_mpyu_nac_lh_s1,{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyu_nac_lh_s1, s32, env, s32, s32, s32),
{
/* M2_mpyu_nac_lh_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_nac_lh_s1(gen_helper_M2_mpyu_nac_lh_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_nac_lh_s1 */
},
int32_t HELPER(M2_mpyu_nac_lh_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpyu_nac_lh_s1);
return RxV;
})
DEF_QEMU(M2_mpyu_nac_ll_s0,{RxV=fPASS(fPASS(RxV- fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyu_nac_ll_s0, s32, env, s32, s32, s32),
{
/* M2_mpyu_nac_ll_s0 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_nac_ll_s0(gen_helper_M2_mpyu_nac_ll_s0(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV- fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_nac_ll_s0 */
},
int32_t HELPER(M2_mpyu_nac_ll_s0)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV- fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpyu_nac_ll_s0);
return RxV;
})
DEF_QEMU(M2_mpyu_nac_ll_s1,{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyu_nac_ll_s1, s32, env, s32, s32, s32),
{
/* M2_mpyu_nac_ll_s1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_nac_ll_s1(gen_helper_M2_mpyu_nac_ll_s1(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_nac_ll_s1 */
},
int32_t HELPER(M2_mpyu_nac_ll_s1)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fPASS(fPASS(RxV- fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpyu_nac_ll_s1);
return RxV;
})
DEF_QEMU(M2_mpyu_hh_s0,{RdV=fPASS(fPASS( fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); ;},
DEF_HELPER_3(M2_mpyu_hh_s0, s32, env, s32, s32),
{
/* M2_mpyu_hh_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_hh_s0(gen_helper_M2_mpyu_hh_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fPASS( fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_hh_s0 */
},
int32_t HELPER(M2_mpyu_hh_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fPASS( fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); ;}
COUNT_HELPER(M2_mpyu_hh_s0);
return RdV;
})
DEF_QEMU(M2_mpyu_hh_s1,{RdV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); ;},
DEF_HELPER_3(M2_mpyu_hh_s1, s32, env, s32, s32),
{
/* M2_mpyu_hh_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_hh_s1(gen_helper_M2_mpyu_hh_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_hh_s1 */
},
int32_t HELPER(M2_mpyu_hh_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); ;}
COUNT_HELPER(M2_mpyu_hh_s1);
return RdV;
})
DEF_QEMU(M2_mpyu_hl_s0,{RdV=fPASS(fPASS( fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); ;},
DEF_HELPER_3(M2_mpyu_hl_s0, s32, env, s32, s32),
{
/* M2_mpyu_hl_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_hl_s0(gen_helper_M2_mpyu_hl_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fPASS( fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_hl_s0 */
},
int32_t HELPER(M2_mpyu_hl_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fPASS( fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); ;}
COUNT_HELPER(M2_mpyu_hl_s0);
return RdV;
})
DEF_QEMU(M2_mpyu_hl_s1,{RdV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); ;},
DEF_HELPER_3(M2_mpyu_hl_s1, s32, env, s32, s32),
{
/* M2_mpyu_hl_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_hl_s1(gen_helper_M2_mpyu_hl_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_hl_s1 */
},
int32_t HELPER(M2_mpyu_hl_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); ;}
COUNT_HELPER(M2_mpyu_hl_s1);
return RdV;
})
DEF_QEMU(M2_mpyu_lh_s0,{RdV=fPASS(fPASS( fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} ;,
DEF_HELPER_3(M2_mpyu_lh_s0, s32, env, s32, s32),
{
/* M2_mpyu_lh_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_lh_s0(gen_helper_M2_mpyu_lh_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fPASS( fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} ;)
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_lh_s0 */
},
int32_t HELPER(M2_mpyu_lh_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fPASS( fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} ;
COUNT_HELPER(M2_mpyu_lh_s0);
return RdV;
})
DEF_QEMU(M2_mpyu_lh_s1,{RdV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); ;},
DEF_HELPER_3(M2_mpyu_lh_s1, s32, env, s32, s32),
{
/* M2_mpyu_lh_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_lh_s1(gen_helper_M2_mpyu_lh_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_lh_s1 */
},
int32_t HELPER(M2_mpyu_lh_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); ;}
COUNT_HELPER(M2_mpyu_lh_s1);
return RdV;
})
DEF_QEMU(M2_mpyu_ll_s0,{RdV=fPASS(fPASS( fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); ;},
DEF_HELPER_3(M2_mpyu_ll_s0, s32, env, s32, s32),
{
/* M2_mpyu_ll_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_ll_s0(gen_helper_M2_mpyu_ll_s0(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fPASS( fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_ll_s0 */
},
int32_t HELPER(M2_mpyu_ll_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fPASS( fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); ;}
COUNT_HELPER(M2_mpyu_ll_s0);
return RdV;
})
DEF_QEMU(M2_mpyu_ll_s1,{RdV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); ;},
DEF_HELPER_3(M2_mpyu_ll_s1, s32, env, s32, s32),
{
/* M2_mpyu_ll_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_ll_s1(gen_helper_M2_mpyu_ll_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); ;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_ll_s1 */
},
int32_t HELPER(M2_mpyu_ll_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); ;}
COUNT_HELPER(M2_mpyu_ll_s1);
return RdV;
})
DEF_QEMU(M2_mpyud_acc_hh_s0,{RxxV=fPASS(fPASS(RxxV+ fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyud_acc_hh_s0, s64, env, s64, s32, s32),
{
/* M2_mpyud_acc_hh_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_acc_hh_s0(gen_helper_M2_mpyud_acc_hh_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV+ fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_acc_hh_s0 */
},
int64_t HELPER(M2_mpyud_acc_hh_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV+ fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); fACC();}
COUNT_HELPER(M2_mpyud_acc_hh_s0);
return RxxV;
})
DEF_QEMU(M2_mpyud_acc_hh_s1,{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyud_acc_hh_s1, s64, env, s64, s32, s32),
{
/* M2_mpyud_acc_hh_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_acc_hh_s1(gen_helper_M2_mpyud_acc_hh_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_acc_hh_s1 */
},
int64_t HELPER(M2_mpyud_acc_hh_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpyud_acc_hh_s1);
return RxxV;
})
DEF_QEMU(M2_mpyud_acc_hl_s0,{RxxV=fPASS(fPASS(RxxV+ fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyud_acc_hl_s0, s64, env, s64, s32, s32),
{
/* M2_mpyud_acc_hl_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_acc_hl_s0(gen_helper_M2_mpyud_acc_hl_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV+ fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_acc_hl_s0 */
},
int64_t HELPER(M2_mpyud_acc_hl_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV+ fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpyud_acc_hl_s0);
return RxxV;
})
DEF_QEMU(M2_mpyud_acc_hl_s1,{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyud_acc_hl_s1, s64, env, s64, s32, s32),
{
/* M2_mpyud_acc_hl_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_acc_hl_s1(gen_helper_M2_mpyud_acc_hl_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_acc_hl_s1 */
},
int64_t HELPER(M2_mpyud_acc_hl_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpyud_acc_hl_s1);
return RxxV;
})
DEF_QEMU(M2_mpyud_acc_lh_s0,{RxxV=fPASS(fPASS(RxxV+ fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} fACC();,
DEF_HELPER_4(M2_mpyud_acc_lh_s0, s64, env, s64, s32, s32),
{
/* M2_mpyud_acc_lh_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_acc_lh_s0(gen_helper_M2_mpyud_acc_lh_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV+ fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} fACC();)
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_acc_lh_s0 */
},
int64_t HELPER(M2_mpyud_acc_lh_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV+ fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} fACC();
COUNT_HELPER(M2_mpyud_acc_lh_s0);
return RxxV;
})
DEF_QEMU(M2_mpyud_acc_lh_s1,{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyud_acc_lh_s1, s64, env, s64, s32, s32),
{
/* M2_mpyud_acc_lh_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_acc_lh_s1(gen_helper_M2_mpyud_acc_lh_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_acc_lh_s1 */
},
int64_t HELPER(M2_mpyud_acc_lh_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpyud_acc_lh_s1);
return RxxV;
})
DEF_QEMU(M2_mpyud_acc_ll_s0,{RxxV=fPASS(fPASS(RxxV+ fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyud_acc_ll_s0, s64, env, s64, s32, s32),
{
/* M2_mpyud_acc_ll_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_acc_ll_s0(gen_helper_M2_mpyud_acc_ll_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV+ fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_acc_ll_s0 */
},
int64_t HELPER(M2_mpyud_acc_ll_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV+ fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpyud_acc_ll_s0);
return RxxV;
})
DEF_QEMU(M2_mpyud_acc_ll_s1,{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyud_acc_ll_s1, s64, env, s64, s32, s32),
{
/* M2_mpyud_acc_ll_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_acc_ll_s1(gen_helper_M2_mpyud_acc_ll_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_acc_ll_s1 */
},
int64_t HELPER(M2_mpyud_acc_ll_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV+ fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpyud_acc_ll_s1);
return RxxV;
})
DEF_QEMU(M2_mpyud_nac_hh_s0,{RxxV=fPASS(fPASS(RxxV- fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyud_nac_hh_s0, s64, env, s64, s32, s32),
{
/* M2_mpyud_nac_hh_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_nac_hh_s0(gen_helper_M2_mpyud_nac_hh_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV- fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_nac_hh_s0 */
},
int64_t HELPER(M2_mpyud_nac_hh_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV- fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); fACC();}
COUNT_HELPER(M2_mpyud_nac_hh_s0);
return RxxV;
})
DEF_QEMU(M2_mpyud_nac_hh_s1,{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyud_nac_hh_s1, s64, env, s64, s32, s32),
{
/* M2_mpyud_nac_hh_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_nac_hh_s1(gen_helper_M2_mpyud_nac_hh_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_nac_hh_s1 */
},
int64_t HELPER(M2_mpyud_nac_hh_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpyud_nac_hh_s1);
return RxxV;
})
DEF_QEMU(M2_mpyud_nac_hl_s0,{RxxV=fPASS(fPASS(RxxV- fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyud_nac_hl_s0, s64, env, s64, s32, s32),
{
/* M2_mpyud_nac_hl_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_nac_hl_s0(gen_helper_M2_mpyud_nac_hl_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV- fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_nac_hl_s0 */
},
int64_t HELPER(M2_mpyud_nac_hl_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV- fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpyud_nac_hl_s0);
return RxxV;
})
DEF_QEMU(M2_mpyud_nac_hl_s1,{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyud_nac_hl_s1, s64, env, s64, s32, s32),
{
/* M2_mpyud_nac_hl_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_nac_hl_s1(gen_helper_M2_mpyud_nac_hl_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_nac_hl_s1 */
},
int64_t HELPER(M2_mpyud_nac_hl_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpyud_nac_hl_s1);
return RxxV;
})
DEF_QEMU(M2_mpyud_nac_lh_s0,{RxxV=fPASS(fPASS(RxxV- fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} fACC();,
DEF_HELPER_4(M2_mpyud_nac_lh_s0, s64, env, s64, s32, s32),
{
/* M2_mpyud_nac_lh_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_nac_lh_s0(gen_helper_M2_mpyud_nac_lh_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV- fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} fACC();)
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_nac_lh_s0 */
},
int64_t HELPER(M2_mpyud_nac_lh_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV- fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} fACC();
COUNT_HELPER(M2_mpyud_nac_lh_s0);
return RxxV;
})
DEF_QEMU(M2_mpyud_nac_lh_s1,{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyud_nac_lh_s1, s64, env, s64, s32, s32),
{
/* M2_mpyud_nac_lh_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_nac_lh_s1(gen_helper_M2_mpyud_nac_lh_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_nac_lh_s1 */
},
int64_t HELPER(M2_mpyud_nac_lh_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_mpyud_nac_lh_s1);
return RxxV;
})
DEF_QEMU(M2_mpyud_nac_ll_s0,{RxxV=fPASS(fPASS(RxxV- fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); fACC();},
DEF_HELPER_4(M2_mpyud_nac_ll_s0, s64, env, s64, s32, s32),
{
/* M2_mpyud_nac_ll_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_nac_ll_s0(gen_helper_M2_mpyud_nac_ll_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV- fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_nac_ll_s0 */
},
int64_t HELPER(M2_mpyud_nac_ll_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV- fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); fACC();}
COUNT_HELPER(M2_mpyud_nac_ll_s0);
return RxxV;
})
DEF_QEMU(M2_mpyud_nac_ll_s1,{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); fACC();},
DEF_HELPER_4(M2_mpyud_nac_ll_s1, s64, env, s64, s32, s32),
{
/* M2_mpyud_nac_ll_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_nac_ll_s1(gen_helper_M2_mpyud_nac_ll_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_nac_ll_s1 */
},
int64_t HELPER(M2_mpyud_nac_ll_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV=fPASS(fPASS(RxxV- fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); fACC();}
COUNT_HELPER(M2_mpyud_nac_ll_s1);
return RxxV;
})
DEF_QEMU(M2_mpyud_hh_s0,{RddV=fPASS(fPASS( fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); ;},
DEF_HELPER_3(M2_mpyud_hh_s0, s64, env, s32, s32),
{
/* M2_mpyud_hh_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_hh_s0(gen_helper_M2_mpyud_hh_s0(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fPASS( fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_hh_s0 */
},
int64_t HELPER(M2_mpyud_hh_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fPASS( fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(1,RtV)))); ;}
COUNT_HELPER(M2_mpyud_hh_s0);
return RddV;
})
DEF_QEMU(M2_mpyud_hh_s1,{RddV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); ;},
DEF_HELPER_3(M2_mpyud_hh_s1, s64, env, s32, s32),
{
/* M2_mpyud_hh_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_hh_s1(gen_helper_M2_mpyud_hh_s1(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_hh_s1 */
},
int64_t HELPER(M2_mpyud_hh_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(1,RtV))))); ;}
COUNT_HELPER(M2_mpyud_hh_s1);
return RddV;
})
DEF_QEMU(M2_mpyud_hl_s0,{RddV=fPASS(fPASS( fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); ;},
DEF_HELPER_3(M2_mpyud_hl_s0, s64, env, s32, s32),
{
/* M2_mpyud_hl_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_hl_s0(gen_helper_M2_mpyud_hl_s0(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fPASS( fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_hl_s0 */
},
int64_t HELPER(M2_mpyud_hl_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fPASS( fMPY16UU( fGETUHALF(1,RsV),fGETUHALF(0,RtV)))); ;}
COUNT_HELPER(M2_mpyud_hl_s0);
return RddV;
})
DEF_QEMU(M2_mpyud_hl_s1,{RddV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); ;},
DEF_HELPER_3(M2_mpyud_hl_s1, s64, env, s32, s32),
{
/* M2_mpyud_hl_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_hl_s1(gen_helper_M2_mpyud_hl_s1(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_hl_s1 */
},
int64_t HELPER(M2_mpyud_hl_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(1,RsV),fGETUHALF(0,RtV))))); ;}
COUNT_HELPER(M2_mpyud_hl_s1);
return RddV;
})
DEF_QEMU(M2_mpyud_lh_s0,{RddV=fPASS(fPASS( fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} ;,
DEF_HELPER_3(M2_mpyud_lh_s0, s64, env, s32, s32),
{
/* M2_mpyud_lh_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_lh_s0(gen_helper_M2_mpyud_lh_s0(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fPASS( fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} ;)
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_lh_s0 */
},
int64_t HELPER(M2_mpyud_lh_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fPASS( fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(1,RtV))));} ;
COUNT_HELPER(M2_mpyud_lh_s0);
return RddV;
})
DEF_QEMU(M2_mpyud_lh_s1,{RddV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); ;},
DEF_HELPER_3(M2_mpyud_lh_s1, s64, env, s32, s32),
{
/* M2_mpyud_lh_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_lh_s1(gen_helper_M2_mpyud_lh_s1(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_lh_s1 */
},
int64_t HELPER(M2_mpyud_lh_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(1,RtV))))); ;}
COUNT_HELPER(M2_mpyud_lh_s1);
return RddV;
})
DEF_QEMU(M2_mpyud_ll_s0,{RddV=fPASS(fPASS( fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); ;},
DEF_HELPER_3(M2_mpyud_ll_s0, s64, env, s32, s32),
{
/* M2_mpyud_ll_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_ll_s0(gen_helper_M2_mpyud_ll_s0(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fPASS( fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_ll_s0 */
},
int64_t HELPER(M2_mpyud_ll_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fPASS( fMPY16UU( fGETUHALF(0,RsV),fGETUHALF(0,RtV)))); ;}
COUNT_HELPER(M2_mpyud_ll_s0);
return RddV;
})
DEF_QEMU(M2_mpyud_ll_s1,{RddV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); ;},
DEF_HELPER_3(M2_mpyud_ll_s1, s64, env, s32, s32),
{
/* M2_mpyud_ll_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyud_ll_s1(gen_helper_M2_mpyud_ll_s1(RddV, cpu_env, RsV, RtV);,
{RddV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyud_ll_s1 */
},
int64_t HELPER(M2_mpyud_ll_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fPASS(fPASS( fSCALE(1,fMPY16UU(fGETUHALF(0,RsV),fGETUHALF(0,RtV))))); ;}
COUNT_HELPER(M2_mpyud_ll_s1);
return RddV;
})
DEF_QEMU(M2_mpysip,{ fIMMEXT(uiV); RdV=RsV*uiV; },
DEF_HELPER_3(M2_mpysip, s32, env, s32, s32),
{
/* M2_mpysip */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_M2_mpysip(gen_helper_M2_mpysip(RdV, cpu_env, RsV, uiV);,
{ fIMMEXT(uiV); RdV=RsV*uiV; })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* M2_mpysip */
},
int32_t HELPER(M2_mpysip)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fIMMEXT(uiV); RdV=RsV*uiV; }
COUNT_HELPER(M2_mpysip);
return RdV;
})
DEF_QEMU(M2_mpysin,{ RdV=RsV*-uiV; },
DEF_HELPER_3(M2_mpysin, s32, env, s32, s32),
{
/* M2_mpysin */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_M2_mpysin(gen_helper_M2_mpysin(RdV, cpu_env, RsV, uiV);,
{ RdV=RsV*-uiV; })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* M2_mpysin */
},
int32_t HELPER(M2_mpysin)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=RsV*-uiV; }
COUNT_HELPER(M2_mpysin);
return RdV;
})
DEF_QEMU(M2_macsip,{ fIMMEXT(uiV); RxV=RxV + (RsV*uiV); fACC();},
DEF_HELPER_4(M2_macsip, s32, env, s32, s32, s32),
{
/* M2_macsip */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_M2_macsip(gen_helper_M2_macsip(RxV, cpu_env, RxV, RsV, uiV);,
{ fIMMEXT(uiV); RxV=RxV + (RsV*uiV); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* M2_macsip */
},
int32_t HELPER(M2_macsip)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ fIMMEXT(uiV); RxV=RxV + (RsV*uiV); fACC();}
COUNT_HELPER(M2_macsip);
return RxV;
})
DEF_QEMU(M2_macsin,{ fIMMEXT(uiV); RxV=RxV - (RsV*uiV); fACC();},
DEF_HELPER_4(M2_macsin, s32, env, s32, s32, s32),
{
/* M2_macsin */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_M2_macsin(gen_helper_M2_macsin(RxV, cpu_env, RxV, RsV, uiV);,
{ fIMMEXT(uiV); RxV=RxV - (RsV*uiV); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* M2_macsin */
},
int32_t HELPER(M2_macsin)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ fIMMEXT(uiV); RxV=RxV - (RsV*uiV); fACC();}
COUNT_HELPER(M2_macsin);
return RxV;
})
DEF_QEMU(M2_dpmpyss_s0,{RddV=fMPY32SS(RsV,RtV);},
DEF_HELPER_3(M2_dpmpyss_s0, s64, env, s32, s32),
{
/* M2_dpmpyss_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_dpmpyss_s0(gen_helper_M2_dpmpyss_s0(RddV, cpu_env, RsV, RtV);,
{RddV=fMPY32SS(RsV,RtV);})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_dpmpyss_s0 */
},
int64_t HELPER(M2_dpmpyss_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fMPY32SS(RsV,RtV);}
COUNT_HELPER(M2_dpmpyss_s0);
return RddV;
})
DEF_QEMU(M2_dpmpyss_acc_s0,{RxxV= RxxV + fMPY32SS(RsV,RtV); fACC();},
DEF_HELPER_4(M2_dpmpyss_acc_s0, s64, env, s64, s32, s32),
{
/* M2_dpmpyss_acc_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_dpmpyss_acc_s0(gen_helper_M2_dpmpyss_acc_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV= RxxV + fMPY32SS(RsV,RtV); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_dpmpyss_acc_s0 */
},
int64_t HELPER(M2_dpmpyss_acc_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV= RxxV + fMPY32SS(RsV,RtV); fACC();}
COUNT_HELPER(M2_dpmpyss_acc_s0);
return RxxV;
})
DEF_QEMU(M2_dpmpyss_nac_s0,{RxxV= RxxV - fMPY32SS(RsV,RtV); fACC();},
DEF_HELPER_4(M2_dpmpyss_nac_s0, s64, env, s64, s32, s32),
{
/* M2_dpmpyss_nac_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_dpmpyss_nac_s0(gen_helper_M2_dpmpyss_nac_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV= RxxV - fMPY32SS(RsV,RtV); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_dpmpyss_nac_s0 */
},
int64_t HELPER(M2_dpmpyss_nac_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV= RxxV - fMPY32SS(RsV,RtV); fACC();}
COUNT_HELPER(M2_dpmpyss_nac_s0);
return RxxV;
})
DEF_QEMU(M2_dpmpyuu_s0,{RddV=fMPY32UU(fCAST4u(RsV),fCAST4u(RtV));},
DEF_HELPER_3(M2_dpmpyuu_s0, s64, env, s32, s32),
{
/* M2_dpmpyuu_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_dpmpyuu_s0(gen_helper_M2_dpmpyuu_s0(RddV, cpu_env, RsV, RtV);,
{RddV=fMPY32UU(fCAST4u(RsV),fCAST4u(RtV));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_dpmpyuu_s0 */
},
int64_t HELPER(M2_dpmpyuu_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV=fMPY32UU(fCAST4u(RsV),fCAST4u(RtV));}
COUNT_HELPER(M2_dpmpyuu_s0);
return RddV;
})
DEF_QEMU(M2_dpmpyuu_acc_s0,{RxxV= RxxV + fMPY32UU(fCAST4u(RsV),fCAST4u(RtV)); fACC();},
DEF_HELPER_4(M2_dpmpyuu_acc_s0, s64, env, s64, s32, s32),
{
/* M2_dpmpyuu_acc_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_dpmpyuu_acc_s0(gen_helper_M2_dpmpyuu_acc_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV= RxxV + fMPY32UU(fCAST4u(RsV),fCAST4u(RtV)); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_dpmpyuu_acc_s0 */
},
int64_t HELPER(M2_dpmpyuu_acc_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV= RxxV + fMPY32UU(fCAST4u(RsV),fCAST4u(RtV)); fACC();}
COUNT_HELPER(M2_dpmpyuu_acc_s0);
return RxxV;
})
DEF_QEMU(M2_dpmpyuu_nac_s0,{RxxV= RxxV - fMPY32UU(fCAST4u(RsV),fCAST4u(RtV)); fACC();},
DEF_HELPER_4(M2_dpmpyuu_nac_s0, s64, env, s64, s32, s32),
{
/* M2_dpmpyuu_nac_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_dpmpyuu_nac_s0(gen_helper_M2_dpmpyuu_nac_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{RxxV= RxxV - fMPY32UU(fCAST4u(RsV),fCAST4u(RtV)); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_dpmpyuu_nac_s0 */
},
int64_t HELPER(M2_dpmpyuu_nac_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxxV= RxxV - fMPY32UU(fCAST4u(RsV),fCAST4u(RtV)); fACC();}
COUNT_HELPER(M2_dpmpyuu_nac_s0);
return RxxV;
})
DEF_QEMU(M2_mpy_up,{RdV=fMPY32SS(RsV,RtV)>>32;},
DEF_HELPER_3(M2_mpy_up, s32, env, s32, s32),
{
/* M2_mpy_up */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_up(gen_helper_M2_mpy_up(RdV, cpu_env, RsV, RtV);,
{RdV=fMPY32SS(RsV,RtV)>>32;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_up */
},
int32_t HELPER(M2_mpy_up)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fMPY32SS(RsV,RtV)>>32;}
COUNT_HELPER(M2_mpy_up);
return RdV;
})
DEF_QEMU(M2_mpy_up_s1,{RdV=fMPY32SS(RsV,RtV)>>31;},
DEF_HELPER_3(M2_mpy_up_s1, s32, env, s32, s32),
{
/* M2_mpy_up_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_up_s1(gen_helper_M2_mpy_up_s1(RdV, cpu_env, RsV, RtV);,
{RdV=fMPY32SS(RsV,RtV)>>31;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_up_s1 */
},
int32_t HELPER(M2_mpy_up_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fMPY32SS(RsV,RtV)>>31;}
COUNT_HELPER(M2_mpy_up_s1);
return RdV;
})
DEF_QEMU(M2_mpy_up_s1_sat,{RdV=fSAT(fMPY32SS(RsV,RtV)>>31);},
DEF_HELPER_3(M2_mpy_up_s1_sat, s32, env, s32, s32),
{
/* M2_mpy_up_s1_sat */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpy_up_s1_sat(gen_helper_M2_mpy_up_s1_sat(RdV, cpu_env, RsV, RtV);,
{RdV=fSAT(fMPY32SS(RsV,RtV)>>31);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpy_up_s1_sat */
},
int32_t HELPER(M2_mpy_up_s1_sat)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSAT(fMPY32SS(RsV,RtV)>>31);}
COUNT_HELPER(M2_mpy_up_s1_sat);
return RdV;
})
DEF_QEMU(M2_mpyu_up,{RdV=fMPY32UU(fCAST4u(RsV),fCAST4u(RtV))>>32;},
DEF_HELPER_3(M2_mpyu_up, s32, env, s32, s32),
{
/* M2_mpyu_up */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyu_up(gen_helper_M2_mpyu_up(RdV, cpu_env, RsV, RtV);,
{RdV=fMPY32UU(fCAST4u(RsV),fCAST4u(RtV))>>32;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyu_up */
},
int32_t HELPER(M2_mpyu_up)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fMPY32UU(fCAST4u(RsV),fCAST4u(RtV))>>32;}
COUNT_HELPER(M2_mpyu_up);
return RdV;
})
DEF_QEMU(M2_mpysu_up,{RdV=fMPY32SU(RsV,fCAST4u(RtV))>>32;},
DEF_HELPER_3(M2_mpysu_up, s32, env, s32, s32),
{
/* M2_mpysu_up */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpysu_up(gen_helper_M2_mpysu_up(RdV, cpu_env, RsV, RtV);,
{RdV=fMPY32SU(RsV,fCAST4u(RtV))>>32;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpysu_up */
},
int32_t HELPER(M2_mpysu_up)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fMPY32SU(RsV,fCAST4u(RtV))>>32;}
COUNT_HELPER(M2_mpysu_up);
return RdV;
})
DEF_QEMU(M2_dpmpyss_rnd_s0,{RdV=(fMPY32SS(RsV,RtV)+fCONSTLL(0x80000000))>>32;},
DEF_HELPER_3(M2_dpmpyss_rnd_s0, s32, env, s32, s32),
{
/* M2_dpmpyss_rnd_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_dpmpyss_rnd_s0(gen_helper_M2_dpmpyss_rnd_s0(RdV, cpu_env, RsV, RtV);,
{RdV=(fMPY32SS(RsV,RtV)+fCONSTLL(0x80000000))>>32;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_dpmpyss_rnd_s0 */
},
int32_t HELPER(M2_dpmpyss_rnd_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(fMPY32SS(RsV,RtV)+fCONSTLL(0x80000000))>>32;}
COUNT_HELPER(M2_dpmpyss_rnd_s0);
return RdV;
})
DEF_QEMU(M4_mac_up_s1_sat,{RxV=fSAT( (fSE32_64(RxV)) + (fMPY32SS(RsV,RtV)>>31)); fACC();},
DEF_HELPER_4(M4_mac_up_s1_sat, s32, env, s32, s32, s32),
{
/* M4_mac_up_s1_sat */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_mac_up_s1_sat(gen_helper_M4_mac_up_s1_sat(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT( (fSE32_64(RxV)) + (fMPY32SS(RsV,RtV)>>31)); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M4_mac_up_s1_sat */
},
int32_t HELPER(M4_mac_up_s1_sat)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT( (fSE32_64(RxV)) + (fMPY32SS(RsV,RtV)>>31)); fACC();}
COUNT_HELPER(M4_mac_up_s1_sat);
return RxV;
})
DEF_QEMU(M4_nac_up_s1_sat,{RxV=fSAT( (fSE32_64(RxV)) - (fMPY32SS(RsV,RtV)>>31)); fACC();},
DEF_HELPER_4(M4_nac_up_s1_sat, s32, env, s32, s32, s32),
{
/* M4_nac_up_s1_sat */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_nac_up_s1_sat(gen_helper_M4_nac_up_s1_sat(RxV, cpu_env, RxV, RsV, RtV);,
{RxV=fSAT( (fSE32_64(RxV)) - (fMPY32SS(RsV,RtV)>>31)); fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M4_nac_up_s1_sat */
},
int32_t HELPER(M4_nac_up_s1_sat)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{RxV=fSAT( (fSE32_64(RxV)) - (fMPY32SS(RsV,RtV)>>31)); fACC();}
COUNT_HELPER(M4_nac_up_s1_sat);
return RxV;
})
DEF_QEMU(M2_mpyi,{ RdV=RsV*RtV;},
DEF_HELPER_3(M2_mpyi, s32, env, s32, s32),
{
/* M2_mpyi */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mpyi(gen_helper_M2_mpyi(RdV, cpu_env, RsV, RtV);,
{ RdV=RsV*RtV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mpyi */
},
int32_t HELPER(M2_mpyi)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=RsV*RtV;}
COUNT_HELPER(M2_mpyi);
return RdV;
})
DEF_QEMU(M2_maci,{ RxV=RxV + RsV*RtV; fACC();},
DEF_HELPER_4(M2_maci, s32, env, s32, s32, s32),
{
/* M2_maci */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_maci(gen_helper_M2_maci(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV=RxV + RsV*RtV; fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_maci */
},
int32_t HELPER(M2_maci)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxV=RxV + RsV*RtV; fACC();}
COUNT_HELPER(M2_maci);
return RxV;
})
DEF_QEMU(M2_mnaci,{ RxV=RxV - RsV*RtV; fACC();},
DEF_HELPER_4(M2_mnaci, s32, env, s32, s32, s32),
{
/* M2_mnaci */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_mnaci(gen_helper_M2_mnaci(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV=RxV - RsV*RtV; fACC();})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_mnaci */
},
int32_t HELPER(M2_mnaci)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxV=RxV - RsV*RtV; fACC();}
COUNT_HELPER(M2_mnaci);
return RxV;
})
DEF_QEMU(M2_acci,{ RxV=RxV + RsV + RtV;},
DEF_HELPER_4(M2_acci, s32, env, s32, s32, s32),
{
/* M2_acci */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_acci(gen_helper_M2_acci(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV=RxV + RsV + RtV;})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_acci */
},
int32_t HELPER(M2_acci)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxV=RxV + RsV + RtV;}
COUNT_HELPER(M2_acci);
return RxV;
})
DEF_QEMU(M2_accii,{ fIMMEXT(siV); RxV=RxV + RsV + siV;},
DEF_HELPER_4(M2_accii, s32, env, s32, s32, s32),
{
/* M2_accii */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_M2_accii(gen_helper_M2_accii(RxV, cpu_env, RxV, RsV, siV);,
{ fIMMEXT(siV); RxV=RxV + RsV + siV;})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* M2_accii */
},
int32_t HELPER(M2_accii)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
{ fIMMEXT(siV); RxV=RxV + RsV + siV;}
COUNT_HELPER(M2_accii);
return RxV;
})
DEF_QEMU(M2_nacci,{ RxV=RxV - (RsV + RtV);},
DEF_HELPER_4(M2_nacci, s32, env, s32, s32, s32),
{
/* M2_nacci */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_nacci(gen_helper_M2_nacci(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV=RxV - (RsV + RtV);})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_nacci */
},
int32_t HELPER(M2_nacci)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxV=RxV - (RsV + RtV);}
COUNT_HELPER(M2_nacci);
return RxV;
})
DEF_QEMU(M2_naccii,{ fIMMEXT(siV); RxV=RxV - (RsV + siV);},
DEF_HELPER_4(M2_naccii, s32, env, s32, s32, s32),
{
/* M2_naccii */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_M2_naccii(gen_helper_M2_naccii(RxV, cpu_env, RxV, RsV, siV);,
{ fIMMEXT(siV); RxV=RxV - (RsV + siV);})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* M2_naccii */
},
int32_t HELPER(M2_naccii)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
{ fIMMEXT(siV); RxV=RxV - (RsV + siV);}
COUNT_HELPER(M2_naccii);
return RxV;
})
DEF_QEMU(M2_subacc,{ RxV=RxV + RtV - RsV;},
DEF_HELPER_4(M2_subacc, s32, env, s32, s32, s32),
{
/* M2_subacc */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_M2_subacc(gen_helper_M2_subacc(RxV, cpu_env, RxV, RtV, RsV);,
{ RxV=RxV + RtV - RsV;})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* M2_subacc */
},
int32_t HELPER(M2_subacc)(CPUHexagonState *env, int32_t RxV, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
{ RxV=RxV + RtV - RsV;}
COUNT_HELPER(M2_subacc);
return RxV;
})
DEF_QEMU(M4_mpyrr_addr,{ RyV = RuV + RsV*RyV; fACC();},
DEF_HELPER_4(M4_mpyrr_addr, s32, env, s32, s32, s32),
{
/* M4_mpyrr_addr */
DECL_RREG_y(TCGv, RyV, RyN, 0, 0);
DECL_RREG_u(TCGv, RuV, RuN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_y(RyV, RyN);
READ_RREG_u(RuV, RuN);
READ_RREG_s(RsV, RsN);
fWRAP_M4_mpyrr_addr(gen_helper_M4_mpyrr_addr(RyV, cpu_env, RyV, RuV, RsV);,
{ RyV = RuV + RsV*RyV; fACC();})
WRITE_RREG(RyN,RyV);
FREE_REG_y(RyV);
FREE_REG_u(RuV);
FREE_REG_s(RsV);
/* M4_mpyrr_addr */
},
int32_t HELPER(M4_mpyrr_addr)(CPUHexagonState *env, int32_t RyV, int32_t RuV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
{ RyV = RuV + RsV*RyV; fACC();}
COUNT_HELPER(M4_mpyrr_addr);
return RyV;
})
DEF_QEMU(M4_mpyri_addr_u2,{ RdV = RuV + RsV*uiV; fACC();},
DEF_HELPER_4(M4_mpyri_addr_u2, s32, env, s32, s32, s32),
{
/* M4_mpyri_addr_u2 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_u(TCGv, RuV, RuN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_u(RuV, RuN);
READ_RREG_s(RsV, RsN);
fWRAP_M4_mpyri_addr_u2(gen_helper_M4_mpyri_addr_u2(RdV, cpu_env, RuV, RsV, uiV);,
{ RdV = RuV + RsV*uiV; fACC();})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_u(RuV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* M4_mpyri_addr_u2 */
},
int32_t HELPER(M4_mpyri_addr_u2)(CPUHexagonState *env, int32_t RuV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = RuV + RsV*uiV; fACC();}
COUNT_HELPER(M4_mpyri_addr_u2);
return RdV;
})
DEF_QEMU(M4_mpyri_addr,{ fIMMEXT(uiV); RdV = RuV + RsV*uiV; fACC();},
DEF_HELPER_4(M4_mpyri_addr, s32, env, s32, s32, s32),
{
/* M4_mpyri_addr */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_u(TCGv, RuV, RuN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_u(RuV, RuN);
READ_RREG_s(RsV, RsN);
fWRAP_M4_mpyri_addr(gen_helper_M4_mpyri_addr(RdV, cpu_env, RuV, RsV, uiV);,
{ fIMMEXT(uiV); RdV = RuV + RsV*uiV; fACC();})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_u(RuV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* M4_mpyri_addr */
},
int32_t HELPER(M4_mpyri_addr)(CPUHexagonState *env, int32_t RuV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fIMMEXT(uiV); RdV = RuV + RsV*uiV; fACC();}
COUNT_HELPER(M4_mpyri_addr);
return RdV;
})
DEF_QEMU(M4_mpyri_addi,{ fIMMEXT(uiV); RdV = uiV + RsV*UiV;},
DEF_HELPER_4(M4_mpyri_addi, s32, env, s32, s32, s32),
{
/* M4_mpyri_addi */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_M4_mpyri_addi(gen_helper_M4_mpyri_addi(RdV, cpu_env, RsV, uiV, UiV);,
{ fIMMEXT(uiV); RdV = uiV + RsV*UiV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* M4_mpyri_addi */
},
int32_t HELPER(M4_mpyri_addi)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fIMMEXT(uiV); RdV = uiV + RsV*UiV;}
COUNT_HELPER(M4_mpyri_addi);
return RdV;
})
DEF_QEMU(M4_mpyrr_addi,{ fIMMEXT(uiV); RdV = uiV + RsV*RtV;},
DEF_HELPER_4(M4_mpyrr_addi, s32, env, s32, s32, s32),
{
/* M4_mpyrr_addi */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_mpyrr_addi(gen_helper_M4_mpyrr_addi(RdV, cpu_env, RsV, RtV, uiV);,
{ fIMMEXT(uiV); RdV = uiV + RsV*RtV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* M4_mpyrr_addi */
},
int32_t HELPER(M4_mpyrr_addi)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fIMMEXT(uiV); RdV = uiV + RsV*RtV;}
COUNT_HELPER(M4_mpyrr_addi);
return RdV;
})
DEF_QEMU(M2_vmpy2s_s0,{ fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));},
DEF_HELPER_3(M2_vmpy2s_s0, s64, env, s32, s32),
{
/* M2_vmpy2s_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_vmpy2s_s0(gen_helper_M2_vmpy2s_s0(RddV, cpu_env, RsV, RtV);,
{ fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_vmpy2s_s0 */
},
int64_t HELPER(M2_vmpy2s_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));}
COUNT_HELPER(M2_vmpy2s_s0);
return RddV;
})
DEF_QEMU(M2_vmpy2s_s1,{ fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));},
DEF_HELPER_3(M2_vmpy2s_s1, s64, env, s32, s32),
{
/* M2_vmpy2s_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_vmpy2s_s1(gen_helper_M2_vmpy2s_s1(RddV, cpu_env, RsV, RtV);,
{ fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_vmpy2s_s1 */
},
int64_t HELPER(M2_vmpy2s_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));}
COUNT_HELPER(M2_vmpy2s_s1);
return RddV;
})
DEF_QEMU(M2_vmac2s_s0,{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_vmac2s_s0, s64, env, s64, s32, s32),
{
/* M2_vmac2s_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_vmac2s_s0(gen_helper_M2_vmac2s_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_vmac2s_s0 */
},
int64_t HELPER(M2_vmac2s_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_vmac2s_s0);
return RxxV;
})
DEF_QEMU(M2_vmac2s_s1,{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_vmac2s_s1, s64, env, s64, s32, s32),
{
/* M2_vmac2s_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_vmac2s_s1(gen_helper_M2_vmac2s_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_vmac2s_s1 */
},
int64_t HELPER(M2_vmac2s_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_vmac2s_s1);
return RxxV;
})
DEF_QEMU(M2_vmpy2su_s0,{ fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SU(fGETHALF(0,RsV),fGETUHALF(0,RtV))))); fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SU(fGETHALF(1,RsV),fGETUHALF(1,RtV)))));},
DEF_HELPER_3(M2_vmpy2su_s0, s64, env, s32, s32),
{
/* M2_vmpy2su_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_vmpy2su_s0(gen_helper_M2_vmpy2su_s0(RddV, cpu_env, RsV, RtV);,
{ fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SU(fGETHALF(0,RsV),fGETUHALF(0,RtV))))); fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SU(fGETHALF(1,RsV),fGETUHALF(1,RtV)))));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_vmpy2su_s0 */
},
int64_t HELPER(M2_vmpy2su_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SU(fGETHALF(0,RsV),fGETUHALF(0,RtV))))); fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SU(fGETHALF(1,RsV),fGETUHALF(1,RtV)))));}
COUNT_HELPER(M2_vmpy2su_s0);
return RddV;
})
DEF_QEMU(M2_vmpy2su_s1,{ fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SU(fGETHALF(0,RsV),fGETUHALF(0,RtV))))); fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SU(fGETHALF(1,RsV),fGETUHALF(1,RtV)))));},
DEF_HELPER_3(M2_vmpy2su_s1, s64, env, s32, s32),
{
/* M2_vmpy2su_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_vmpy2su_s1(gen_helper_M2_vmpy2su_s1(RddV, cpu_env, RsV, RtV);,
{ fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SU(fGETHALF(0,RsV),fGETUHALF(0,RtV))))); fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SU(fGETHALF(1,RsV),fGETUHALF(1,RtV)))));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_vmpy2su_s1 */
},
int64_t HELPER(M2_vmpy2su_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SU(fGETHALF(0,RsV),fGETUHALF(0,RtV))))); fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SU(fGETHALF(1,RsV),fGETUHALF(1,RtV)))));}
COUNT_HELPER(M2_vmpy2su_s1);
return RddV;
})
DEF_QEMU(M2_vmac2su_s0,{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SU(fGETHALF(0,RsV),fGETUHALF(0,RtV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SU(fGETHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_vmac2su_s0, s64, env, s64, s32, s32),
{
/* M2_vmac2su_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_vmac2su_s0(gen_helper_M2_vmac2su_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SU(fGETHALF(0,RsV),fGETUHALF(0,RtV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SU(fGETHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_vmac2su_s0 */
},
int64_t HELPER(M2_vmac2su_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SU(fGETHALF(0,RsV),fGETUHALF(0,RtV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SU(fGETHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_vmac2su_s0);
return RxxV;
})
DEF_QEMU(M2_vmac2su_s1,{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SU(fGETHALF(0,RsV),fGETUHALF(0,RtV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SU(fGETHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_vmac2su_s1, s64, env, s64, s32, s32),
{
/* M2_vmac2su_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_vmac2su_s1(gen_helper_M2_vmac2su_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SU(fGETHALF(0,RsV),fGETUHALF(0,RtV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SU(fGETHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_vmac2su_s1 */
},
int64_t HELPER(M2_vmac2su_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SU(fGETHALF(0,RsV),fGETUHALF(0,RtV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SU(fGETHALF(1,RsV),fGETUHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_vmac2su_s1);
return RxxV;
})
DEF_QEMU(M2_vmpy2s_s0pack,{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + 0x8000))));},
DEF_HELPER_3(M2_vmpy2s_s0pack, s32, env, s32, s32),
{
/* M2_vmpy2s_s0pack */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_vmpy2s_s0pack(gen_helper_M2_vmpy2s_s0pack(RdV, cpu_env, RsV, RtV);,
{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + 0x8000))));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_vmpy2s_s0pack */
},
int32_t HELPER(M2_vmpy2s_s0pack)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + 0x8000))));}
COUNT_HELPER(M2_vmpy2s_s0pack);
return RdV;
})
DEF_QEMU(M2_vmpy2s_s1pack,{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + 0x8000))));},
DEF_HELPER_3(M2_vmpy2s_s1pack, s32, env, s32, s32),
{
/* M2_vmpy2s_s1pack */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_vmpy2s_s1pack(gen_helper_M2_vmpy2s_s1pack(RdV, cpu_env, RsV, RtV);,
{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + 0x8000))));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_vmpy2s_s1pack */
},
int32_t HELPER(M2_vmpy2s_s1pack)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + 0x8000))));}
COUNT_HELPER(M2_vmpy2s_s1pack);
return RdV;
})
DEF_QEMU(M2_vmac2,{ fSETWORD(0,RxxV,fGETWORD(0,RxxV) + fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))); fSETWORD(1,RxxV,fGETWORD(1,RxxV) + fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))); fACC();},
DEF_HELPER_4(M2_vmac2, s64, env, s64, s32, s32),
{
/* M2_vmac2 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_vmac2(gen_helper_M2_vmac2(RxxV, cpu_env, RxxV, RsV, RtV);,
{ fSETWORD(0,RxxV,fGETWORD(0,RxxV) + fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))); fSETWORD(1,RxxV,fGETWORD(1,RxxV) + fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_vmac2 */
},
int64_t HELPER(M2_vmac2)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(0,RxxV,fGETWORD(0,RxxV) + fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))); fSETWORD(1,RxxV,fGETWORD(1,RxxV) + fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))); fACC();}
COUNT_HELPER(M2_vmac2);
return RxxV;
})
DEF_QEMU(M2_vmpy2es_s0,{ fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))))); fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)))));},
DEF_HELPER_3(M2_vmpy2es_s0, s64, env, s64, s64),
{
/* M2_vmpy2es_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vmpy2es_s0(gen_helper_M2_vmpy2es_s0(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))))); fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)))));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vmpy2es_s0 */
},
int64_t HELPER(M2_vmpy2es_s0)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))))); fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)))));}
COUNT_HELPER(M2_vmpy2es_s0);
return RddV;
})
DEF_QEMU(M2_vmpy2es_s1,{ fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))))); fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)))));},
DEF_HELPER_3(M2_vmpy2es_s1, s64, env, s64, s64),
{
/* M2_vmpy2es_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vmpy2es_s1(gen_helper_M2_vmpy2es_s1(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))))); fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)))));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vmpy2es_s1 */
},
int64_t HELPER(M2_vmpy2es_s1)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))))); fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)))));}
COUNT_HELPER(M2_vmpy2es_s1);
return RddV;
})
DEF_QEMU(M2_vmac2es_s0,{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))))); fACC();},
DEF_HELPER_4(M2_vmac2es_s0, s64, env, s64, s64, s64),
{
/* M2_vmac2es_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vmac2es_s0(gen_helper_M2_vmac2es_s0(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vmac2es_s0 */
},
int64_t HELPER(M2_vmac2es_s0)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))))); fACC();}
COUNT_HELPER(M2_vmac2es_s0);
return RxxV;
})
DEF_QEMU(M2_vmac2es_s1,{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))))); fACC();},
DEF_HELPER_4(M2_vmac2es_s1, s64, env, s64, s64, s64),
{
/* M2_vmac2es_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vmac2es_s1(gen_helper_M2_vmac2es_s1(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vmac2es_s1 */
},
int64_t HELPER(M2_vmac2es_s1)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))))); fACC();}
COUNT_HELPER(M2_vmac2es_s1);
return RxxV;
})
DEF_QEMU(M2_vmac2es,{ fSETWORD(0,RxxV,fGETWORD(0,RxxV) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))); fSETWORD(1,RxxV,fGETWORD(1,RxxV) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))); fACC();},
DEF_HELPER_4(M2_vmac2es, s64, env, s64, s64, s64),
{
/* M2_vmac2es */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vmac2es(gen_helper_M2_vmac2es(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(0,RxxV,fGETWORD(0,RxxV) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))); fSETWORD(1,RxxV,fGETWORD(1,RxxV) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vmac2es */
},
int64_t HELPER(M2_vmac2es)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(0,RxxV,fGETWORD(0,RxxV) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))); fSETWORD(1,RxxV,fGETWORD(1,RxxV) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))); fACC();}
COUNT_HELPER(M2_vmac2es);
return RxxV;
})
DEF_QEMU(M2_vrmac_s0,{ RxxV = RxxV + fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV)); fACC();},
DEF_HELPER_4(M2_vrmac_s0, s64, env, s64, s64, s64),
{
/* M2_vrmac_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vrmac_s0(gen_helper_M2_vrmac_s0(RxxV, cpu_env, RxxV, RssV, RttV);,
{ RxxV = RxxV + fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV)); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vrmac_s0 */
},
int64_t HELPER(M2_vrmac_s0)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = RxxV + fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV)); fACC();}
COUNT_HELPER(M2_vrmac_s0);
return RxxV;
})
DEF_QEMU(M2_vrmpy_s0,{ RddV = fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV));},
DEF_HELPER_3(M2_vrmpy_s0, s64, env, s64, s64),
{
/* M2_vrmpy_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vrmpy_s0(gen_helper_M2_vrmpy_s0(RddV, cpu_env, RssV, RttV);,
{ RddV = fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vrmpy_s0 */
},
int64_t HELPER(M2_vrmpy_s0)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV));}
COUNT_HELPER(M2_vrmpy_s0);
return RddV;
})
DEF_QEMU(M2_vdmpyrs_s0,{ fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))) + 0x8000)))); fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))) + 0x8000))));},
DEF_HELPER_3(M2_vdmpyrs_s0, s32, env, s64, s64),
{
/* M2_vdmpyrs_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vdmpyrs_s0(gen_helper_M2_vdmpyrs_s0(RdV, cpu_env, RssV, RttV);,
{ fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))) + 0x8000)))); fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))) + 0x8000))));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vdmpyrs_s0 */
},
int32_t HELPER(M2_vdmpyrs_s0)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))) + 0x8000)))); fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))) + 0x8000))));}
COUNT_HELPER(M2_vdmpyrs_s0);
return RdV;
})
DEF_QEMU(M2_vdmpyrs_s1,{ fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))) + 0x8000)))); fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))) + 0x8000))));},
DEF_HELPER_3(M2_vdmpyrs_s1, s32, env, s64, s64),
{
/* M2_vdmpyrs_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vdmpyrs_s1(gen_helper_M2_vdmpyrs_s1(RdV, cpu_env, RssV, RttV);,
{ fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))) + 0x8000)))); fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))) + 0x8000))));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vdmpyrs_s1 */
},
int32_t HELPER(M2_vdmpyrs_s1)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))) + 0x8000)))); fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))) + 0x8000))));}
COUNT_HELPER(M2_vdmpyrs_s1);
return RdV;
})
DEF_QEMU(M5_vrmpybuu,{ fSETWORD(0,RddV,(fMPY16SS(fGETUBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETUBYTE(1,RssV),fGETUBYTE(1,RttV)) + fMPY16SS(fGETUBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETUBYTE(3,RssV),fGETUBYTE(3,RttV)))); fSETWORD(1,RddV,(fMPY16SS(fGETUBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETUBYTE(5,RssV),fGETUBYTE(5,RttV)) + fMPY16SS(fGETUBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETUBYTE(7,RssV),fGETUBYTE(7,RttV)))); },
DEF_HELPER_3(M5_vrmpybuu, s64, env, s64, s64),
{
/* M5_vrmpybuu */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M5_vrmpybuu(gen_helper_M5_vrmpybuu(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(0,RddV,(fMPY16SS(fGETUBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETUBYTE(1,RssV),fGETUBYTE(1,RttV)) + fMPY16SS(fGETUBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETUBYTE(3,RssV),fGETUBYTE(3,RttV)))); fSETWORD(1,RddV,(fMPY16SS(fGETUBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETUBYTE(5,RssV),fGETUBYTE(5,RttV)) + fMPY16SS(fGETUBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETUBYTE(7,RssV),fGETUBYTE(7,RttV)))); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M5_vrmpybuu */
},
int64_t HELPER(M5_vrmpybuu)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,(fMPY16SS(fGETUBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETUBYTE(1,RssV),fGETUBYTE(1,RttV)) + fMPY16SS(fGETUBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETUBYTE(3,RssV),fGETUBYTE(3,RttV)))); fSETWORD(1,RddV,(fMPY16SS(fGETUBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETUBYTE(5,RssV),fGETUBYTE(5,RttV)) + fMPY16SS(fGETUBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETUBYTE(7,RssV),fGETUBYTE(7,RttV)))); }
COUNT_HELPER(M5_vrmpybuu);
return RddV;
})
DEF_QEMU(M5_vrmacbuu,{ fSETWORD(0,RxxV,(fGETWORD(0,RxxV) + fMPY16SS(fGETUBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETUBYTE(1,RssV),fGETUBYTE(1,RttV)) + fMPY16SS(fGETUBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETUBYTE(3,RssV),fGETUBYTE(3,RttV)))); fSETWORD(1,RxxV,(fGETWORD(1,RxxV) + fMPY16SS(fGETUBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETUBYTE(5,RssV),fGETUBYTE(5,RttV)) + fMPY16SS(fGETUBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETUBYTE(7,RssV),fGETUBYTE(7,RttV)))); fACC(); },
DEF_HELPER_4(M5_vrmacbuu, s64, env, s64, s64, s64),
{
/* M5_vrmacbuu */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M5_vrmacbuu(gen_helper_M5_vrmacbuu(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(0,RxxV,(fGETWORD(0,RxxV) + fMPY16SS(fGETUBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETUBYTE(1,RssV),fGETUBYTE(1,RttV)) + fMPY16SS(fGETUBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETUBYTE(3,RssV),fGETUBYTE(3,RttV)))); fSETWORD(1,RxxV,(fGETWORD(1,RxxV) + fMPY16SS(fGETUBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETUBYTE(5,RssV),fGETUBYTE(5,RttV)) + fMPY16SS(fGETUBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETUBYTE(7,RssV),fGETUBYTE(7,RttV)))); fACC(); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M5_vrmacbuu */
},
int64_t HELPER(M5_vrmacbuu)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(0,RxxV,(fGETWORD(0,RxxV) + fMPY16SS(fGETUBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETUBYTE(1,RssV),fGETUBYTE(1,RttV)) + fMPY16SS(fGETUBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETUBYTE(3,RssV),fGETUBYTE(3,RttV)))); fSETWORD(1,RxxV,(fGETWORD(1,RxxV) + fMPY16SS(fGETUBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETUBYTE(5,RssV),fGETUBYTE(5,RttV)) + fMPY16SS(fGETUBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETUBYTE(7,RssV),fGETUBYTE(7,RttV)))); fACC(); }
COUNT_HELPER(M5_vrmacbuu);
return RxxV;
})
DEF_QEMU(M5_vrmpybsu,{ fSETWORD(0,RddV,(fMPY16SS(fGETBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETBYTE(1,RssV),fGETUBYTE(1,RttV)) + fMPY16SS(fGETBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETBYTE(3,RssV),fGETUBYTE(3,RttV)))); fSETWORD(1,RddV,(fMPY16SS(fGETBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETBYTE(5,RssV),fGETUBYTE(5,RttV)) + fMPY16SS(fGETBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETBYTE(7,RssV),fGETUBYTE(7,RttV)))); },
DEF_HELPER_3(M5_vrmpybsu, s64, env, s64, s64),
{
/* M5_vrmpybsu */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M5_vrmpybsu(gen_helper_M5_vrmpybsu(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(0,RddV,(fMPY16SS(fGETBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETBYTE(1,RssV),fGETUBYTE(1,RttV)) + fMPY16SS(fGETBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETBYTE(3,RssV),fGETUBYTE(3,RttV)))); fSETWORD(1,RddV,(fMPY16SS(fGETBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETBYTE(5,RssV),fGETUBYTE(5,RttV)) + fMPY16SS(fGETBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETBYTE(7,RssV),fGETUBYTE(7,RttV)))); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M5_vrmpybsu */
},
int64_t HELPER(M5_vrmpybsu)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,(fMPY16SS(fGETBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETBYTE(1,RssV),fGETUBYTE(1,RttV)) + fMPY16SS(fGETBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETBYTE(3,RssV),fGETUBYTE(3,RttV)))); fSETWORD(1,RddV,(fMPY16SS(fGETBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETBYTE(5,RssV),fGETUBYTE(5,RttV)) + fMPY16SS(fGETBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETBYTE(7,RssV),fGETUBYTE(7,RttV)))); }
COUNT_HELPER(M5_vrmpybsu);
return RddV;
})
DEF_QEMU(M5_vrmacbsu,{ fSETWORD(0,RxxV,(fGETWORD(0,RxxV) + fMPY16SS(fGETBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETBYTE(1,RssV),fGETUBYTE(1,RttV)) + fMPY16SS(fGETBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETBYTE(3,RssV),fGETUBYTE(3,RttV)))); fSETWORD(1,RxxV,(fGETWORD(1,RxxV) + fMPY16SS(fGETBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETBYTE(5,RssV),fGETUBYTE(5,RttV)) + fMPY16SS(fGETBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETBYTE(7,RssV),fGETUBYTE(7,RttV)))); fACC(); },
DEF_HELPER_4(M5_vrmacbsu, s64, env, s64, s64, s64),
{
/* M5_vrmacbsu */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M5_vrmacbsu(gen_helper_M5_vrmacbsu(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(0,RxxV,(fGETWORD(0,RxxV) + fMPY16SS(fGETBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETBYTE(1,RssV),fGETUBYTE(1,RttV)) + fMPY16SS(fGETBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETBYTE(3,RssV),fGETUBYTE(3,RttV)))); fSETWORD(1,RxxV,(fGETWORD(1,RxxV) + fMPY16SS(fGETBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETBYTE(5,RssV),fGETUBYTE(5,RttV)) + fMPY16SS(fGETBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETBYTE(7,RssV),fGETUBYTE(7,RttV)))); fACC(); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M5_vrmacbsu */
},
int64_t HELPER(M5_vrmacbsu)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(0,RxxV,(fGETWORD(0,RxxV) + fMPY16SS(fGETBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETBYTE(1,RssV),fGETUBYTE(1,RttV)) + fMPY16SS(fGETBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETBYTE(3,RssV),fGETUBYTE(3,RttV)))); fSETWORD(1,RxxV,(fGETWORD(1,RxxV) + fMPY16SS(fGETBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETBYTE(5,RssV),fGETUBYTE(5,RttV)) + fMPY16SS(fGETBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETBYTE(7,RssV),fGETUBYTE(7,RttV)))); fACC(); }
COUNT_HELPER(M5_vrmacbsu);
return RxxV;
})
DEF_QEMU(M5_vmpybuu,{ fSETHALF(0,RddV,(fMPY16SS(fGETUBYTE(0,RsV),fGETUBYTE(0,RtV)))); fSETHALF(1,RddV,(fMPY16SS(fGETUBYTE(1,RsV),fGETUBYTE(1,RtV)))); fSETHALF(2,RddV,(fMPY16SS(fGETUBYTE(2,RsV),fGETUBYTE(2,RtV)))); fSETHALF(3,RddV,(fMPY16SS(fGETUBYTE(3,RsV),fGETUBYTE(3,RtV)))); },
DEF_HELPER_3(M5_vmpybuu, s64, env, s32, s32),
{
/* M5_vmpybuu */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M5_vmpybuu(gen_helper_M5_vmpybuu(RddV, cpu_env, RsV, RtV);,
{ fSETHALF(0,RddV,(fMPY16SS(fGETUBYTE(0,RsV),fGETUBYTE(0,RtV)))); fSETHALF(1,RddV,(fMPY16SS(fGETUBYTE(1,RsV),fGETUBYTE(1,RtV)))); fSETHALF(2,RddV,(fMPY16SS(fGETUBYTE(2,RsV),fGETUBYTE(2,RtV)))); fSETHALF(3,RddV,(fMPY16SS(fGETUBYTE(3,RsV),fGETUBYTE(3,RtV)))); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M5_vmpybuu */
},
int64_t HELPER(M5_vmpybuu)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETHALF(0,RddV,(fMPY16SS(fGETUBYTE(0,RsV),fGETUBYTE(0,RtV)))); fSETHALF(1,RddV,(fMPY16SS(fGETUBYTE(1,RsV),fGETUBYTE(1,RtV)))); fSETHALF(2,RddV,(fMPY16SS(fGETUBYTE(2,RsV),fGETUBYTE(2,RtV)))); fSETHALF(3,RddV,(fMPY16SS(fGETUBYTE(3,RsV),fGETUBYTE(3,RtV)))); }
COUNT_HELPER(M5_vmpybuu);
return RddV;
})
DEF_QEMU(M5_vmpybsu,{ fSETHALF(0,RddV,(fMPY16SS(fGETBYTE(0,RsV),fGETUBYTE(0,RtV)))); fSETHALF(1,RddV,(fMPY16SS(fGETBYTE(1,RsV),fGETUBYTE(1,RtV)))); fSETHALF(2,RddV,(fMPY16SS(fGETBYTE(2,RsV),fGETUBYTE(2,RtV)))); fSETHALF(3,RddV,(fMPY16SS(fGETBYTE(3,RsV),fGETUBYTE(3,RtV)))); },
DEF_HELPER_3(M5_vmpybsu, s64, env, s32, s32),
{
/* M5_vmpybsu */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M5_vmpybsu(gen_helper_M5_vmpybsu(RddV, cpu_env, RsV, RtV);,
{ fSETHALF(0,RddV,(fMPY16SS(fGETBYTE(0,RsV),fGETUBYTE(0,RtV)))); fSETHALF(1,RddV,(fMPY16SS(fGETBYTE(1,RsV),fGETUBYTE(1,RtV)))); fSETHALF(2,RddV,(fMPY16SS(fGETBYTE(2,RsV),fGETUBYTE(2,RtV)))); fSETHALF(3,RddV,(fMPY16SS(fGETBYTE(3,RsV),fGETUBYTE(3,RtV)))); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M5_vmpybsu */
},
int64_t HELPER(M5_vmpybsu)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETHALF(0,RddV,(fMPY16SS(fGETBYTE(0,RsV),fGETUBYTE(0,RtV)))); fSETHALF(1,RddV,(fMPY16SS(fGETBYTE(1,RsV),fGETUBYTE(1,RtV)))); fSETHALF(2,RddV,(fMPY16SS(fGETBYTE(2,RsV),fGETUBYTE(2,RtV)))); fSETHALF(3,RddV,(fMPY16SS(fGETBYTE(3,RsV),fGETUBYTE(3,RtV)))); }
COUNT_HELPER(M5_vmpybsu);
return RddV;
})
DEF_QEMU(M5_vmacbuu,{ fSETHALF(0,RxxV,(fGETHALF(0,RxxV)+fMPY16SS(fGETUBYTE(0,RsV),fGETUBYTE(0,RtV)))); fSETHALF(1,RxxV,(fGETHALF(1,RxxV)+fMPY16SS(fGETUBYTE(1,RsV),fGETUBYTE(1,RtV)))); fSETHALF(2,RxxV,(fGETHALF(2,RxxV)+fMPY16SS(fGETUBYTE(2,RsV),fGETUBYTE(2,RtV)))); fSETHALF(3,RxxV,(fGETHALF(3,RxxV)+fMPY16SS(fGETUBYTE(3,RsV),fGETUBYTE(3,RtV)))); fACC(); },
DEF_HELPER_4(M5_vmacbuu, s64, env, s64, s32, s32),
{
/* M5_vmacbuu */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M5_vmacbuu(gen_helper_M5_vmacbuu(RxxV, cpu_env, RxxV, RsV, RtV);,
{ fSETHALF(0,RxxV,(fGETHALF(0,RxxV)+fMPY16SS(fGETUBYTE(0,RsV),fGETUBYTE(0,RtV)))); fSETHALF(1,RxxV,(fGETHALF(1,RxxV)+fMPY16SS(fGETUBYTE(1,RsV),fGETUBYTE(1,RtV)))); fSETHALF(2,RxxV,(fGETHALF(2,RxxV)+fMPY16SS(fGETUBYTE(2,RsV),fGETUBYTE(2,RtV)))); fSETHALF(3,RxxV,(fGETHALF(3,RxxV)+fMPY16SS(fGETUBYTE(3,RsV),fGETUBYTE(3,RtV)))); fACC(); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M5_vmacbuu */
},
int64_t HELPER(M5_vmacbuu)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fSETHALF(0,RxxV,(fGETHALF(0,RxxV)+fMPY16SS(fGETUBYTE(0,RsV),fGETUBYTE(0,RtV)))); fSETHALF(1,RxxV,(fGETHALF(1,RxxV)+fMPY16SS(fGETUBYTE(1,RsV),fGETUBYTE(1,RtV)))); fSETHALF(2,RxxV,(fGETHALF(2,RxxV)+fMPY16SS(fGETUBYTE(2,RsV),fGETUBYTE(2,RtV)))); fSETHALF(3,RxxV,(fGETHALF(3,RxxV)+fMPY16SS(fGETUBYTE(3,RsV),fGETUBYTE(3,RtV)))); fACC(); }
COUNT_HELPER(M5_vmacbuu);
return RxxV;
})
DEF_QEMU(M5_vmacbsu,{ fSETHALF(0,RxxV,(fGETHALF(0,RxxV)+fMPY16SS(fGETBYTE(0,RsV),fGETUBYTE(0,RtV)))); fSETHALF(1,RxxV,(fGETHALF(1,RxxV)+fMPY16SS(fGETBYTE(1,RsV),fGETUBYTE(1,RtV)))); fSETHALF(2,RxxV,(fGETHALF(2,RxxV)+fMPY16SS(fGETBYTE(2,RsV),fGETUBYTE(2,RtV)))); fSETHALF(3,RxxV,(fGETHALF(3,RxxV)+fMPY16SS(fGETBYTE(3,RsV),fGETUBYTE(3,RtV)))); fACC(); },
DEF_HELPER_4(M5_vmacbsu, s64, env, s64, s32, s32),
{
/* M5_vmacbsu */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M5_vmacbsu(gen_helper_M5_vmacbsu(RxxV, cpu_env, RxxV, RsV, RtV);,
{ fSETHALF(0,RxxV,(fGETHALF(0,RxxV)+fMPY16SS(fGETBYTE(0,RsV),fGETUBYTE(0,RtV)))); fSETHALF(1,RxxV,(fGETHALF(1,RxxV)+fMPY16SS(fGETBYTE(1,RsV),fGETUBYTE(1,RtV)))); fSETHALF(2,RxxV,(fGETHALF(2,RxxV)+fMPY16SS(fGETBYTE(2,RsV),fGETUBYTE(2,RtV)))); fSETHALF(3,RxxV,(fGETHALF(3,RxxV)+fMPY16SS(fGETBYTE(3,RsV),fGETUBYTE(3,RtV)))); fACC(); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M5_vmacbsu */
},
int64_t HELPER(M5_vmacbsu)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fSETHALF(0,RxxV,(fGETHALF(0,RxxV)+fMPY16SS(fGETBYTE(0,RsV),fGETUBYTE(0,RtV)))); fSETHALF(1,RxxV,(fGETHALF(1,RxxV)+fMPY16SS(fGETBYTE(1,RsV),fGETUBYTE(1,RtV)))); fSETHALF(2,RxxV,(fGETHALF(2,RxxV)+fMPY16SS(fGETBYTE(2,RsV),fGETUBYTE(2,RtV)))); fSETHALF(3,RxxV,(fGETHALF(3,RxxV)+fMPY16SS(fGETBYTE(3,RsV),fGETUBYTE(3,RtV)))); fACC(); }
COUNT_HELPER(M5_vmacbsu);
return RxxV;
})
DEF_QEMU(M5_vdmpybsu,{ fSETHALF(0,RddV,fSATN(16,(fMPY16SS(fGETBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETBYTE(1,RssV),fGETUBYTE(1,RttV))))); fSETHALF(1,RddV,fSATN(16,(fMPY16SS(fGETBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETBYTE(3,RssV),fGETUBYTE(3,RttV))))); fSETHALF(2,RddV,fSATN(16,(fMPY16SS(fGETBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETBYTE(5,RssV),fGETUBYTE(5,RttV))))); fSETHALF(3,RddV,fSATN(16,(fMPY16SS(fGETBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETBYTE(7,RssV),fGETUBYTE(7,RttV))))); },
DEF_HELPER_3(M5_vdmpybsu, s64, env, s64, s64),
{
/* M5_vdmpybsu */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M5_vdmpybsu(gen_helper_M5_vdmpybsu(RddV, cpu_env, RssV, RttV);,
{ fSETHALF(0,RddV,fSATN(16,(fMPY16SS(fGETBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETBYTE(1,RssV),fGETUBYTE(1,RttV))))); fSETHALF(1,RddV,fSATN(16,(fMPY16SS(fGETBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETBYTE(3,RssV),fGETUBYTE(3,RttV))))); fSETHALF(2,RddV,fSATN(16,(fMPY16SS(fGETBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETBYTE(5,RssV),fGETUBYTE(5,RttV))))); fSETHALF(3,RddV,fSATN(16,(fMPY16SS(fGETBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETBYTE(7,RssV),fGETUBYTE(7,RttV))))); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M5_vdmpybsu */
},
int64_t HELPER(M5_vdmpybsu)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETHALF(0,RddV,fSATN(16,(fMPY16SS(fGETBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETBYTE(1,RssV),fGETUBYTE(1,RttV))))); fSETHALF(1,RddV,fSATN(16,(fMPY16SS(fGETBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETBYTE(3,RssV),fGETUBYTE(3,RttV))))); fSETHALF(2,RddV,fSATN(16,(fMPY16SS(fGETBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETBYTE(5,RssV),fGETUBYTE(5,RttV))))); fSETHALF(3,RddV,fSATN(16,(fMPY16SS(fGETBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETBYTE(7,RssV),fGETUBYTE(7,RttV))))); }
COUNT_HELPER(M5_vdmpybsu);
return RddV;
})
DEF_QEMU(M5_vdmacbsu,{ fSETHALF(0,RxxV,fSATN(16,(fGETHALF(0,RxxV) + fMPY16SS(fGETBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETBYTE(1,RssV),fGETUBYTE(1,RttV))))); fSETHALF(1,RxxV,fSATN(16,(fGETHALF(1,RxxV) + fMPY16SS(fGETBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETBYTE(3,RssV),fGETUBYTE(3,RttV))))); fSETHALF(2,RxxV,fSATN(16,(fGETHALF(2,RxxV) + fMPY16SS(fGETBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETBYTE(5,RssV),fGETUBYTE(5,RttV))))); fSETHALF(3,RxxV,fSATN(16,(fGETHALF(3,RxxV) + fMPY16SS(fGETBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETBYTE(7,RssV),fGETUBYTE(7,RttV))))); fACC(); },
DEF_HELPER_4(M5_vdmacbsu, s64, env, s64, s64, s64),
{
/* M5_vdmacbsu */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M5_vdmacbsu(gen_helper_M5_vdmacbsu(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETHALF(0,RxxV,fSATN(16,(fGETHALF(0,RxxV) + fMPY16SS(fGETBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETBYTE(1,RssV),fGETUBYTE(1,RttV))))); fSETHALF(1,RxxV,fSATN(16,(fGETHALF(1,RxxV) + fMPY16SS(fGETBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETBYTE(3,RssV),fGETUBYTE(3,RttV))))); fSETHALF(2,RxxV,fSATN(16,(fGETHALF(2,RxxV) + fMPY16SS(fGETBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETBYTE(5,RssV),fGETUBYTE(5,RttV))))); fSETHALF(3,RxxV,fSATN(16,(fGETHALF(3,RxxV) + fMPY16SS(fGETBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETBYTE(7,RssV),fGETUBYTE(7,RttV))))); fACC(); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M5_vdmacbsu */
},
int64_t HELPER(M5_vdmacbsu)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETHALF(0,RxxV,fSATN(16,(fGETHALF(0,RxxV) + fMPY16SS(fGETBYTE(0,RssV),fGETUBYTE(0,RttV)) + fMPY16SS(fGETBYTE(1,RssV),fGETUBYTE(1,RttV))))); fSETHALF(1,RxxV,fSATN(16,(fGETHALF(1,RxxV) + fMPY16SS(fGETBYTE(2,RssV),fGETUBYTE(2,RttV)) + fMPY16SS(fGETBYTE(3,RssV),fGETUBYTE(3,RttV))))); fSETHALF(2,RxxV,fSATN(16,(fGETHALF(2,RxxV) + fMPY16SS(fGETBYTE(4,RssV),fGETUBYTE(4,RttV)) + fMPY16SS(fGETBYTE(5,RssV),fGETUBYTE(5,RttV))))); fSETHALF(3,RxxV,fSATN(16,(fGETHALF(3,RxxV) + fMPY16SS(fGETBYTE(6,RssV),fGETUBYTE(6,RttV)) + fMPY16SS(fGETBYTE(7,RssV),fGETUBYTE(7,RttV))))); fACC(); }
COUNT_HELPER(M5_vdmacbsu);
return RxxV;
})
DEF_QEMU(M2_vdmacs_s0,{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))))); fACC();},
DEF_HELPER_4(M2_vdmacs_s0, s64, env, s64, s64, s64),
{
/* M2_vdmacs_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vdmacs_s0(gen_helper_M2_vdmacs_s0(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vdmacs_s0 */
},
int64_t HELPER(M2_vdmacs_s0)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))))); fACC();}
COUNT_HELPER(M2_vdmacs_s0);
return RxxV;
})
DEF_QEMU(M2_vdmacs_s1,{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))))); fACC();},
DEF_HELPER_4(M2_vdmacs_s1, s64, env, s64, s64, s64),
{
/* M2_vdmacs_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vdmacs_s1(gen_helper_M2_vdmacs_s1(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vdmacs_s1 */
},
int64_t HELPER(M2_vdmacs_s1)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))))); fACC();}
COUNT_HELPER(M2_vdmacs_s1);
return RxxV;
})
DEF_QEMU(M2_vdmpys_s0,{ fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV)))));},
DEF_HELPER_3(M2_vdmpys_s0, s64, env, s64, s64),
{
/* M2_vdmpys_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vdmpys_s0(gen_helper_M2_vdmpys_s0(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV)))));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vdmpys_s0 */
},
int64_t HELPER(M2_vdmpys_s0)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(0,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV)))));}
COUNT_HELPER(M2_vdmpys_s0);
return RddV;
})
DEF_QEMU(M2_vdmpys_s1,{ fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV)))));},
DEF_HELPER_3(M2_vdmpys_s1, s64, env, s64, s64),
{
/* M2_vdmpys_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vdmpys_s1(gen_helper_M2_vdmpys_s1(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV)))));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vdmpys_s1 */
},
int64_t HELPER(M2_vdmpys_s1)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV)))));}
COUNT_HELPER(M2_vdmpys_s1);
return RddV;
})
DEF_QEMU(M2_cmpyrs_s0,{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000))));},
DEF_HELPER_3(M2_cmpyrs_s0, s32, env, s32, s32),
{
/* M2_cmpyrs_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cmpyrs_s0(gen_helper_M2_cmpyrs_s0(RdV, cpu_env, RsV, RtV);,
{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000))));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cmpyrs_s0 */
},
int32_t HELPER(M2_cmpyrs_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000))));}
COUNT_HELPER(M2_cmpyrs_s0);
return RdV;
})
DEF_QEMU(M2_cmpyrs_s1,{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000))));},
DEF_HELPER_3(M2_cmpyrs_s1, s32, env, s32, s32),
{
/* M2_cmpyrs_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cmpyrs_s1(gen_helper_M2_cmpyrs_s1(RdV, cpu_env, RsV, RtV);,
{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000))));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cmpyrs_s1 */
},
int32_t HELPER(M2_cmpyrs_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000))));}
COUNT_HELPER(M2_cmpyrs_s1);
return RdV;
})
DEF_QEMU(M2_cmpyrsc_s0,{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000))));},
DEF_HELPER_3(M2_cmpyrsc_s0, s32, env, s32, s32),
{
/* M2_cmpyrsc_s0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cmpyrsc_s0(gen_helper_M2_cmpyrsc_s0(RdV, cpu_env, RsV, RtV);,
{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000))));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cmpyrsc_s0 */
},
int32_t HELPER(M2_cmpyrsc_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000))));}
COUNT_HELPER(M2_cmpyrsc_s0);
return RdV;
})
DEF_QEMU(M2_cmpyrsc_s1,{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000))));},
DEF_HELPER_3(M2_cmpyrsc_s1, s32, env, s32, s32),
{
/* M2_cmpyrsc_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cmpyrsc_s1(gen_helper_M2_cmpyrsc_s1(RdV, cpu_env, RsV, RtV);,
{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000))));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cmpyrsc_s1 */
},
int32_t HELPER(M2_cmpyrsc_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fSETHALF(1,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))) + 0x8000)))); fSETHALF(0,RdV,fGETHALF(1,(fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))) + 0x8000))));}
COUNT_HELPER(M2_cmpyrsc_s1);
return RdV;
})
DEF_QEMU(M2_cmacs_s0,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_cmacs_s0, s64, env, s64, s32, s32),
{
/* M2_cmacs_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cmacs_s0(gen_helper_M2_cmacs_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cmacs_s0 */
},
int64_t HELPER(M2_cmacs_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_cmacs_s0);
return RxxV;
})
DEF_QEMU(M2_cmacs_s1,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_cmacs_s1, s64, env, s64, s32, s32),
{
/* M2_cmacs_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cmacs_s1(gen_helper_M2_cmacs_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cmacs_s1 */
},
int64_t HELPER(M2_cmacs_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_cmacs_s1);
return RxxV;
})
DEF_QEMU(M2_cmacsc_s0,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_cmacsc_s0, s64, env, s64, s32, s32),
{
/* M2_cmacsc_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cmacsc_s0(gen_helper_M2_cmacsc_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cmacsc_s0 */
},
int64_t HELPER(M2_cmacsc_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_cmacsc_s0);
return RxxV;
})
DEF_QEMU(M2_cmacsc_s1,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();},
DEF_HELPER_4(M2_cmacsc_s1, s64, env, s64, s32, s32),
{
/* M2_cmacsc_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cmacsc_s1(gen_helper_M2_cmacsc_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cmacsc_s1 */
},
int64_t HELPER(M2_cmacsc_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV))))); fACC();}
COUNT_HELPER(M2_cmacsc_s1);
return RxxV;
})
DEF_QEMU(M2_cmpys_s0,{ fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));},
DEF_HELPER_3(M2_cmpys_s0, s64, env, s32, s32),
{
/* M2_cmpys_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cmpys_s0(gen_helper_M2_cmpys_s0(RddV, cpu_env, RsV, RtV);,
{ fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cmpys_s0 */
},
int64_t HELPER(M2_cmpys_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));}
COUNT_HELPER(M2_cmpys_s0);
return RddV;
})
DEF_QEMU(M2_cmpys_s1,{ fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));},
DEF_HELPER_3(M2_cmpys_s1, s64, env, s32, s32),
{
/* M2_cmpys_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cmpys_s1(gen_helper_M2_cmpys_s1(RddV, cpu_env, RsV, RtV);,
{ fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cmpys_s1 */
},
int64_t HELPER(M2_cmpys_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));}
COUNT_HELPER(M2_cmpys_s1);
return RddV;
})
DEF_QEMU(M2_cmpysc_s0,{ fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));},
DEF_HELPER_3(M2_cmpysc_s0, s64, env, s32, s32),
{
/* M2_cmpysc_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cmpysc_s0(gen_helper_M2_cmpysc_s0(RddV, cpu_env, RsV, RtV);,
{ fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cmpysc_s0 */
},
int64_t HELPER(M2_cmpysc_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RddV,fSAT(fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));}
COUNT_HELPER(M2_cmpysc_s0);
return RddV;
})
DEF_QEMU(M2_cmpysc_s1,{ fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));},
DEF_HELPER_3(M2_cmpysc_s1, s64, env, s32, s32),
{
/* M2_cmpysc_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cmpysc_s1(gen_helper_M2_cmpysc_s1(RddV, cpu_env, RsV, RtV);,
{ fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cmpysc_s1 */
},
int64_t HELPER(M2_cmpysc_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV))))); fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))));}
COUNT_HELPER(M2_cmpysc_s1);
return RddV;
})
DEF_QEMU(M2_cnacs_s0,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) - (fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) - (fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))))); fACC();},
DEF_HELPER_4(M2_cnacs_s0, s64, env, s64, s32, s32),
{
/* M2_cnacs_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cnacs_s0(gen_helper_M2_cnacs_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) - (fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) - (fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cnacs_s0 */
},
int64_t HELPER(M2_cnacs_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) - (fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) - (fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))))); fACC();}
COUNT_HELPER(M2_cnacs_s0);
return RxxV;
})
DEF_QEMU(M2_cnacs_s1,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) - (fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) - (fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))))); fACC();},
DEF_HELPER_4(M2_cnacs_s1, s64, env, s64, s32, s32),
{
/* M2_cnacs_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cnacs_s1(gen_helper_M2_cnacs_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) - (fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) - (fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cnacs_s1 */
},
int64_t HELPER(M2_cnacs_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) - (fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) - (fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))))); fACC();}
COUNT_HELPER(M2_cnacs_s1);
return RxxV;
})
DEF_QEMU(M2_cnacsc_s0,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) - (fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) - (fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))))); fACC();},
DEF_HELPER_4(M2_cnacsc_s0, s64, env, s64, s32, s32),
{
/* M2_cnacsc_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cnacsc_s0(gen_helper_M2_cnacsc_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) - (fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) - (fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cnacsc_s0 */
},
int64_t HELPER(M2_cnacsc_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) - (fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) - (fSCALE(0,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(0,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))))); fACC();}
COUNT_HELPER(M2_cnacsc_s0);
return RxxV;
})
DEF_QEMU(M2_cnacsc_s1,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) - (fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) - (fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))))); fACC();},
DEF_HELPER_4(M2_cnacsc_s1, s64, env, s64, s32, s32),
{
/* M2_cnacsc_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cnacsc_s1(gen_helper_M2_cnacsc_s1(RxxV, cpu_env, RxxV, RsV, RtV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) - (fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) - (fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cnacsc_s1 */
},
int64_t HELPER(M2_cnacsc_s1)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) - (fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV))) - fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) - (fSCALE(1,fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV))) + fSCALE(1,fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)))))); fACC();}
COUNT_HELPER(M2_cnacsc_s1);
return RxxV;
})
DEF_QEMU(M2_vrcmpys_s1_h,{ fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(1,RttV)))))); fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(1,RttV))))));},
DEF_HELPER_3(M2_vrcmpys_s1_h, s64, env, s64, s64),
{
/* M2_vrcmpys_s1_h */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vrcmpys_s1_h(gen_helper_M2_vrcmpys_s1_h(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(1,RttV)))))); fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(1,RttV))))));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vrcmpys_s1_h */
},
int64_t HELPER(M2_vrcmpys_s1_h)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(1,RttV)))))); fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(1,RttV))))));}
COUNT_HELPER(M2_vrcmpys_s1_h);
return RddV;
})
DEF_QEMU(M2_vrcmpys_s1_l,{ fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(0,RttV)))))); fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(0,RttV))))));},
DEF_HELPER_3(M2_vrcmpys_s1_l, s64, env, s64, s64),
{
/* M2_vrcmpys_s1_l */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vrcmpys_s1_l(gen_helper_M2_vrcmpys_s1_l(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(0,RttV)))))); fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(0,RttV))))));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vrcmpys_s1_l */
},
int64_t HELPER(M2_vrcmpys_s1_l)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(0,RttV)))))); fSETWORD(0,RddV,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(0,RttV))))));}
COUNT_HELPER(M2_vrcmpys_s1_l);
return RddV;
})
DEF_QEMU(M2_vrcmpys_acc_s1_h,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(1,RttV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(1,RttV)))))); fACC();},
DEF_HELPER_4(M2_vrcmpys_acc_s1_h, s64, env, s64, s64, s64),
{
/* M2_vrcmpys_acc_s1_h */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vrcmpys_acc_s1_h(gen_helper_M2_vrcmpys_acc_s1_h(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(1,RttV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(1,RttV)))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vrcmpys_acc_s1_h */
},
int64_t HELPER(M2_vrcmpys_acc_s1_h)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(1,RttV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(1,RttV)))))); fACC();}
COUNT_HELPER(M2_vrcmpys_acc_s1_h);
return RxxV;
})
DEF_QEMU(M2_vrcmpys_acc_s1_l,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(0,RttV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(0,RttV)))))); fACC();},
DEF_HELPER_4(M2_vrcmpys_acc_s1_l, s64, env, s64, s64, s64),
{
/* M2_vrcmpys_acc_s1_l */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vrcmpys_acc_s1_l(gen_helper_M2_vrcmpys_acc_s1_l(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(0,RttV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(0,RttV)))))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vrcmpys_acc_s1_l */
},
int64_t HELPER(M2_vrcmpys_acc_s1_l)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(0,RttV)))))); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(0,RttV)))))); fACC();}
COUNT_HELPER(M2_vrcmpys_acc_s1_l);
return RxxV;
})
DEF_QEMU(M2_vrcmpys_s1rp_h,{ fSETHALF(1,RdV,fGETHALF(1,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(1,RttV)))) + 0x8000))); fSETHALF(0,RdV,fGETHALF(1,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(1,RttV)))) + 0x8000)));},
DEF_HELPER_3(M2_vrcmpys_s1rp_h, s32, env, s64, s64),
{
/* M2_vrcmpys_s1rp_h */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vrcmpys_s1rp_h(gen_helper_M2_vrcmpys_s1rp_h(RdV, cpu_env, RssV, RttV);,
{ fSETHALF(1,RdV,fGETHALF(1,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(1,RttV)))) + 0x8000))); fSETHALF(0,RdV,fGETHALF(1,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(1,RttV)))) + 0x8000)));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vrcmpys_s1rp_h */
},
int32_t HELPER(M2_vrcmpys_s1rp_h)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fSETHALF(1,RdV,fGETHALF(1,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(1,RttV)))) + 0x8000))); fSETHALF(0,RdV,fGETHALF(1,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(1,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(1,RttV)))) + 0x8000)));}
COUNT_HELPER(M2_vrcmpys_s1rp_h);
return RdV;
})
DEF_QEMU(M2_vrcmpys_s1rp_l,{ fSETHALF(1,RdV,fGETHALF(1,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(0,RttV)))) + 0x8000))); fSETHALF(0,RdV,fGETHALF(1,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(0,RttV)))) + 0x8000)));},
DEF_HELPER_3(M2_vrcmpys_s1rp_l, s32, env, s64, s64),
{
/* M2_vrcmpys_s1rp_l */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vrcmpys_s1rp_l(gen_helper_M2_vrcmpys_s1rp_l(RdV, cpu_env, RssV, RttV);,
{ fSETHALF(1,RdV,fGETHALF(1,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(0,RttV)))) + 0x8000))); fSETHALF(0,RdV,fGETHALF(1,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(0,RttV)))) + 0x8000)));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vrcmpys_s1rp_l */
},
int32_t HELPER(M2_vrcmpys_s1rp_l)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fSETHALF(1,RdV,fGETHALF(1,fSAT(fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(1,fGETWORD(0,RttV)))) + 0x8000))); fSETHALF(0,RdV,fGETHALF(1,fSAT(fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,fGETWORD(0,RttV)))) + fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(1,fGETWORD(0,RttV)))) + 0x8000)));}
COUNT_HELPER(M2_vrcmpys_s1rp_l);
return RdV;
})
DEF_QEMU(M2_mmacls_s0,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))))>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))))>>16)) ); fACC();},
DEF_HELPER_4(M2_mmacls_s0, s64, env, s64, s64, s64),
{
/* M2_mmacls_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmacls_s0(gen_helper_M2_mmacls_s0(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))))>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))))>>16)) ); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmacls_s0 */
},
int64_t HELPER(M2_mmacls_s0)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))))>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))))>>16)) ); fACC();}
COUNT_HELPER(M2_mmacls_s0);
return RxxV;
})
DEF_QEMU(M2_mmacls_s1,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))))>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))))>>16)) ); fACC();},
DEF_HELPER_4(M2_mmacls_s1, s64, env, s64, s64, s64),
{
/* M2_mmacls_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmacls_s1(gen_helper_M2_mmacls_s1(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))))>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))))>>16)) ); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmacls_s1 */
},
int64_t HELPER(M2_mmacls_s1)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))))>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))))>>16)) ); fACC();}
COUNT_HELPER(M2_mmacls_s1);
return RxxV;
})
DEF_QEMU(M2_mmachs_s0,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))))>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))))>>16 ))); fACC();},
DEF_HELPER_4(M2_mmachs_s0, s64, env, s64, s64, s64),
{
/* M2_mmachs_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmachs_s0(gen_helper_M2_mmachs_s0(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))))>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))))>>16 ))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmachs_s0 */
},
int64_t HELPER(M2_mmachs_s0)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))))>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))))>>16 ))); fACC();}
COUNT_HELPER(M2_mmachs_s0);
return RxxV;
})
DEF_QEMU(M2_mmachs_s1,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))))>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))))>>16 ))); fACC();},
DEF_HELPER_4(M2_mmachs_s1, s64, env, s64, s64, s64),
{
/* M2_mmachs_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmachs_s1(gen_helper_M2_mmachs_s1(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))))>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))))>>16 ))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmachs_s1 */
},
int64_t HELPER(M2_mmachs_s1)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))))>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))))>>16 ))); fACC();}
COUNT_HELPER(M2_mmachs_s1);
return RxxV;
})
DEF_QEMU(M2_mmpyl_s0,{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))))>>16)); },
DEF_HELPER_3(M2_mmpyl_s0, s64, env, s64, s64),
{
/* M2_mmpyl_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmpyl_s0(gen_helper_M2_mmpyl_s0(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))))>>16)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmpyl_s0 */
},
int64_t HELPER(M2_mmpyl_s0)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))))>>16)); }
COUNT_HELPER(M2_mmpyl_s0);
return RddV;
})
DEF_QEMU(M2_mmpyl_s1,{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))))>>16)); },
DEF_HELPER_3(M2_mmpyl_s1, s64, env, s64, s64),
{
/* M2_mmpyl_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmpyl_s1(gen_helper_M2_mmpyl_s1(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))))>>16)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmpyl_s1 */
},
int64_t HELPER(M2_mmpyl_s1)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))))>>16)); }
COUNT_HELPER(M2_mmpyl_s1);
return RddV;
})
DEF_QEMU(M2_mmpyh_s0,{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))))>>16)); },
DEF_HELPER_3(M2_mmpyh_s0, s64, env, s64, s64),
{
/* M2_mmpyh_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmpyh_s0(gen_helper_M2_mmpyh_s0(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))))>>16)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmpyh_s0 */
},
int64_t HELPER(M2_mmpyh_s0)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))))>>16)); }
COUNT_HELPER(M2_mmpyh_s0);
return RddV;
})
DEF_QEMU(M2_mmpyh_s1,{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))))>>16)); },
DEF_HELPER_3(M2_mmpyh_s1, s64, env, s64, s64),
{
/* M2_mmpyh_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmpyh_s1(gen_helper_M2_mmpyh_s1(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))))>>16)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmpyh_s1 */
},
int64_t HELPER(M2_mmpyh_s1)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))))>>16)); }
COUNT_HELPER(M2_mmpyh_s1);
return RddV;
})
DEF_QEMU(M2_mmacls_rs0,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV)))+0x8000)>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV)))+0x8000)>>16)) ); fACC();},
DEF_HELPER_4(M2_mmacls_rs0, s64, env, s64, s64, s64),
{
/* M2_mmacls_rs0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmacls_rs0(gen_helper_M2_mmacls_rs0(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV)))+0x8000)>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV)))+0x8000)>>16)) ); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmacls_rs0 */
},
int64_t HELPER(M2_mmacls_rs0)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV)))+0x8000)>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV)))+0x8000)>>16)) ); fACC();}
COUNT_HELPER(M2_mmacls_rs0);
return RxxV;
})
DEF_QEMU(M2_mmacls_rs1,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV)))+0x8000)>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV)))+0x8000)>>16)) ); fACC();},
DEF_HELPER_4(M2_mmacls_rs1, s64, env, s64, s64, s64),
{
/* M2_mmacls_rs1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmacls_rs1(gen_helper_M2_mmacls_rs1(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV)))+0x8000)>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV)))+0x8000)>>16)) ); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmacls_rs1 */
},
int64_t HELPER(M2_mmacls_rs1)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV)))+0x8000)>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV)))+0x8000)>>16)) ); fACC();}
COUNT_HELPER(M2_mmacls_rs1);
return RxxV;
})
DEF_QEMU(M2_mmachs_rs0,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV)))+0x8000)>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV)))+0x8000)>>16 ))); fACC();},
DEF_HELPER_4(M2_mmachs_rs0, s64, env, s64, s64, s64),
{
/* M2_mmachs_rs0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmachs_rs0(gen_helper_M2_mmachs_rs0(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV)))+0x8000)>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV)))+0x8000)>>16 ))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmachs_rs0 */
},
int64_t HELPER(M2_mmachs_rs0)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV)))+0x8000)>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV)))+0x8000)>>16 ))); fACC();}
COUNT_HELPER(M2_mmachs_rs0);
return RxxV;
})
DEF_QEMU(M2_mmachs_rs1,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV)))+0x8000)>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV)))+0x8000)>>16 ))); fACC();},
DEF_HELPER_4(M2_mmachs_rs1, s64, env, s64, s64, s64),
{
/* M2_mmachs_rs1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmachs_rs1(gen_helper_M2_mmachs_rs1(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV)))+0x8000)>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV)))+0x8000)>>16 ))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmachs_rs1 */
},
int64_t HELPER(M2_mmachs_rs1)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV)))+0x8000)>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV)))+0x8000)>>16 ))); fACC();}
COUNT_HELPER(M2_mmachs_rs1);
return RxxV;
})
DEF_QEMU(M2_mmpyl_rs0,{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV)))+0x8000)>>16)); },
DEF_HELPER_3(M2_mmpyl_rs0, s64, env, s64, s64),
{
/* M2_mmpyl_rs0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmpyl_rs0(gen_helper_M2_mmpyl_rs0(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV)))+0x8000)>>16)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmpyl_rs0 */
},
int64_t HELPER(M2_mmpyl_rs0)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV)))+0x8000)>>16)); }
COUNT_HELPER(M2_mmpyl_rs0);
return RddV;
})
DEF_QEMU(M2_mmpyl_rs1,{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV)))+0x8000)>>16)); },
DEF_HELPER_3(M2_mmpyl_rs1, s64, env, s64, s64),
{
/* M2_mmpyl_rs1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmpyl_rs1(gen_helper_M2_mmpyl_rs1(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV)))+0x8000)>>16)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmpyl_rs1 */
},
int64_t HELPER(M2_mmpyl_rs1)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV)))+0x8000)>>16)); }
COUNT_HELPER(M2_mmpyl_rs1);
return RddV;
})
DEF_QEMU(M2_mmpyh_rs0,{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV)))+0x8000)>>16)); },
DEF_HELPER_3(M2_mmpyh_rs0, s64, env, s64, s64),
{
/* M2_mmpyh_rs0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmpyh_rs0(gen_helper_M2_mmpyh_rs0(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV)))+0x8000)>>16)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmpyh_rs0 */
},
int64_t HELPER(M2_mmpyh_rs0)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV)))+0x8000)>>16)); }
COUNT_HELPER(M2_mmpyh_rs0);
return RddV;
})
DEF_QEMU(M2_mmpyh_rs1,{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV)))+0x8000)>>16)); },
DEF_HELPER_3(M2_mmpyh_rs1, s64, env, s64, s64),
{
/* M2_mmpyh_rs1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmpyh_rs1(gen_helper_M2_mmpyh_rs1(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV)))+0x8000)>>16)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmpyh_rs1 */
},
int64_t HELPER(M2_mmpyh_rs1)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV)))+0x8000)>>16)); }
COUNT_HELPER(M2_mmpyh_rs1);
return RddV;
})
DEF_QEMU(M4_vrmpyeh_s0,{ RddV = fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))) + fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))); ;},
DEF_HELPER_3(M4_vrmpyeh_s0, s64, env, s64, s64),
{
/* M4_vrmpyeh_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M4_vrmpyeh_s0(gen_helper_M4_vrmpyeh_s0(RddV, cpu_env, RssV, RttV);,
{ RddV = fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))) + fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M4_vrmpyeh_s0 */
},
int64_t HELPER(M4_vrmpyeh_s0)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))) + fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))); ;}
COUNT_HELPER(M4_vrmpyeh_s0);
return RddV;
})
DEF_QEMU(M4_vrmpyeh_s1,{ RddV = fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))) + fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))); ;},
DEF_HELPER_3(M4_vrmpyeh_s1, s64, env, s64, s64),
{
/* M4_vrmpyeh_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M4_vrmpyeh_s1(gen_helper_M4_vrmpyeh_s1(RddV, cpu_env, RssV, RttV);,
{ RddV = fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))) + fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M4_vrmpyeh_s1 */
},
int64_t HELPER(M4_vrmpyeh_s1)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))) + fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))); ;}
COUNT_HELPER(M4_vrmpyeh_s1);
return RddV;
})
DEF_QEMU(M4_vrmpyeh_acc_s0,{ RxxV += fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))) + fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))); fACC();},
DEF_HELPER_4(M4_vrmpyeh_acc_s0, s64, env, s64, s64, s64),
{
/* M4_vrmpyeh_acc_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M4_vrmpyeh_acc_s0(gen_helper_M4_vrmpyeh_acc_s0(RxxV, cpu_env, RxxV, RssV, RttV);,
{ RxxV += fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))) + fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M4_vrmpyeh_acc_s0 */
},
int64_t HELPER(M4_vrmpyeh_acc_s0)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ RxxV += fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))) + fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))); fACC();}
COUNT_HELPER(M4_vrmpyeh_acc_s0);
return RxxV;
})
DEF_QEMU(M4_vrmpyeh_acc_s1,{ RxxV += fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))) + fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))); fACC();},
DEF_HELPER_4(M4_vrmpyeh_acc_s1, s64, env, s64, s64, s64),
{
/* M4_vrmpyeh_acc_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M4_vrmpyeh_acc_s1(gen_helper_M4_vrmpyeh_acc_s1(RxxV, cpu_env, RxxV, RssV, RttV);,
{ RxxV += fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))) + fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M4_vrmpyeh_acc_s1 */
},
int64_t HELPER(M4_vrmpyeh_acc_s1)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ RxxV += fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(2,RttV))) + fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RttV))); fACC();}
COUNT_HELPER(M4_vrmpyeh_acc_s1);
return RxxV;
})
DEF_QEMU(M4_vrmpyoh_s0,{ RddV = fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))) + fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))); ;},
DEF_HELPER_3(M4_vrmpyoh_s0, s64, env, s64, s64),
{
/* M4_vrmpyoh_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M4_vrmpyoh_s0(gen_helper_M4_vrmpyoh_s0(RddV, cpu_env, RssV, RttV);,
{ RddV = fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))) + fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M4_vrmpyoh_s0 */
},
int64_t HELPER(M4_vrmpyoh_s0)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))) + fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))); ;}
COUNT_HELPER(M4_vrmpyoh_s0);
return RddV;
})
DEF_QEMU(M4_vrmpyoh_s1,{ RddV = fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))) + fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))); ;},
DEF_HELPER_3(M4_vrmpyoh_s1, s64, env, s64, s64),
{
/* M4_vrmpyoh_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M4_vrmpyoh_s1(gen_helper_M4_vrmpyoh_s1(RddV, cpu_env, RssV, RttV);,
{ RddV = fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))) + fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))); ;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M4_vrmpyoh_s1 */
},
int64_t HELPER(M4_vrmpyoh_s1)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))) + fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))); ;}
COUNT_HELPER(M4_vrmpyoh_s1);
return RddV;
})
DEF_QEMU(M4_vrmpyoh_acc_s0,{ RxxV += fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))) + fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))); fACC();},
DEF_HELPER_4(M4_vrmpyoh_acc_s0, s64, env, s64, s64, s64),
{
/* M4_vrmpyoh_acc_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M4_vrmpyoh_acc_s0(gen_helper_M4_vrmpyoh_acc_s0(RxxV, cpu_env, RxxV, RssV, RttV);,
{ RxxV += fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))) + fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M4_vrmpyoh_acc_s0 */
},
int64_t HELPER(M4_vrmpyoh_acc_s0)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ RxxV += fSCALE(0,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))) + fSCALE(0,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))); fACC();}
COUNT_HELPER(M4_vrmpyoh_acc_s0);
return RxxV;
})
DEF_QEMU(M4_vrmpyoh_acc_s1,{ RxxV += fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))) + fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))); fACC();},
DEF_HELPER_4(M4_vrmpyoh_acc_s1, s64, env, s64, s64, s64),
{
/* M4_vrmpyoh_acc_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M4_vrmpyoh_acc_s1(gen_helper_M4_vrmpyoh_acc_s1(RxxV, cpu_env, RxxV, RssV, RttV);,
{ RxxV += fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))) + fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M4_vrmpyoh_acc_s1 */
},
int64_t HELPER(M4_vrmpyoh_acc_s1)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ RxxV += fSCALE(1,fMPY3216SS(fGETWORD(1,RssV),fGETHALF(3,RttV))) + fSCALE(1,fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RttV))); fACC();}
COUNT_HELPER(M4_vrmpyoh_acc_s1);
return RxxV;
})
DEF_QEMU(M2_hmmpyl_rs1,{ RdV = fSAT((fSCALE(1,fMPY3216SS(RsV,fGETHALF(0,RtV)))+0x8000)>>16); },
DEF_HELPER_3(M2_hmmpyl_rs1, s32, env, s32, s32),
{
/* M2_hmmpyl_rs1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_hmmpyl_rs1(gen_helper_M2_hmmpyl_rs1(RdV, cpu_env, RsV, RtV);,
{ RdV = fSAT((fSCALE(1,fMPY3216SS(RsV,fGETHALF(0,RtV)))+0x8000)>>16); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_hmmpyl_rs1 */
},
int32_t HELPER(M2_hmmpyl_rs1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fSAT((fSCALE(1,fMPY3216SS(RsV,fGETHALF(0,RtV)))+0x8000)>>16); }
COUNT_HELPER(M2_hmmpyl_rs1);
return RdV;
})
DEF_QEMU(M2_hmmpyh_rs1,{ RdV = fSAT((fSCALE(1,fMPY3216SS(RsV,fGETHALF(1,RtV)))+0x8000)>>16); },
DEF_HELPER_3(M2_hmmpyh_rs1, s32, env, s32, s32),
{
/* M2_hmmpyh_rs1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_hmmpyh_rs1(gen_helper_M2_hmmpyh_rs1(RdV, cpu_env, RsV, RtV);,
{ RdV = fSAT((fSCALE(1,fMPY3216SS(RsV,fGETHALF(1,RtV)))+0x8000)>>16); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_hmmpyh_rs1 */
},
int32_t HELPER(M2_hmmpyh_rs1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fSAT((fSCALE(1,fMPY3216SS(RsV,fGETHALF(1,RtV)))+0x8000)>>16); }
COUNT_HELPER(M2_hmmpyh_rs1);
return RdV;
})
DEF_QEMU(M2_hmmpyl_s1,{ RdV = fSAT((fSCALE(1,fMPY3216SS(RsV,fGETHALF(0,RtV))))>>16); },
DEF_HELPER_3(M2_hmmpyl_s1, s32, env, s32, s32),
{
/* M2_hmmpyl_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_hmmpyl_s1(gen_helper_M2_hmmpyl_s1(RdV, cpu_env, RsV, RtV);,
{ RdV = fSAT((fSCALE(1,fMPY3216SS(RsV,fGETHALF(0,RtV))))>>16); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_hmmpyl_s1 */
},
int32_t HELPER(M2_hmmpyl_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fSAT((fSCALE(1,fMPY3216SS(RsV,fGETHALF(0,RtV))))>>16); }
COUNT_HELPER(M2_hmmpyl_s1);
return RdV;
})
DEF_QEMU(M2_hmmpyh_s1,{ RdV = fSAT((fSCALE(1,fMPY3216SS(RsV,fGETHALF(1,RtV))))>>16); },
DEF_HELPER_3(M2_hmmpyh_s1, s32, env, s32, s32),
{
/* M2_hmmpyh_s1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_hmmpyh_s1(gen_helper_M2_hmmpyh_s1(RdV, cpu_env, RsV, RtV);,
{ RdV = fSAT((fSCALE(1,fMPY3216SS(RsV,fGETHALF(1,RtV))))>>16); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_hmmpyh_s1 */
},
int32_t HELPER(M2_hmmpyh_s1)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fSAT((fSCALE(1,fMPY3216SS(RsV,fGETHALF(1,RtV))))>>16); }
COUNT_HELPER(M2_hmmpyh_s1);
return RdV;
})
DEF_QEMU(M2_mmaculs_s0,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV))))>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV))))>>16)) ); fACC();},
DEF_HELPER_4(M2_mmaculs_s0, s64, env, s64, s64, s64),
{
/* M2_mmaculs_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmaculs_s0(gen_helper_M2_mmaculs_s0(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV))))>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV))))>>16)) ); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmaculs_s0 */
},
int64_t HELPER(M2_mmaculs_s0)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV))))>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV))))>>16)) ); fACC();}
COUNT_HELPER(M2_mmaculs_s0);
return RxxV;
})
DEF_QEMU(M2_mmaculs_s1,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV))))>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV))))>>16)) ); fACC();},
DEF_HELPER_4(M2_mmaculs_s1, s64, env, s64, s64, s64),
{
/* M2_mmaculs_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmaculs_s1(gen_helper_M2_mmaculs_s1(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV))))>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV))))>>16)) ); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmaculs_s1 */
},
int64_t HELPER(M2_mmaculs_s1)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV))))>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV))))>>16)) ); fACC();}
COUNT_HELPER(M2_mmaculs_s1);
return RxxV;
})
DEF_QEMU(M2_mmacuhs_s0,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV))))>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV))))>>16 ))); fACC();},
DEF_HELPER_4(M2_mmacuhs_s0, s64, env, s64, s64, s64),
{
/* M2_mmacuhs_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmacuhs_s0(gen_helper_M2_mmacuhs_s0(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV))))>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV))))>>16 ))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmacuhs_s0 */
},
int64_t HELPER(M2_mmacuhs_s0)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV))))>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV))))>>16 ))); fACC();}
COUNT_HELPER(M2_mmacuhs_s0);
return RxxV;
})
DEF_QEMU(M2_mmacuhs_s1,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV))))>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV))))>>16 ))); fACC();},
DEF_HELPER_4(M2_mmacuhs_s1, s64, env, s64, s64, s64),
{
/* M2_mmacuhs_s1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmacuhs_s1(gen_helper_M2_mmacuhs_s1(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV))))>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV))))>>16 ))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmacuhs_s1 */
},
int64_t HELPER(M2_mmacuhs_s1)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV))))>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV))))>>16 ))); fACC();}
COUNT_HELPER(M2_mmacuhs_s1);
return RxxV;
})
DEF_QEMU(M2_mmpyul_s0,{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV))))>>16)); },
DEF_HELPER_3(M2_mmpyul_s0, s64, env, s64, s64),
{
/* M2_mmpyul_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmpyul_s0(gen_helper_M2_mmpyul_s0(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV))))>>16)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmpyul_s0 */
},
int64_t HELPER(M2_mmpyul_s0)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV))))>>16)); }
COUNT_HELPER(M2_mmpyul_s0);
return RddV;
})
DEF_QEMU(M2_mmpyul_s1,{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV))))>>16)); },
DEF_HELPER_3(M2_mmpyul_s1, s64, env, s64, s64),
{
/* M2_mmpyul_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmpyul_s1(gen_helper_M2_mmpyul_s1(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV))))>>16)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmpyul_s1 */
},
int64_t HELPER(M2_mmpyul_s1)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV))))>>16)); }
COUNT_HELPER(M2_mmpyul_s1);
return RddV;
})
DEF_QEMU(M2_mmpyuh_s0,{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV))))>>16)); },
DEF_HELPER_3(M2_mmpyuh_s0, s64, env, s64, s64),
{
/* M2_mmpyuh_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmpyuh_s0(gen_helper_M2_mmpyuh_s0(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV))))>>16)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmpyuh_s0 */
},
int64_t HELPER(M2_mmpyuh_s0)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV))))>>16)); }
COUNT_HELPER(M2_mmpyuh_s0);
return RddV;
})
DEF_QEMU(M2_mmpyuh_s1,{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV))))>>16)); },
DEF_HELPER_3(M2_mmpyuh_s1, s64, env, s64, s64),
{
/* M2_mmpyuh_s1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmpyuh_s1(gen_helper_M2_mmpyuh_s1(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV))))>>16)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmpyuh_s1 */
},
int64_t HELPER(M2_mmpyuh_s1)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV))))>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV))))>>16)); }
COUNT_HELPER(M2_mmpyuh_s1);
return RddV;
})
DEF_QEMU(M2_mmaculs_rs0,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV)))+0x8000)>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV)))+0x8000)>>16)) ); fACC();},
DEF_HELPER_4(M2_mmaculs_rs0, s64, env, s64, s64, s64),
{
/* M2_mmaculs_rs0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmaculs_rs0(gen_helper_M2_mmaculs_rs0(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV)))+0x8000)>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV)))+0x8000)>>16)) ); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmaculs_rs0 */
},
int64_t HELPER(M2_mmaculs_rs0)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV)))+0x8000)>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV)))+0x8000)>>16)) ); fACC();}
COUNT_HELPER(M2_mmaculs_rs0);
return RxxV;
})
DEF_QEMU(M2_mmaculs_rs1,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV)))+0x8000)>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV)))+0x8000)>>16)) ); fACC();},
DEF_HELPER_4(M2_mmaculs_rs1, s64, env, s64, s64, s64),
{
/* M2_mmaculs_rs1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmaculs_rs1(gen_helper_M2_mmaculs_rs1(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV)))+0x8000)>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV)))+0x8000)>>16)) ); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmaculs_rs1 */
},
int64_t HELPER(M2_mmaculs_rs1)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV)))+0x8000)>>16)) ); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV)))+0x8000)>>16)) ); fACC();}
COUNT_HELPER(M2_mmaculs_rs1);
return RxxV;
})
DEF_QEMU(M2_mmacuhs_rs0,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV)))+0x8000)>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV)))+0x8000)>>16 ))); fACC();},
DEF_HELPER_4(M2_mmacuhs_rs0, s64, env, s64, s64, s64),
{
/* M2_mmacuhs_rs0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmacuhs_rs0(gen_helper_M2_mmacuhs_rs0(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV)))+0x8000)>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV)))+0x8000)>>16 ))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmacuhs_rs0 */
},
int64_t HELPER(M2_mmacuhs_rs0)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV)))+0x8000)>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV)))+0x8000)>>16 ))); fACC();}
COUNT_HELPER(M2_mmacuhs_rs0);
return RxxV;
})
DEF_QEMU(M2_mmacuhs_rs1,{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV)))+0x8000)>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV)))+0x8000)>>16 ))); fACC();},
DEF_HELPER_4(M2_mmacuhs_rs1, s64, env, s64, s64, s64),
{
/* M2_mmacuhs_rs1 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmacuhs_rs1(gen_helper_M2_mmacuhs_rs1(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV)))+0x8000)>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV)))+0x8000)>>16 ))); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmacuhs_rs1 */
},
int64_t HELPER(M2_mmacuhs_rs1)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV)))+0x8000)>>16) )); fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + ((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV)))+0x8000)>>16 ))); fACC();}
COUNT_HELPER(M2_mmacuhs_rs1);
return RxxV;
})
DEF_QEMU(M2_mmpyul_rs0,{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV)))+0x8000)>>16)); },
DEF_HELPER_3(M2_mmpyul_rs0, s64, env, s64, s64),
{
/* M2_mmpyul_rs0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmpyul_rs0(gen_helper_M2_mmpyul_rs0(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV)))+0x8000)>>16)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmpyul_rs0 */
},
int64_t HELPER(M2_mmpyul_rs0)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV)))+0x8000)>>16)); }
COUNT_HELPER(M2_mmpyul_rs0);
return RddV;
})
DEF_QEMU(M2_mmpyul_rs1,{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV)))+0x8000)>>16)); },
DEF_HELPER_3(M2_mmpyul_rs1, s64, env, s64, s64),
{
/* M2_mmpyul_rs1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmpyul_rs1(gen_helper_M2_mmpyul_rs1(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV)))+0x8000)>>16)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmpyul_rs1 */
},
int64_t HELPER(M2_mmpyul_rs1)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(2,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(0,RttV)))+0x8000)>>16)); }
COUNT_HELPER(M2_mmpyul_rs1);
return RddV;
})
DEF_QEMU(M2_mmpyuh_rs0,{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV)))+0x8000)>>16)); },
DEF_HELPER_3(M2_mmpyuh_rs0, s64, env, s64, s64),
{
/* M2_mmpyuh_rs0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmpyuh_rs0(gen_helper_M2_mmpyuh_rs0(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV)))+0x8000)>>16)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmpyuh_rs0 */
},
int64_t HELPER(M2_mmpyuh_rs0)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(0,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV)))+0x8000)>>16)); }
COUNT_HELPER(M2_mmpyuh_rs0);
return RddV;
})
DEF_QEMU(M2_mmpyuh_rs1,{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV)))+0x8000)>>16)); },
DEF_HELPER_3(M2_mmpyuh_rs1, s64, env, s64, s64),
{
/* M2_mmpyuh_rs1 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_mmpyuh_rs1(gen_helper_M2_mmpyuh_rs1(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV)))+0x8000)>>16)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_mmpyuh_rs1 */
},
int64_t HELPER(M2_mmpyuh_rs1)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(1,RssV),fGETUHALF(3,RttV)))+0x8000)>>16)); fSETWORD(0,RddV,fSAT((fSCALE(1,fMPY3216SU(fGETWORD(0,RssV),fGETUHALF(1,RttV)))+0x8000)>>16)); }
COUNT_HELPER(M2_mmpyuh_rs1);
return RddV;
})
DEF_QEMU(M2_vrcmaci_s0,{ RxxV = RxxV + fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV));fACC();},
DEF_HELPER_4(M2_vrcmaci_s0, s64, env, s64, s64, s64),
{
/* M2_vrcmaci_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vrcmaci_s0(gen_helper_M2_vrcmaci_s0(RxxV, cpu_env, RxxV, RssV, RttV);,
{ RxxV = RxxV + fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV));fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vrcmaci_s0 */
},
int64_t HELPER(M2_vrcmaci_s0)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = RxxV + fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV));fACC();}
COUNT_HELPER(M2_vrcmaci_s0);
return RxxV;
})
DEF_QEMU(M2_vrcmacr_s0,{ RxxV = RxxV + fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV));fACC();},
DEF_HELPER_4(M2_vrcmacr_s0, s64, env, s64, s64, s64),
{
/* M2_vrcmacr_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vrcmacr_s0(gen_helper_M2_vrcmacr_s0(RxxV, cpu_env, RxxV, RssV, RttV);,
{ RxxV = RxxV + fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV));fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vrcmacr_s0 */
},
int64_t HELPER(M2_vrcmacr_s0)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = RxxV + fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV));fACC();}
COUNT_HELPER(M2_vrcmacr_s0);
return RxxV;
})
DEF_QEMU(M2_vrcmaci_s0c,{ RxxV = RxxV + fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV));fACC();},
DEF_HELPER_4(M2_vrcmaci_s0c, s64, env, s64, s64, s64),
{
/* M2_vrcmaci_s0c */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vrcmaci_s0c(gen_helper_M2_vrcmaci_s0c(RxxV, cpu_env, RxxV, RssV, RttV);,
{ RxxV = RxxV + fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV));fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vrcmaci_s0c */
},
int64_t HELPER(M2_vrcmaci_s0c)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = RxxV + fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV));fACC();}
COUNT_HELPER(M2_vrcmaci_s0c);
return RxxV;
})
DEF_QEMU(M2_vrcmacr_s0c,{ RxxV = RxxV + fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV));fACC();},
DEF_HELPER_4(M2_vrcmacr_s0c, s64, env, s64, s64, s64),
{
/* M2_vrcmacr_s0c */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vrcmacr_s0c(gen_helper_M2_vrcmacr_s0c(RxxV, cpu_env, RxxV, RssV, RttV);,
{ RxxV = RxxV + fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV));fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vrcmacr_s0c */
},
int64_t HELPER(M2_vrcmacr_s0c)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = RxxV + fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV));fACC();}
COUNT_HELPER(M2_vrcmacr_s0c);
return RxxV;
})
DEF_QEMU(M2_cmaci_s0,{ RxxV = RxxV + fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV)) + fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)); fACC();},
DEF_HELPER_4(M2_cmaci_s0, s64, env, s64, s32, s32),
{
/* M2_cmaci_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cmaci_s0(gen_helper_M2_cmaci_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{ RxxV = RxxV + fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV)) + fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cmaci_s0 */
},
int64_t HELPER(M2_cmaci_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = RxxV + fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV)) + fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)); fACC();}
COUNT_HELPER(M2_cmaci_s0);
return RxxV;
})
DEF_QEMU(M2_cmacr_s0,{ RxxV = RxxV + fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV)) - fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)); fACC();},
DEF_HELPER_4(M2_cmacr_s0, s64, env, s64, s32, s32),
{
/* M2_cmacr_s0 */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cmacr_s0(gen_helper_M2_cmacr_s0(RxxV, cpu_env, RxxV, RsV, RtV);,
{ RxxV = RxxV + fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV)) - fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cmacr_s0 */
},
int64_t HELPER(M2_cmacr_s0)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = RxxV + fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV)) - fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)); fACC();}
COUNT_HELPER(M2_cmacr_s0);
return RxxV;
})
DEF_QEMU(M2_vrcmpyi_s0,{ RddV = fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV));},
DEF_HELPER_3(M2_vrcmpyi_s0, s64, env, s64, s64),
{
/* M2_vrcmpyi_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vrcmpyi_s0(gen_helper_M2_vrcmpyi_s0(RddV, cpu_env, RssV, RttV);,
{ RddV = fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vrcmpyi_s0 */
},
int64_t HELPER(M2_vrcmpyi_s0)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV));}
COUNT_HELPER(M2_vrcmpyi_s0);
return RddV;
})
DEF_QEMU(M2_vrcmpyr_s0,{ RddV = fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV));},
DEF_HELPER_3(M2_vrcmpyr_s0, s64, env, s64, s64),
{
/* M2_vrcmpyr_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vrcmpyr_s0(gen_helper_M2_vrcmpyr_s0(RddV, cpu_env, RssV, RttV);,
{ RddV = fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vrcmpyr_s0 */
},
int64_t HELPER(M2_vrcmpyr_s0)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV));}
COUNT_HELPER(M2_vrcmpyr_s0);
return RddV;
})
DEF_QEMU(M2_vrcmpyi_s0c,{ RddV = fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV));},
DEF_HELPER_3(M2_vrcmpyi_s0c, s64, env, s64, s64),
{
/* M2_vrcmpyi_s0c */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vrcmpyi_s0c(gen_helper_M2_vrcmpyi_s0c(RddV, cpu_env, RssV, RttV);,
{ RddV = fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vrcmpyi_s0c */
},
int64_t HELPER(M2_vrcmpyi_s0c)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV));}
COUNT_HELPER(M2_vrcmpyi_s0c);
return RddV;
})
DEF_QEMU(M2_vrcmpyr_s0c,{ RddV = fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV));},
DEF_HELPER_3(M2_vrcmpyr_s0c, s64, env, s64, s64),
{
/* M2_vrcmpyr_s0c */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vrcmpyr_s0c(gen_helper_M2_vrcmpyr_s0c(RddV, cpu_env, RssV, RttV);,
{ RddV = fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vrcmpyr_s0c */
},
int64_t HELPER(M2_vrcmpyr_s0c)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV));}
COUNT_HELPER(M2_vrcmpyr_s0c);
return RddV;
})
DEF_QEMU(M2_cmpyi_s0,{ RddV = fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV)) + fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)); },
DEF_HELPER_3(M2_cmpyi_s0, s64, env, s32, s32),
{
/* M2_cmpyi_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cmpyi_s0(gen_helper_M2_cmpyi_s0(RddV, cpu_env, RsV, RtV);,
{ RddV = fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV)) + fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cmpyi_s0 */
},
int64_t HELPER(M2_cmpyi_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fMPY16SS(fGETHALF(1,RsV),fGETHALF(0,RtV)) + fMPY16SS(fGETHALF(0,RsV),fGETHALF(1,RtV)); }
COUNT_HELPER(M2_cmpyi_s0);
return RddV;
})
DEF_QEMU(M2_cmpyr_s0,{ RddV = fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV)) - fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)); },
DEF_HELPER_3(M2_cmpyr_s0, s64, env, s32, s32),
{
/* M2_cmpyr_s0 */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_cmpyr_s0(gen_helper_M2_cmpyr_s0(RddV, cpu_env, RsV, RtV);,
{ RddV = fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV)) - fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_cmpyr_s0 */
},
int64_t HELPER(M2_cmpyr_s0)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fMPY16SS(fGETHALF(0,RsV),fGETHALF(0,RtV)) - fMPY16SS(fGETHALF(1,RsV),fGETHALF(1,RtV)); }
COUNT_HELPER(M2_cmpyr_s0);
return RddV;
})
DEF_QEMU(M4_cmpyi_wh,{ RdV = fSAT( ( fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RtV)) + fMPY3216SS(fGETWORD(1,RssV),fGETHALF(0,RtV)) + 0x4000)>>15); },
DEF_HELPER_3(M4_cmpyi_wh, s32, env, s64, s32),
{
/* M4_cmpyi_wh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_cmpyi_wh(gen_helper_M4_cmpyi_wh(RdV, cpu_env, RssV, RtV);,
{ RdV = fSAT( ( fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RtV)) + fMPY3216SS(fGETWORD(1,RssV),fGETHALF(0,RtV)) + 0x4000)>>15); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* M4_cmpyi_wh */
},
int32_t HELPER(M4_cmpyi_wh)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fSAT( ( fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RtV)) + fMPY3216SS(fGETWORD(1,RssV),fGETHALF(0,RtV)) + 0x4000)>>15); }
COUNT_HELPER(M4_cmpyi_wh);
return RdV;
})
DEF_QEMU(M4_cmpyr_wh,{ RdV = fSAT( ( fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RtV)) - fMPY3216SS(fGETWORD(1,RssV),fGETHALF(1,RtV)) + 0x4000)>>15); },
DEF_HELPER_3(M4_cmpyr_wh, s32, env, s64, s32),
{
/* M4_cmpyr_wh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_cmpyr_wh(gen_helper_M4_cmpyr_wh(RdV, cpu_env, RssV, RtV);,
{ RdV = fSAT( ( fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RtV)) - fMPY3216SS(fGETWORD(1,RssV),fGETHALF(1,RtV)) + 0x4000)>>15); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* M4_cmpyr_wh */
},
int32_t HELPER(M4_cmpyr_wh)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fSAT( ( fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RtV)) - fMPY3216SS(fGETWORD(1,RssV),fGETHALF(1,RtV)) + 0x4000)>>15); }
COUNT_HELPER(M4_cmpyr_wh);
return RdV;
})
DEF_QEMU(M4_cmpyi_whc,{ RdV = fSAT( ( fMPY3216SS(fGETWORD(1,RssV),fGETHALF(0,RtV)) - fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RtV)) + 0x4000)>>15); },
DEF_HELPER_3(M4_cmpyi_whc, s32, env, s64, s32),
{
/* M4_cmpyi_whc */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_cmpyi_whc(gen_helper_M4_cmpyi_whc(RdV, cpu_env, RssV, RtV);,
{ RdV = fSAT( ( fMPY3216SS(fGETWORD(1,RssV),fGETHALF(0,RtV)) - fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RtV)) + 0x4000)>>15); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* M4_cmpyi_whc */
},
int32_t HELPER(M4_cmpyi_whc)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fSAT( ( fMPY3216SS(fGETWORD(1,RssV),fGETHALF(0,RtV)) - fMPY3216SS(fGETWORD(0,RssV),fGETHALF(1,RtV)) + 0x4000)>>15); }
COUNT_HELPER(M4_cmpyi_whc);
return RdV;
})
DEF_QEMU(M4_cmpyr_whc,{ RdV = fSAT( ( fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RtV)) + fMPY3216SS(fGETWORD(1,RssV),fGETHALF(1,RtV)) + 0x4000)>>15); },
DEF_HELPER_3(M4_cmpyr_whc, s32, env, s64, s32),
{
/* M4_cmpyr_whc */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_cmpyr_whc(gen_helper_M4_cmpyr_whc(RdV, cpu_env, RssV, RtV);,
{ RdV = fSAT( ( fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RtV)) + fMPY3216SS(fGETWORD(1,RssV),fGETHALF(1,RtV)) + 0x4000)>>15); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* M4_cmpyr_whc */
},
int32_t HELPER(M4_cmpyr_whc)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fSAT( ( fMPY3216SS(fGETWORD(0,RssV),fGETHALF(0,RtV)) + fMPY3216SS(fGETWORD(1,RssV),fGETHALF(1,RtV)) + 0x4000)>>15); }
COUNT_HELPER(M4_cmpyr_whc);
return RdV;
})
DEF_QEMU(M2_vcmpy_s0_sat_i,{ fSETWORD(0,RddV,fSAT( fSCALE(0,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT( fSCALE(0,fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV))))); ;; },
DEF_HELPER_3(M2_vcmpy_s0_sat_i, s64, env, s64, s64),
{
/* M2_vcmpy_s0_sat_i */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vcmpy_s0_sat_i(gen_helper_M2_vcmpy_s0_sat_i(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(0,RddV,fSAT( fSCALE(0,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT( fSCALE(0,fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV))))); ;; })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vcmpy_s0_sat_i */
},
int64_t HELPER(M2_vcmpy_s0_sat_i)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,fSAT( fSCALE(0,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT( fSCALE(0,fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV))))); ;; }
COUNT_HELPER(M2_vcmpy_s0_sat_i);
return RddV;
})
DEF_QEMU(M2_vcmpy_s0_sat_r,{ fSETWORD(0,RddV,fSAT( fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT( fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))))); ;; },
DEF_HELPER_3(M2_vcmpy_s0_sat_r, s64, env, s64, s64),
{
/* M2_vcmpy_s0_sat_r */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vcmpy_s0_sat_r(gen_helper_M2_vcmpy_s0_sat_r(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(0,RddV,fSAT( fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT( fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))))); ;; })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vcmpy_s0_sat_r */
},
int64_t HELPER(M2_vcmpy_s0_sat_r)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,fSAT( fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT( fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))))); ;; }
COUNT_HELPER(M2_vcmpy_s0_sat_r);
return RddV;
})
DEF_QEMU(M2_vcmpy_s1_sat_i,{ fSETWORD(0,RddV,fSAT( fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT( fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV))))); ;; },
DEF_HELPER_3(M2_vcmpy_s1_sat_i, s64, env, s64, s64),
{
/* M2_vcmpy_s1_sat_i */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vcmpy_s1_sat_i(gen_helper_M2_vcmpy_s1_sat_i(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(0,RddV,fSAT( fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT( fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV))))); ;; })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vcmpy_s1_sat_i */
},
int64_t HELPER(M2_vcmpy_s1_sat_i)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,fSAT( fSCALE(1,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT( fSCALE(1,fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV))))); ;; }
COUNT_HELPER(M2_vcmpy_s1_sat_i);
return RddV;
})
DEF_QEMU(M2_vcmpy_s1_sat_r,{ fSETWORD(0,RddV,fSAT( fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT( fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))))); ;; },
DEF_HELPER_3(M2_vcmpy_s1_sat_r, s64, env, s64, s64),
{
/* M2_vcmpy_s1_sat_r */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vcmpy_s1_sat_r(gen_helper_M2_vcmpy_s1_sat_r(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(0,RddV,fSAT( fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT( fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))))); ;; })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vcmpy_s1_sat_r */
},
int64_t HELPER(M2_vcmpy_s1_sat_r)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,fSAT( fSCALE(1,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RddV,fSAT( fSCALE(1,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))))); ;; }
COUNT_HELPER(M2_vcmpy_s1_sat_r);
return RddV;
})
DEF_QEMU(M2_vcmac_s0_sat_i,{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV))))); fACC();; },
DEF_HELPER_4(M2_vcmac_s0_sat_i, s64, env, s64, s64, s64),
{
/* M2_vcmac_s0_sat_i */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vcmac_s0_sat_i(gen_helper_M2_vcmac_s0_sat_i(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV))))); fACC();; })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vcmac_s0_sat_i */
},
int64_t HELPER(M2_vcmac_s0_sat_i)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(1,RssV),fGETHALF(0,RttV)) + fMPY16SS(fGETHALF(0,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(3,RssV),fGETHALF(2,RttV)) + fMPY16SS(fGETHALF(2,RssV),fGETHALF(3,RttV))))); fACC();; }
COUNT_HELPER(M2_vcmac_s0_sat_i);
return RxxV;
})
DEF_QEMU(M2_vcmac_s0_sat_r,{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))))); fACC();; },
DEF_HELPER_4(M2_vcmac_s0_sat_r, s64, env, s64, s64, s64),
{
/* M2_vcmac_s0_sat_r */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vcmac_s0_sat_r(gen_helper_M2_vcmac_s0_sat_r(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))))); fACC();; })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vcmac_s0_sat_r */
},
int64_t HELPER(M2_vcmac_s0_sat_r)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fSETWORD(0,RxxV,fSAT(fGETWORD(0,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(0,RssV),fGETHALF(0,RttV)) - fMPY16SS(fGETHALF(1,RssV),fGETHALF(1,RttV))))); fSETWORD(1,RxxV,fSAT(fGETWORD(1,RxxV) + fSCALE(0,fMPY16SS(fGETHALF(2,RssV),fGETHALF(2,RttV)) - fMPY16SS(fGETHALF(3,RssV),fGETHALF(3,RttV))))); fACC();; }
COUNT_HELPER(M2_vcmac_s0_sat_r);
return RxxV;
})
DEF_QEMU(S2_vcrotate,{ fHIDE(size1u_t tmp;) tmp = fEXTRACTU_RANGE(RtV,1,0); if (tmp == 0) { fSETHALF(0,RddV,fGETHALF(0,RssV)); fSETHALF(1,RddV,fGETHALF(1,RssV)); } else if (tmp == 1) { fSETHALF(0,RddV,fGETHALF(1,RssV)); fSETHALF(1,RddV,fSATH(-fGETHALF(0,RssV))); } else if (tmp == 2) { fSETHALF(0,RddV,fSATH(-fGETHALF(1,RssV))); fSETHALF(1,RddV,fGETHALF(0,RssV)); } else { fHIDE(if (tmp != 3) fatal("C is broken");) fSETHALF(0,RddV,fSATH(-fGETHALF(0,RssV))); fSETHALF(1,RddV,fSATH(-fGETHALF(1,RssV))); } tmp = fEXTRACTU_RANGE(RtV,3,2); if (tmp == 0) { fSETHALF(2,RddV,fGETHALF(2,RssV)); fSETHALF(3,RddV,fGETHALF(3,RssV)); } else if (tmp == 1) { fSETHALF(2,RddV,fGETHALF(3,RssV)); fSETHALF(3,RddV,fSATH(-fGETHALF(2,RssV))); } else if (tmp == 2) { fSETHALF(2,RddV,fSATH(-fGETHALF(3,RssV))); fSETHALF(3,RddV,fGETHALF(2,RssV)); } else { fHIDE(if (tmp != 3) fatal("C is broken");) fSETHALF(2,RddV,fSATH(-fGETHALF(2,RssV))); fSETHALF(3,RddV,fSATH(-fGETHALF(3,RssV))); } },
DEF_HELPER_3(S2_vcrotate, s64, env, s64, s32),
{
/* S2_vcrotate */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_vcrotate(gen_helper_S2_vcrotate(RddV, cpu_env, RssV, RtV);,
{ fHIDE(size1u_t tmp;) tmp = fEXTRACTU_RANGE(RtV,1,0); if (tmp == 0) { fSETHALF(0,RddV,fGETHALF(0,RssV)); fSETHALF(1,RddV,fGETHALF(1,RssV)); } else if (tmp == 1) { fSETHALF(0,RddV,fGETHALF(1,RssV)); fSETHALF(1,RddV,fSATH(-fGETHALF(0,RssV))); } else if (tmp == 2) { fSETHALF(0,RddV,fSATH(-fGETHALF(1,RssV))); fSETHALF(1,RddV,fGETHALF(0,RssV)); } else { fHIDE(if (tmp != 3) fatal("C is broken");) fSETHALF(0,RddV,fSATH(-fGETHALF(0,RssV))); fSETHALF(1,RddV,fSATH(-fGETHALF(1,RssV))); } tmp = fEXTRACTU_RANGE(RtV,3,2); if (tmp == 0) { fSETHALF(2,RddV,fGETHALF(2,RssV)); fSETHALF(3,RddV,fGETHALF(3,RssV)); } else if (tmp == 1) { fSETHALF(2,RddV,fGETHALF(3,RssV)); fSETHALF(3,RddV,fSATH(-fGETHALF(2,RssV))); } else if (tmp == 2) { fSETHALF(2,RddV,fSATH(-fGETHALF(3,RssV))); fSETHALF(3,RddV,fGETHALF(2,RssV)); } else { fHIDE(if (tmp != 3) fatal("C is broken");) fSETHALF(2,RddV,fSATH(-fGETHALF(2,RssV))); fSETHALF(3,RddV,fSATH(-fGETHALF(3,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_vcrotate */
},
int64_t HELPER(S2_vcrotate)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(size1u_t tmp;) tmp = fEXTRACTU_RANGE(RtV,1,0); if (tmp == 0) { fSETHALF(0,RddV,fGETHALF(0,RssV)); fSETHALF(1,RddV,fGETHALF(1,RssV)); } else if (tmp == 1) { fSETHALF(0,RddV,fGETHALF(1,RssV)); fSETHALF(1,RddV,fSATH(-fGETHALF(0,RssV))); } else if (tmp == 2) { fSETHALF(0,RddV,fSATH(-fGETHALF(1,RssV))); fSETHALF(1,RddV,fGETHALF(0,RssV)); } else { fHIDE(if (tmp != 3) fatal("C is broken");) fSETHALF(0,RddV,fSATH(-fGETHALF(0,RssV))); fSETHALF(1,RddV,fSATH(-fGETHALF(1,RssV))); } tmp = fEXTRACTU_RANGE(RtV,3,2); if (tmp == 0) { fSETHALF(2,RddV,fGETHALF(2,RssV)); fSETHALF(3,RddV,fGETHALF(3,RssV)); } else if (tmp == 1) { fSETHALF(2,RddV,fGETHALF(3,RssV)); fSETHALF(3,RddV,fSATH(-fGETHALF(2,RssV))); } else if (tmp == 2) { fSETHALF(2,RddV,fSATH(-fGETHALF(3,RssV))); fSETHALF(3,RddV,fGETHALF(2,RssV)); } else { fHIDE(if (tmp != 3) fatal("C is broken");) fSETHALF(2,RddV,fSATH(-fGETHALF(2,RssV))); fSETHALF(3,RddV,fSATH(-fGETHALF(3,RssV))); } }
COUNT_HELPER(S2_vcrotate);
return RddV;
})
DEF_QEMU(S4_vrcrotate_acc,{ fHIDE(int i; int tmpr; int tmpi; unsigned int control;) fHIDE(int sumr; int sumi;) sumr = 0; sumi = 0; control = fGETUBYTE(uiV,RtV); for (i = 0; i < 8; i += 2) { tmpr = fGETBYTE(i ,RssV); tmpi = fGETBYTE(i+1,RssV); switch (control & 3) { case 0: sumr += tmpr; sumi += tmpi; break; case 1: sumr += tmpi; sumi -= tmpr; break; case 2: sumr -= tmpi; sumi += tmpr; break; case 3: sumr -= tmpr; sumi -= tmpi; break; fHIDE(default: fatal("C is broken!");) } control = control >> 2; } fSETWORD(0,RxxV,fGETWORD(0,RxxV) + sumr); fSETWORD(1,RxxV,fGETWORD(1,RxxV) + sumi); fACC();},
DEF_HELPER_5(S4_vrcrotate_acc, s64, env, s64, s64, s32, s32),
{
/* S4_vrcrotate_acc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_vrcrotate_acc(gen_helper_S4_vrcrotate_acc(RxxV, cpu_env, RxxV, RssV, RtV, uiV);,
{ fHIDE(int i; int tmpr; int tmpi; unsigned int control;) fHIDE(int sumr; int sumi;) sumr = 0; sumi = 0; control = fGETUBYTE(uiV,RtV); for (i = 0; i < 8; i += 2) { tmpr = fGETBYTE(i ,RssV); tmpi = fGETBYTE(i+1,RssV); switch (control & 3) { case 0: sumr += tmpr; sumi += tmpi; break; case 1: sumr += tmpi; sumi -= tmpr; break; case 2: sumr -= tmpi; sumi += tmpr; break; case 3: sumr -= tmpr; sumi -= tmpi; break; fHIDE(default: fatal("C is broken!");) } control = control >> 2; } fSETWORD(0,RxxV,fGETWORD(0,RxxV) + sumr); fSETWORD(1,RxxV,fGETWORD(1,RxxV) + sumi); fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_vrcrotate_acc */
},
int64_t HELPER(S4_vrcrotate_acc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int i; int tmpr; int tmpi; unsigned int control;) fHIDE(int sumr; int sumi;) sumr = 0; sumi = 0; control = fGETUBYTE(uiV,RtV); for (i = 0; i < 8; i += 2) { tmpr = fGETBYTE(i ,RssV); tmpi = fGETBYTE(i+1,RssV); switch (control & 3) { case 0: sumr += tmpr; sumi += tmpi; break; case 1: sumr += tmpi; sumi -= tmpr; break; case 2: sumr -= tmpi; sumi += tmpr; break; case 3: sumr -= tmpr; sumi -= tmpi; break; fHIDE(default: fatal("C is broken!");) } control = control >> 2; } fSETWORD(0,RxxV,fGETWORD(0,RxxV) + sumr); fSETWORD(1,RxxV,fGETWORD(1,RxxV) + sumi); fACC();}
COUNT_HELPER(S4_vrcrotate_acc);
return RxxV;
})
DEF_QEMU(S4_vrcrotate,{ fHIDE(int i; int tmpr; int tmpi; unsigned int control;) fHIDE(int sumr; int sumi;) sumr = 0; sumi = 0; control = fGETUBYTE(uiV,RtV); for (i = 0; i < 8; i += 2) { tmpr = fGETBYTE(i ,RssV); tmpi = fGETBYTE(i+1,RssV); switch (control & 3) { case 0: sumr += tmpr; sumi += tmpi; break; case 1: sumr += tmpi; sumi -= tmpr; break; case 2: sumr -= tmpi; sumi += tmpr; break; case 3: sumr -= tmpr; sumi -= tmpi; break; fHIDE(default: fatal("C is broken!");) } control = control >> 2; } fSETWORD(0,RddV,sumr); fSETWORD(1,RddV,sumi); },
DEF_HELPER_4(S4_vrcrotate, s64, env, s64, s32, s32),
{
/* S4_vrcrotate */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_vrcrotate(gen_helper_S4_vrcrotate(RddV, cpu_env, RssV, RtV, uiV);,
{ fHIDE(int i; int tmpr; int tmpi; unsigned int control;) fHIDE(int sumr; int sumi;) sumr = 0; sumi = 0; control = fGETUBYTE(uiV,RtV); for (i = 0; i < 8; i += 2) { tmpr = fGETBYTE(i ,RssV); tmpi = fGETBYTE(i+1,RssV); switch (control & 3) { case 0: sumr += tmpr; sumi += tmpi; break; case 1: sumr += tmpi; sumi -= tmpr; break; case 2: sumr -= tmpi; sumi += tmpr; break; case 3: sumr -= tmpr; sumi -= tmpi; break; fHIDE(default: fatal("C is broken!");) } control = control >> 2; } fSETWORD(0,RddV,sumr); fSETWORD(1,RddV,sumi); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* S4_vrcrotate */
},
int64_t HELPER(S4_vrcrotate)(CPUHexagonState *env, int64_t RssV, int32_t RtV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i; int tmpr; int tmpi; unsigned int control;) fHIDE(int sumr; int sumi;) sumr = 0; sumi = 0; control = fGETUBYTE(uiV,RtV); for (i = 0; i < 8; i += 2) { tmpr = fGETBYTE(i ,RssV); tmpi = fGETBYTE(i+1,RssV); switch (control & 3) { case 0: sumr += tmpr; sumi += tmpi; break; case 1: sumr += tmpi; sumi -= tmpr; break; case 2: sumr -= tmpi; sumi += tmpr; break; case 3: sumr -= tmpr; sumi -= tmpi; break; fHIDE(default: fatal("C is broken!");) } control = control >> 2; } fSETWORD(0,RddV,sumr); fSETWORD(1,RddV,sumi); }
COUNT_HELPER(S4_vrcrotate);
return RddV;
})
DEF_QEMU(S2_vcnegh,{ fHIDE(int i;) for (i = 0; i < 4; i++) { if (fGETBIT(i,RtV)) { fSETHALF(i,RddV,fSATH(-fGETHALF(i,RssV))); } else { fSETHALF(i,RddV,fGETHALF(i,RssV)); } } },
DEF_HELPER_3(S2_vcnegh, s64, env, s64, s32),
{
/* S2_vcnegh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_vcnegh(gen_helper_S2_vcnegh(RddV, cpu_env, RssV, RtV);,
{ fHIDE(int i;) for (i = 0; i < 4; i++) { if (fGETBIT(i,RtV)) { fSETHALF(i,RddV,fSATH(-fGETHALF(i,RssV))); } else { fSETHALF(i,RddV,fGETHALF(i,RssV)); } } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_vcnegh */
},
int64_t HELPER(S2_vcnegh)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 4; i++) { if (fGETBIT(i,RtV)) { fSETHALF(i,RddV,fSATH(-fGETHALF(i,RssV))); } else { fSETHALF(i,RddV,fGETHALF(i,RssV)); } } }
COUNT_HELPER(S2_vcnegh);
return RddV;
})
DEF_QEMU(S2_vrcnegh,{ fHIDE(int i;) for (i = 0; i < 4; i++) { if (fGETBIT(i,RtV)) { RxxV += -fGETHALF(i,RssV); } else { RxxV += fGETHALF(i,RssV); } } fACC(); },
DEF_HELPER_4(S2_vrcnegh, s64, env, s64, s64, s32),
{
/* S2_vrcnegh */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_vrcnegh(gen_helper_S2_vrcnegh(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(int i;) for (i = 0; i < 4; i++) { if (fGETBIT(i,RtV)) { RxxV += -fGETHALF(i,RssV); } else { RxxV += fGETHALF(i,RssV); } } fACC(); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_vrcnegh */
},
int64_t HELPER(S2_vrcnegh)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int i;) for (i = 0; i < 4; i++) { if (fGETBIT(i,RtV)) { RxxV += -fGETHALF(i,RssV); } else { RxxV += fGETHALF(i,RssV); } } fACC(); }
COUNT_HELPER(S2_vrcnegh);
return RxxV;
})
DEF_QEMU(M4_pmpyw,{ fHIDE(int i; unsigned int y;) fHIDE(unsigned long long x; unsigned long long prod;) x = fGETUWORD(0, RsV); y = fGETUWORD(0, RtV); prod = 0; for(i=0; i < 32; i++) { if((y >> i) & 1) prod ^= (x << i); } RddV = prod; },
DEF_HELPER_3(M4_pmpyw, s64, env, s32, s32),
{
/* M4_pmpyw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_pmpyw(gen_helper_M4_pmpyw(RddV, cpu_env, RsV, RtV);,
{ fHIDE(int i; unsigned int y;) fHIDE(unsigned long long x; unsigned long long prod;) x = fGETUWORD(0, RsV); y = fGETUWORD(0, RtV); prod = 0; for(i=0; i < 32; i++) { if((y >> i) & 1) prod ^= (x << i); } RddV = prod; })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M4_pmpyw */
},
int64_t HELPER(M4_pmpyw)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i; unsigned int y;) fHIDE(unsigned long long x; unsigned long long prod;) x = fGETUWORD(0, RsV); y = fGETUWORD(0, RtV); prod = 0; for(i=0; i < 32; i++) { if((y >> i) & 1) prod ^= (x << i); } RddV = prod; }
COUNT_HELPER(M4_pmpyw);
return RddV;
})
DEF_QEMU(M4_vpmpyh,{ fHIDE(int i; unsigned int x0; unsigned int x1;) fHIDE(unsigned int y0; unsigned int y1;) fHIDE(unsigned int prod0; unsigned int prod1;) x0 = fGETUHALF(0, RsV); x1 = fGETUHALF(1, RsV); y0 = fGETUHALF(0, RtV); y1 = fGETUHALF(1, RtV); prod0 = prod1 = 0; for(i=0; i < 16; i++) { if((y0 >> i) & 1) prod0 ^= (x0 << i); if((y1 >> i) & 1) prod1 ^= (x1 << i); } fSETHALF(0,RddV,fGETUHALF(0,prod0)); fSETHALF(1,RddV,fGETUHALF(0,prod1)); fSETHALF(2,RddV,fGETUHALF(1,prod0)); fSETHALF(3,RddV,fGETUHALF(1,prod1)); },
DEF_HELPER_3(M4_vpmpyh, s64, env, s32, s32),
{
/* M4_vpmpyh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_vpmpyh(gen_helper_M4_vpmpyh(RddV, cpu_env, RsV, RtV);,
{ fHIDE(int i; unsigned int x0; unsigned int x1;) fHIDE(unsigned int y0; unsigned int y1;) fHIDE(unsigned int prod0; unsigned int prod1;) x0 = fGETUHALF(0, RsV); x1 = fGETUHALF(1, RsV); y0 = fGETUHALF(0, RtV); y1 = fGETUHALF(1, RtV); prod0 = prod1 = 0; for(i=0; i < 16; i++) { if((y0 >> i) & 1) prod0 ^= (x0 << i); if((y1 >> i) & 1) prod1 ^= (x1 << i); } fSETHALF(0,RddV,fGETUHALF(0,prod0)); fSETHALF(1,RddV,fGETUHALF(0,prod1)); fSETHALF(2,RddV,fGETUHALF(1,prod0)); fSETHALF(3,RddV,fGETUHALF(1,prod1)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M4_vpmpyh */
},
int64_t HELPER(M4_vpmpyh)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i; unsigned int x0; unsigned int x1;) fHIDE(unsigned int y0; unsigned int y1;) fHIDE(unsigned int prod0; unsigned int prod1;) x0 = fGETUHALF(0, RsV); x1 = fGETUHALF(1, RsV); y0 = fGETUHALF(0, RtV); y1 = fGETUHALF(1, RtV); prod0 = prod1 = 0; for(i=0; i < 16; i++) { if((y0 >> i) & 1) prod0 ^= (x0 << i); if((y1 >> i) & 1) prod1 ^= (x1 << i); } fSETHALF(0,RddV,fGETUHALF(0,prod0)); fSETHALF(1,RddV,fGETUHALF(0,prod1)); fSETHALF(2,RddV,fGETUHALF(1,prod0)); fSETHALF(3,RddV,fGETUHALF(1,prod1)); }
COUNT_HELPER(M4_vpmpyh);
return RddV;
})
DEF_QEMU(M4_pmpyw_acc,{ fHIDE(int i; unsigned int y;) fHIDE(unsigned long long x; unsigned long long prod;) x = fGETUWORD(0, RsV); y = fGETUWORD(0, RtV); prod = 0; for(i=0; i < 32; i++) { if((y >> i) & 1) prod ^= (x << i); } RxxV ^= prod; },
DEF_HELPER_4(M4_pmpyw_acc, s64, env, s64, s32, s32),
{
/* M4_pmpyw_acc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_pmpyw_acc(gen_helper_M4_pmpyw_acc(RxxV, cpu_env, RxxV, RsV, RtV);,
{ fHIDE(int i; unsigned int y;) fHIDE(unsigned long long x; unsigned long long prod;) x = fGETUWORD(0, RsV); y = fGETUWORD(0, RtV); prod = 0; for(i=0; i < 32; i++) { if((y >> i) & 1) prod ^= (x << i); } RxxV ^= prod; })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M4_pmpyw_acc */
},
int64_t HELPER(M4_pmpyw_acc)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int i; unsigned int y;) fHIDE(unsigned long long x; unsigned long long prod;) x = fGETUWORD(0, RsV); y = fGETUWORD(0, RtV); prod = 0; for(i=0; i < 32; i++) { if((y >> i) & 1) prod ^= (x << i); } RxxV ^= prod; }
COUNT_HELPER(M4_pmpyw_acc);
return RxxV;
})
DEF_QEMU(M4_vpmpyh_acc,{ fHIDE(int i; unsigned int x0; unsigned int x1;) fHIDE(unsigned int y0; unsigned int y1;) fHIDE(unsigned int prod0; unsigned int prod1;) x0 = fGETUHALF(0, RsV); x1 = fGETUHALF(1, RsV); y0 = fGETUHALF(0, RtV); y1 = fGETUHALF(1, RtV); prod0 = prod1 = 0; for(i=0; i < 16; i++) { if((y0 >> i) & 1) prod0 ^= (x0 << i); if((y1 >> i) & 1) prod1 ^= (x1 << i); } fSETHALF(0,RxxV,fGETUHALF(0,RxxV) ^ fGETUHALF(0,prod0)); fSETHALF(1,RxxV,fGETUHALF(1,RxxV) ^ fGETUHALF(0,prod1)); fSETHALF(2,RxxV,fGETUHALF(2,RxxV) ^ fGETUHALF(1,prod0)); fSETHALF(3,RxxV,fGETUHALF(3,RxxV) ^ fGETUHALF(1,prod1)); },
DEF_HELPER_4(M4_vpmpyh_acc, s64, env, s64, s32, s32),
{
/* M4_vpmpyh_acc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_vpmpyh_acc(gen_helper_M4_vpmpyh_acc(RxxV, cpu_env, RxxV, RsV, RtV);,
{ fHIDE(int i; unsigned int x0; unsigned int x1;) fHIDE(unsigned int y0; unsigned int y1;) fHIDE(unsigned int prod0; unsigned int prod1;) x0 = fGETUHALF(0, RsV); x1 = fGETUHALF(1, RsV); y0 = fGETUHALF(0, RtV); y1 = fGETUHALF(1, RtV); prod0 = prod1 = 0; for(i=0; i < 16; i++) { if((y0 >> i) & 1) prod0 ^= (x0 << i); if((y1 >> i) & 1) prod1 ^= (x1 << i); } fSETHALF(0,RxxV,fGETUHALF(0,RxxV) ^ fGETUHALF(0,prod0)); fSETHALF(1,RxxV,fGETUHALF(1,RxxV) ^ fGETUHALF(0,prod1)); fSETHALF(2,RxxV,fGETUHALF(2,RxxV) ^ fGETUHALF(1,prod0)); fSETHALF(3,RxxV,fGETUHALF(3,RxxV) ^ fGETUHALF(1,prod1)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M4_vpmpyh_acc */
},
int64_t HELPER(M4_vpmpyh_acc)(CPUHexagonState *env, int64_t RxxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int i; unsigned int x0; unsigned int x1;) fHIDE(unsigned int y0; unsigned int y1;) fHIDE(unsigned int prod0; unsigned int prod1;) x0 = fGETUHALF(0, RsV); x1 = fGETUHALF(1, RsV); y0 = fGETUHALF(0, RtV); y1 = fGETUHALF(1, RtV); prod0 = prod1 = 0; for(i=0; i < 16; i++) { if((y0 >> i) & 1) prod0 ^= (x0 << i); if((y1 >> i) & 1) prod1 ^= (x1 << i); } fSETHALF(0,RxxV,fGETUHALF(0,RxxV) ^ fGETUHALF(0,prod0)); fSETHALF(1,RxxV,fGETUHALF(1,RxxV) ^ fGETUHALF(0,prod1)); fSETHALF(2,RxxV,fGETUHALF(2,RxxV) ^ fGETUHALF(1,prod0)); fSETHALF(3,RxxV,fGETUHALF(3,RxxV) ^ fGETUHALF(1,prod1)); }
COUNT_HELPER(M4_vpmpyh_acc);
return RxxV;
})
DEF_QEMU(M7_dcmpyrw,{ RddV = (fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)) - fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO();},
DEF_HELPER_3(M7_dcmpyrw, s64, env, s64, s64),
{
/* M7_dcmpyrw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M7_dcmpyrw(gen_helper_M7_dcmpyrw(RddV, cpu_env, RssV, RttV);,
{ RddV = (fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)) - fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO();})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M7_dcmpyrw */
},
int64_t HELPER(M7_dcmpyrw)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = (fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)) - fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO();}
COUNT_HELPER(M7_dcmpyrw);
return RddV;
})
DEF_QEMU(M7_dcmpyrw_acc,{ RxxV += (fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)) - fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO(); fACC(); },
DEF_HELPER_4(M7_dcmpyrw_acc, s64, env, s64, s64, s64),
{
/* M7_dcmpyrw_acc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M7_dcmpyrw_acc(gen_helper_M7_dcmpyrw_acc(RxxV, cpu_env, RxxV, RssV, RttV);,
{ RxxV += (fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)) - fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO(); fACC(); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M7_dcmpyrw_acc */
},
int64_t HELPER(M7_dcmpyrw_acc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ RxxV += (fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)) - fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO(); fACC(); }
COUNT_HELPER(M7_dcmpyrw_acc);
return RxxV;
})
DEF_QEMU(M7_dcmpyrwc,{ RddV = (fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)) + fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO();},
DEF_HELPER_3(M7_dcmpyrwc, s64, env, s64, s64),
{
/* M7_dcmpyrwc */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M7_dcmpyrwc(gen_helper_M7_dcmpyrwc(RddV, cpu_env, RssV, RttV);,
{ RddV = (fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)) + fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO();})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M7_dcmpyrwc */
},
int64_t HELPER(M7_dcmpyrwc)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = (fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)) + fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO();}
COUNT_HELPER(M7_dcmpyrwc);
return RddV;
})
DEF_QEMU(M7_dcmpyrwc_acc,{ RxxV += (fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)) + fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO(); fACC(); },
DEF_HELPER_4(M7_dcmpyrwc_acc, s64, env, s64, s64, s64),
{
/* M7_dcmpyrwc_acc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M7_dcmpyrwc_acc(gen_helper_M7_dcmpyrwc_acc(RxxV, cpu_env, RxxV, RssV, RttV);,
{ RxxV += (fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)) + fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO(); fACC(); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M7_dcmpyrwc_acc */
},
int64_t HELPER(M7_dcmpyrwc_acc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ RxxV += (fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)) + fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO(); fACC(); }
COUNT_HELPER(M7_dcmpyrwc_acc);
return RxxV;
})
DEF_QEMU(M7_dcmpyiw,{ RddV = (fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)) + fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV))); fEXTENSION_AUDIO();},
DEF_HELPER_3(M7_dcmpyiw, s64, env, s64, s64),
{
/* M7_dcmpyiw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M7_dcmpyiw(gen_helper_M7_dcmpyiw(RddV, cpu_env, RssV, RttV);,
{ RddV = (fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)) + fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV))); fEXTENSION_AUDIO();})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M7_dcmpyiw */
},
int64_t HELPER(M7_dcmpyiw)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = (fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)) + fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV))); fEXTENSION_AUDIO();}
COUNT_HELPER(M7_dcmpyiw);
return RddV;
})
DEF_QEMU(M7_dcmpyiw_acc,{ RxxV += (fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)) + fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV))); fEXTENSION_AUDIO(); fACC(); },
DEF_HELPER_4(M7_dcmpyiw_acc, s64, env, s64, s64, s64),
{
/* M7_dcmpyiw_acc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M7_dcmpyiw_acc(gen_helper_M7_dcmpyiw_acc(RxxV, cpu_env, RxxV, RssV, RttV);,
{ RxxV += (fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)) + fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV))); fEXTENSION_AUDIO(); fACC(); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M7_dcmpyiw_acc */
},
int64_t HELPER(M7_dcmpyiw_acc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ RxxV += (fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)) + fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV))); fEXTENSION_AUDIO(); fACC(); }
COUNT_HELPER(M7_dcmpyiw_acc);
return RxxV;
})
DEF_QEMU(M7_dcmpyiwc,{ RddV = (fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)) - fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO();},
DEF_HELPER_3(M7_dcmpyiwc, s64, env, s64, s64),
{
/* M7_dcmpyiwc */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M7_dcmpyiwc(gen_helper_M7_dcmpyiwc(RddV, cpu_env, RssV, RttV);,
{ RddV = (fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)) - fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO();})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M7_dcmpyiwc */
},
int64_t HELPER(M7_dcmpyiwc)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = (fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)) - fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO();}
COUNT_HELPER(M7_dcmpyiwc);
return RddV;
})
DEF_QEMU(M7_dcmpyiwc_acc,{ RxxV += (fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)) - fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO(); fACC(); },
DEF_HELPER_4(M7_dcmpyiwc_acc, s64, env, s64, s64, s64),
{
/* M7_dcmpyiwc_acc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M7_dcmpyiwc_acc(gen_helper_M7_dcmpyiwc_acc(RxxV, cpu_env, RxxV, RssV, RttV);,
{ RxxV += (fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)) - fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO(); fACC(); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M7_dcmpyiwc_acc */
},
int64_t HELPER(M7_dcmpyiwc_acc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ RxxV += (fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)) - fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV))); fEXTENSION_AUDIO(); fACC(); }
COUNT_HELPER(M7_dcmpyiwc_acc);
return RxxV;
})
DEF_QEMU(M7_wcmpyrw,{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV)));acc128 = fSUB128(tmp128,acc128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();},
DEF_HELPER_3(M7_wcmpyrw, s32, env, s64, s64),
{
/* M7_wcmpyrw */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M7_wcmpyrw(gen_helper_M7_wcmpyrw(RdV, cpu_env, RssV, RttV);,
{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV)));acc128 = fSUB128(tmp128,acc128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M7_wcmpyrw */
},
int32_t HELPER(M7_wcmpyrw)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV)));acc128 = fSUB128(tmp128,acc128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();}
COUNT_HELPER(M7_wcmpyrw);
return RdV;
})
DEF_QEMU(M7_wcmpyrwc,{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV)));acc128 = fADD128(tmp128,acc128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();},
DEF_HELPER_3(M7_wcmpyrwc, s32, env, s64, s64),
{
/* M7_wcmpyrwc */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M7_wcmpyrwc(gen_helper_M7_wcmpyrwc(RdV, cpu_env, RssV, RttV);,
{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV)));acc128 = fADD128(tmp128,acc128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M7_wcmpyrwc */
},
int32_t HELPER(M7_wcmpyrwc)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV)));acc128 = fADD128(tmp128,acc128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();}
COUNT_HELPER(M7_wcmpyrwc);
return RdV;
})
DEF_QEMU(M7_wcmpyiw,{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)));acc128 = fADD128(tmp128,acc128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();},
DEF_HELPER_3(M7_wcmpyiw, s32, env, s64, s64),
{
/* M7_wcmpyiw */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M7_wcmpyiw(gen_helper_M7_wcmpyiw(RdV, cpu_env, RssV, RttV);,
{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)));acc128 = fADD128(tmp128,acc128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M7_wcmpyiw */
},
int32_t HELPER(M7_wcmpyiw)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)));acc128 = fADD128(tmp128,acc128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();}
COUNT_HELPER(M7_wcmpyiw);
return RdV;
})
DEF_QEMU(M7_wcmpyiwc,{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)));acc128 = fSUB128(tmp128,acc128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();},
DEF_HELPER_3(M7_wcmpyiwc, s32, env, s64, s64),
{
/* M7_wcmpyiwc */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M7_wcmpyiwc(gen_helper_M7_wcmpyiwc(RdV, cpu_env, RssV, RttV);,
{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)));acc128 = fSUB128(tmp128,acc128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M7_wcmpyiwc */
},
int32_t HELPER(M7_wcmpyiwc)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)));acc128 = fSUB128(tmp128,acc128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();}
COUNT_HELPER(M7_wcmpyiwc);
return RdV;
})
DEF_QEMU(M7_wcmpyrw_rnd,{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size16s_t const128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV)));const128 = fCAST8S_16S(fCONSTLL(0x40000000));acc128 = fSUB128(tmp128,acc128);acc128 = fADD128(acc128,const128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();},
DEF_HELPER_3(M7_wcmpyrw_rnd, s32, env, s64, s64),
{
/* M7_wcmpyrw_rnd */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M7_wcmpyrw_rnd(gen_helper_M7_wcmpyrw_rnd(RdV, cpu_env, RssV, RttV);,
{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size16s_t const128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV)));const128 = fCAST8S_16S(fCONSTLL(0x40000000));acc128 = fSUB128(tmp128,acc128);acc128 = fADD128(acc128,const128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M7_wcmpyrw_rnd */
},
int32_t HELPER(M7_wcmpyrw_rnd)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size16s_t const128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV)));const128 = fCAST8S_16S(fCONSTLL(0x40000000));acc128 = fSUB128(tmp128,acc128);acc128 = fADD128(acc128,const128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();}
COUNT_HELPER(M7_wcmpyrw_rnd);
return RdV;
})
DEF_QEMU(M7_wcmpyrwc_rnd,{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size16s_t const128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV)));const128 = fCAST8S_16S(fCONSTLL(0x40000000));acc128 = fADD128(tmp128,acc128);acc128 = fADD128(acc128,const128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();},
DEF_HELPER_3(M7_wcmpyrwc_rnd, s32, env, s64, s64),
{
/* M7_wcmpyrwc_rnd */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M7_wcmpyrwc_rnd(gen_helper_M7_wcmpyrwc_rnd(RdV, cpu_env, RssV, RttV);,
{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size16s_t const128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV)));const128 = fCAST8S_16S(fCONSTLL(0x40000000));acc128 = fADD128(tmp128,acc128);acc128 = fADD128(acc128,const128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M7_wcmpyrwc_rnd */
},
int32_t HELPER(M7_wcmpyrwc_rnd)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size16s_t const128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(1, RttV)));const128 = fCAST8S_16S(fCONSTLL(0x40000000));acc128 = fADD128(tmp128,acc128);acc128 = fADD128(acc128,const128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();}
COUNT_HELPER(M7_wcmpyrwc_rnd);
return RdV;
})
DEF_QEMU(M7_wcmpyiw_rnd,{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size16s_t const128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)));const128 = fCAST8S_16S(fCONSTLL(0x40000000));acc128 = fADD128(tmp128,acc128);acc128 = fADD128(acc128,const128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();},
DEF_HELPER_3(M7_wcmpyiw_rnd, s32, env, s64, s64),
{
/* M7_wcmpyiw_rnd */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M7_wcmpyiw_rnd(gen_helper_M7_wcmpyiw_rnd(RdV, cpu_env, RssV, RttV);,
{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size16s_t const128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)));const128 = fCAST8S_16S(fCONSTLL(0x40000000));acc128 = fADD128(tmp128,acc128);acc128 = fADD128(acc128,const128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M7_wcmpyiw_rnd */
},
int32_t HELPER(M7_wcmpyiw_rnd)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size16s_t const128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)));const128 = fCAST8S_16S(fCONSTLL(0x40000000));acc128 = fADD128(tmp128,acc128);acc128 = fADD128(acc128,const128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();}
COUNT_HELPER(M7_wcmpyiw_rnd);
return RdV;
})
DEF_QEMU(M7_wcmpyiwc_rnd,{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size16s_t const128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)));const128 = fCAST8S_16S(fCONSTLL(0x40000000));acc128 = fSUB128(tmp128,acc128);acc128 = fADD128(acc128,const128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();},
DEF_HELPER_3(M7_wcmpyiwc_rnd, s32, env, s64, s64),
{
/* M7_wcmpyiwc_rnd */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M7_wcmpyiwc_rnd(gen_helper_M7_wcmpyiwc_rnd(RdV, cpu_env, RssV, RttV);,
{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size16s_t const128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)));const128 = fCAST8S_16S(fCONSTLL(0x40000000));acc128 = fSUB128(tmp128,acc128);acc128 = fADD128(acc128,const128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M7_wcmpyiwc_rnd */
},
int32_t HELPER(M7_wcmpyiwc_rnd)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(size16s_t acc128;)fHIDE(size16s_t tmp128;)fHIDE(size16s_t const128;)fHIDE(size8s_t acc64;)tmp128 = fCAST8S_16S(fMPY32SS(fGETWORD(1, RssV), fGETWORD(0, RttV)));acc128 = fCAST8S_16S(fMPY32SS(fGETWORD(0, RssV), fGETWORD(1, RttV)));const128 = fCAST8S_16S(fCONSTLL(0x40000000));acc128 = fSUB128(tmp128,acc128);acc128 = fADD128(acc128,const128);acc128 = fSHIFTR128(acc128, 31);acc64 = fCAST16S_8S(acc128);RdV = fSATW(acc64);fEXTENSION_AUDIO();}
COUNT_HELPER(M7_wcmpyiwc_rnd);
return RdV;
})
DEF_QEMU(A2_add,{ RdV=RsV+RtV;},
DEF_HELPER_3(A2_add, s32, env, s32, s32),
{
/* A2_add */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_add(gen_helper_A2_add(RdV, cpu_env, RsV, RtV);,
{ RdV=RsV+RtV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_add */
},
int32_t HELPER(A2_add)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=RsV+RtV;}
COUNT_HELPER(A2_add);
return RdV;
})
DEF_QEMU(A2_sub,{ RdV=RtV-RsV;},
DEF_HELPER_3(A2_sub, s32, env, s32, s32),
{
/* A2_sub */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_sub(gen_helper_A2_sub(RdV, cpu_env, RtV, RsV);,
{ RdV=RtV-RsV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_sub */
},
int32_t HELPER(A2_sub)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=RtV-RsV;}
COUNT_HELPER(A2_sub);
return RdV;
})
DEF_QEMU(A2_paddt,{if(fLSBOLD(PuV)){RdV=RsV+RtV;} else {CANCEL;}},
DEF_HELPER_5(A2_paddt, s32, env, s32, s32, s32, i32),
{
/* A2_paddt */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_paddt(SLOT_WRAP(gen_helper_A2_paddt(RdV, cpu_env, PuV, RsV, RtV, slot));,
{if(fLSBOLD(PuV)){RdV=RsV+RtV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_paddt */
},
int32_t HELPER(A2_paddt)(CPUHexagonState *env, int32_t PuV, int32_t RsV, int32_t RtV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLD(PuV)){RdV=RsV+RtV;} else {CANCEL;}}
COUNT_HELPER(A2_paddt);
return RdV;
})
DEF_QEMU(A2_paddf,{if(fLSBOLDNOT(PuV)){RdV=RsV+RtV;} else {CANCEL;}},
DEF_HELPER_5(A2_paddf, s32, env, s32, s32, s32, i32),
{
/* A2_paddf */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_paddf(SLOT_WRAP(gen_helper_A2_paddf(RdV, cpu_env, PuV, RsV, RtV, slot));,
{if(fLSBOLDNOT(PuV)){RdV=RsV+RtV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_paddf */
},
int32_t HELPER(A2_paddf)(CPUHexagonState *env, int32_t PuV, int32_t RsV, int32_t RtV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLDNOT(PuV)){RdV=RsV+RtV;} else {CANCEL;}}
COUNT_HELPER(A2_paddf);
return RdV;
})
DEF_QEMU(A2_paddtnew,{if(fLSBNEW(PuN)){RdV=RsV+RtV;} else {CANCEL;}},
DEF_HELPER_5(A2_paddtnew, s32, env, s32, s32, s32, i32),
{
/* A2_paddtnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_paddtnew(SLOT_WRAP(gen_helper_A2_paddtnew(RdV, cpu_env, PuN, RsV, RtV, slot));,
{if(fLSBNEW(PuN)){RdV=RsV+RtV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_paddtnew */
},
int32_t HELPER(A2_paddtnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, int32_t RtV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEW(PuN)){RdV=RsV+RtV;} else {CANCEL;}}
COUNT_HELPER(A2_paddtnew);
return RdV;
})
DEF_QEMU(A2_paddfnew,{if(fLSBNEWNOT(PuN)){RdV=RsV+RtV;} else {CANCEL;}},
DEF_HELPER_5(A2_paddfnew, s32, env, s32, s32, s32, i32),
{
/* A2_paddfnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_paddfnew(SLOT_WRAP(gen_helper_A2_paddfnew(RdV, cpu_env, PuN, RsV, RtV, slot));,
{if(fLSBNEWNOT(PuN)){RdV=RsV+RtV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_paddfnew */
},
int32_t HELPER(A2_paddfnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, int32_t RtV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEWNOT(PuN)){RdV=RsV+RtV;} else {CANCEL;}}
COUNT_HELPER(A2_paddfnew);
return RdV;
})
DEF_QEMU(A2_psubt,{if(fLSBOLD(PuV)){RdV=RtV-RsV;} else {CANCEL;}},
DEF_HELPER_5(A2_psubt, s32, env, s32, s32, s32, i32),
{
/* A2_psubt */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_RREG_s(TCGv, RsV, RsN, 3, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_psubt(SLOT_WRAP(gen_helper_A2_psubt(RdV, cpu_env, PuV, RtV, RsV, slot));,
{if(fLSBOLD(PuV)){RdV=RtV-RsV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_psubt */
},
int32_t HELPER(A2_psubt)(CPUHexagonState *env, int32_t PuV, int32_t RtV, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLD(PuV)){RdV=RtV-RsV;} else {CANCEL;}}
COUNT_HELPER(A2_psubt);
return RdV;
})
DEF_QEMU(A2_psubf,{if(fLSBOLDNOT(PuV)){RdV=RtV-RsV;} else {CANCEL;}},
DEF_HELPER_5(A2_psubf, s32, env, s32, s32, s32, i32),
{
/* A2_psubf */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_RREG_s(TCGv, RsV, RsN, 3, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_psubf(SLOT_WRAP(gen_helper_A2_psubf(RdV, cpu_env, PuV, RtV, RsV, slot));,
{if(fLSBOLDNOT(PuV)){RdV=RtV-RsV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_psubf */
},
int32_t HELPER(A2_psubf)(CPUHexagonState *env, int32_t PuV, int32_t RtV, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLDNOT(PuV)){RdV=RtV-RsV;} else {CANCEL;}}
COUNT_HELPER(A2_psubf);
return RdV;
})
DEF_QEMU(A2_psubtnew,{if(fLSBNEW(PuN)){RdV=RtV-RsV;} else {CANCEL;}},
DEF_HELPER_5(A2_psubtnew, s32, env, s32, s32, s32, i32),
{
/* A2_psubtnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_RREG_s(TCGv, RsV, RsN, 3, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_psubtnew(SLOT_WRAP(gen_helper_A2_psubtnew(RdV, cpu_env, PuN, RtV, RsV, slot));,
{if(fLSBNEW(PuN)){RdV=RtV-RsV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_psubtnew */
},
int32_t HELPER(A2_psubtnew)(CPUHexagonState *env, int32_t PuN, int32_t RtV, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEW(PuN)){RdV=RtV-RsV;} else {CANCEL;}}
COUNT_HELPER(A2_psubtnew);
return RdV;
})
DEF_QEMU(A2_psubfnew,{if(fLSBNEWNOT(PuN)){RdV=RtV-RsV;} else {CANCEL;}},
DEF_HELPER_5(A2_psubfnew, s32, env, s32, s32, s32, i32),
{
/* A2_psubfnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_RREG_s(TCGv, RsV, RsN, 3, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_psubfnew(SLOT_WRAP(gen_helper_A2_psubfnew(RdV, cpu_env, PuN, RtV, RsV, slot));,
{if(fLSBNEWNOT(PuN)){RdV=RtV-RsV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_psubfnew */
},
int32_t HELPER(A2_psubfnew)(CPUHexagonState *env, int32_t PuN, int32_t RtV, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEWNOT(PuN)){RdV=RtV-RsV;} else {CANCEL;}}
COUNT_HELPER(A2_psubfnew);
return RdV;
})
DEF_QEMU(A2_paddit,{if(fLSBOLD(PuV)){fIMMEXT(siV); RdV=RsV+siV;} else {CANCEL;}},
DEF_HELPER_5(A2_paddit, s32, env, s32, s32, s32, i32),
{
/* A2_paddit */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_paddit(SLOT_WRAP(gen_helper_A2_paddit(RdV, cpu_env, PuV, RsV, siV, slot));,
{if(fLSBOLD(PuV)){fIMMEXT(siV); RdV=RsV+siV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* A2_paddit */
},
int32_t HELPER(A2_paddit)(CPUHexagonState *env, int32_t PuV, int32_t RsV, int32_t siV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLD(PuV)){fIMMEXT(siV); RdV=RsV+siV;} else {CANCEL;}}
COUNT_HELPER(A2_paddit);
return RdV;
})
DEF_QEMU(A2_paddif,{if(fLSBOLDNOT(PuV)){fIMMEXT(siV); RdV=RsV+siV;} else {CANCEL;}},
DEF_HELPER_5(A2_paddif, s32, env, s32, s32, s32, i32),
{
/* A2_paddif */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_paddif(SLOT_WRAP(gen_helper_A2_paddif(RdV, cpu_env, PuV, RsV, siV, slot));,
{if(fLSBOLDNOT(PuV)){fIMMEXT(siV); RdV=RsV+siV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* A2_paddif */
},
int32_t HELPER(A2_paddif)(CPUHexagonState *env, int32_t PuV, int32_t RsV, int32_t siV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLDNOT(PuV)){fIMMEXT(siV); RdV=RsV+siV;} else {CANCEL;}}
COUNT_HELPER(A2_paddif);
return RdV;
})
DEF_QEMU(A2_padditnew,{if(fLSBNEW(PuN)){fIMMEXT(siV); RdV=RsV+siV;} else {CANCEL;}},
DEF_HELPER_5(A2_padditnew, s32, env, s32, s32, s32, i32),
{
/* A2_padditnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_A2_padditnew(SLOT_WRAP(gen_helper_A2_padditnew(RdV, cpu_env, PuN, RsV, siV, slot));,
{if(fLSBNEW(PuN)){fIMMEXT(siV); RdV=RsV+siV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* A2_padditnew */
},
int32_t HELPER(A2_padditnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, int32_t siV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEW(PuN)){fIMMEXT(siV); RdV=RsV+siV;} else {CANCEL;}}
COUNT_HELPER(A2_padditnew);
return RdV;
})
DEF_QEMU(A2_paddifnew,{if(fLSBNEWNOT(PuN)){fIMMEXT(siV); RdV=RsV+siV;} else {CANCEL;}},
DEF_HELPER_5(A2_paddifnew, s32, env, s32, s32, s32, i32),
{
/* A2_paddifnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(siV,0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_A2_paddifnew(SLOT_WRAP(gen_helper_A2_paddifnew(RdV, cpu_env, PuN, RsV, siV, slot));,
{if(fLSBNEWNOT(PuN)){fIMMEXT(siV); RdV=RsV+siV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* A2_paddifnew */
},
int32_t HELPER(A2_paddifnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, int32_t siV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEWNOT(PuN)){fIMMEXT(siV); RdV=RsV+siV;} else {CANCEL;}}
COUNT_HELPER(A2_paddifnew);
return RdV;
})
DEF_QEMU(A2_pxort,{if(fLSBOLD(PuV)){RdV=RsV^RtV;} else {CANCEL;}},
DEF_HELPER_5(A2_pxort, s32, env, s32, s32, s32, i32),
{
/* A2_pxort */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_pxort(SLOT_WRAP(gen_helper_A2_pxort(RdV, cpu_env, PuV, RsV, RtV, slot));,
{if(fLSBOLD(PuV)){RdV=RsV^RtV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_pxort */
},
int32_t HELPER(A2_pxort)(CPUHexagonState *env, int32_t PuV, int32_t RsV, int32_t RtV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLD(PuV)){RdV=RsV^RtV;} else {CANCEL;}}
COUNT_HELPER(A2_pxort);
return RdV;
})
DEF_QEMU(A2_pxorf,{if(fLSBOLDNOT(PuV)){RdV=RsV^RtV;} else {CANCEL;}},
DEF_HELPER_5(A2_pxorf, s32, env, s32, s32, s32, i32),
{
/* A2_pxorf */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_pxorf(SLOT_WRAP(gen_helper_A2_pxorf(RdV, cpu_env, PuV, RsV, RtV, slot));,
{if(fLSBOLDNOT(PuV)){RdV=RsV^RtV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_pxorf */
},
int32_t HELPER(A2_pxorf)(CPUHexagonState *env, int32_t PuV, int32_t RsV, int32_t RtV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLDNOT(PuV)){RdV=RsV^RtV;} else {CANCEL;}}
COUNT_HELPER(A2_pxorf);
return RdV;
})
DEF_QEMU(A2_pxortnew,{if(fLSBNEW(PuN)){RdV=RsV^RtV;} else {CANCEL;}},
DEF_HELPER_5(A2_pxortnew, s32, env, s32, s32, s32, i32),
{
/* A2_pxortnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_pxortnew(SLOT_WRAP(gen_helper_A2_pxortnew(RdV, cpu_env, PuN, RsV, RtV, slot));,
{if(fLSBNEW(PuN)){RdV=RsV^RtV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_pxortnew */
},
int32_t HELPER(A2_pxortnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, int32_t RtV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEW(PuN)){RdV=RsV^RtV;} else {CANCEL;}}
COUNT_HELPER(A2_pxortnew);
return RdV;
})
DEF_QEMU(A2_pxorfnew,{if(fLSBNEWNOT(PuN)){RdV=RsV^RtV;} else {CANCEL;}},
DEF_HELPER_5(A2_pxorfnew, s32, env, s32, s32, s32, i32),
{
/* A2_pxorfnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_pxorfnew(SLOT_WRAP(gen_helper_A2_pxorfnew(RdV, cpu_env, PuN, RsV, RtV, slot));,
{if(fLSBNEWNOT(PuN)){RdV=RsV^RtV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_pxorfnew */
},
int32_t HELPER(A2_pxorfnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, int32_t RtV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEWNOT(PuN)){RdV=RsV^RtV;} else {CANCEL;}}
COUNT_HELPER(A2_pxorfnew);
return RdV;
})
DEF_QEMU(A2_pandt,{if(fLSBOLD(PuV)){RdV=RsV&RtV;} else {CANCEL;}},
DEF_HELPER_5(A2_pandt, s32, env, s32, s32, s32, i32),
{
/* A2_pandt */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_pandt(SLOT_WRAP(gen_helper_A2_pandt(RdV, cpu_env, PuV, RsV, RtV, slot));,
{if(fLSBOLD(PuV)){RdV=RsV&RtV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_pandt */
},
int32_t HELPER(A2_pandt)(CPUHexagonState *env, int32_t PuV, int32_t RsV, int32_t RtV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLD(PuV)){RdV=RsV&RtV;} else {CANCEL;}}
COUNT_HELPER(A2_pandt);
return RdV;
})
DEF_QEMU(A2_pandf,{if(fLSBOLDNOT(PuV)){RdV=RsV&RtV;} else {CANCEL;}},
DEF_HELPER_5(A2_pandf, s32, env, s32, s32, s32, i32),
{
/* A2_pandf */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_pandf(SLOT_WRAP(gen_helper_A2_pandf(RdV, cpu_env, PuV, RsV, RtV, slot));,
{if(fLSBOLDNOT(PuV)){RdV=RsV&RtV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_pandf */
},
int32_t HELPER(A2_pandf)(CPUHexagonState *env, int32_t PuV, int32_t RsV, int32_t RtV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLDNOT(PuV)){RdV=RsV&RtV;} else {CANCEL;}}
COUNT_HELPER(A2_pandf);
return RdV;
})
DEF_QEMU(A2_pandtnew,{if(fLSBNEW(PuN)){RdV=RsV&RtV;} else {CANCEL;}},
DEF_HELPER_5(A2_pandtnew, s32, env, s32, s32, s32, i32),
{
/* A2_pandtnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_pandtnew(SLOT_WRAP(gen_helper_A2_pandtnew(RdV, cpu_env, PuN, RsV, RtV, slot));,
{if(fLSBNEW(PuN)){RdV=RsV&RtV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_pandtnew */
},
int32_t HELPER(A2_pandtnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, int32_t RtV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEW(PuN)){RdV=RsV&RtV;} else {CANCEL;}}
COUNT_HELPER(A2_pandtnew);
return RdV;
})
DEF_QEMU(A2_pandfnew,{if(fLSBNEWNOT(PuN)){RdV=RsV&RtV;} else {CANCEL;}},
DEF_HELPER_5(A2_pandfnew, s32, env, s32, s32, s32, i32),
{
/* A2_pandfnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_pandfnew(SLOT_WRAP(gen_helper_A2_pandfnew(RdV, cpu_env, PuN, RsV, RtV, slot));,
{if(fLSBNEWNOT(PuN)){RdV=RsV&RtV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_pandfnew */
},
int32_t HELPER(A2_pandfnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, int32_t RtV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEWNOT(PuN)){RdV=RsV&RtV;} else {CANCEL;}}
COUNT_HELPER(A2_pandfnew);
return RdV;
})
DEF_QEMU(A2_port,{if(fLSBOLD(PuV)){RdV=RsV|RtV;} else {CANCEL;}},
DEF_HELPER_5(A2_port, s32, env, s32, s32, s32, i32),
{
/* A2_port */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_port(SLOT_WRAP(gen_helper_A2_port(RdV, cpu_env, PuV, RsV, RtV, slot));,
{if(fLSBOLD(PuV)){RdV=RsV|RtV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_port */
},
int32_t HELPER(A2_port)(CPUHexagonState *env, int32_t PuV, int32_t RsV, int32_t RtV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLD(PuV)){RdV=RsV|RtV;} else {CANCEL;}}
COUNT_HELPER(A2_port);
return RdV;
})
DEF_QEMU(A2_porf,{if(fLSBOLDNOT(PuV)){RdV=RsV|RtV;} else {CANCEL;}},
DEF_HELPER_5(A2_porf, s32, env, s32, s32, s32, i32),
{
/* A2_porf */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_porf(SLOT_WRAP(gen_helper_A2_porf(RdV, cpu_env, PuV, RsV, RtV, slot));,
{if(fLSBOLDNOT(PuV)){RdV=RsV|RtV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_porf */
},
int32_t HELPER(A2_porf)(CPUHexagonState *env, int32_t PuV, int32_t RsV, int32_t RtV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLDNOT(PuV)){RdV=RsV|RtV;} else {CANCEL;}}
COUNT_HELPER(A2_porf);
return RdV;
})
DEF_QEMU(A2_portnew,{if(fLSBNEW(PuN)){RdV=RsV|RtV;} else {CANCEL;}},
DEF_HELPER_5(A2_portnew, s32, env, s32, s32, s32, i32),
{
/* A2_portnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_portnew(SLOT_WRAP(gen_helper_A2_portnew(RdV, cpu_env, PuN, RsV, RtV, slot));,
{if(fLSBNEW(PuN)){RdV=RsV|RtV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_portnew */
},
int32_t HELPER(A2_portnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, int32_t RtV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEW(PuN)){RdV=RsV|RtV;} else {CANCEL;}}
COUNT_HELPER(A2_portnew);
return RdV;
})
DEF_QEMU(A2_porfnew,{if(fLSBNEWNOT(PuN)){RdV=RsV|RtV;} else {CANCEL;}},
DEF_HELPER_5(A2_porfnew, s32, env, s32, s32, s32, i32),
{
/* A2_porfnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_porfnew(SLOT_WRAP(gen_helper_A2_porfnew(RdV, cpu_env, PuN, RsV, RtV, slot));,
{if(fLSBNEWNOT(PuN)){RdV=RsV|RtV;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_porfnew */
},
int32_t HELPER(A2_porfnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, int32_t RtV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEWNOT(PuN)){RdV=RsV|RtV;} else {CANCEL;}}
COUNT_HELPER(A2_porfnew);
return RdV;
})
DEF_QEMU(A4_psxtbt,{if(fLSBOLD(PuV)){RdV=fSXTN(8,32,RsV);} else {CANCEL;}},
DEF_HELPER_4(A4_psxtbt, s32, env, s32, s32, i32),
{
/* A4_psxtbt */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_A4_psxtbt(SLOT_WRAP(gen_helper_A4_psxtbt(RdV, cpu_env, PuV, RsV, slot));,
{if(fLSBOLD(PuV)){RdV=fSXTN(8,32,RsV);} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_psxtbt */
},
int32_t HELPER(A4_psxtbt)(CPUHexagonState *env, int32_t PuV, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLD(PuV)){RdV=fSXTN(8,32,RsV);} else {CANCEL;}}
COUNT_HELPER(A4_psxtbt);
return RdV;
})
DEF_QEMU(A4_psxtbf,{if(fLSBOLDNOT(PuV)){RdV=fSXTN(8,32,RsV);} else {CANCEL;}},
DEF_HELPER_4(A4_psxtbf, s32, env, s32, s32, i32),
{
/* A4_psxtbf */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_A4_psxtbf(SLOT_WRAP(gen_helper_A4_psxtbf(RdV, cpu_env, PuV, RsV, slot));,
{if(fLSBOLDNOT(PuV)){RdV=fSXTN(8,32,RsV);} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_psxtbf */
},
int32_t HELPER(A4_psxtbf)(CPUHexagonState *env, int32_t PuV, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLDNOT(PuV)){RdV=fSXTN(8,32,RsV);} else {CANCEL;}}
COUNT_HELPER(A4_psxtbf);
return RdV;
})
DEF_QEMU(A4_psxtbtnew,{if(fLSBNEW(PuN)){RdV=fSXTN(8,32,RsV);} else {CANCEL;}},
DEF_HELPER_4(A4_psxtbtnew, s32, env, s32, s32, i32),
{
/* A4_psxtbtnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_A4_psxtbtnew(SLOT_WRAP(gen_helper_A4_psxtbtnew(RdV, cpu_env, PuN, RsV, slot));,
{if(fLSBNEW(PuN)){RdV=fSXTN(8,32,RsV);} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_psxtbtnew */
},
int32_t HELPER(A4_psxtbtnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEW(PuN)){RdV=fSXTN(8,32,RsV);} else {CANCEL;}}
COUNT_HELPER(A4_psxtbtnew);
return RdV;
})
DEF_QEMU(A4_psxtbfnew,{if(fLSBNEWNOT(PuN)){RdV=fSXTN(8,32,RsV);} else {CANCEL;}},
DEF_HELPER_4(A4_psxtbfnew, s32, env, s32, s32, i32),
{
/* A4_psxtbfnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_A4_psxtbfnew(SLOT_WRAP(gen_helper_A4_psxtbfnew(RdV, cpu_env, PuN, RsV, slot));,
{if(fLSBNEWNOT(PuN)){RdV=fSXTN(8,32,RsV);} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_psxtbfnew */
},
int32_t HELPER(A4_psxtbfnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEWNOT(PuN)){RdV=fSXTN(8,32,RsV);} else {CANCEL;}}
COUNT_HELPER(A4_psxtbfnew);
return RdV;
})
DEF_QEMU(A4_pzxtbt,{if(fLSBOLD(PuV)){RdV=fZXTN(8,32,RsV);} else {CANCEL;}},
DEF_HELPER_4(A4_pzxtbt, s32, env, s32, s32, i32),
{
/* A4_pzxtbt */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_A4_pzxtbt(SLOT_WRAP(gen_helper_A4_pzxtbt(RdV, cpu_env, PuV, RsV, slot));,
{if(fLSBOLD(PuV)){RdV=fZXTN(8,32,RsV);} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_pzxtbt */
},
int32_t HELPER(A4_pzxtbt)(CPUHexagonState *env, int32_t PuV, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLD(PuV)){RdV=fZXTN(8,32,RsV);} else {CANCEL;}}
COUNT_HELPER(A4_pzxtbt);
return RdV;
})
DEF_QEMU(A4_pzxtbf,{if(fLSBOLDNOT(PuV)){RdV=fZXTN(8,32,RsV);} else {CANCEL;}},
DEF_HELPER_4(A4_pzxtbf, s32, env, s32, s32, i32),
{
/* A4_pzxtbf */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_A4_pzxtbf(SLOT_WRAP(gen_helper_A4_pzxtbf(RdV, cpu_env, PuV, RsV, slot));,
{if(fLSBOLDNOT(PuV)){RdV=fZXTN(8,32,RsV);} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_pzxtbf */
},
int32_t HELPER(A4_pzxtbf)(CPUHexagonState *env, int32_t PuV, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLDNOT(PuV)){RdV=fZXTN(8,32,RsV);} else {CANCEL;}}
COUNT_HELPER(A4_pzxtbf);
return RdV;
})
DEF_QEMU(A4_pzxtbtnew,{if(fLSBNEW(PuN)){RdV=fZXTN(8,32,RsV);} else {CANCEL;}},
DEF_HELPER_4(A4_pzxtbtnew, s32, env, s32, s32, i32),
{
/* A4_pzxtbtnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_A4_pzxtbtnew(SLOT_WRAP(gen_helper_A4_pzxtbtnew(RdV, cpu_env, PuN, RsV, slot));,
{if(fLSBNEW(PuN)){RdV=fZXTN(8,32,RsV);} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_pzxtbtnew */
},
int32_t HELPER(A4_pzxtbtnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEW(PuN)){RdV=fZXTN(8,32,RsV);} else {CANCEL;}}
COUNT_HELPER(A4_pzxtbtnew);
return RdV;
})
DEF_QEMU(A4_pzxtbfnew,{if(fLSBNEWNOT(PuN)){RdV=fZXTN(8,32,RsV);} else {CANCEL;}},
DEF_HELPER_4(A4_pzxtbfnew, s32, env, s32, s32, i32),
{
/* A4_pzxtbfnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_A4_pzxtbfnew(SLOT_WRAP(gen_helper_A4_pzxtbfnew(RdV, cpu_env, PuN, RsV, slot));,
{if(fLSBNEWNOT(PuN)){RdV=fZXTN(8,32,RsV);} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_pzxtbfnew */
},
int32_t HELPER(A4_pzxtbfnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEWNOT(PuN)){RdV=fZXTN(8,32,RsV);} else {CANCEL;}}
COUNT_HELPER(A4_pzxtbfnew);
return RdV;
})
DEF_QEMU(A4_psxtht,{if(fLSBOLD(PuV)){RdV=fSXTN(16,32,RsV);} else {CANCEL;}},
DEF_HELPER_4(A4_psxtht, s32, env, s32, s32, i32),
{
/* A4_psxtht */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_A4_psxtht(SLOT_WRAP(gen_helper_A4_psxtht(RdV, cpu_env, PuV, RsV, slot));,
{if(fLSBOLD(PuV)){RdV=fSXTN(16,32,RsV);} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_psxtht */
},
int32_t HELPER(A4_psxtht)(CPUHexagonState *env, int32_t PuV, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLD(PuV)){RdV=fSXTN(16,32,RsV);} else {CANCEL;}}
COUNT_HELPER(A4_psxtht);
return RdV;
})
DEF_QEMU(A4_psxthf,{if(fLSBOLDNOT(PuV)){RdV=fSXTN(16,32,RsV);} else {CANCEL;}},
DEF_HELPER_4(A4_psxthf, s32, env, s32, s32, i32),
{
/* A4_psxthf */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_A4_psxthf(SLOT_WRAP(gen_helper_A4_psxthf(RdV, cpu_env, PuV, RsV, slot));,
{if(fLSBOLDNOT(PuV)){RdV=fSXTN(16,32,RsV);} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_psxthf */
},
int32_t HELPER(A4_psxthf)(CPUHexagonState *env, int32_t PuV, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLDNOT(PuV)){RdV=fSXTN(16,32,RsV);} else {CANCEL;}}
COUNT_HELPER(A4_psxthf);
return RdV;
})
DEF_QEMU(A4_psxthtnew,{if(fLSBNEW(PuN)){RdV=fSXTN(16,32,RsV);} else {CANCEL;}},
DEF_HELPER_4(A4_psxthtnew, s32, env, s32, s32, i32),
{
/* A4_psxthtnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_A4_psxthtnew(SLOT_WRAP(gen_helper_A4_psxthtnew(RdV, cpu_env, PuN, RsV, slot));,
{if(fLSBNEW(PuN)){RdV=fSXTN(16,32,RsV);} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_psxthtnew */
},
int32_t HELPER(A4_psxthtnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEW(PuN)){RdV=fSXTN(16,32,RsV);} else {CANCEL;}}
COUNT_HELPER(A4_psxthtnew);
return RdV;
})
DEF_QEMU(A4_psxthfnew,{if(fLSBNEWNOT(PuN)){RdV=fSXTN(16,32,RsV);} else {CANCEL;}},
DEF_HELPER_4(A4_psxthfnew, s32, env, s32, s32, i32),
{
/* A4_psxthfnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_A4_psxthfnew(SLOT_WRAP(gen_helper_A4_psxthfnew(RdV, cpu_env, PuN, RsV, slot));,
{if(fLSBNEWNOT(PuN)){RdV=fSXTN(16,32,RsV);} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_psxthfnew */
},
int32_t HELPER(A4_psxthfnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEWNOT(PuN)){RdV=fSXTN(16,32,RsV);} else {CANCEL;}}
COUNT_HELPER(A4_psxthfnew);
return RdV;
})
DEF_QEMU(A4_pzxtht,{if(fLSBOLD(PuV)){RdV=fZXTN(16,32,RsV);} else {CANCEL;}},
DEF_HELPER_4(A4_pzxtht, s32, env, s32, s32, i32),
{
/* A4_pzxtht */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_A4_pzxtht(SLOT_WRAP(gen_helper_A4_pzxtht(RdV, cpu_env, PuV, RsV, slot));,
{if(fLSBOLD(PuV)){RdV=fZXTN(16,32,RsV);} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_pzxtht */
},
int32_t HELPER(A4_pzxtht)(CPUHexagonState *env, int32_t PuV, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLD(PuV)){RdV=fZXTN(16,32,RsV);} else {CANCEL;}}
COUNT_HELPER(A4_pzxtht);
return RdV;
})
DEF_QEMU(A4_pzxthf,{if(fLSBOLDNOT(PuV)){RdV=fZXTN(16,32,RsV);} else {CANCEL;}},
DEF_HELPER_4(A4_pzxthf, s32, env, s32, s32, i32),
{
/* A4_pzxthf */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_A4_pzxthf(SLOT_WRAP(gen_helper_A4_pzxthf(RdV, cpu_env, PuV, RsV, slot));,
{if(fLSBOLDNOT(PuV)){RdV=fZXTN(16,32,RsV);} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_pzxthf */
},
int32_t HELPER(A4_pzxthf)(CPUHexagonState *env, int32_t PuV, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLDNOT(PuV)){RdV=fZXTN(16,32,RsV);} else {CANCEL;}}
COUNT_HELPER(A4_pzxthf);
return RdV;
})
DEF_QEMU(A4_pzxthtnew,{if(fLSBNEW(PuN)){RdV=fZXTN(16,32,RsV);} else {CANCEL;}},
DEF_HELPER_4(A4_pzxthtnew, s32, env, s32, s32, i32),
{
/* A4_pzxthtnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_A4_pzxthtnew(SLOT_WRAP(gen_helper_A4_pzxthtnew(RdV, cpu_env, PuN, RsV, slot));,
{if(fLSBNEW(PuN)){RdV=fZXTN(16,32,RsV);} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_pzxthtnew */
},
int32_t HELPER(A4_pzxthtnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEW(PuN)){RdV=fZXTN(16,32,RsV);} else {CANCEL;}}
COUNT_HELPER(A4_pzxthtnew);
return RdV;
})
DEF_QEMU(A4_pzxthfnew,{if(fLSBNEWNOT(PuN)){RdV=fZXTN(16,32,RsV);} else {CANCEL;}},
DEF_HELPER_4(A4_pzxthfnew, s32, env, s32, s32, i32),
{
/* A4_pzxthfnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_A4_pzxthfnew(SLOT_WRAP(gen_helper_A4_pzxthfnew(RdV, cpu_env, PuN, RsV, slot));,
{if(fLSBNEWNOT(PuN)){RdV=fZXTN(16,32,RsV);} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_pzxthfnew */
},
int32_t HELPER(A4_pzxthfnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEWNOT(PuN)){RdV=fZXTN(16,32,RsV);} else {CANCEL;}}
COUNT_HELPER(A4_pzxthfnew);
return RdV;
})
DEF_QEMU(A4_paslht,{if(fLSBOLD(PuV)){RdV=RsV<<16;} else {CANCEL;}},
DEF_HELPER_4(A4_paslht, s32, env, s32, s32, i32),
{
/* A4_paslht */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_A4_paslht(SLOT_WRAP(gen_helper_A4_paslht(RdV, cpu_env, PuV, RsV, slot));,
{if(fLSBOLD(PuV)){RdV=RsV<<16;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_paslht */
},
int32_t HELPER(A4_paslht)(CPUHexagonState *env, int32_t PuV, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLD(PuV)){RdV=RsV<<16;} else {CANCEL;}}
COUNT_HELPER(A4_paslht);
return RdV;
})
DEF_QEMU(A4_paslhf,{if(fLSBOLDNOT(PuV)){RdV=RsV<<16;} else {CANCEL;}},
DEF_HELPER_4(A4_paslhf, s32, env, s32, s32, i32),
{
/* A4_paslhf */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_A4_paslhf(SLOT_WRAP(gen_helper_A4_paslhf(RdV, cpu_env, PuV, RsV, slot));,
{if(fLSBOLDNOT(PuV)){RdV=RsV<<16;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_paslhf */
},
int32_t HELPER(A4_paslhf)(CPUHexagonState *env, int32_t PuV, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLDNOT(PuV)){RdV=RsV<<16;} else {CANCEL;}}
COUNT_HELPER(A4_paslhf);
return RdV;
})
DEF_QEMU(A4_paslhtnew,{if(fLSBNEW(PuN)){RdV=RsV<<16;} else {CANCEL;}},
DEF_HELPER_4(A4_paslhtnew, s32, env, s32, s32, i32),
{
/* A4_paslhtnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_A4_paslhtnew(SLOT_WRAP(gen_helper_A4_paslhtnew(RdV, cpu_env, PuN, RsV, slot));,
{if(fLSBNEW(PuN)){RdV=RsV<<16;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_paslhtnew */
},
int32_t HELPER(A4_paslhtnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEW(PuN)){RdV=RsV<<16;} else {CANCEL;}}
COUNT_HELPER(A4_paslhtnew);
return RdV;
})
DEF_QEMU(A4_paslhfnew,{if(fLSBNEWNOT(PuN)){RdV=RsV<<16;} else {CANCEL;}},
DEF_HELPER_4(A4_paslhfnew, s32, env, s32, s32, i32),
{
/* A4_paslhfnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_A4_paslhfnew(SLOT_WRAP(gen_helper_A4_paslhfnew(RdV, cpu_env, PuN, RsV, slot));,
{if(fLSBNEWNOT(PuN)){RdV=RsV<<16;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_paslhfnew */
},
int32_t HELPER(A4_paslhfnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEWNOT(PuN)){RdV=RsV<<16;} else {CANCEL;}}
COUNT_HELPER(A4_paslhfnew);
return RdV;
})
DEF_QEMU(A4_pasrht,{if(fLSBOLD(PuV)){RdV=RsV>>16;} else {CANCEL;}},
DEF_HELPER_4(A4_pasrht, s32, env, s32, s32, i32),
{
/* A4_pasrht */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_A4_pasrht(SLOT_WRAP(gen_helper_A4_pasrht(RdV, cpu_env, PuV, RsV, slot));,
{if(fLSBOLD(PuV)){RdV=RsV>>16;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_pasrht */
},
int32_t HELPER(A4_pasrht)(CPUHexagonState *env, int32_t PuV, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLD(PuV)){RdV=RsV>>16;} else {CANCEL;}}
COUNT_HELPER(A4_pasrht);
return RdV;
})
DEF_QEMU(A4_pasrhf,{if(fLSBOLDNOT(PuV)){RdV=RsV>>16;} else {CANCEL;}},
DEF_HELPER_4(A4_pasrhf, s32, env, s32, s32, i32),
{
/* A4_pasrhf */
DECL_PREG_u(TCGv, PuV, PuN, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_PREG_u(PuV, PuN);
READ_RREG_s(RsV, RsN);
fWRAP_A4_pasrhf(SLOT_WRAP(gen_helper_A4_pasrhf(RdV, cpu_env, PuV, RsV, slot));,
{if(fLSBOLDNOT(PuV)){RdV=RsV>>16;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_REG_u(PuV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_pasrhf */
},
int32_t HELPER(A4_pasrhf)(CPUHexagonState *env, int32_t PuV, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBOLDNOT(PuV)){RdV=RsV>>16;} else {CANCEL;}}
COUNT_HELPER(A4_pasrhf);
return RdV;
})
DEF_QEMU(A4_pasrhtnew,{if(fLSBNEW(PuN)){RdV=RsV>>16;} else {CANCEL;}},
DEF_HELPER_4(A4_pasrhtnew, s32, env, s32, s32, i32),
{
/* A4_pasrhtnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_A4_pasrhtnew(SLOT_WRAP(gen_helper_A4_pasrhtnew(RdV, cpu_env, PuN, RsV, slot));,
{if(fLSBNEW(PuN)){RdV=RsV>>16;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_pasrhtnew */
},
int32_t HELPER(A4_pasrhtnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEW(PuN)){RdV=RsV>>16;} else {CANCEL;}}
COUNT_HELPER(A4_pasrhtnew);
return RdV;
})
DEF_QEMU(A4_pasrhfnew,{if(fLSBNEWNOT(PuN)){RdV=RsV>>16;} else {CANCEL;}},
DEF_HELPER_4(A4_pasrhfnew, s32, env, s32, s32, i32),
{
/* A4_pasrhfnew */
DECL_NEW_PREG(TCGv, PuN, PuX, 0, 0);
DECL_RREG_d(TCGv, RdV, RdN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_NEW_PREG(PuN, PuX);
READ_RREG_s(RsV, RsN);
fWRAP_A4_pasrhfnew(SLOT_WRAP(gen_helper_A4_pasrhfnew(RdV, cpu_env, PuN, RsV, slot));,
{if(fLSBNEWNOT(PuN)){RdV=RsV>>16;} else {CANCEL;}})
WRITE_RREG(RdN,RdV);
FREE_NEW_PREG(PuN);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A4_pasrhfnew */
},
int32_t HELPER(A4_pasrhfnew)(CPUHexagonState *env, int32_t PuN, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
{if(fLSBNEWNOT(PuN)){RdV=RsV>>16;} else {CANCEL;}}
COUNT_HELPER(A4_pasrhfnew);
return RdV;
})
DEF_QEMU(A2_addsat,{ RdV=fSAT(fSE32_64(RsV)+fSE32_64(RtV)); },
DEF_HELPER_3(A2_addsat, s32, env, s32, s32),
{
/* A2_addsat */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_addsat(gen_helper_A2_addsat(RdV, cpu_env, RsV, RtV);,
{ RdV=fSAT(fSE32_64(RsV)+fSE32_64(RtV)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_addsat */
},
int32_t HELPER(A2_addsat)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=fSAT(fSE32_64(RsV)+fSE32_64(RtV)); }
COUNT_HELPER(A2_addsat);
return RdV;
})
DEF_QEMU(A2_subsat,{ RdV=fSAT(fSE32_64(RtV) - fSE32_64(RsV)); },
DEF_HELPER_3(A2_subsat, s32, env, s32, s32),
{
/* A2_subsat */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_subsat(gen_helper_A2_subsat(RdV, cpu_env, RtV, RsV);,
{ RdV=fSAT(fSE32_64(RtV) - fSE32_64(RsV)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_subsat */
},
int32_t HELPER(A2_subsat)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=fSAT(fSE32_64(RtV) - fSE32_64(RsV)); }
COUNT_HELPER(A2_subsat);
return RdV;
})
DEF_QEMU(A2_addi,{ fIMMEXT(siV); RdV=RsV+siV;},
DEF_HELPER_3(A2_addi, s32, env, s32, s32),
{
/* A2_addi */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_addi(gen_helper_A2_addi(RdV, cpu_env, RsV, siV);,
{ fIMMEXT(siV); RdV=RsV+siV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* A2_addi */
},
int32_t HELPER(A2_addi)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fIMMEXT(siV); RdV=RsV+siV;}
COUNT_HELPER(A2_addi);
return RdV;
})
DEF_QEMU(C4_addipc,{ RdV=fREAD_PC()+fIMMEXT(uiV);},
DEF_HELPER_2(C4_addipc, s32, env, s32),
{
/* C4_addipc */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_C4_addipc(gen_helper_C4_addipc(RdV, cpu_env, uiV);,
{ RdV=fREAD_PC()+fIMMEXT(uiV);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* C4_addipc */
},
int32_t HELPER(C4_addipc)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=fREAD_PC()+fIMMEXT(uiV);}
COUNT_HELPER(C4_addipc);
return RdV;
})
DEF_QEMU(A2_addh_l16_ll,{RdV=fSXTN(16,32,(fGETHALF(0,RtV)+fGETHALF(0,RsV)));},
DEF_HELPER_3(A2_addh_l16_ll, s32, env, s32, s32),
{
/* A2_addh_l16_ll */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_addh_l16_ll(gen_helper_A2_addh_l16_ll(RdV, cpu_env, RtV, RsV);,
{RdV=fSXTN(16,32,(fGETHALF(0,RtV)+fGETHALF(0,RsV)));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_addh_l16_ll */
},
int32_t HELPER(A2_addh_l16_ll)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSXTN(16,32,(fGETHALF(0,RtV)+fGETHALF(0,RsV)));}
COUNT_HELPER(A2_addh_l16_ll);
return RdV;
})
DEF_QEMU(A2_addh_l16_hl,{RdV=fSXTN(16,32,(fGETHALF(0,RtV)+fGETHALF(1,RsV)));},
DEF_HELPER_3(A2_addh_l16_hl, s32, env, s32, s32),
{
/* A2_addh_l16_hl */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_addh_l16_hl(gen_helper_A2_addh_l16_hl(RdV, cpu_env, RtV, RsV);,
{RdV=fSXTN(16,32,(fGETHALF(0,RtV)+fGETHALF(1,RsV)));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_addh_l16_hl */
},
int32_t HELPER(A2_addh_l16_hl)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSXTN(16,32,(fGETHALF(0,RtV)+fGETHALF(1,RsV)));}
COUNT_HELPER(A2_addh_l16_hl);
return RdV;
})
DEF_QEMU(A2_addh_l16_sat_ll,{RdV=fSATH(fGETHALF(0,RtV)+fGETHALF(0,RsV));},
DEF_HELPER_3(A2_addh_l16_sat_ll, s32, env, s32, s32),
{
/* A2_addh_l16_sat_ll */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_addh_l16_sat_ll(gen_helper_A2_addh_l16_sat_ll(RdV, cpu_env, RtV, RsV);,
{RdV=fSATH(fGETHALF(0,RtV)+fGETHALF(0,RsV));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_addh_l16_sat_ll */
},
int32_t HELPER(A2_addh_l16_sat_ll)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSATH(fGETHALF(0,RtV)+fGETHALF(0,RsV));}
COUNT_HELPER(A2_addh_l16_sat_ll);
return RdV;
})
DEF_QEMU(A2_addh_l16_sat_hl,{RdV=fSATH(fGETHALF(0,RtV)+fGETHALF(1,RsV));},
DEF_HELPER_3(A2_addh_l16_sat_hl, s32, env, s32, s32),
{
/* A2_addh_l16_sat_hl */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_addh_l16_sat_hl(gen_helper_A2_addh_l16_sat_hl(RdV, cpu_env, RtV, RsV);,
{RdV=fSATH(fGETHALF(0,RtV)+fGETHALF(1,RsV));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_addh_l16_sat_hl */
},
int32_t HELPER(A2_addh_l16_sat_hl)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSATH(fGETHALF(0,RtV)+fGETHALF(1,RsV));}
COUNT_HELPER(A2_addh_l16_sat_hl);
return RdV;
})
DEF_QEMU(A2_subh_l16_ll,{RdV=fSXTN(16,32,(fGETHALF(0,RtV)-fGETHALF(0,RsV)));},
DEF_HELPER_3(A2_subh_l16_ll, s32, env, s32, s32),
{
/* A2_subh_l16_ll */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_subh_l16_ll(gen_helper_A2_subh_l16_ll(RdV, cpu_env, RtV, RsV);,
{RdV=fSXTN(16,32,(fGETHALF(0,RtV)-fGETHALF(0,RsV)));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_subh_l16_ll */
},
int32_t HELPER(A2_subh_l16_ll)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSXTN(16,32,(fGETHALF(0,RtV)-fGETHALF(0,RsV)));}
COUNT_HELPER(A2_subh_l16_ll);
return RdV;
})
DEF_QEMU(A2_subh_l16_hl,{RdV=fSXTN(16,32,(fGETHALF(0,RtV)-fGETHALF(1,RsV)));},
DEF_HELPER_3(A2_subh_l16_hl, s32, env, s32, s32),
{
/* A2_subh_l16_hl */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_subh_l16_hl(gen_helper_A2_subh_l16_hl(RdV, cpu_env, RtV, RsV);,
{RdV=fSXTN(16,32,(fGETHALF(0,RtV)-fGETHALF(1,RsV)));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_subh_l16_hl */
},
int32_t HELPER(A2_subh_l16_hl)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSXTN(16,32,(fGETHALF(0,RtV)-fGETHALF(1,RsV)));}
COUNT_HELPER(A2_subh_l16_hl);
return RdV;
})
DEF_QEMU(A2_subh_l16_sat_ll,{RdV=fSATH(fGETHALF(0,RtV)-fGETHALF(0,RsV));},
DEF_HELPER_3(A2_subh_l16_sat_ll, s32, env, s32, s32),
{
/* A2_subh_l16_sat_ll */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_subh_l16_sat_ll(gen_helper_A2_subh_l16_sat_ll(RdV, cpu_env, RtV, RsV);,
{RdV=fSATH(fGETHALF(0,RtV)-fGETHALF(0,RsV));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_subh_l16_sat_ll */
},
int32_t HELPER(A2_subh_l16_sat_ll)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSATH(fGETHALF(0,RtV)-fGETHALF(0,RsV));}
COUNT_HELPER(A2_subh_l16_sat_ll);
return RdV;
})
DEF_QEMU(A2_subh_l16_sat_hl,{RdV=fSATH(fGETHALF(0,RtV)-fGETHALF(1,RsV));},
DEF_HELPER_3(A2_subh_l16_sat_hl, s32, env, s32, s32),
{
/* A2_subh_l16_sat_hl */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_subh_l16_sat_hl(gen_helper_A2_subh_l16_sat_hl(RdV, cpu_env, RtV, RsV);,
{RdV=fSATH(fGETHALF(0,RtV)-fGETHALF(1,RsV));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_subh_l16_sat_hl */
},
int32_t HELPER(A2_subh_l16_sat_hl)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=fSATH(fGETHALF(0,RtV)-fGETHALF(1,RsV));}
COUNT_HELPER(A2_subh_l16_sat_hl);
return RdV;
})
DEF_QEMU(A2_addh_h16_ll,{RdV=(fGETHALF(0,RtV)+fGETHALF(0,RsV))<<16;},
DEF_HELPER_3(A2_addh_h16_ll, s32, env, s32, s32),
{
/* A2_addh_h16_ll */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_addh_h16_ll(gen_helper_A2_addh_h16_ll(RdV, cpu_env, RtV, RsV);,
{RdV=(fGETHALF(0,RtV)+fGETHALF(0,RsV))<<16;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_addh_h16_ll */
},
int32_t HELPER(A2_addh_h16_ll)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(fGETHALF(0,RtV)+fGETHALF(0,RsV))<<16;}
COUNT_HELPER(A2_addh_h16_ll);
return RdV;
})
DEF_QEMU(A2_addh_h16_lh,{RdV=(fGETHALF(0,RtV)+fGETHALF(1,RsV))<<16;},
DEF_HELPER_3(A2_addh_h16_lh, s32, env, s32, s32),
{
/* A2_addh_h16_lh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_addh_h16_lh(gen_helper_A2_addh_h16_lh(RdV, cpu_env, RtV, RsV);,
{RdV=(fGETHALF(0,RtV)+fGETHALF(1,RsV))<<16;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_addh_h16_lh */
},
int32_t HELPER(A2_addh_h16_lh)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(fGETHALF(0,RtV)+fGETHALF(1,RsV))<<16;}
COUNT_HELPER(A2_addh_h16_lh);
return RdV;
})
DEF_QEMU(A2_addh_h16_hl,{RdV=(fGETHALF(1,RtV)+fGETHALF(0,RsV))<<16;},
DEF_HELPER_3(A2_addh_h16_hl, s32, env, s32, s32),
{
/* A2_addh_h16_hl */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_addh_h16_hl(gen_helper_A2_addh_h16_hl(RdV, cpu_env, RtV, RsV);,
{RdV=(fGETHALF(1,RtV)+fGETHALF(0,RsV))<<16;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_addh_h16_hl */
},
int32_t HELPER(A2_addh_h16_hl)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(fGETHALF(1,RtV)+fGETHALF(0,RsV))<<16;}
COUNT_HELPER(A2_addh_h16_hl);
return RdV;
})
DEF_QEMU(A2_addh_h16_hh,{RdV=(fGETHALF(1,RtV)+fGETHALF(1,RsV))<<16;},
DEF_HELPER_3(A2_addh_h16_hh, s32, env, s32, s32),
{
/* A2_addh_h16_hh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_addh_h16_hh(gen_helper_A2_addh_h16_hh(RdV, cpu_env, RtV, RsV);,
{RdV=(fGETHALF(1,RtV)+fGETHALF(1,RsV))<<16;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_addh_h16_hh */
},
int32_t HELPER(A2_addh_h16_hh)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(fGETHALF(1,RtV)+fGETHALF(1,RsV))<<16;}
COUNT_HELPER(A2_addh_h16_hh);
return RdV;
})
DEF_QEMU(A2_addh_h16_sat_ll,{RdV=(fSATH(fGETHALF(0,RtV)+fGETHALF(0,RsV)))<<16;},
DEF_HELPER_3(A2_addh_h16_sat_ll, s32, env, s32, s32),
{
/* A2_addh_h16_sat_ll */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_addh_h16_sat_ll(gen_helper_A2_addh_h16_sat_ll(RdV, cpu_env, RtV, RsV);,
{RdV=(fSATH(fGETHALF(0,RtV)+fGETHALF(0,RsV)))<<16;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_addh_h16_sat_ll */
},
int32_t HELPER(A2_addh_h16_sat_ll)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(fSATH(fGETHALF(0,RtV)+fGETHALF(0,RsV)))<<16;}
COUNT_HELPER(A2_addh_h16_sat_ll);
return RdV;
})
DEF_QEMU(A2_addh_h16_sat_lh,{RdV=(fSATH(fGETHALF(0,RtV)+fGETHALF(1,RsV)))<<16;},
DEF_HELPER_3(A2_addh_h16_sat_lh, s32, env, s32, s32),
{
/* A2_addh_h16_sat_lh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_addh_h16_sat_lh(gen_helper_A2_addh_h16_sat_lh(RdV, cpu_env, RtV, RsV);,
{RdV=(fSATH(fGETHALF(0,RtV)+fGETHALF(1,RsV)))<<16;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_addh_h16_sat_lh */
},
int32_t HELPER(A2_addh_h16_sat_lh)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(fSATH(fGETHALF(0,RtV)+fGETHALF(1,RsV)))<<16;}
COUNT_HELPER(A2_addh_h16_sat_lh);
return RdV;
})
DEF_QEMU(A2_addh_h16_sat_hl,{RdV=(fSATH(fGETHALF(1,RtV)+fGETHALF(0,RsV)))<<16;},
DEF_HELPER_3(A2_addh_h16_sat_hl, s32, env, s32, s32),
{
/* A2_addh_h16_sat_hl */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_addh_h16_sat_hl(gen_helper_A2_addh_h16_sat_hl(RdV, cpu_env, RtV, RsV);,
{RdV=(fSATH(fGETHALF(1,RtV)+fGETHALF(0,RsV)))<<16;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_addh_h16_sat_hl */
},
int32_t HELPER(A2_addh_h16_sat_hl)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(fSATH(fGETHALF(1,RtV)+fGETHALF(0,RsV)))<<16;}
COUNT_HELPER(A2_addh_h16_sat_hl);
return RdV;
})
DEF_QEMU(A2_addh_h16_sat_hh,{RdV=(fSATH(fGETHALF(1,RtV)+fGETHALF(1,RsV)))<<16;},
DEF_HELPER_3(A2_addh_h16_sat_hh, s32, env, s32, s32),
{
/* A2_addh_h16_sat_hh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_addh_h16_sat_hh(gen_helper_A2_addh_h16_sat_hh(RdV, cpu_env, RtV, RsV);,
{RdV=(fSATH(fGETHALF(1,RtV)+fGETHALF(1,RsV)))<<16;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_addh_h16_sat_hh */
},
int32_t HELPER(A2_addh_h16_sat_hh)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(fSATH(fGETHALF(1,RtV)+fGETHALF(1,RsV)))<<16;}
COUNT_HELPER(A2_addh_h16_sat_hh);
return RdV;
})
DEF_QEMU(A2_subh_h16_ll,{RdV=(fGETHALF(0,RtV)-fGETHALF(0,RsV))<<16;},
DEF_HELPER_3(A2_subh_h16_ll, s32, env, s32, s32),
{
/* A2_subh_h16_ll */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_subh_h16_ll(gen_helper_A2_subh_h16_ll(RdV, cpu_env, RtV, RsV);,
{RdV=(fGETHALF(0,RtV)-fGETHALF(0,RsV))<<16;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_subh_h16_ll */
},
int32_t HELPER(A2_subh_h16_ll)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(fGETHALF(0,RtV)-fGETHALF(0,RsV))<<16;}
COUNT_HELPER(A2_subh_h16_ll);
return RdV;
})
DEF_QEMU(A2_subh_h16_lh,{RdV=(fGETHALF(0,RtV)-fGETHALF(1,RsV))<<16;},
DEF_HELPER_3(A2_subh_h16_lh, s32, env, s32, s32),
{
/* A2_subh_h16_lh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_subh_h16_lh(gen_helper_A2_subh_h16_lh(RdV, cpu_env, RtV, RsV);,
{RdV=(fGETHALF(0,RtV)-fGETHALF(1,RsV))<<16;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_subh_h16_lh */
},
int32_t HELPER(A2_subh_h16_lh)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(fGETHALF(0,RtV)-fGETHALF(1,RsV))<<16;}
COUNT_HELPER(A2_subh_h16_lh);
return RdV;
})
DEF_QEMU(A2_subh_h16_hl,{RdV=(fGETHALF(1,RtV)-fGETHALF(0,RsV))<<16;},
DEF_HELPER_3(A2_subh_h16_hl, s32, env, s32, s32),
{
/* A2_subh_h16_hl */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_subh_h16_hl(gen_helper_A2_subh_h16_hl(RdV, cpu_env, RtV, RsV);,
{RdV=(fGETHALF(1,RtV)-fGETHALF(0,RsV))<<16;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_subh_h16_hl */
},
int32_t HELPER(A2_subh_h16_hl)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(fGETHALF(1,RtV)-fGETHALF(0,RsV))<<16;}
COUNT_HELPER(A2_subh_h16_hl);
return RdV;
})
DEF_QEMU(A2_subh_h16_hh,{RdV=(fGETHALF(1,RtV)-fGETHALF(1,RsV))<<16;},
DEF_HELPER_3(A2_subh_h16_hh, s32, env, s32, s32),
{
/* A2_subh_h16_hh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_subh_h16_hh(gen_helper_A2_subh_h16_hh(RdV, cpu_env, RtV, RsV);,
{RdV=(fGETHALF(1,RtV)-fGETHALF(1,RsV))<<16;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_subh_h16_hh */
},
int32_t HELPER(A2_subh_h16_hh)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(fGETHALF(1,RtV)-fGETHALF(1,RsV))<<16;}
COUNT_HELPER(A2_subh_h16_hh);
return RdV;
})
DEF_QEMU(A2_subh_h16_sat_ll,{RdV=(fSATH(fGETHALF(0,RtV)-fGETHALF(0,RsV)))<<16;},
DEF_HELPER_3(A2_subh_h16_sat_ll, s32, env, s32, s32),
{
/* A2_subh_h16_sat_ll */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_subh_h16_sat_ll(gen_helper_A2_subh_h16_sat_ll(RdV, cpu_env, RtV, RsV);,
{RdV=(fSATH(fGETHALF(0,RtV)-fGETHALF(0,RsV)))<<16;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_subh_h16_sat_ll */
},
int32_t HELPER(A2_subh_h16_sat_ll)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(fSATH(fGETHALF(0,RtV)-fGETHALF(0,RsV)))<<16;}
COUNT_HELPER(A2_subh_h16_sat_ll);
return RdV;
})
DEF_QEMU(A2_subh_h16_sat_lh,{RdV=(fSATH(fGETHALF(0,RtV)-fGETHALF(1,RsV)))<<16;},
DEF_HELPER_3(A2_subh_h16_sat_lh, s32, env, s32, s32),
{
/* A2_subh_h16_sat_lh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_subh_h16_sat_lh(gen_helper_A2_subh_h16_sat_lh(RdV, cpu_env, RtV, RsV);,
{RdV=(fSATH(fGETHALF(0,RtV)-fGETHALF(1,RsV)))<<16;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_subh_h16_sat_lh */
},
int32_t HELPER(A2_subh_h16_sat_lh)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(fSATH(fGETHALF(0,RtV)-fGETHALF(1,RsV)))<<16;}
COUNT_HELPER(A2_subh_h16_sat_lh);
return RdV;
})
DEF_QEMU(A2_subh_h16_sat_hl,{RdV=(fSATH(fGETHALF(1,RtV)-fGETHALF(0,RsV)))<<16;},
DEF_HELPER_3(A2_subh_h16_sat_hl, s32, env, s32, s32),
{
/* A2_subh_h16_sat_hl */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_subh_h16_sat_hl(gen_helper_A2_subh_h16_sat_hl(RdV, cpu_env, RtV, RsV);,
{RdV=(fSATH(fGETHALF(1,RtV)-fGETHALF(0,RsV)))<<16;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_subh_h16_sat_hl */
},
int32_t HELPER(A2_subh_h16_sat_hl)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(fSATH(fGETHALF(1,RtV)-fGETHALF(0,RsV)))<<16;}
COUNT_HELPER(A2_subh_h16_sat_hl);
return RdV;
})
DEF_QEMU(A2_subh_h16_sat_hh,{RdV=(fSATH(fGETHALF(1,RtV)-fGETHALF(1,RsV)))<<16;},
DEF_HELPER_3(A2_subh_h16_sat_hh, s32, env, s32, s32),
{
/* A2_subh_h16_sat_hh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_subh_h16_sat_hh(gen_helper_A2_subh_h16_sat_hh(RdV, cpu_env, RtV, RsV);,
{RdV=(fSATH(fGETHALF(1,RtV)-fGETHALF(1,RsV)))<<16;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_subh_h16_sat_hh */
},
int32_t HELPER(A2_subh_h16_sat_hh)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV=(fSATH(fGETHALF(1,RtV)-fGETHALF(1,RsV)))<<16;}
COUNT_HELPER(A2_subh_h16_sat_hh);
return RdV;
})
DEF_QEMU(A2_aslh,{ RdV=RsV<<16; },
DEF_HELPER_2(A2_aslh, s32, env, s32),
{
/* A2_aslh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_aslh(gen_helper_A2_aslh(RdV, cpu_env, RsV);,
{ RdV=RsV<<16; })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A2_aslh */
},
int32_t HELPER(A2_aslh)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=RsV<<16; }
COUNT_HELPER(A2_aslh);
return RdV;
})
DEF_QEMU(A2_asrh,{ RdV=RsV>>16; },
DEF_HELPER_2(A2_asrh, s32, env, s32),
{
/* A2_asrh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_asrh(gen_helper_A2_asrh(RdV, cpu_env, RsV);,
{ RdV=RsV>>16; })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A2_asrh */
},
int32_t HELPER(A2_asrh)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=RsV>>16; }
COUNT_HELPER(A2_asrh);
return RdV;
})
DEF_QEMU(A2_addp,{ RddV=RssV+RttV;},
DEF_HELPER_3(A2_addp, s64, env, s64, s64),
{
/* A2_addp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_addp(gen_helper_A2_addp(RddV, cpu_env, RssV, RttV);,
{ RddV=RssV+RttV;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_addp */
},
int64_t HELPER(A2_addp)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV=RssV+RttV;}
COUNT_HELPER(A2_addp);
return RddV;
})
DEF_QEMU(A2_addpsat,{ fADDSAT64(RddV,RssV,RttV);},
DEF_HELPER_3(A2_addpsat, s64, env, s64, s64),
{
/* A2_addpsat */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_addpsat(gen_helper_A2_addpsat(RddV, cpu_env, RssV, RttV);,
{ fADDSAT64(RddV,RssV,RttV);})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_addpsat */
},
int64_t HELPER(A2_addpsat)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fADDSAT64(RddV,RssV,RttV);}
COUNT_HELPER(A2_addpsat);
return RddV;
})
DEF_QEMU(A2_addspl,{ RddV=RttV+fSXTN(32,64,fGETWORD(0,RssV));},
DEF_HELPER_3(A2_addspl, s64, env, s64, s64),
{
/* A2_addspl */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_addspl(gen_helper_A2_addspl(RddV, cpu_env, RssV, RttV);,
{ RddV=RttV+fSXTN(32,64,fGETWORD(0,RssV));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_addspl */
},
int64_t HELPER(A2_addspl)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV=RttV+fSXTN(32,64,fGETWORD(0,RssV));}
COUNT_HELPER(A2_addspl);
return RddV;
})
DEF_QEMU(A2_addsph,{ RddV=RttV+fSXTN(32,64,fGETWORD(1,RssV));},
DEF_HELPER_3(A2_addsph, s64, env, s64, s64),
{
/* A2_addsph */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_addsph(gen_helper_A2_addsph(RddV, cpu_env, RssV, RttV);,
{ RddV=RttV+fSXTN(32,64,fGETWORD(1,RssV));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_addsph */
},
int64_t HELPER(A2_addsph)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV=RttV+fSXTN(32,64,fGETWORD(1,RssV));}
COUNT_HELPER(A2_addsph);
return RddV;
})
DEF_QEMU(A2_subp,{ RddV=RttV-RssV;},
DEF_HELPER_3(A2_subp, s64, env, s64, s64),
{
/* A2_subp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_subp(gen_helper_A2_subp(RddV, cpu_env, RttV, RssV);,
{ RddV=RttV-RssV;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_subp */
},
int64_t HELPER(A2_subp)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV=RttV-RssV;}
COUNT_HELPER(A2_subp);
return RddV;
})
DEF_QEMU(A4_addp_c,{ fPREDUSE_TIMING(); RddV = RssV + RttV + fLSBOLD(PxV); PxV = f8BITSOF(fCARRY_FROM_ADD(RssV,RttV,fLSBOLD(PxV))); fHIDE(MARK_LATE_PRED_WRITE(PxN)) },
DEF_HELPER_1(A4_addp_c, void, env),
{
/* A4_addp_c */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
DECL_PREG_x(TCGv, PxV, PxN, 3, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
READ_PREG_x(PxV, PxN);
fWRAP_A4_addp_c(gen_helper_A4_addp_c(RddV, PxV, cpu_env, RssV, RttV, PxV);,
{ fPREDUSE_TIMING(); RddV = RssV + RttV + fLSBOLD(PxV); PxV = f8BITSOF(fCARRY_FROM_ADD(RssV,RttV,fLSBOLD(PxV))); fHIDE(MARK_LATE_PRED_WRITE(PxN)) })
WRITE_RREG_PAIR(RddN,RddV);
WRITE_PREG(PxN,PxV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
FREE_REG_x(PxV);
/* A4_addp_c */
},
void HELPER(A4_addp_c)(CPUHexagonState *env) { BOGUS_HELPER(A4_addp_c); }
)
DEF_QEMU(A4_subp_c,{ fPREDUSE_TIMING(); RddV = RssV + ~RttV + fLSBOLD(PxV); PxV = f8BITSOF(fCARRY_FROM_ADD(RssV,~RttV,fLSBOLD(PxV))); fHIDE(MARK_LATE_PRED_WRITE(PxN)) },
DEF_HELPER_1(A4_subp_c, void, env),
{
/* A4_subp_c */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
DECL_PREG_x(TCGv, PxV, PxN, 3, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
READ_PREG_x(PxV, PxN);
fWRAP_A4_subp_c(gen_helper_A4_subp_c(RddV, PxV, cpu_env, RssV, RttV, PxV);,
{ fPREDUSE_TIMING(); RddV = RssV + ~RttV + fLSBOLD(PxV); PxV = f8BITSOF(fCARRY_FROM_ADD(RssV,~RttV,fLSBOLD(PxV))); fHIDE(MARK_LATE_PRED_WRITE(PxN)) })
WRITE_RREG_PAIR(RddN,RddV);
WRITE_PREG(PxN,PxV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
FREE_REG_x(PxV);
/* A4_subp_c */
},
void HELPER(A4_subp_c)(CPUHexagonState *env) { BOGUS_HELPER(A4_subp_c); }
)
DEF_QEMU(A2_negsat,{ RdV = fSAT(-fCAST8s(RsV)); },
DEF_HELPER_2(A2_negsat, s32, env, s32),
{
/* A2_negsat */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_negsat(gen_helper_A2_negsat(RdV, cpu_env, RsV);,
{ RdV = fSAT(-fCAST8s(RsV)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A2_negsat */
},
int32_t HELPER(A2_negsat)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fSAT(-fCAST8s(RsV)); }
COUNT_HELPER(A2_negsat);
return RdV;
})
DEF_QEMU(A2_abs,{ RdV = fABS(RsV); },
DEF_HELPER_2(A2_abs, s32, env, s32),
{
/* A2_abs */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_abs(gen_helper_A2_abs(RdV, cpu_env, RsV);,
{ RdV = fABS(RsV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A2_abs */
},
int32_t HELPER(A2_abs)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fABS(RsV); }
COUNT_HELPER(A2_abs);
return RdV;
})
DEF_QEMU(A2_abssat,{ RdV = fSAT(fABS(fCAST4_8s(RsV))); },
DEF_HELPER_2(A2_abssat, s32, env, s32),
{
/* A2_abssat */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_abssat(gen_helper_A2_abssat(RdV, cpu_env, RsV);,
{ RdV = fSAT(fABS(fCAST4_8s(RsV))); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A2_abssat */
},
int32_t HELPER(A2_abssat)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fSAT(fABS(fCAST4_8s(RsV))); }
COUNT_HELPER(A2_abssat);
return RdV;
})
DEF_QEMU(A2_vconj,{ fSETHALF(1,RddV,fSATN(16,-fGETHALF(1,RssV))); fSETHALF(0,RddV,fGETHALF(0,RssV)); fSETHALF(3,RddV,fSATN(16,-fGETHALF(3,RssV))); fSETHALF(2,RddV,fGETHALF(2,RssV)); },
DEF_HELPER_2(A2_vconj, s64, env, s64),
{
/* A2_vconj */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vconj(gen_helper_A2_vconj(RddV, cpu_env, RssV);,
{ fSETHALF(1,RddV,fSATN(16,-fGETHALF(1,RssV))); fSETHALF(0,RddV,fGETHALF(0,RssV)); fSETHALF(3,RddV,fSATN(16,-fGETHALF(3,RssV))); fSETHALF(2,RddV,fGETHALF(2,RssV)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* A2_vconj */
},
int64_t HELPER(A2_vconj)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETHALF(1,RddV,fSATN(16,-fGETHALF(1,RssV))); fSETHALF(0,RddV,fGETHALF(0,RssV)); fSETHALF(3,RddV,fSATN(16,-fGETHALF(3,RssV))); fSETHALF(2,RddV,fGETHALF(2,RssV)); }
COUNT_HELPER(A2_vconj);
return RddV;
})
DEF_QEMU(A2_negp,{ RddV = -RssV; },
DEF_HELPER_2(A2_negp, s64, env, s64),
{
/* A2_negp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_negp(gen_helper_A2_negp(RddV, cpu_env, RssV);,
{ RddV = -RssV; })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* A2_negp */
},
int64_t HELPER(A2_negp)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = -RssV; }
COUNT_HELPER(A2_negp);
return RddV;
})
DEF_QEMU(A2_absp,{ RddV = fABS(RssV); },
DEF_HELPER_2(A2_absp, s64, env, s64),
{
/* A2_absp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_absp(gen_helper_A2_absp(RddV, cpu_env, RssV);,
{ RddV = fABS(RssV); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* A2_absp */
},
int64_t HELPER(A2_absp)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fABS(RssV); }
COUNT_HELPER(A2_absp);
return RddV;
})
DEF_QEMU(A2_max,{ RdV = fMAX(RsV,RtV); },
DEF_HELPER_3(A2_max, s32, env, s32, s32),
{
/* A2_max */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_max(gen_helper_A2_max(RdV, cpu_env, RsV, RtV);,
{ RdV = fMAX(RsV,RtV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_max */
},
int32_t HELPER(A2_max)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fMAX(RsV,RtV); }
COUNT_HELPER(A2_max);
return RdV;
})
DEF_QEMU(A2_maxu,{ RdV = fMAX(fCAST4u(RsV),fCAST4u(RtV)); },
DEF_HELPER_3(A2_maxu, s32, env, s32, s32),
{
/* A2_maxu */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_maxu(gen_helper_A2_maxu(RdV, cpu_env, RsV, RtV);,
{ RdV = fMAX(fCAST4u(RsV),fCAST4u(RtV)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_maxu */
},
int32_t HELPER(A2_maxu)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fMAX(fCAST4u(RsV),fCAST4u(RtV)); }
COUNT_HELPER(A2_maxu);
return RdV;
})
DEF_QEMU(A2_min,{ RdV = fMIN(RtV,RsV); },
DEF_HELPER_3(A2_min, s32, env, s32, s32),
{
/* A2_min */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_min(gen_helper_A2_min(RdV, cpu_env, RtV, RsV);,
{ RdV = fMIN(RtV,RsV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_min */
},
int32_t HELPER(A2_min)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fMIN(RtV,RsV); }
COUNT_HELPER(A2_min);
return RdV;
})
DEF_QEMU(A2_minu,{ RdV = fMIN(fCAST4u(RtV),fCAST4u(RsV)); },
DEF_HELPER_3(A2_minu, s32, env, s32, s32),
{
/* A2_minu */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_minu(gen_helper_A2_minu(RdV, cpu_env, RtV, RsV);,
{ RdV = fMIN(fCAST4u(RtV),fCAST4u(RsV)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_minu */
},
int32_t HELPER(A2_minu)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fMIN(fCAST4u(RtV),fCAST4u(RsV)); }
COUNT_HELPER(A2_minu);
return RdV;
})
DEF_QEMU(A2_maxp,{ RddV = fMAX(RssV,RttV); },
DEF_HELPER_3(A2_maxp, s64, env, s64, s64),
{
/* A2_maxp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_maxp(gen_helper_A2_maxp(RddV, cpu_env, RssV, RttV);,
{ RddV = fMAX(RssV,RttV); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_maxp */
},
int64_t HELPER(A2_maxp)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fMAX(RssV,RttV); }
COUNT_HELPER(A2_maxp);
return RddV;
})
DEF_QEMU(A2_maxup,{ RddV = fMAX(fCAST8u(RssV),fCAST8u(RttV)); },
DEF_HELPER_3(A2_maxup, s64, env, s64, s64),
{
/* A2_maxup */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_maxup(gen_helper_A2_maxup(RddV, cpu_env, RssV, RttV);,
{ RddV = fMAX(fCAST8u(RssV),fCAST8u(RttV)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_maxup */
},
int64_t HELPER(A2_maxup)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fMAX(fCAST8u(RssV),fCAST8u(RttV)); }
COUNT_HELPER(A2_maxup);
return RddV;
})
DEF_QEMU(A2_minp,{ RddV = fMIN(RttV,RssV); },
DEF_HELPER_3(A2_minp, s64, env, s64, s64),
{
/* A2_minp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_minp(gen_helper_A2_minp(RddV, cpu_env, RttV, RssV);,
{ RddV = fMIN(RttV,RssV); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_minp */
},
int64_t HELPER(A2_minp)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fMIN(RttV,RssV); }
COUNT_HELPER(A2_minp);
return RddV;
})
DEF_QEMU(A2_minup,{ RddV = fMIN(fCAST8u(RttV),fCAST8u(RssV)); },
DEF_HELPER_3(A2_minup, s64, env, s64, s64),
{
/* A2_minup */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_minup(gen_helper_A2_minup(RddV, cpu_env, RttV, RssV);,
{ RddV = fMIN(fCAST8u(RttV),fCAST8u(RssV)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_minup */
},
int64_t HELPER(A2_minup)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fMIN(fCAST8u(RttV),fCAST8u(RssV)); }
COUNT_HELPER(A2_minup);
return RddV;
})
DEF_QEMU(A2_nop,fHIDE( { fNOP_EXECUTED } ),
DEF_HELPER_1(A2_nop, void, env),
{
/* A2_nop */
fWRAP_A2_nop(gen_helper_A2_nop(cpu_env);,
fHIDE( { fNOP_EXECUTED } ))
/* A2_nop */
},
void HELPER(A2_nop)(CPUHexagonState *env)
{
uint32_t slot = 4; slot = slot;
fHIDE( { fNOP_EXECUTED } )
COUNT_HELPER(A2_nop);
})
DEF_QEMU(A4_ext,{ fHIDE(); },
DEF_HELPER_2(A4_ext, void, env, s32),
{
/* A4_ext */
DECL_IMM(uiV,0);
fWRAP_A4_ext(gen_helper_A4_ext(cpu_env, uiV);,
{ fHIDE(); })
FREE_IMM(uiV);
/* A4_ext */
},
void HELPER(A4_ext)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(); }
COUNT_HELPER(A4_ext);
})
DEF_QEMU(A2_tfr,{ RdV=RsV;},
DEF_HELPER_2(A2_tfr, s32, env, s32),
{
/* A2_tfr */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_tfr(gen_helper_A2_tfr(RdV, cpu_env, RsV);,
{ RdV=RsV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A2_tfr */
},
int32_t HELPER(A2_tfr)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=RsV;}
COUNT_HELPER(A2_tfr);
return RdV;
})
DEF_QEMU(A2_tfrsi,{ fIMMEXT(siV); RdV=siV;},
DEF_HELPER_2(A2_tfrsi, s32, env, s32),
{
/* A2_tfrsi */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_IMM(siV,0);
fWRAP_A2_tfrsi(gen_helper_A2_tfrsi(RdV, cpu_env, siV);,
{ fIMMEXT(siV); RdV=siV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_IMM(siV);
/* A2_tfrsi */
},
int32_t HELPER(A2_tfrsi)(CPUHexagonState *env, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fIMMEXT(siV); RdV=siV;}
COUNT_HELPER(A2_tfrsi);
return RdV;
})
DEF_QEMU(A2_sxtb,{RdV = fSXTN(8,32,RsV);},
DEF_HELPER_2(A2_sxtb, s32, env, s32),
{
/* A2_sxtb */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_sxtb(gen_helper_A2_sxtb(RdV, cpu_env, RsV);,
{RdV = fSXTN(8,32,RsV);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A2_sxtb */
},
int32_t HELPER(A2_sxtb)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fSXTN(8,32,RsV);}
COUNT_HELPER(A2_sxtb);
return RdV;
})
DEF_QEMU(A2_zxth,{RdV = fZXTN(16,32,RsV);},
DEF_HELPER_2(A2_zxth, s32, env, s32),
{
/* A2_zxth */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_zxth(gen_helper_A2_zxth(RdV, cpu_env, RsV);,
{RdV = fZXTN(16,32,RsV);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A2_zxth */
},
int32_t HELPER(A2_zxth)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fZXTN(16,32,RsV);}
COUNT_HELPER(A2_zxth);
return RdV;
})
DEF_QEMU(A2_sxth,{RdV = fSXTN(16,32,RsV);},
DEF_HELPER_2(A2_sxth, s32, env, s32),
{
/* A2_sxth */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_sxth(gen_helper_A2_sxth(RdV, cpu_env, RsV);,
{RdV = fSXTN(16,32,RsV);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A2_sxth */
},
int32_t HELPER(A2_sxth)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fSXTN(16,32,RsV);}
COUNT_HELPER(A2_sxth);
return RdV;
})
DEF_QEMU(A2_combinew,{ fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); },
DEF_HELPER_3(A2_combinew, s64, env, s32, s32),
{
/* A2_combinew */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_combinew(gen_helper_A2_combinew(RddV, cpu_env, RsV, RtV);,
{ fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_combinew */
},
int64_t HELPER(A2_combinew)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); }
COUNT_HELPER(A2_combinew);
return RddV;
})
DEF_QEMU(A4_combineri,{ fIMMEXT(siV); fSETWORD(0,RddV,siV); fSETWORD(1,RddV,RsV); },
DEF_HELPER_3(A4_combineri, s64, env, s32, s32),
{
/* A4_combineri */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A4_combineri(gen_helper_A4_combineri(RddV, cpu_env, RsV, siV);,
{ fIMMEXT(siV); fSETWORD(0,RddV,siV); fSETWORD(1,RddV,RsV); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* A4_combineri */
},
int64_t HELPER(A4_combineri)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fIMMEXT(siV); fSETWORD(0,RddV,siV); fSETWORD(1,RddV,RsV); }
COUNT_HELPER(A4_combineri);
return RddV;
})
DEF_QEMU(A4_combineir,{ fIMMEXT(siV); fSETWORD(0,RddV,RsV); fSETWORD(1,RddV,siV); },
DEF_HELPER_3(A4_combineir, s64, env, s32, s32),
{
/* A4_combineir */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A4_combineir(gen_helper_A4_combineir(RddV, cpu_env, RsV, siV);,
{ fIMMEXT(siV); fSETWORD(0,RddV,RsV); fSETWORD(1,RddV,siV); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* A4_combineir */
},
int64_t HELPER(A4_combineir)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fIMMEXT(siV); fSETWORD(0,RddV,RsV); fSETWORD(1,RddV,siV); }
COUNT_HELPER(A4_combineir);
return RddV;
})
DEF_QEMU(A2_combineii,{ fIMMEXT(siV); fSETWORD(0,RddV,SiV); fSETWORD(1,RddV,siV); },
DEF_HELPER_3(A2_combineii, s64, env, s32, s32),
{
/* A2_combineii */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_IMM(siV,0);
DECL_IMM(SiV,1);
fWRAP_A2_combineii(gen_helper_A2_combineii(RddV, cpu_env, siV, SiV);,
{ fIMMEXT(siV); fSETWORD(0,RddV,SiV); fSETWORD(1,RddV,siV); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_IMM(siV);
FREE_IMM(SiV);
/* A2_combineii */
},
int64_t HELPER(A2_combineii)(CPUHexagonState *env, int32_t siV, int32_t SiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fIMMEXT(siV); fSETWORD(0,RddV,SiV); fSETWORD(1,RddV,siV); }
COUNT_HELPER(A2_combineii);
return RddV;
})
DEF_QEMU(A4_combineii,{ fIMMEXT(UiV); fSETWORD(0,RddV,UiV); fSETWORD(1,RddV,siV); },
DEF_HELPER_3(A4_combineii, s64, env, s32, s32),
{
/* A4_combineii */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_IMM(siV,0);
DECL_IMM(UiV,1);
fWRAP_A4_combineii(gen_helper_A4_combineii(RddV, cpu_env, siV, UiV);,
{ fIMMEXT(UiV); fSETWORD(0,RddV,UiV); fSETWORD(1,RddV,siV); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_IMM(siV);
FREE_IMM(UiV);
/* A4_combineii */
},
int64_t HELPER(A4_combineii)(CPUHexagonState *env, int32_t siV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fIMMEXT(UiV); fSETWORD(0,RddV,UiV); fSETWORD(1,RddV,siV); }
COUNT_HELPER(A4_combineii);
return RddV;
})
DEF_QEMU(A2_combine_hh,{RdV = (fGETUHALF(1,RtV)<<16) | fGETUHALF(1,RsV);},
DEF_HELPER_3(A2_combine_hh, s32, env, s32, s32),
{
/* A2_combine_hh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_combine_hh(gen_helper_A2_combine_hh(RdV, cpu_env, RtV, RsV);,
{RdV = (fGETUHALF(1,RtV)<<16) | fGETUHALF(1,RsV);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_combine_hh */
},
int32_t HELPER(A2_combine_hh)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = (fGETUHALF(1,RtV)<<16) | fGETUHALF(1,RsV);}
COUNT_HELPER(A2_combine_hh);
return RdV;
})
DEF_QEMU(A2_combine_hl,{RdV = (fGETUHALF(1,RtV)<<16) | fGETUHALF(0,RsV);},
DEF_HELPER_3(A2_combine_hl, s32, env, s32, s32),
{
/* A2_combine_hl */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_combine_hl(gen_helper_A2_combine_hl(RdV, cpu_env, RtV, RsV);,
{RdV = (fGETUHALF(1,RtV)<<16) | fGETUHALF(0,RsV);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_combine_hl */
},
int32_t HELPER(A2_combine_hl)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = (fGETUHALF(1,RtV)<<16) | fGETUHALF(0,RsV);}
COUNT_HELPER(A2_combine_hl);
return RdV;
})
DEF_QEMU(A2_combine_lh,{RdV = (fGETUHALF(0,RtV)<<16) | fGETUHALF(1,RsV);},
DEF_HELPER_3(A2_combine_lh, s32, env, s32, s32),
{
/* A2_combine_lh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_combine_lh(gen_helper_A2_combine_lh(RdV, cpu_env, RtV, RsV);,
{RdV = (fGETUHALF(0,RtV)<<16) | fGETUHALF(1,RsV);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_combine_lh */
},
int32_t HELPER(A2_combine_lh)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = (fGETUHALF(0,RtV)<<16) | fGETUHALF(1,RsV);}
COUNT_HELPER(A2_combine_lh);
return RdV;
})
DEF_QEMU(A2_combine_ll,{RdV = (fGETUHALF(0,RtV)<<16) | fGETUHALF(0,RsV);},
DEF_HELPER_3(A2_combine_ll, s32, env, s32, s32),
{
/* A2_combine_ll */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_combine_ll(gen_helper_A2_combine_ll(RdV, cpu_env, RtV, RsV);,
{RdV = (fGETUHALF(0,RtV)<<16) | fGETUHALF(0,RsV);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_combine_ll */
},
int32_t HELPER(A2_combine_ll)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = (fGETUHALF(0,RtV)<<16) | fGETUHALF(0,RsV);}
COUNT_HELPER(A2_combine_ll);
return RdV;
})
DEF_QEMU(A2_tfril,{ fSETHALF(0,RxV,uiV);},
DEF_HELPER_3(A2_tfril, s32, env, s32, s32),
{
/* A2_tfril */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
fWRAP_A2_tfril(gen_helper_A2_tfril(RxV, cpu_env, RxV, uiV);,
{ fSETHALF(0,RxV,uiV);})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_IMM(uiV);
/* A2_tfril */
},
int32_t HELPER(A2_tfril)(CPUHexagonState *env, int32_t RxV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ fSETHALF(0,RxV,uiV);}
COUNT_HELPER(A2_tfril);
return RxV;
})
DEF_QEMU(A2_tfrih,{ fSETHALF(1,RxV,uiV);},
DEF_HELPER_3(A2_tfrih, s32, env, s32, s32),
{
/* A2_tfrih */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
fWRAP_A2_tfrih(gen_helper_A2_tfrih(RxV, cpu_env, RxV, uiV);,
{ fSETHALF(1,RxV,uiV);})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_IMM(uiV);
/* A2_tfrih */
},
int32_t HELPER(A2_tfrih)(CPUHexagonState *env, int32_t RxV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ fSETHALF(1,RxV,uiV);}
COUNT_HELPER(A2_tfrih);
return RxV;
})
DEF_QEMU(A2_tfrcrr,{ RdV=CsV;},
DEF_HELPER_2(A2_tfrcrr, s32, env, s32),
{
/* A2_tfrcrr */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_CREG_s(TCGv, CsV, CsN, 1, 0);
READ_CREG_s(CsV, CsN);
fWRAP_A2_tfrcrr(gen_helper_A2_tfrcrr(RdV, cpu_env, CsV);,
{ RdV=CsV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(CsV);
/* A2_tfrcrr */
},
int32_t HELPER(A2_tfrcrr)(CPUHexagonState *env, int32_t CsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=CsV;}
COUNT_HELPER(A2_tfrcrr);
return RdV;
})
DEF_QEMU(A2_tfrrcr,{ CdV=RsV;},
DEF_HELPER_2(A2_tfrrcr, s32, env, s32),
{
/* A2_tfrrcr */
DECL_CREG_d(TCGv, CdV, CdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_tfrrcr(gen_helper_A2_tfrrcr(CdV, cpu_env, RsV);,
{ CdV=RsV;})
WRITE_CREG(CdN,CdV);
FREE_REG_d(CdV);
FREE_REG_s(RsV);
/* A2_tfrrcr */
},
int32_t HELPER(A2_tfrrcr)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t CdV = 0;
{ CdV=RsV;}
COUNT_HELPER(A2_tfrrcr);
return CdV;
})
DEF_QEMU(A4_tfrcpp,{ RddV=CssV;},
DEF_HELPER_2(A4_tfrcpp, s64, env, s64),
{
/* A4_tfrcpp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, CssV, CssN, 1, 0);
READ_CREG_PAIR(CssV, CssN);
fWRAP_A4_tfrcpp(gen_helper_A4_tfrcpp(RddV, cpu_env, CssV);,
{ RddV=CssV;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(CssV);
/* A4_tfrcpp */
},
int64_t HELPER(A4_tfrcpp)(CPUHexagonState *env, int64_t CssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV=CssV;}
COUNT_HELPER(A4_tfrcpp);
return RddV;
})
DEF_QEMU(A4_tfrpcp,{ CddV=RssV;},
DEF_HELPER_2(A4_tfrpcp, s64, env, s64),
{
/* A4_tfrpcp */
DECL_PAIR_dd(TCGv_i64, CddV, CddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A4_tfrpcp(gen_helper_A4_tfrpcp(CddV, cpu_env, RssV);,
{ CddV=RssV;})
WRITE_CREG_PAIR(CddN,CddV);
FREE_REG_PAIR(CddV);
FREE_REG_PAIR(RssV);
/* A4_tfrpcp */
},
int64_t HELPER(A4_tfrpcp)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t CddV = 0;
{ CddV=RssV;}
COUNT_HELPER(A4_tfrpcp);
return CddV;
})
DEF_QEMU(A2_and,{ RdV=RsV&RtV;},
DEF_HELPER_3(A2_and, s32, env, s32, s32),
{
/* A2_and */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_and(gen_helper_A2_and(RdV, cpu_env, RsV, RtV);,
{ RdV=RsV&RtV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_and */
},
int32_t HELPER(A2_and)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=RsV&RtV;}
COUNT_HELPER(A2_and);
return RdV;
})
DEF_QEMU(A2_or,{ RdV=RsV|RtV;},
DEF_HELPER_3(A2_or, s32, env, s32, s32),
{
/* A2_or */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_or(gen_helper_A2_or(RdV, cpu_env, RsV, RtV);,
{ RdV=RsV|RtV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_or */
},
int32_t HELPER(A2_or)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=RsV|RtV;}
COUNT_HELPER(A2_or);
return RdV;
})
DEF_QEMU(A2_xor,{ RdV=RsV^RtV;},
DEF_HELPER_3(A2_xor, s32, env, s32, s32),
{
/* A2_xor */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_xor(gen_helper_A2_xor(RdV, cpu_env, RsV, RtV);,
{ RdV=RsV^RtV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_xor */
},
int32_t HELPER(A2_xor)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=RsV^RtV;}
COUNT_HELPER(A2_xor);
return RdV;
})
DEF_QEMU(M2_xor_xacc,{ RxV^=RsV^RtV;},
DEF_HELPER_4(M2_xor_xacc, s32, env, s32, s32, s32),
{
/* M2_xor_xacc */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M2_xor_xacc(gen_helper_M2_xor_xacc(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV^=RsV^RtV;})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M2_xor_xacc */
},
int32_t HELPER(M2_xor_xacc)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxV^=RsV^RtV;}
COUNT_HELPER(M2_xor_xacc);
return RxV;
})
DEF_QEMU(M4_xor_xacc,{ RxxV^=RssV^RttV;},
DEF_HELPER_4(M4_xor_xacc, s64, env, s64, s64, s64),
{
/* M4_xor_xacc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M4_xor_xacc(gen_helper_M4_xor_xacc(RxxV, cpu_env, RxxV, RssV, RttV);,
{ RxxV^=RssV^RttV;})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M4_xor_xacc */
},
int64_t HELPER(M4_xor_xacc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ RxxV^=RssV^RttV;}
COUNT_HELPER(M4_xor_xacc);
return RxxV;
})
DEF_QEMU(A4_andn,{ RdV = (RtV & ~RsV); },
DEF_HELPER_3(A4_andn, s32, env, s32, s32),
{
/* A4_andn */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A4_andn(gen_helper_A4_andn(RdV, cpu_env, RtV, RsV);,
{ RdV = (RtV & ~RsV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A4_andn */
},
int32_t HELPER(A4_andn)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = (RtV & ~RsV); }
COUNT_HELPER(A4_andn);
return RdV;
})
DEF_QEMU(A4_orn,{ RdV = (RtV | ~RsV); },
DEF_HELPER_3(A4_orn, s32, env, s32, s32),
{
/* A4_orn */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A4_orn(gen_helper_A4_orn(RdV, cpu_env, RtV, RsV);,
{ RdV = (RtV | ~RsV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A4_orn */
},
int32_t HELPER(A4_orn)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = (RtV | ~RsV); }
COUNT_HELPER(A4_orn);
return RdV;
})
DEF_QEMU(A4_andnp,{ RddV = (RttV & ~RssV); },
DEF_HELPER_3(A4_andnp, s64, env, s64, s64),
{
/* A4_andnp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A4_andnp(gen_helper_A4_andnp(RddV, cpu_env, RttV, RssV);,
{ RddV = (RttV & ~RssV); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A4_andnp */
},
int64_t HELPER(A4_andnp)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = (RttV & ~RssV); }
COUNT_HELPER(A4_andnp);
return RddV;
})
DEF_QEMU(A4_ornp,{ RddV = (RttV | ~RssV); },
DEF_HELPER_3(A4_ornp, s64, env, s64, s64),
{
/* A4_ornp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A4_ornp(gen_helper_A4_ornp(RddV, cpu_env, RttV, RssV);,
{ RddV = (RttV | ~RssV); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A4_ornp */
},
int64_t HELPER(A4_ornp)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = (RttV | ~RssV); }
COUNT_HELPER(A4_ornp);
return RddV;
})
DEF_QEMU(S4_addaddi,{ RdV = RsV + RuV + fIMMEXT(siV); },
DEF_HELPER_4(S4_addaddi, s32, env, s32, s32, s32),
{
/* S4_addaddi */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
fWRAP_S4_addaddi(gen_helper_S4_addaddi(RdV, cpu_env, RsV, RuV, siV);,
{ RdV = RsV + RuV + fIMMEXT(siV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_IMM(siV);
/* S4_addaddi */
},
int32_t HELPER(S4_addaddi)(CPUHexagonState *env, int32_t RsV, int32_t RuV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = RsV + RuV + fIMMEXT(siV); }
COUNT_HELPER(S4_addaddi);
return RdV;
})
DEF_QEMU(S4_subaddi,{ RdV = RsV - RuV + fIMMEXT(siV); },
DEF_HELPER_4(S4_subaddi, s32, env, s32, s32, s32),
{
/* S4_subaddi */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_u(RuV, RuN);
fWRAP_S4_subaddi(gen_helper_S4_subaddi(RdV, cpu_env, RsV, RuV, siV);,
{ RdV = RsV - RuV + fIMMEXT(siV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_u(RuV);
FREE_IMM(siV);
/* S4_subaddi */
},
int32_t HELPER(S4_subaddi)(CPUHexagonState *env, int32_t RsV, int32_t RuV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = RsV - RuV + fIMMEXT(siV); }
COUNT_HELPER(S4_subaddi);
return RdV;
})
DEF_QEMU(M4_and_and,{ RxV &= (RsV & RtV); },
DEF_HELPER_4(M4_and_and, s32, env, s32, s32, s32),
{
/* M4_and_and */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_and_and(gen_helper_M4_and_and(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV &= (RsV & RtV); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M4_and_and */
},
int32_t HELPER(M4_and_and)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxV &= (RsV & RtV); }
COUNT_HELPER(M4_and_and);
return RxV;
})
DEF_QEMU(M4_and_andn,{ RxV &= (RsV & ~RtV); },
DEF_HELPER_4(M4_and_andn, s32, env, s32, s32, s32),
{
/* M4_and_andn */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_and_andn(gen_helper_M4_and_andn(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV &= (RsV & ~RtV); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M4_and_andn */
},
int32_t HELPER(M4_and_andn)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxV &= (RsV & ~RtV); }
COUNT_HELPER(M4_and_andn);
return RxV;
})
DEF_QEMU(M4_and_or,{ RxV &= (RsV | RtV); },
DEF_HELPER_4(M4_and_or, s32, env, s32, s32, s32),
{
/* M4_and_or */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_and_or(gen_helper_M4_and_or(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV &= (RsV | RtV); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M4_and_or */
},
int32_t HELPER(M4_and_or)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxV &= (RsV | RtV); }
COUNT_HELPER(M4_and_or);
return RxV;
})
DEF_QEMU(M4_and_xor,{ RxV &= (RsV ^ RtV); },
DEF_HELPER_4(M4_and_xor, s32, env, s32, s32, s32),
{
/* M4_and_xor */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_and_xor(gen_helper_M4_and_xor(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV &= (RsV ^ RtV); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M4_and_xor */
},
int32_t HELPER(M4_and_xor)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxV &= (RsV ^ RtV); }
COUNT_HELPER(M4_and_xor);
return RxV;
})
DEF_QEMU(M4_or_and,{ RxV |= (RsV & RtV); },
DEF_HELPER_4(M4_or_and, s32, env, s32, s32, s32),
{
/* M4_or_and */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_or_and(gen_helper_M4_or_and(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV |= (RsV & RtV); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M4_or_and */
},
int32_t HELPER(M4_or_and)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxV |= (RsV & RtV); }
COUNT_HELPER(M4_or_and);
return RxV;
})
DEF_QEMU(M4_or_andn,{ RxV |= (RsV & ~RtV); },
DEF_HELPER_4(M4_or_andn, s32, env, s32, s32, s32),
{
/* M4_or_andn */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_or_andn(gen_helper_M4_or_andn(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV |= (RsV & ~RtV); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M4_or_andn */
},
int32_t HELPER(M4_or_andn)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxV |= (RsV & ~RtV); }
COUNT_HELPER(M4_or_andn);
return RxV;
})
DEF_QEMU(M4_or_or,{ RxV |= (RsV | RtV); },
DEF_HELPER_4(M4_or_or, s32, env, s32, s32, s32),
{
/* M4_or_or */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_or_or(gen_helper_M4_or_or(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV |= (RsV | RtV); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M4_or_or */
},
int32_t HELPER(M4_or_or)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxV |= (RsV | RtV); }
COUNT_HELPER(M4_or_or);
return RxV;
})
DEF_QEMU(M4_or_xor,{ RxV |= (RsV ^ RtV); },
DEF_HELPER_4(M4_or_xor, s32, env, s32, s32, s32),
{
/* M4_or_xor */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_or_xor(gen_helper_M4_or_xor(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV |= (RsV ^ RtV); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M4_or_xor */
},
int32_t HELPER(M4_or_xor)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxV |= (RsV ^ RtV); }
COUNT_HELPER(M4_or_xor);
return RxV;
})
DEF_QEMU(S4_or_andix,{ RxV = RuV | (RxV & fIMMEXT(siV)); },
DEF_HELPER_4(S4_or_andix, s32, env, s32, s32, s32),
{
/* S4_or_andix */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_u(TCGv, RuV, RuN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_u(RuV, RuN);
fWRAP_S4_or_andix(gen_helper_S4_or_andix(RxV, cpu_env, RxV, RuV, siV);,
{ RxV = RuV | (RxV & fIMMEXT(siV)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_u(RuV);
FREE_IMM(siV);
/* S4_or_andix */
},
int32_t HELPER(S4_or_andix)(CPUHexagonState *env, int32_t RxV, int32_t RuV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
{ RxV = RuV | (RxV & fIMMEXT(siV)); }
COUNT_HELPER(S4_or_andix);
return RxV;
})
DEF_QEMU(S4_or_andi,{ RxV = RxV | (RsV & fIMMEXT(siV)); },
DEF_HELPER_4(S4_or_andi, s32, env, s32, s32, s32),
{
/* S4_or_andi */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S4_or_andi(gen_helper_S4_or_andi(RxV, cpu_env, RxV, RsV, siV);,
{ RxV = RxV | (RsV & fIMMEXT(siV)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* S4_or_andi */
},
int32_t HELPER(S4_or_andi)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
{ RxV = RxV | (RsV & fIMMEXT(siV)); }
COUNT_HELPER(S4_or_andi);
return RxV;
})
DEF_QEMU(S4_or_ori,{ RxV = RxV | (RsV | fIMMEXT(siV)); },
DEF_HELPER_4(S4_or_ori, s32, env, s32, s32, s32),
{
/* S4_or_ori */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S4_or_ori(gen_helper_S4_or_ori(RxV, cpu_env, RxV, RsV, siV);,
{ RxV = RxV | (RsV | fIMMEXT(siV)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* S4_or_ori */
},
int32_t HELPER(S4_or_ori)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
{ RxV = RxV | (RsV | fIMMEXT(siV)); }
COUNT_HELPER(S4_or_ori);
return RxV;
})
DEF_QEMU(M4_xor_and,{ RxV ^= (RsV & RtV); },
DEF_HELPER_4(M4_xor_and, s32, env, s32, s32, s32),
{
/* M4_xor_and */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_xor_and(gen_helper_M4_xor_and(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV ^= (RsV & RtV); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M4_xor_and */
},
int32_t HELPER(M4_xor_and)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxV ^= (RsV & RtV); }
COUNT_HELPER(M4_xor_and);
return RxV;
})
DEF_QEMU(M4_xor_or,{ RxV ^= (RsV | RtV); },
DEF_HELPER_4(M4_xor_or, s32, env, s32, s32, s32),
{
/* M4_xor_or */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_xor_or(gen_helper_M4_xor_or(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV ^= (RsV | RtV); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M4_xor_or */
},
int32_t HELPER(M4_xor_or)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxV ^= (RsV | RtV); }
COUNT_HELPER(M4_xor_or);
return RxV;
})
DEF_QEMU(M4_xor_andn,{ RxV ^= (RsV & ~RtV); },
DEF_HELPER_4(M4_xor_andn, s32, env, s32, s32, s32),
{
/* M4_xor_andn */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_M4_xor_andn(gen_helper_M4_xor_andn(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV ^= (RsV & ~RtV); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* M4_xor_andn */
},
int32_t HELPER(M4_xor_andn)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ RxV ^= (RsV & ~RtV); }
COUNT_HELPER(M4_xor_andn);
return RxV;
})
DEF_QEMU(A2_subri,{ fIMMEXT(siV); RdV=siV-RsV;},
DEF_HELPER_3(A2_subri, s32, env, s32, s32),
{
/* A2_subri */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_subri(gen_helper_A2_subri(RdV, cpu_env, RsV, siV);,
{ fIMMEXT(siV); RdV=siV-RsV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* A2_subri */
},
int32_t HELPER(A2_subri)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fIMMEXT(siV); RdV=siV-RsV;}
COUNT_HELPER(A2_subri);
return RdV;
})
DEF_QEMU(A2_andir,{ fIMMEXT(siV); RdV=RsV&siV;},
DEF_HELPER_3(A2_andir, s32, env, s32, s32),
{
/* A2_andir */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_andir(gen_helper_A2_andir(RdV, cpu_env, RsV, siV);,
{ fIMMEXT(siV); RdV=RsV&siV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* A2_andir */
},
int32_t HELPER(A2_andir)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fIMMEXT(siV); RdV=RsV&siV;}
COUNT_HELPER(A2_andir);
return RdV;
})
DEF_QEMU(A2_orir,{ fIMMEXT(siV); RdV=RsV|siV;},
DEF_HELPER_3(A2_orir, s32, env, s32, s32),
{
/* A2_orir */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_orir(gen_helper_A2_orir(RdV, cpu_env, RsV, siV);,
{ fIMMEXT(siV); RdV=RsV|siV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* A2_orir */
},
int32_t HELPER(A2_orir)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fIMMEXT(siV); RdV=RsV|siV;}
COUNT_HELPER(A2_orir);
return RdV;
})
DEF_QEMU(A2_andp,{ RddV=RssV&RttV;},
DEF_HELPER_3(A2_andp, s64, env, s64, s64),
{
/* A2_andp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_andp(gen_helper_A2_andp(RddV, cpu_env, RssV, RttV);,
{ RddV=RssV&RttV;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_andp */
},
int64_t HELPER(A2_andp)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV=RssV&RttV;}
COUNT_HELPER(A2_andp);
return RddV;
})
DEF_QEMU(A2_orp,{ RddV=RssV|RttV;},
DEF_HELPER_3(A2_orp, s64, env, s64, s64),
{
/* A2_orp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_orp(gen_helper_A2_orp(RddV, cpu_env, RssV, RttV);,
{ RddV=RssV|RttV;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_orp */
},
int64_t HELPER(A2_orp)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV=RssV|RttV;}
COUNT_HELPER(A2_orp);
return RddV;
})
DEF_QEMU(A2_xorp,{ RddV=RssV^RttV;},
DEF_HELPER_3(A2_xorp, s64, env, s64, s64),
{
/* A2_xorp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_xorp(gen_helper_A2_xorp(RddV, cpu_env, RssV, RttV);,
{ RddV=RssV^RttV;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_xorp */
},
int64_t HELPER(A2_xorp)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV=RssV^RttV;}
COUNT_HELPER(A2_xorp);
return RddV;
})
DEF_QEMU(A2_notp,{ RddV=~RssV;},
DEF_HELPER_2(A2_notp, s64, env, s64),
{
/* A2_notp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_notp(gen_helper_A2_notp(RddV, cpu_env, RssV);,
{ RddV=~RssV;})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* A2_notp */
},
int64_t HELPER(A2_notp)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV=~RssV;}
COUNT_HELPER(A2_notp);
return RddV;
})
DEF_QEMU(A2_sxtw,{ RddV = fCAST4_8s(RsV); },
DEF_HELPER_2(A2_sxtw, s64, env, s32),
{
/* A2_sxtw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_sxtw(gen_helper_A2_sxtw(RddV, cpu_env, RsV);,
{ RddV = fCAST4_8s(RsV); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* A2_sxtw */
},
int64_t HELPER(A2_sxtw)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fCAST4_8s(RsV); }
COUNT_HELPER(A2_sxtw);
return RddV;
})
DEF_QEMU(A2_sat,{ RdV = fSAT(RssV); },
DEF_HELPER_2(A2_sat, s32, env, s64),
{
/* A2_sat */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_sat(gen_helper_A2_sat(RdV, cpu_env, RssV);,
{ RdV = fSAT(RssV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* A2_sat */
},
int32_t HELPER(A2_sat)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fSAT(RssV); }
COUNT_HELPER(A2_sat);
return RdV;
})
DEF_QEMU(A2_roundsat,{ fHIDE(size8s_t tmp;) fADDSAT64(tmp,RssV,0x080000000ULL); RdV = fGETWORD(1,tmp); },
DEF_HELPER_2(A2_roundsat, s32, env, s64),
{
/* A2_roundsat */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_roundsat(gen_helper_A2_roundsat(RdV, cpu_env, RssV);,
{ fHIDE(size8s_t tmp;) fADDSAT64(tmp,RssV,0x080000000ULL); RdV = fGETWORD(1,tmp); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* A2_roundsat */
},
int32_t HELPER(A2_roundsat)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(size8s_t tmp;) fADDSAT64(tmp,RssV,0x080000000ULL); RdV = fGETWORD(1,tmp); }
COUNT_HELPER(A2_roundsat);
return RdV;
})
DEF_QEMU(A2_sath,{ RdV = fSATH(RsV); },
DEF_HELPER_2(A2_sath, s32, env, s32),
{
/* A2_sath */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_sath(gen_helper_A2_sath(RdV, cpu_env, RsV);,
{ RdV = fSATH(RsV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A2_sath */
},
int32_t HELPER(A2_sath)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fSATH(RsV); }
COUNT_HELPER(A2_sath);
return RdV;
})
DEF_QEMU(A2_satuh,{ RdV = fSATUH(RsV); },
DEF_HELPER_2(A2_satuh, s32, env, s32),
{
/* A2_satuh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_satuh(gen_helper_A2_satuh(RdV, cpu_env, RsV);,
{ RdV = fSATUH(RsV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A2_satuh */
},
int32_t HELPER(A2_satuh)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fSATUH(RsV); }
COUNT_HELPER(A2_satuh);
return RdV;
})
DEF_QEMU(A2_satub,{ RdV = fSATUB(RsV); },
DEF_HELPER_2(A2_satub, s32, env, s32),
{
/* A2_satub */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_satub(gen_helper_A2_satub(RdV, cpu_env, RsV);,
{ RdV = fSATUB(RsV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A2_satub */
},
int32_t HELPER(A2_satub)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fSATUB(RsV); }
COUNT_HELPER(A2_satub);
return RdV;
})
DEF_QEMU(A2_satb,{ RdV = fSATB(RsV); },
DEF_HELPER_2(A2_satb, s32, env, s32),
{
/* A2_satb */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_satb(gen_helper_A2_satb(RdV, cpu_env, RsV);,
{ RdV = fSATB(RsV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A2_satb */
},
int32_t HELPER(A2_satb)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fSATB(RsV); }
COUNT_HELPER(A2_satb);
return RdV;
})
DEF_QEMU(A2_vaddub,{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,(fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV))); } },
DEF_HELPER_3(A2_vaddub, s64, env, s64, s64),
{
/* A2_vaddub */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vaddub(gen_helper_A2_vaddub(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,(fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vaddub */
},
int64_t HELPER(A2_vaddub)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,(fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV))); } }
COUNT_HELPER(A2_vaddub);
return RddV;
})
DEF_QEMU(A2_vaddubs,{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fSATUN(8,fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV))); } },
DEF_HELPER_3(A2_vaddubs, s64, env, s64, s64),
{
/* A2_vaddubs */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vaddubs(gen_helper_A2_vaddubs(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fSATUN(8,fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vaddubs */
},
int64_t HELPER(A2_vaddubs)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fSATUN(8,fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV))); } }
COUNT_HELPER(A2_vaddubs);
return RddV;
})
DEF_QEMU(A2_vaddh,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETHALF(i,RssV)+fGETHALF(i,RttV)); } },
DEF_HELPER_3(A2_vaddh, s64, env, s64, s64),
{
/* A2_vaddh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vaddh(gen_helper_A2_vaddh(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETHALF(i,RssV)+fGETHALF(i,RttV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vaddh */
},
int64_t HELPER(A2_vaddh)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETHALF(i,RssV)+fGETHALF(i,RttV)); } }
COUNT_HELPER(A2_vaddh);
return RddV;
})
DEF_QEMU(A2_vaddhs,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATN(16,fGETHALF(i,RssV)+fGETHALF(i,RttV))); } },
DEF_HELPER_3(A2_vaddhs, s64, env, s64, s64),
{
/* A2_vaddhs */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vaddhs(gen_helper_A2_vaddhs(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATN(16,fGETHALF(i,RssV)+fGETHALF(i,RttV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vaddhs */
},
int64_t HELPER(A2_vaddhs)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATN(16,fGETHALF(i,RssV)+fGETHALF(i,RttV))); } }
COUNT_HELPER(A2_vaddhs);
return RddV;
})
DEF_QEMU(A2_vadduhs,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATUN(16,fGETUHALF(i,RssV)+fGETUHALF(i,RttV))); } },
DEF_HELPER_3(A2_vadduhs, s64, env, s64, s64),
{
/* A2_vadduhs */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vadduhs(gen_helper_A2_vadduhs(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATUN(16,fGETUHALF(i,RssV)+fGETUHALF(i,RttV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vadduhs */
},
int64_t HELPER(A2_vadduhs)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATUN(16,fGETUHALF(i,RssV)+fGETUHALF(i,RttV))); } }
COUNT_HELPER(A2_vadduhs);
return RddV;
})
DEF_QEMU(A5_vaddhubs,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV,fSATUB(fGETHALF(i,RssV)+fGETHALF(i,RttV))); } },
DEF_HELPER_3(A5_vaddhubs, s32, env, s64, s64),
{
/* A5_vaddhubs */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A5_vaddhubs(gen_helper_A5_vaddhubs(RdV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV,fSATUB(fGETHALF(i,RssV)+fGETHALF(i,RttV))); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A5_vaddhubs */
},
int32_t HELPER(A5_vaddhubs)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV,fSATUB(fGETHALF(i,RssV)+fGETHALF(i,RttV))); } }
COUNT_HELPER(A5_vaddhubs);
return RdV;
})
DEF_QEMU(A2_vaddw,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fGETWORD(i,RssV)+fGETWORD(i,RttV)); } },
DEF_HELPER_3(A2_vaddw, s64, env, s64, s64),
{
/* A2_vaddw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vaddw(gen_helper_A2_vaddw(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fGETWORD(i,RssV)+fGETWORD(i,RttV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vaddw */
},
int64_t HELPER(A2_vaddw)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fGETWORD(i,RssV)+fGETWORD(i,RttV)); } }
COUNT_HELPER(A2_vaddw);
return RddV;
})
DEF_QEMU(A2_vaddws,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSATN(32,fGETWORD(i,RssV)+fGETWORD(i,RttV))); } },
DEF_HELPER_3(A2_vaddws, s64, env, s64, s64),
{
/* A2_vaddws */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vaddws(gen_helper_A2_vaddws(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSATN(32,fGETWORD(i,RssV)+fGETWORD(i,RttV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vaddws */
},
int64_t HELPER(A2_vaddws)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSATN(32,fGETWORD(i,RssV)+fGETWORD(i,RttV))); } }
COUNT_HELPER(A2_vaddws);
return RddV;
})
DEF_QEMU(S4_vxaddsubw,{ fSETWORD(0,RddV,fSAT(fGETWORD(0,RssV)+fGETWORD(1,RttV))); fSETWORD(1,RddV,fSAT(fGETWORD(1,RssV)-fGETWORD(0,RttV))); },
DEF_HELPER_3(S4_vxaddsubw, s64, env, s64, s64),
{
/* S4_vxaddsubw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_vxaddsubw(gen_helper_S4_vxaddsubw(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(0,RddV,fSAT(fGETWORD(0,RssV)+fGETWORD(1,RttV))); fSETWORD(1,RddV,fSAT(fGETWORD(1,RssV)-fGETWORD(0,RttV))); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S4_vxaddsubw */
},
int64_t HELPER(S4_vxaddsubw)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,fSAT(fGETWORD(0,RssV)+fGETWORD(1,RttV))); fSETWORD(1,RddV,fSAT(fGETWORD(1,RssV)-fGETWORD(0,RttV))); }
COUNT_HELPER(S4_vxaddsubw);
return RddV;
})
DEF_QEMU(S4_vxsubaddw,{ fSETWORD(0,RddV,fSAT(fGETWORD(0,RssV)-fGETWORD(1,RttV))); fSETWORD(1,RddV,fSAT(fGETWORD(1,RssV)+fGETWORD(0,RttV))); },
DEF_HELPER_3(S4_vxsubaddw, s64, env, s64, s64),
{
/* S4_vxsubaddw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_vxsubaddw(gen_helper_S4_vxsubaddw(RddV, cpu_env, RssV, RttV);,
{ fSETWORD(0,RddV,fSAT(fGETWORD(0,RssV)-fGETWORD(1,RttV))); fSETWORD(1,RddV,fSAT(fGETWORD(1,RssV)+fGETWORD(0,RttV))); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S4_vxsubaddw */
},
int64_t HELPER(S4_vxsubaddw)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,fSAT(fGETWORD(0,RssV)-fGETWORD(1,RttV))); fSETWORD(1,RddV,fSAT(fGETWORD(1,RssV)+fGETWORD(0,RttV))); }
COUNT_HELPER(S4_vxsubaddw);
return RddV;
})
DEF_QEMU(S4_vxaddsubh,{ fSETHALF(0,RddV,fSATH(fGETHALF(0,RssV)+fGETHALF(1,RttV))); fSETHALF(1,RddV,fSATH(fGETHALF(1,RssV)-fGETHALF(0,RttV))); fSETHALF(2,RddV,fSATH(fGETHALF(2,RssV)+fGETHALF(3,RttV))); fSETHALF(3,RddV,fSATH(fGETHALF(3,RssV)-fGETHALF(2,RttV))); },
DEF_HELPER_3(S4_vxaddsubh, s64, env, s64, s64),
{
/* S4_vxaddsubh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_vxaddsubh(gen_helper_S4_vxaddsubh(RddV, cpu_env, RssV, RttV);,
{ fSETHALF(0,RddV,fSATH(fGETHALF(0,RssV)+fGETHALF(1,RttV))); fSETHALF(1,RddV,fSATH(fGETHALF(1,RssV)-fGETHALF(0,RttV))); fSETHALF(2,RddV,fSATH(fGETHALF(2,RssV)+fGETHALF(3,RttV))); fSETHALF(3,RddV,fSATH(fGETHALF(3,RssV)-fGETHALF(2,RttV))); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S4_vxaddsubh */
},
int64_t HELPER(S4_vxaddsubh)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETHALF(0,RddV,fSATH(fGETHALF(0,RssV)+fGETHALF(1,RttV))); fSETHALF(1,RddV,fSATH(fGETHALF(1,RssV)-fGETHALF(0,RttV))); fSETHALF(2,RddV,fSATH(fGETHALF(2,RssV)+fGETHALF(3,RttV))); fSETHALF(3,RddV,fSATH(fGETHALF(3,RssV)-fGETHALF(2,RttV))); }
COUNT_HELPER(S4_vxaddsubh);
return RddV;
})
DEF_QEMU(S4_vxsubaddh,{ fSETHALF(0,RddV,fSATH(fGETHALF(0,RssV)-fGETHALF(1,RttV))); fSETHALF(1,RddV,fSATH(fGETHALF(1,RssV)+fGETHALF(0,RttV))); fSETHALF(2,RddV,fSATH(fGETHALF(2,RssV)-fGETHALF(3,RttV))); fSETHALF(3,RddV,fSATH(fGETHALF(3,RssV)+fGETHALF(2,RttV))); },
DEF_HELPER_3(S4_vxsubaddh, s64, env, s64, s64),
{
/* S4_vxsubaddh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_vxsubaddh(gen_helper_S4_vxsubaddh(RddV, cpu_env, RssV, RttV);,
{ fSETHALF(0,RddV,fSATH(fGETHALF(0,RssV)-fGETHALF(1,RttV))); fSETHALF(1,RddV,fSATH(fGETHALF(1,RssV)+fGETHALF(0,RttV))); fSETHALF(2,RddV,fSATH(fGETHALF(2,RssV)-fGETHALF(3,RttV))); fSETHALF(3,RddV,fSATH(fGETHALF(3,RssV)+fGETHALF(2,RttV))); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S4_vxsubaddh */
},
int64_t HELPER(S4_vxsubaddh)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETHALF(0,RddV,fSATH(fGETHALF(0,RssV)-fGETHALF(1,RttV))); fSETHALF(1,RddV,fSATH(fGETHALF(1,RssV)+fGETHALF(0,RttV))); fSETHALF(2,RddV,fSATH(fGETHALF(2,RssV)-fGETHALF(3,RttV))); fSETHALF(3,RddV,fSATH(fGETHALF(3,RssV)+fGETHALF(2,RttV))); }
COUNT_HELPER(S4_vxsubaddh);
return RddV;
})
DEF_QEMU(S4_vxaddsubhr,{ fSETHALF(0,RddV,fSATH((fGETHALF(0,RssV)+fGETHALF(1,RttV)+1)>>1)); fSETHALF(1,RddV,fSATH((fGETHALF(1,RssV)-fGETHALF(0,RttV)+1)>>1)); fSETHALF(2,RddV,fSATH((fGETHALF(2,RssV)+fGETHALF(3,RttV)+1)>>1)); fSETHALF(3,RddV,fSATH((fGETHALF(3,RssV)-fGETHALF(2,RttV)+1)>>1)); },
DEF_HELPER_3(S4_vxaddsubhr, s64, env, s64, s64),
{
/* S4_vxaddsubhr */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_vxaddsubhr(gen_helper_S4_vxaddsubhr(RddV, cpu_env, RssV, RttV);,
{ fSETHALF(0,RddV,fSATH((fGETHALF(0,RssV)+fGETHALF(1,RttV)+1)>>1)); fSETHALF(1,RddV,fSATH((fGETHALF(1,RssV)-fGETHALF(0,RttV)+1)>>1)); fSETHALF(2,RddV,fSATH((fGETHALF(2,RssV)+fGETHALF(3,RttV)+1)>>1)); fSETHALF(3,RddV,fSATH((fGETHALF(3,RssV)-fGETHALF(2,RttV)+1)>>1)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S4_vxaddsubhr */
},
int64_t HELPER(S4_vxaddsubhr)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETHALF(0,RddV,fSATH((fGETHALF(0,RssV)+fGETHALF(1,RttV)+1)>>1)); fSETHALF(1,RddV,fSATH((fGETHALF(1,RssV)-fGETHALF(0,RttV)+1)>>1)); fSETHALF(2,RddV,fSATH((fGETHALF(2,RssV)+fGETHALF(3,RttV)+1)>>1)); fSETHALF(3,RddV,fSATH((fGETHALF(3,RssV)-fGETHALF(2,RttV)+1)>>1)); }
COUNT_HELPER(S4_vxaddsubhr);
return RddV;
})
DEF_QEMU(S4_vxsubaddhr,{ fSETHALF(0,RddV,fSATH((fGETHALF(0,RssV)-fGETHALF(1,RttV)+1)>>1)); fSETHALF(1,RddV,fSATH((fGETHALF(1,RssV)+fGETHALF(0,RttV)+1)>>1)); fSETHALF(2,RddV,fSATH((fGETHALF(2,RssV)-fGETHALF(3,RttV)+1)>>1)); fSETHALF(3,RddV,fSATH((fGETHALF(3,RssV)+fGETHALF(2,RttV)+1)>>1)); },
DEF_HELPER_3(S4_vxsubaddhr, s64, env, s64, s64),
{
/* S4_vxsubaddhr */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_vxsubaddhr(gen_helper_S4_vxsubaddhr(RddV, cpu_env, RssV, RttV);,
{ fSETHALF(0,RddV,fSATH((fGETHALF(0,RssV)-fGETHALF(1,RttV)+1)>>1)); fSETHALF(1,RddV,fSATH((fGETHALF(1,RssV)+fGETHALF(0,RttV)+1)>>1)); fSETHALF(2,RddV,fSATH((fGETHALF(2,RssV)-fGETHALF(3,RttV)+1)>>1)); fSETHALF(3,RddV,fSATH((fGETHALF(3,RssV)+fGETHALF(2,RttV)+1)>>1)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S4_vxsubaddhr */
},
int64_t HELPER(S4_vxsubaddhr)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETHALF(0,RddV,fSATH((fGETHALF(0,RssV)-fGETHALF(1,RttV)+1)>>1)); fSETHALF(1,RddV,fSATH((fGETHALF(1,RssV)+fGETHALF(0,RttV)+1)>>1)); fSETHALF(2,RddV,fSATH((fGETHALF(2,RssV)-fGETHALF(3,RttV)+1)>>1)); fSETHALF(3,RddV,fSATH((fGETHALF(3,RssV)+fGETHALF(2,RttV)+1)>>1)); }
COUNT_HELPER(S4_vxsubaddhr);
return RddV;
})
DEF_QEMU(A2_svavgh,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,((fGETHALF(i,RsV)+fGETHALF(i,RtV))>>1)); } },
DEF_HELPER_3(A2_svavgh, s32, env, s32, s32),
{
/* A2_svavgh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_svavgh(gen_helper_A2_svavgh(RdV, cpu_env, RsV, RtV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,((fGETHALF(i,RsV)+fGETHALF(i,RtV))>>1)); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_svavgh */
},
int32_t HELPER(A2_svavgh)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,((fGETHALF(i,RsV)+fGETHALF(i,RtV))>>1)); } }
COUNT_HELPER(A2_svavgh);
return RdV;
})
DEF_QEMU(A2_svavghs,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,((fGETHALF(i,RsV)+fGETHALF(i,RtV)+1)>>1)); } },
DEF_HELPER_3(A2_svavghs, s32, env, s32, s32),
{
/* A2_svavghs */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_svavghs(gen_helper_A2_svavghs(RdV, cpu_env, RsV, RtV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,((fGETHALF(i,RsV)+fGETHALF(i,RtV)+1)>>1)); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_svavghs */
},
int32_t HELPER(A2_svavghs)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,((fGETHALF(i,RsV)+fGETHALF(i,RtV)+1)>>1)); } }
COUNT_HELPER(A2_svavghs);
return RdV;
})
DEF_QEMU(A2_svnavgh,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,((fGETHALF(i,RtV)-fGETHALF(i,RsV))>>1)); } },
DEF_HELPER_3(A2_svnavgh, s32, env, s32, s32),
{
/* A2_svnavgh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_svnavgh(gen_helper_A2_svnavgh(RdV, cpu_env, RtV, RsV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,((fGETHALF(i,RtV)-fGETHALF(i,RsV))>>1)); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_svnavgh */
},
int32_t HELPER(A2_svnavgh)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,((fGETHALF(i,RtV)-fGETHALF(i,RsV))>>1)); } }
COUNT_HELPER(A2_svnavgh);
return RdV;
})
DEF_QEMU(A2_svaddh,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(i,RsV)+fGETHALF(i,RtV)); } },
DEF_HELPER_3(A2_svaddh, s32, env, s32, s32),
{
/* A2_svaddh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_svaddh(gen_helper_A2_svaddh(RdV, cpu_env, RsV, RtV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(i,RsV)+fGETHALF(i,RtV)); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_svaddh */
},
int32_t HELPER(A2_svaddh)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(i,RsV)+fGETHALF(i,RtV)); } }
COUNT_HELPER(A2_svaddh);
return RdV;
})
DEF_QEMU(A2_svaddhs,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATN(16,fGETHALF(i,RsV)+fGETHALF(i,RtV))); } },
DEF_HELPER_3(A2_svaddhs, s32, env, s32, s32),
{
/* A2_svaddhs */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_svaddhs(gen_helper_A2_svaddhs(RdV, cpu_env, RsV, RtV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATN(16,fGETHALF(i,RsV)+fGETHALF(i,RtV))); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_svaddhs */
},
int32_t HELPER(A2_svaddhs)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATN(16,fGETHALF(i,RsV)+fGETHALF(i,RtV))); } }
COUNT_HELPER(A2_svaddhs);
return RdV;
})
DEF_QEMU(A2_svadduhs,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATUN(16,fGETUHALF(i,RsV)+fGETUHALF(i,RtV))); } },
DEF_HELPER_3(A2_svadduhs, s32, env, s32, s32),
{
/* A2_svadduhs */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A2_svadduhs(gen_helper_A2_svadduhs(RdV, cpu_env, RsV, RtV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATUN(16,fGETUHALF(i,RsV)+fGETUHALF(i,RtV))); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A2_svadduhs */
},
int32_t HELPER(A2_svadduhs)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATUN(16,fGETUHALF(i,RsV)+fGETUHALF(i,RtV))); } }
COUNT_HELPER(A2_svadduhs);
return RdV;
})
DEF_QEMU(A2_svsubh,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(i,RtV)-fGETHALF(i,RsV)); } },
DEF_HELPER_3(A2_svsubh, s32, env, s32, s32),
{
/* A2_svsubh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_svsubh(gen_helper_A2_svsubh(RdV, cpu_env, RtV, RsV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(i,RtV)-fGETHALF(i,RsV)); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_svsubh */
},
int32_t HELPER(A2_svsubh)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(i,RtV)-fGETHALF(i,RsV)); } }
COUNT_HELPER(A2_svsubh);
return RdV;
})
DEF_QEMU(A2_svsubhs,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATN(16,fGETHALF(i,RtV)-fGETHALF(i,RsV))); } },
DEF_HELPER_3(A2_svsubhs, s32, env, s32, s32),
{
/* A2_svsubhs */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_svsubhs(gen_helper_A2_svsubhs(RdV, cpu_env, RtV, RsV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATN(16,fGETHALF(i,RtV)-fGETHALF(i,RsV))); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_svsubhs */
},
int32_t HELPER(A2_svsubhs)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATN(16,fGETHALF(i,RtV)-fGETHALF(i,RsV))); } }
COUNT_HELPER(A2_svsubhs);
return RdV;
})
DEF_QEMU(A2_svsubuhs,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATUN(16,fGETUHALF(i,RtV)-fGETUHALF(i,RsV))); } },
DEF_HELPER_3(A2_svsubuhs, s32, env, s32, s32),
{
/* A2_svsubuhs */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_A2_svsubuhs(gen_helper_A2_svsubuhs(RdV, cpu_env, RtV, RsV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATUN(16,fGETUHALF(i,RtV)-fGETUHALF(i,RsV))); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
/* A2_svsubuhs */
},
int32_t HELPER(A2_svsubuhs)(CPUHexagonState *env, int32_t RtV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATUN(16,fGETUHALF(i,RtV)-fGETUHALF(i,RsV))); } }
COUNT_HELPER(A2_svsubuhs);
return RdV;
})
DEF_QEMU(A2_vraddub,{ fHIDE(int i;) RddV = 0; for (i=0;i<4;i++) { fSETWORD(0,RddV,(fGETWORD(0,RddV) + (fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)))); } for (i=4;i<8;i++) { fSETWORD(1,RddV,(fGETWORD(1,RddV) + (fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)))); } },
DEF_HELPER_3(A2_vraddub, s64, env, s64, s64),
{
/* A2_vraddub */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vraddub(gen_helper_A2_vraddub(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) RddV = 0; for (i=0;i<4;i++) { fSETWORD(0,RddV,(fGETWORD(0,RddV) + (fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)))); } for (i=4;i<8;i++) { fSETWORD(1,RddV,(fGETWORD(1,RddV) + (fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vraddub */
},
int64_t HELPER(A2_vraddub)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) RddV = 0; for (i=0;i<4;i++) { fSETWORD(0,RddV,(fGETWORD(0,RddV) + (fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)))); } for (i=4;i<8;i++) { fSETWORD(1,RddV,(fGETWORD(1,RddV) + (fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)))); } }
COUNT_HELPER(A2_vraddub);
return RddV;
})
DEF_QEMU(A2_vraddub_acc,{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETWORD(0,RxxV,(fGETWORD(0,RxxV) + (fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)))); } for (i = 4; i < 8; i++) { fSETWORD(1,RxxV,(fGETWORD(1,RxxV) + (fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)))); } fACC();},
DEF_HELPER_4(A2_vraddub_acc, s64, env, s64, s64, s64),
{
/* A2_vraddub_acc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vraddub_acc(gen_helper_A2_vraddub_acc(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETWORD(0,RxxV,(fGETWORD(0,RxxV) + (fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)))); } for (i = 4; i < 8; i++) { fSETWORD(1,RxxV,(fGETWORD(1,RxxV) + (fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)))); } fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vraddub_acc */
},
int64_t HELPER(A2_vraddub_acc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETWORD(0,RxxV,(fGETWORD(0,RxxV) + (fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)))); } for (i = 4; i < 8; i++) { fSETWORD(1,RxxV,(fGETWORD(1,RxxV) + (fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)))); } fACC();}
COUNT_HELPER(A2_vraddub_acc);
return RxxV;
})
DEF_QEMU(M2_vraddh,{ fHIDE(int i;) RdV = 0; for (i=0;i<4;i++) { RdV += (fGETHALF(i,RssV)+fGETHALF(i,RttV)); } },
DEF_HELPER_3(M2_vraddh, s32, env, s64, s64),
{
/* M2_vraddh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vraddh(gen_helper_M2_vraddh(RdV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) RdV = 0; for (i=0;i<4;i++) { RdV += (fGETHALF(i,RssV)+fGETHALF(i,RttV)); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vraddh */
},
int32_t HELPER(M2_vraddh)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) RdV = 0; for (i=0;i<4;i++) { RdV += (fGETHALF(i,RssV)+fGETHALF(i,RttV)); } }
COUNT_HELPER(M2_vraddh);
return RdV;
})
DEF_QEMU(M2_vradduh,{ fHIDE(int i;) RdV = 0; for (i=0;i<4;i++) { RdV += (fGETUHALF(i,RssV)+fGETUHALF(i,RttV)); } },
DEF_HELPER_3(M2_vradduh, s32, env, s64, s64),
{
/* M2_vradduh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_M2_vradduh(gen_helper_M2_vradduh(RdV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) RdV = 0; for (i=0;i<4;i++) { RdV += (fGETUHALF(i,RssV)+fGETUHALF(i,RttV)); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* M2_vradduh */
},
int32_t HELPER(M2_vradduh)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) RdV = 0; for (i=0;i<4;i++) { RdV += (fGETUHALF(i,RssV)+fGETUHALF(i,RttV)); } }
COUNT_HELPER(M2_vradduh);
return RdV;
})
DEF_QEMU(A2_vsubub,{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,(fGETUBYTE(i,RttV)-fGETUBYTE(i,RssV))); } },
DEF_HELPER_3(A2_vsubub, s64, env, s64, s64),
{
/* A2_vsubub */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vsubub(gen_helper_A2_vsubub(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,(fGETUBYTE(i,RttV)-fGETUBYTE(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vsubub */
},
int64_t HELPER(A2_vsubub)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,(fGETUBYTE(i,RttV)-fGETUBYTE(i,RssV))); } }
COUNT_HELPER(A2_vsubub);
return RddV;
})
DEF_QEMU(A2_vsububs,{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fSATUN(8,fGETUBYTE(i,RttV)-fGETUBYTE(i,RssV))); } },
DEF_HELPER_3(A2_vsububs, s64, env, s64, s64),
{
/* A2_vsububs */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vsububs(gen_helper_A2_vsububs(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fSATUN(8,fGETUBYTE(i,RttV)-fGETUBYTE(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vsububs */
},
int64_t HELPER(A2_vsububs)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fSATUN(8,fGETUBYTE(i,RttV)-fGETUBYTE(i,RssV))); } }
COUNT_HELPER(A2_vsububs);
return RddV;
})
DEF_QEMU(A2_vsubh,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETHALF(i,RttV)-fGETHALF(i,RssV)); } },
DEF_HELPER_3(A2_vsubh, s64, env, s64, s64),
{
/* A2_vsubh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vsubh(gen_helper_A2_vsubh(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETHALF(i,RttV)-fGETHALF(i,RssV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vsubh */
},
int64_t HELPER(A2_vsubh)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETHALF(i,RttV)-fGETHALF(i,RssV)); } }
COUNT_HELPER(A2_vsubh);
return RddV;
})
DEF_QEMU(A2_vsubhs,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATN(16,fGETHALF(i,RttV)-fGETHALF(i,RssV))); } },
DEF_HELPER_3(A2_vsubhs, s64, env, s64, s64),
{
/* A2_vsubhs */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vsubhs(gen_helper_A2_vsubhs(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATN(16,fGETHALF(i,RttV)-fGETHALF(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vsubhs */
},
int64_t HELPER(A2_vsubhs)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATN(16,fGETHALF(i,RttV)-fGETHALF(i,RssV))); } }
COUNT_HELPER(A2_vsubhs);
return RddV;
})
DEF_QEMU(A2_vsubuhs,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATUN(16,fGETUHALF(i,RttV)-fGETUHALF(i,RssV))); } },
DEF_HELPER_3(A2_vsubuhs, s64, env, s64, s64),
{
/* A2_vsubuhs */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vsubuhs(gen_helper_A2_vsubuhs(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATUN(16,fGETUHALF(i,RttV)-fGETUHALF(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vsubuhs */
},
int64_t HELPER(A2_vsubuhs)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATUN(16,fGETUHALF(i,RttV)-fGETUHALF(i,RssV))); } }
COUNT_HELPER(A2_vsubuhs);
return RddV;
})
DEF_QEMU(A2_vsubw,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fGETWORD(i,RttV)-fGETWORD(i,RssV)); } },
DEF_HELPER_3(A2_vsubw, s64, env, s64, s64),
{
/* A2_vsubw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vsubw(gen_helper_A2_vsubw(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fGETWORD(i,RttV)-fGETWORD(i,RssV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vsubw */
},
int64_t HELPER(A2_vsubw)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fGETWORD(i,RttV)-fGETWORD(i,RssV)); } }
COUNT_HELPER(A2_vsubw);
return RddV;
})
DEF_QEMU(A2_vsubws,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSATN(32,fGETWORD(i,RttV)-fGETWORD(i,RssV))); } },
DEF_HELPER_3(A2_vsubws, s64, env, s64, s64),
{
/* A2_vsubws */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vsubws(gen_helper_A2_vsubws(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSATN(32,fGETWORD(i,RttV)-fGETWORD(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vsubws */
},
int64_t HELPER(A2_vsubws)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSATN(32,fGETWORD(i,RttV)-fGETWORD(i,RssV))); } }
COUNT_HELPER(A2_vsubws);
return RddV;
})
DEF_QEMU(A2_vabsh,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fABS(fGETHALF(i,RssV))); } },
DEF_HELPER_2(A2_vabsh, s64, env, s64),
{
/* A2_vabsh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vabsh(gen_helper_A2_vabsh(RddV, cpu_env, RssV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fABS(fGETHALF(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* A2_vabsh */
},
int64_t HELPER(A2_vabsh)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fABS(fGETHALF(i,RssV))); } }
COUNT_HELPER(A2_vabsh);
return RddV;
})
DEF_QEMU(A2_vabshsat,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATH(fABS(fGETHALF(i,RssV)))); } },
DEF_HELPER_2(A2_vabshsat, s64, env, s64),
{
/* A2_vabshsat */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vabshsat(gen_helper_A2_vabshsat(RddV, cpu_env, RssV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATH(fABS(fGETHALF(i,RssV)))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* A2_vabshsat */
},
int64_t HELPER(A2_vabshsat)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATH(fABS(fGETHALF(i,RssV)))); } }
COUNT_HELPER(A2_vabshsat);
return RddV;
})
DEF_QEMU(A2_vabsw,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fABS(fGETWORD(i,RssV))); } },
DEF_HELPER_2(A2_vabsw, s64, env, s64),
{
/* A2_vabsw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vabsw(gen_helper_A2_vabsw(RddV, cpu_env, RssV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fABS(fGETWORD(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* A2_vabsw */
},
int64_t HELPER(A2_vabsw)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fABS(fGETWORD(i,RssV))); } }
COUNT_HELPER(A2_vabsw);
return RddV;
})
DEF_QEMU(A2_vabswsat,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSAT(fABS(fGETWORD(i,RssV)))); } },
DEF_HELPER_2(A2_vabswsat, s64, env, s64),
{
/* A2_vabswsat */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vabswsat(gen_helper_A2_vabswsat(RddV, cpu_env, RssV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSAT(fABS(fGETWORD(i,RssV)))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* A2_vabswsat */
},
int64_t HELPER(A2_vabswsat)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSAT(fABS(fGETWORD(i,RssV)))); } }
COUNT_HELPER(A2_vabswsat);
return RddV;
})
DEF_QEMU(M2_vabsdiffw,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fABS(fGETWORD(i,RttV) - fGETWORD(i,RssV))); } },
DEF_HELPER_3(M2_vabsdiffw, s64, env, s64, s64),
{
/* M2_vabsdiffw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_M2_vabsdiffw(gen_helper_M2_vabsdiffw(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fABS(fGETWORD(i,RttV) - fGETWORD(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* M2_vabsdiffw */
},
int64_t HELPER(M2_vabsdiffw)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fABS(fGETWORD(i,RttV) - fGETWORD(i,RssV))); } }
COUNT_HELPER(M2_vabsdiffw);
return RddV;
})
DEF_QEMU(M2_vabsdiffh,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fABS(fGETHALF(i,RttV) - fGETHALF(i,RssV))); } },
DEF_HELPER_3(M2_vabsdiffh, s64, env, s64, s64),
{
/* M2_vabsdiffh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_M2_vabsdiffh(gen_helper_M2_vabsdiffh(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fABS(fGETHALF(i,RttV) - fGETHALF(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* M2_vabsdiffh */
},
int64_t HELPER(M2_vabsdiffh)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fABS(fGETHALF(i,RttV) - fGETHALF(i,RssV))); } }
COUNT_HELPER(M2_vabsdiffh);
return RddV;
})
DEF_QEMU(M6_vabsdiffb,{ fHIDE(int i;) for (i=0;i<8;i++) { fSETBYTE(i,RddV,fABS(fGETBYTE(i,RttV) - fGETBYTE(i,RssV))); } },
DEF_HELPER_3(M6_vabsdiffb, s64, env, s64, s64),
{
/* M6_vabsdiffb */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_M6_vabsdiffb(gen_helper_M6_vabsdiffb(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i=0;i<8;i++) { fSETBYTE(i,RddV,fABS(fGETBYTE(i,RttV) - fGETBYTE(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* M6_vabsdiffb */
},
int64_t HELPER(M6_vabsdiffb)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<8;i++) { fSETBYTE(i,RddV,fABS(fGETBYTE(i,RttV) - fGETBYTE(i,RssV))); } }
COUNT_HELPER(M6_vabsdiffb);
return RddV;
})
DEF_QEMU(M6_vabsdiffub,{ fHIDE(int i;) for (i=0;i<8;i++) { fSETBYTE(i,RddV,fABS(fGETUBYTE(i,RttV) - fGETUBYTE(i,RssV))); } },
DEF_HELPER_3(M6_vabsdiffub, s64, env, s64, s64),
{
/* M6_vabsdiffub */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_M6_vabsdiffub(gen_helper_M6_vabsdiffub(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i=0;i<8;i++) { fSETBYTE(i,RddV,fABS(fGETUBYTE(i,RttV) - fGETUBYTE(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* M6_vabsdiffub */
},
int64_t HELPER(M6_vabsdiffub)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<8;i++) { fSETBYTE(i,RddV,fABS(fGETUBYTE(i,RttV) - fGETUBYTE(i,RssV))); } }
COUNT_HELPER(M6_vabsdiffub);
return RddV;
})
DEF_QEMU(A2_vrsadub,{ fHIDE(int i;) RddV = 0; for (i = 0; i < 4; i++) { fSETWORD(0,RddV,(fGETWORD(0,RddV) + fABS((fGETUBYTE(i,RssV) - fGETUBYTE(i,RttV))))); } for (i = 4; i < 8; i++) { fSETWORD(1,RddV,(fGETWORD(1,RddV) + fABS((fGETUBYTE(i,RssV) - fGETUBYTE(i,RttV))))); } },
DEF_HELPER_3(A2_vrsadub, s64, env, s64, s64),
{
/* A2_vrsadub */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vrsadub(gen_helper_A2_vrsadub(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) RddV = 0; for (i = 0; i < 4; i++) { fSETWORD(0,RddV,(fGETWORD(0,RddV) + fABS((fGETUBYTE(i,RssV) - fGETUBYTE(i,RttV))))); } for (i = 4; i < 8; i++) { fSETWORD(1,RddV,(fGETWORD(1,RddV) + fABS((fGETUBYTE(i,RssV) - fGETUBYTE(i,RttV))))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vrsadub */
},
int64_t HELPER(A2_vrsadub)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) RddV = 0; for (i = 0; i < 4; i++) { fSETWORD(0,RddV,(fGETWORD(0,RddV) + fABS((fGETUBYTE(i,RssV) - fGETUBYTE(i,RttV))))); } for (i = 4; i < 8; i++) { fSETWORD(1,RddV,(fGETWORD(1,RddV) + fABS((fGETUBYTE(i,RssV) - fGETUBYTE(i,RttV))))); } }
COUNT_HELPER(A2_vrsadub);
return RddV;
})
DEF_QEMU(A2_vrsadub_acc,{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETWORD(0,RxxV,(fGETWORD(0,RxxV) + fABS((fGETUBYTE(i,RssV) - fGETUBYTE(i,RttV))))); } for (i = 4; i < 8; i++) { fSETWORD(1,RxxV,(fGETWORD(1,RxxV) + fABS((fGETUBYTE(i,RssV) - fGETUBYTE(i,RttV))))); } fACC();},
DEF_HELPER_4(A2_vrsadub_acc, s64, env, s64, s64, s64),
{
/* A2_vrsadub_acc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vrsadub_acc(gen_helper_A2_vrsadub_acc(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETWORD(0,RxxV,(fGETWORD(0,RxxV) + fABS((fGETUBYTE(i,RssV) - fGETUBYTE(i,RttV))))); } for (i = 4; i < 8; i++) { fSETWORD(1,RxxV,(fGETWORD(1,RxxV) + fABS((fGETUBYTE(i,RssV) - fGETUBYTE(i,RttV))))); } fACC();})
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vrsadub_acc */
},
int64_t HELPER(A2_vrsadub_acc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETWORD(0,RxxV,(fGETWORD(0,RxxV) + fABS((fGETUBYTE(i,RssV) - fGETUBYTE(i,RttV))))); } for (i = 4; i < 8; i++) { fSETWORD(1,RxxV,(fGETWORD(1,RxxV) + fABS((fGETUBYTE(i,RssV) - fGETUBYTE(i,RttV))))); } fACC();}
COUNT_HELPER(A2_vrsadub_acc);
return RxxV;
})
DEF_QEMU(A2_vavgub,{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,((fGETUBYTE(i,RssV) + fGETUBYTE(i,RttV))>>1)); } },
DEF_HELPER_3(A2_vavgub, s64, env, s64, s64),
{
/* A2_vavgub */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vavgub(gen_helper_A2_vavgub(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,((fGETUBYTE(i,RssV) + fGETUBYTE(i,RttV))>>1)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vavgub */
},
int64_t HELPER(A2_vavgub)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,((fGETUBYTE(i,RssV) + fGETUBYTE(i,RttV))>>1)); } }
COUNT_HELPER(A2_vavgub);
return RddV;
})
DEF_QEMU(A2_vavguh,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETUHALF(i,RssV)+fGETUHALF(i,RttV))>>1); } },
DEF_HELPER_3(A2_vavguh, s64, env, s64, s64),
{
/* A2_vavguh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vavguh(gen_helper_A2_vavguh(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETUHALF(i,RssV)+fGETUHALF(i,RttV))>>1); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vavguh */
},
int64_t HELPER(A2_vavguh)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETUHALF(i,RssV)+fGETUHALF(i,RttV))>>1); } }
COUNT_HELPER(A2_vavguh);
return RddV;
})
DEF_QEMU(A2_vavgh,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETHALF(i,RssV)+fGETHALF(i,RttV))>>1); } },
DEF_HELPER_3(A2_vavgh, s64, env, s64, s64),
{
/* A2_vavgh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vavgh(gen_helper_A2_vavgh(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETHALF(i,RssV)+fGETHALF(i,RttV))>>1); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vavgh */
},
int64_t HELPER(A2_vavgh)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETHALF(i,RssV)+fGETHALF(i,RttV))>>1); } }
COUNT_HELPER(A2_vavgh);
return RddV;
})
DEF_QEMU(A2_vnavgh,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETHALF(i,RttV)-fGETHALF(i,RssV))>>1); } },
DEF_HELPER_3(A2_vnavgh, s64, env, s64, s64),
{
/* A2_vnavgh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vnavgh(gen_helper_A2_vnavgh(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETHALF(i,RttV)-fGETHALF(i,RssV))>>1); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vnavgh */
},
int64_t HELPER(A2_vnavgh)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETHALF(i,RttV)-fGETHALF(i,RssV))>>1); } }
COUNT_HELPER(A2_vnavgh);
return RddV;
})
DEF_QEMU(A2_vavgw,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fSXTN(32,33,fGETWORD(i,RssV))+fSXTN(32,33,fGETWORD(i,RttV)))>>1); } },
DEF_HELPER_3(A2_vavgw, s64, env, s64, s64),
{
/* A2_vavgw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vavgw(gen_helper_A2_vavgw(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fSXTN(32,33,fGETWORD(i,RssV))+fSXTN(32,33,fGETWORD(i,RttV)))>>1); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vavgw */
},
int64_t HELPER(A2_vavgw)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fSXTN(32,33,fGETWORD(i,RssV))+fSXTN(32,33,fGETWORD(i,RttV)))>>1); } }
COUNT_HELPER(A2_vavgw);
return RddV;
})
DEF_QEMU(A2_vnavgw,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fSXTN(32,33,fGETWORD(i,RttV))-fSXTN(32,33,fGETWORD(i,RssV)))>>1); } },
DEF_HELPER_3(A2_vnavgw, s64, env, s64, s64),
{
/* A2_vnavgw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vnavgw(gen_helper_A2_vnavgw(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fSXTN(32,33,fGETWORD(i,RttV))-fSXTN(32,33,fGETWORD(i,RssV)))>>1); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vnavgw */
},
int64_t HELPER(A2_vnavgw)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fSXTN(32,33,fGETWORD(i,RttV))-fSXTN(32,33,fGETWORD(i,RssV)))>>1); } }
COUNT_HELPER(A2_vnavgw);
return RddV;
})
DEF_QEMU(A2_vavgwr,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fSXTN(32,33,fGETWORD(i,RssV))+fSXTN(32,33,fGETWORD(i,RttV))+1)>>1); } },
DEF_HELPER_3(A2_vavgwr, s64, env, s64, s64),
{
/* A2_vavgwr */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vavgwr(gen_helper_A2_vavgwr(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fSXTN(32,33,fGETWORD(i,RssV))+fSXTN(32,33,fGETWORD(i,RttV))+1)>>1); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vavgwr */
},
int64_t HELPER(A2_vavgwr)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fSXTN(32,33,fGETWORD(i,RssV))+fSXTN(32,33,fGETWORD(i,RttV))+1)>>1); } }
COUNT_HELPER(A2_vavgwr);
return RddV;
})
DEF_QEMU(A2_vnavgwr,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSAT((fSXTN(32,33,fGETWORD(i,RttV))-fSXTN(32,33,fGETWORD(i,RssV))+1)>>1)); } },
DEF_HELPER_3(A2_vnavgwr, s64, env, s64, s64),
{
/* A2_vnavgwr */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vnavgwr(gen_helper_A2_vnavgwr(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSAT((fSXTN(32,33,fGETWORD(i,RttV))-fSXTN(32,33,fGETWORD(i,RssV))+1)>>1)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vnavgwr */
},
int64_t HELPER(A2_vnavgwr)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSAT((fSXTN(32,33,fGETWORD(i,RttV))-fSXTN(32,33,fGETWORD(i,RssV))+1)>>1)); } }
COUNT_HELPER(A2_vnavgwr);
return RddV;
})
DEF_QEMU(A2_vavgwcr,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fCRND(fSXTN(32,33,fGETWORD(i,RssV))+fSXTN(32,33,fGETWORD(i,RttV)))>>1)); } },
DEF_HELPER_3(A2_vavgwcr, s64, env, s64, s64),
{
/* A2_vavgwcr */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vavgwcr(gen_helper_A2_vavgwcr(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fCRND(fSXTN(32,33,fGETWORD(i,RssV))+fSXTN(32,33,fGETWORD(i,RttV)))>>1)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vavgwcr */
},
int64_t HELPER(A2_vavgwcr)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fCRND(fSXTN(32,33,fGETWORD(i,RssV))+fSXTN(32,33,fGETWORD(i,RttV)))>>1)); } }
COUNT_HELPER(A2_vavgwcr);
return RddV;
})
DEF_QEMU(A2_vnavgwcr,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSAT(fCRND(fSXTN(32,33,fGETWORD(i,RttV))-fSXTN(32,33,fGETWORD(i,RssV)))>>1)); } },
DEF_HELPER_3(A2_vnavgwcr, s64, env, s64, s64),
{
/* A2_vnavgwcr */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vnavgwcr(gen_helper_A2_vnavgwcr(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSAT(fCRND(fSXTN(32,33,fGETWORD(i,RttV))-fSXTN(32,33,fGETWORD(i,RssV)))>>1)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vnavgwcr */
},
int64_t HELPER(A2_vnavgwcr)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSAT(fCRND(fSXTN(32,33,fGETWORD(i,RttV))-fSXTN(32,33,fGETWORD(i,RssV)))>>1)); } }
COUNT_HELPER(A2_vnavgwcr);
return RddV;
})
DEF_QEMU(A2_vavghcr,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fCRND(fGETHALF(i,RssV)+fGETHALF(i,RttV))>>1); } },
DEF_HELPER_3(A2_vavghcr, s64, env, s64, s64),
{
/* A2_vavghcr */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vavghcr(gen_helper_A2_vavghcr(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fCRND(fGETHALF(i,RssV)+fGETHALF(i,RttV))>>1); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vavghcr */
},
int64_t HELPER(A2_vavghcr)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fCRND(fGETHALF(i,RssV)+fGETHALF(i,RttV))>>1); } }
COUNT_HELPER(A2_vavghcr);
return RddV;
})
DEF_QEMU(A2_vnavghcr,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATH(fCRND(fGETHALF(i,RttV)-fGETHALF(i,RssV))>>1)); } },
DEF_HELPER_3(A2_vnavghcr, s64, env, s64, s64),
{
/* A2_vnavghcr */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vnavghcr(gen_helper_A2_vnavghcr(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATH(fCRND(fGETHALF(i,RttV)-fGETHALF(i,RssV))>>1)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vnavghcr */
},
int64_t HELPER(A2_vnavghcr)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATH(fCRND(fGETHALF(i,RttV)-fGETHALF(i,RssV))>>1)); } }
COUNT_HELPER(A2_vnavghcr);
return RddV;
})
DEF_QEMU(A2_vavguw,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fZXTN(32,33,fGETUWORD(i,RssV))+fZXTN(32,33,fGETUWORD(i,RttV)))>>1); } },
DEF_HELPER_3(A2_vavguw, s64, env, s64, s64),
{
/* A2_vavguw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vavguw(gen_helper_A2_vavguw(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fZXTN(32,33,fGETUWORD(i,RssV))+fZXTN(32,33,fGETUWORD(i,RttV)))>>1); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vavguw */
},
int64_t HELPER(A2_vavguw)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fZXTN(32,33,fGETUWORD(i,RssV))+fZXTN(32,33,fGETUWORD(i,RttV)))>>1); } }
COUNT_HELPER(A2_vavguw);
return RddV;
})
DEF_QEMU(A2_vavguwr,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fZXTN(32,33,fGETUWORD(i,RssV))+fZXTN(32,33,fGETUWORD(i,RttV))+1)>>1); } },
DEF_HELPER_3(A2_vavguwr, s64, env, s64, s64),
{
/* A2_vavguwr */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vavguwr(gen_helper_A2_vavguwr(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fZXTN(32,33,fGETUWORD(i,RssV))+fZXTN(32,33,fGETUWORD(i,RttV))+1)>>1); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vavguwr */
},
int64_t HELPER(A2_vavguwr)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fZXTN(32,33,fGETUWORD(i,RssV))+fZXTN(32,33,fGETUWORD(i,RttV))+1)>>1); } }
COUNT_HELPER(A2_vavguwr);
return RddV;
})
DEF_QEMU(A2_vavgubr,{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,((fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)+1)>>1)); } },
DEF_HELPER_3(A2_vavgubr, s64, env, s64, s64),
{
/* A2_vavgubr */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vavgubr(gen_helper_A2_vavgubr(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,((fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)+1)>>1)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vavgubr */
},
int64_t HELPER(A2_vavgubr)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,((fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)+1)>>1)); } }
COUNT_HELPER(A2_vavgubr);
return RddV;
})
DEF_QEMU(A2_vavguhr,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETUHALF(i,RssV)+fGETUHALF(i,RttV)+1)>>1); } },
DEF_HELPER_3(A2_vavguhr, s64, env, s64, s64),
{
/* A2_vavguhr */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vavguhr(gen_helper_A2_vavguhr(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETUHALF(i,RssV)+fGETUHALF(i,RttV)+1)>>1); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vavguhr */
},
int64_t HELPER(A2_vavguhr)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETUHALF(i,RssV)+fGETUHALF(i,RttV)+1)>>1); } }
COUNT_HELPER(A2_vavguhr);
return RddV;
})
DEF_QEMU(A2_vavghr,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETHALF(i,RssV)+fGETHALF(i,RttV)+1)>>1); } },
DEF_HELPER_3(A2_vavghr, s64, env, s64, s64),
{
/* A2_vavghr */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A2_vavghr(gen_helper_A2_vavghr(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETHALF(i,RssV)+fGETHALF(i,RttV)+1)>>1); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A2_vavghr */
},
int64_t HELPER(A2_vavghr)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETHALF(i,RssV)+fGETHALF(i,RttV)+1)>>1); } }
COUNT_HELPER(A2_vavghr);
return RddV;
})
DEF_QEMU(A2_vnavghr,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATH((fGETHALF(i,RttV)-fGETHALF(i,RssV)+1)>>1)); } },
DEF_HELPER_3(A2_vnavghr, s64, env, s64, s64),
{
/* A2_vnavghr */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vnavghr(gen_helper_A2_vnavghr(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATH((fGETHALF(i,RttV)-fGETHALF(i,RssV)+1)>>1)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vnavghr */
},
int64_t HELPER(A2_vnavghr)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATH((fGETHALF(i,RttV)-fGETHALF(i,RssV)+1)>>1)); } }
COUNT_HELPER(A2_vnavghr);
return RddV;
})
DEF_QEMU(A4_round_ri,{RdV = fRNDN(RsV,uiV)>>uiV; },
DEF_HELPER_3(A4_round_ri, s32, env, s32, s32),
{
/* A4_round_ri */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A4_round_ri(gen_helper_A4_round_ri(RdV, cpu_env, RsV, uiV);,
{RdV = fRNDN(RsV,uiV)>>uiV; })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* A4_round_ri */
},
int32_t HELPER(A4_round_ri)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fRNDN(RsV,uiV)>>uiV; }
COUNT_HELPER(A4_round_ri);
return RdV;
})
DEF_QEMU(A4_round_rr,{RdV = fRNDN(RsV,fZXTN(5,32,RtV))>>fZXTN(5,32,RtV); },
DEF_HELPER_3(A4_round_rr, s32, env, s32, s32),
{
/* A4_round_rr */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A4_round_rr(gen_helper_A4_round_rr(RdV, cpu_env, RsV, RtV);,
{RdV = fRNDN(RsV,fZXTN(5,32,RtV))>>fZXTN(5,32,RtV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A4_round_rr */
},
int32_t HELPER(A4_round_rr)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fRNDN(RsV,fZXTN(5,32,RtV))>>fZXTN(5,32,RtV); }
COUNT_HELPER(A4_round_rr);
return RdV;
})
DEF_QEMU(A4_round_ri_sat,{RdV = (fSAT(fRNDN(RsV,uiV)))>>uiV; },
DEF_HELPER_3(A4_round_ri_sat, s32, env, s32, s32),
{
/* A4_round_ri_sat */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A4_round_ri_sat(gen_helper_A4_round_ri_sat(RdV, cpu_env, RsV, uiV);,
{RdV = (fSAT(fRNDN(RsV,uiV)))>>uiV; })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* A4_round_ri_sat */
},
int32_t HELPER(A4_round_ri_sat)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = (fSAT(fRNDN(RsV,uiV)))>>uiV; }
COUNT_HELPER(A4_round_ri_sat);
return RdV;
})
DEF_QEMU(A4_round_rr_sat,{RdV = (fSAT(fRNDN(RsV,fZXTN(5,32,RtV))))>>fZXTN(5,32,RtV); },
DEF_HELPER_3(A4_round_rr_sat, s32, env, s32, s32),
{
/* A4_round_rr_sat */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A4_round_rr_sat(gen_helper_A4_round_rr_sat(RdV, cpu_env, RsV, RtV);,
{RdV = (fSAT(fRNDN(RsV,fZXTN(5,32,RtV))))>>fZXTN(5,32,RtV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A4_round_rr_sat */
},
int32_t HELPER(A4_round_rr_sat)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = (fSAT(fRNDN(RsV,fZXTN(5,32,RtV))))>>fZXTN(5,32,RtV); }
COUNT_HELPER(A4_round_rr_sat);
return RdV;
})
DEF_QEMU(A4_cround_ri,{RdV = fCRNDN(RsV,uiV); },
DEF_HELPER_3(A4_cround_ri, s32, env, s32, s32),
{
/* A4_cround_ri */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A4_cround_ri(gen_helper_A4_cround_ri(RdV, cpu_env, RsV, uiV);,
{RdV = fCRNDN(RsV,uiV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* A4_cround_ri */
},
int32_t HELPER(A4_cround_ri)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fCRNDN(RsV,uiV); }
COUNT_HELPER(A4_cround_ri);
return RdV;
})
DEF_QEMU(A4_cround_rr,{RdV = fCRNDN(RsV,fZXTN(5,32,RtV)); },
DEF_HELPER_3(A4_cround_rr, s32, env, s32, s32),
{
/* A4_cround_rr */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A4_cround_rr(gen_helper_A4_cround_rr(RdV, cpu_env, RsV, RtV);,
{RdV = fCRNDN(RsV,fZXTN(5,32,RtV)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A4_cround_rr */
},
int32_t HELPER(A4_cround_rr)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fCRNDN(RsV,fZXTN(5,32,RtV)); }
COUNT_HELPER(A4_cround_rr);
return RdV;
})
DEF_QEMU(A7_croundd_ri,{ fHIDE(size16s_t rndbit_128;) fHIDE(size16s_t tmp128;) fHIDE(size16s_t src_128;) if (uiV == 0) { RddV = RssV; } else if ((RssV & (size8s_t)((1LL << (uiV - 1)) - 1LL)) == 0) { src_128 = fCAST8S_16S(RssV); rndbit_128 = fCAST8S_16S(1LL); rndbit_128 = fSHIFTL128(rndbit_128, uiV); rndbit_128 = fAND128(rndbit_128, src_128); rndbit_128 = fSHIFTR128(rndbit_128, 1); tmp128 = fADD128(src_128, rndbit_128); tmp128 = fSHIFTR128(tmp128, uiV); RddV = fCAST16S_8S(tmp128); } else { size16s_t rndbit_128 = fCAST8S_16S((1LL << (uiV - 1))); size16s_t src_128 = fCAST8S_16S(RssV); size16s_t tmp128 = fADD128(src_128, rndbit_128); tmp128 = fSHIFTR128(tmp128, uiV); RddV = fCAST16S_8S(tmp128); }; fEXTENSION_AUDIO();},
DEF_HELPER_3(A7_croundd_ri, s64, env, s64, s32),
{
/* A7_croundd_ri */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A7_croundd_ri(gen_helper_A7_croundd_ri(RddV, cpu_env, RssV, uiV);,
{ fHIDE(size16s_t rndbit_128;) fHIDE(size16s_t tmp128;) fHIDE(size16s_t src_128;) if (uiV == 0) { RddV = RssV; } else if ((RssV & (size8s_t)((1LL << (uiV - 1)) - 1LL)) == 0) { src_128 = fCAST8S_16S(RssV); rndbit_128 = fCAST8S_16S(1LL); rndbit_128 = fSHIFTL128(rndbit_128, uiV); rndbit_128 = fAND128(rndbit_128, src_128); rndbit_128 = fSHIFTR128(rndbit_128, 1); tmp128 = fADD128(src_128, rndbit_128); tmp128 = fSHIFTR128(tmp128, uiV); RddV = fCAST16S_8S(tmp128); } else { size16s_t rndbit_128 = fCAST8S_16S((1LL << (uiV - 1))); size16s_t src_128 = fCAST8S_16S(RssV); size16s_t tmp128 = fADD128(src_128, rndbit_128); tmp128 = fSHIFTR128(tmp128, uiV); RddV = fCAST16S_8S(tmp128); }; fEXTENSION_AUDIO();})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* A7_croundd_ri */
},
int64_t HELPER(A7_croundd_ri)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(size16s_t rndbit_128;) fHIDE(size16s_t tmp128;) fHIDE(size16s_t src_128;) if (uiV == 0) { RddV = RssV; } else if ((RssV & (size8s_t)((1LL << (uiV - 1)) - 1LL)) == 0) { src_128 = fCAST8S_16S(RssV); rndbit_128 = fCAST8S_16S(1LL); rndbit_128 = fSHIFTL128(rndbit_128, uiV); rndbit_128 = fAND128(rndbit_128, src_128); rndbit_128 = fSHIFTR128(rndbit_128, 1); tmp128 = fADD128(src_128, rndbit_128); tmp128 = fSHIFTR128(tmp128, uiV); RddV = fCAST16S_8S(tmp128); } else { size16s_t rndbit_128 = fCAST8S_16S((1LL << (uiV - 1))); size16s_t src_128 = fCAST8S_16S(RssV); size16s_t tmp128 = fADD128(src_128, rndbit_128); tmp128 = fSHIFTR128(tmp128, uiV); RddV = fCAST16S_8S(tmp128); }; fEXTENSION_AUDIO();}
COUNT_HELPER(A7_croundd_ri);
return RddV;
})
DEF_QEMU(A7_croundd_rr,{ fHIDE(size16s_t rndbit_128;) fHIDE(size16s_t tmp128;) fHIDE(size16s_t src_128;) if (fZXTN(6,32,RtV) == 0) { RddV = RssV; } else if ((RssV & (size8s_t)((1LL << (fZXTN(6,32,RtV) - 1)) - 1LL)) == 0) { src_128 = fCAST8S_16S(RssV); rndbit_128 = fCAST8S_16S(1LL); rndbit_128 = fSHIFTL128(rndbit_128, fZXTN(6,32,RtV)); rndbit_128 = fAND128(rndbit_128, src_128); rndbit_128 = fSHIFTR128(rndbit_128, 1); tmp128 = fADD128(src_128, rndbit_128); tmp128 = fSHIFTR128(tmp128, fZXTN(6,32,RtV)); RddV = fCAST16S_8S(tmp128); } else { size16s_t rndbit_128 = fCAST8S_16S((1LL << (fZXTN(6,32,RtV) - 1))); size16s_t src_128 = fCAST8S_16S(RssV); size16s_t tmp128 = fADD128(src_128, rndbit_128); tmp128 = fSHIFTR128(tmp128, fZXTN(6,32,RtV)); RddV = fCAST16S_8S(tmp128); }; fEXTENSION_AUDIO();},
DEF_HELPER_3(A7_croundd_rr, s64, env, s64, s32),
{
/* A7_croundd_rr */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_A7_croundd_rr(gen_helper_A7_croundd_rr(RddV, cpu_env, RssV, RtV);,
{ fHIDE(size16s_t rndbit_128;) fHIDE(size16s_t tmp128;) fHIDE(size16s_t src_128;) if (fZXTN(6,32,RtV) == 0) { RddV = RssV; } else if ((RssV & (size8s_t)((1LL << (fZXTN(6,32,RtV) - 1)) - 1LL)) == 0) { src_128 = fCAST8S_16S(RssV); rndbit_128 = fCAST8S_16S(1LL); rndbit_128 = fSHIFTL128(rndbit_128, fZXTN(6,32,RtV)); rndbit_128 = fAND128(rndbit_128, src_128); rndbit_128 = fSHIFTR128(rndbit_128, 1); tmp128 = fADD128(src_128, rndbit_128); tmp128 = fSHIFTR128(tmp128, fZXTN(6,32,RtV)); RddV = fCAST16S_8S(tmp128); } else { size16s_t rndbit_128 = fCAST8S_16S((1LL << (fZXTN(6,32,RtV) - 1))); size16s_t src_128 = fCAST8S_16S(RssV); size16s_t tmp128 = fADD128(src_128, rndbit_128); tmp128 = fSHIFTR128(tmp128, fZXTN(6,32,RtV)); RddV = fCAST16S_8S(tmp128); }; fEXTENSION_AUDIO();})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* A7_croundd_rr */
},
int64_t HELPER(A7_croundd_rr)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(size16s_t rndbit_128;) fHIDE(size16s_t tmp128;) fHIDE(size16s_t src_128;) if (fZXTN(6,32,RtV) == 0) { RddV = RssV; } else if ((RssV & (size8s_t)((1LL << (fZXTN(6,32,RtV) - 1)) - 1LL)) == 0) { src_128 = fCAST8S_16S(RssV); rndbit_128 = fCAST8S_16S(1LL); rndbit_128 = fSHIFTL128(rndbit_128, fZXTN(6,32,RtV)); rndbit_128 = fAND128(rndbit_128, src_128); rndbit_128 = fSHIFTR128(rndbit_128, 1); tmp128 = fADD128(src_128, rndbit_128); tmp128 = fSHIFTR128(tmp128, fZXTN(6,32,RtV)); RddV = fCAST16S_8S(tmp128); } else { size16s_t rndbit_128 = fCAST8S_16S((1LL << (fZXTN(6,32,RtV) - 1))); size16s_t src_128 = fCAST8S_16S(RssV); size16s_t tmp128 = fADD128(src_128, rndbit_128); tmp128 = fSHIFTR128(tmp128, fZXTN(6,32,RtV)); RddV = fCAST16S_8S(tmp128); }; fEXTENSION_AUDIO();}
COUNT_HELPER(A7_croundd_rr);
return RddV;
})
DEF_QEMU(A7_clip,{ fCLIP(RdV,RsV,uiV); fEXTENSION_AUDIO();},
DEF_HELPER_3(A7_clip, s32, env, s32, s32),
{
/* A7_clip */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A7_clip(gen_helper_A7_clip(RdV, cpu_env, RsV, uiV);,
{ fCLIP(RdV,RsV,uiV); fEXTENSION_AUDIO();})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* A7_clip */
},
int32_t HELPER(A7_clip)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fCLIP(RdV,RsV,uiV); fEXTENSION_AUDIO();}
COUNT_HELPER(A7_clip);
return RdV;
})
DEF_QEMU(A7_vclip,{ fHIDE(size4s_t tmp;) fCLIP(tmp, fGETWORD(0, RssV), uiV); fSETWORD(0, RddV, tmp); fCLIP(tmp,fGETWORD(1, RssV), uiV); fSETWORD(1, RddV, tmp); fEXTENSION_AUDIO(); },
DEF_HELPER_3(A7_vclip, s64, env, s64, s32),
{
/* A7_vclip */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A7_vclip(gen_helper_A7_vclip(RddV, cpu_env, RssV, uiV);,
{ fHIDE(size4s_t tmp;) fCLIP(tmp, fGETWORD(0, RssV), uiV); fSETWORD(0, RddV, tmp); fCLIP(tmp,fGETWORD(1, RssV), uiV); fSETWORD(1, RddV, tmp); fEXTENSION_AUDIO(); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* A7_vclip */
},
int64_t HELPER(A7_vclip)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(size4s_t tmp;) fCLIP(tmp, fGETWORD(0, RssV), uiV); fSETWORD(0, RddV, tmp); fCLIP(tmp,fGETWORD(1, RssV), uiV); fSETWORD(1, RddV, tmp); fEXTENSION_AUDIO(); }
COUNT_HELPER(A7_vclip);
return RddV;
})
DEF_QEMU(A4_vrminh,{ fHIDE(int i; size8s_t min; size4s_t addr;) min = fGETHALF(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 4; i++) { if (min > fGETHALF(i,RssV)) { min = fGETHALF(i,RssV); addr = RuV | i<<1; } } fSETWORD(0,RxxV,min); fSETWORD(1,RxxV,addr); },
DEF_HELPER_4(A4_vrminh, s64, env, s64, s64, s32),
{
/* A4_vrminh */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_u(RuV, RuN);
fWRAP_A4_vrminh(gen_helper_A4_vrminh(RxxV, cpu_env, RxxV, RssV, RuV);,
{ fHIDE(int i; size8s_t min; size4s_t addr;) min = fGETHALF(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 4; i++) { if (min > fGETHALF(i,RssV)) { min = fGETHALF(i,RssV); addr = RuV | i<<1; } } fSETWORD(0,RxxV,min); fSETWORD(1,RxxV,addr); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_u(RuV);
/* A4_vrminh */
},
int64_t HELPER(A4_vrminh)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RuV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int i; size8s_t min; size4s_t addr;) min = fGETHALF(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 4; i++) { if (min > fGETHALF(i,RssV)) { min = fGETHALF(i,RssV); addr = RuV | i<<1; } } fSETWORD(0,RxxV,min); fSETWORD(1,RxxV,addr); }
COUNT_HELPER(A4_vrminh);
return RxxV;
})
DEF_QEMU(A4_vrmaxh,{ fHIDE(int i; size8s_t max; size4s_t addr;) max = fGETHALF(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 4; i++) { if (max < fGETHALF(i,RssV)) { max = fGETHALF(i,RssV); addr = RuV | i<<1; } } fSETWORD(0,RxxV,max); fSETWORD(1,RxxV,addr); },
DEF_HELPER_4(A4_vrmaxh, s64, env, s64, s64, s32),
{
/* A4_vrmaxh */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_u(RuV, RuN);
fWRAP_A4_vrmaxh(gen_helper_A4_vrmaxh(RxxV, cpu_env, RxxV, RssV, RuV);,
{ fHIDE(int i; size8s_t max; size4s_t addr;) max = fGETHALF(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 4; i++) { if (max < fGETHALF(i,RssV)) { max = fGETHALF(i,RssV); addr = RuV | i<<1; } } fSETWORD(0,RxxV,max); fSETWORD(1,RxxV,addr); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_u(RuV);
/* A4_vrmaxh */
},
int64_t HELPER(A4_vrmaxh)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RuV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int i; size8s_t max; size4s_t addr;) max = fGETHALF(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 4; i++) { if (max < fGETHALF(i,RssV)) { max = fGETHALF(i,RssV); addr = RuV | i<<1; } } fSETWORD(0,RxxV,max); fSETWORD(1,RxxV,addr); }
COUNT_HELPER(A4_vrmaxh);
return RxxV;
})
DEF_QEMU(A4_vrminuh,{ fHIDE(int i; size8s_t min; size4s_t addr;) min = fGETUHALF(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 4; i++) { if (min > fGETUHALF(i,RssV)) { min = fGETUHALF(i,RssV); addr = RuV | i<<1; } } fSETWORD(0,RxxV,min); fSETWORD(1,RxxV,addr); },
DEF_HELPER_4(A4_vrminuh, s64, env, s64, s64, s32),
{
/* A4_vrminuh */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_u(RuV, RuN);
fWRAP_A4_vrminuh(gen_helper_A4_vrminuh(RxxV, cpu_env, RxxV, RssV, RuV);,
{ fHIDE(int i; size8s_t min; size4s_t addr;) min = fGETUHALF(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 4; i++) { if (min > fGETUHALF(i,RssV)) { min = fGETUHALF(i,RssV); addr = RuV | i<<1; } } fSETWORD(0,RxxV,min); fSETWORD(1,RxxV,addr); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_u(RuV);
/* A4_vrminuh */
},
int64_t HELPER(A4_vrminuh)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RuV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int i; size8s_t min; size4s_t addr;) min = fGETUHALF(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 4; i++) { if (min > fGETUHALF(i,RssV)) { min = fGETUHALF(i,RssV); addr = RuV | i<<1; } } fSETWORD(0,RxxV,min); fSETWORD(1,RxxV,addr); }
COUNT_HELPER(A4_vrminuh);
return RxxV;
})
DEF_QEMU(A4_vrmaxuh,{ fHIDE(int i; size8s_t max; size4s_t addr;) max = fGETUHALF(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 4; i++) { if (max < fGETUHALF(i,RssV)) { max = fGETUHALF(i,RssV); addr = RuV | i<<1; } } fSETWORD(0,RxxV,max); fSETWORD(1,RxxV,addr); },
DEF_HELPER_4(A4_vrmaxuh, s64, env, s64, s64, s32),
{
/* A4_vrmaxuh */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_u(RuV, RuN);
fWRAP_A4_vrmaxuh(gen_helper_A4_vrmaxuh(RxxV, cpu_env, RxxV, RssV, RuV);,
{ fHIDE(int i; size8s_t max; size4s_t addr;) max = fGETUHALF(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 4; i++) { if (max < fGETUHALF(i,RssV)) { max = fGETUHALF(i,RssV); addr = RuV | i<<1; } } fSETWORD(0,RxxV,max); fSETWORD(1,RxxV,addr); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_u(RuV);
/* A4_vrmaxuh */
},
int64_t HELPER(A4_vrmaxuh)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RuV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int i; size8s_t max; size4s_t addr;) max = fGETUHALF(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 4; i++) { if (max < fGETUHALF(i,RssV)) { max = fGETUHALF(i,RssV); addr = RuV | i<<1; } } fSETWORD(0,RxxV,max); fSETWORD(1,RxxV,addr); }
COUNT_HELPER(A4_vrmaxuh);
return RxxV;
})
DEF_QEMU(A4_vrminw,{ fHIDE(int i; size8s_t min; size4s_t addr;) min = fGETWORD(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 2; i++) { if (min > fGETWORD(i,RssV)) { min = fGETWORD(i,RssV); addr = RuV | i<<2; } } fSETWORD(0,RxxV,min); fSETWORD(1,RxxV,addr); },
DEF_HELPER_4(A4_vrminw, s64, env, s64, s64, s32),
{
/* A4_vrminw */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_u(RuV, RuN);
fWRAP_A4_vrminw(gen_helper_A4_vrminw(RxxV, cpu_env, RxxV, RssV, RuV);,
{ fHIDE(int i; size8s_t min; size4s_t addr;) min = fGETWORD(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 2; i++) { if (min > fGETWORD(i,RssV)) { min = fGETWORD(i,RssV); addr = RuV | i<<2; } } fSETWORD(0,RxxV,min); fSETWORD(1,RxxV,addr); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_u(RuV);
/* A4_vrminw */
},
int64_t HELPER(A4_vrminw)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RuV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int i; size8s_t min; size4s_t addr;) min = fGETWORD(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 2; i++) { if (min > fGETWORD(i,RssV)) { min = fGETWORD(i,RssV); addr = RuV | i<<2; } } fSETWORD(0,RxxV,min); fSETWORD(1,RxxV,addr); }
COUNT_HELPER(A4_vrminw);
return RxxV;
})
DEF_QEMU(A4_vrmaxw,{ fHIDE(int i; size8s_t max; size4s_t addr;) max = fGETWORD(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 2; i++) { if (max < fGETWORD(i,RssV)) { max = fGETWORD(i,RssV); addr = RuV | i<<2; } } fSETWORD(0,RxxV,max); fSETWORD(1,RxxV,addr); },
DEF_HELPER_4(A4_vrmaxw, s64, env, s64, s64, s32),
{
/* A4_vrmaxw */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_u(RuV, RuN);
fWRAP_A4_vrmaxw(gen_helper_A4_vrmaxw(RxxV, cpu_env, RxxV, RssV, RuV);,
{ fHIDE(int i; size8s_t max; size4s_t addr;) max = fGETWORD(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 2; i++) { if (max < fGETWORD(i,RssV)) { max = fGETWORD(i,RssV); addr = RuV | i<<2; } } fSETWORD(0,RxxV,max); fSETWORD(1,RxxV,addr); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_u(RuV);
/* A4_vrmaxw */
},
int64_t HELPER(A4_vrmaxw)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RuV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int i; size8s_t max; size4s_t addr;) max = fGETWORD(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 2; i++) { if (max < fGETWORD(i,RssV)) { max = fGETWORD(i,RssV); addr = RuV | i<<2; } } fSETWORD(0,RxxV,max); fSETWORD(1,RxxV,addr); }
COUNT_HELPER(A4_vrmaxw);
return RxxV;
})
DEF_QEMU(A4_vrminuw,{ fHIDE(int i; size8s_t min; size4s_t addr;) min = fGETUWORD(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 2; i++) { if (min > fGETUWORD(i,RssV)) { min = fGETUWORD(i,RssV); addr = RuV | i<<2; } } fSETWORD(0,RxxV,min); fSETWORD(1,RxxV,addr); },
DEF_HELPER_4(A4_vrminuw, s64, env, s64, s64, s32),
{
/* A4_vrminuw */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_u(RuV, RuN);
fWRAP_A4_vrminuw(gen_helper_A4_vrminuw(RxxV, cpu_env, RxxV, RssV, RuV);,
{ fHIDE(int i; size8s_t min; size4s_t addr;) min = fGETUWORD(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 2; i++) { if (min > fGETUWORD(i,RssV)) { min = fGETUWORD(i,RssV); addr = RuV | i<<2; } } fSETWORD(0,RxxV,min); fSETWORD(1,RxxV,addr); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_u(RuV);
/* A4_vrminuw */
},
int64_t HELPER(A4_vrminuw)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RuV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int i; size8s_t min; size4s_t addr;) min = fGETUWORD(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 2; i++) { if (min > fGETUWORD(i,RssV)) { min = fGETUWORD(i,RssV); addr = RuV | i<<2; } } fSETWORD(0,RxxV,min); fSETWORD(1,RxxV,addr); }
COUNT_HELPER(A4_vrminuw);
return RxxV;
})
DEF_QEMU(A4_vrmaxuw,{ fHIDE(int i; size8s_t max; size4s_t addr;) max = fGETUWORD(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 2; i++) { if (max < fGETUWORD(i,RssV)) { max = fGETUWORD(i,RssV); addr = RuV | i<<2; } } fSETWORD(0,RxxV,max); fSETWORD(1,RxxV,addr); },
DEF_HELPER_4(A4_vrmaxuw, s64, env, s64, s64, s32),
{
/* A4_vrmaxuw */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_u(TCGv, RuV, RuN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_u(RuV, RuN);
fWRAP_A4_vrmaxuw(gen_helper_A4_vrmaxuw(RxxV, cpu_env, RxxV, RssV, RuV);,
{ fHIDE(int i; size8s_t max; size4s_t addr;) max = fGETUWORD(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 2; i++) { if (max < fGETUWORD(i,RssV)) { max = fGETUWORD(i,RssV); addr = RuV | i<<2; } } fSETWORD(0,RxxV,max); fSETWORD(1,RxxV,addr); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_u(RuV);
/* A4_vrmaxuw */
},
int64_t HELPER(A4_vrmaxuw)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RuV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int i; size8s_t max; size4s_t addr;) max = fGETUWORD(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 2; i++) { if (max < fGETUWORD(i,RssV)) { max = fGETUWORD(i,RssV); addr = RuV | i<<2; } } fSETWORD(0,RxxV,max); fSETWORD(1,RxxV,addr); }
COUNT_HELPER(A4_vrmaxuw);
return RxxV;
})
DEF_QEMU(A2_vminb,{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fMIN(fGETBYTE(i,RttV),fGETBYTE(i,RssV))); } },
DEF_HELPER_3(A2_vminb, s64, env, s64, s64),
{
/* A2_vminb */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vminb(gen_helper_A2_vminb(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fMIN(fGETBYTE(i,RttV),fGETBYTE(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vminb */
},
int64_t HELPER(A2_vminb)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fMIN(fGETBYTE(i,RttV),fGETBYTE(i,RssV))); } }
COUNT_HELPER(A2_vminb);
return RddV;
})
DEF_QEMU(A2_vmaxb,{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fMAX(fGETBYTE(i,RttV),fGETBYTE(i,RssV))); } },
DEF_HELPER_3(A2_vmaxb, s64, env, s64, s64),
{
/* A2_vmaxb */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vmaxb(gen_helper_A2_vmaxb(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fMAX(fGETBYTE(i,RttV),fGETBYTE(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vmaxb */
},
int64_t HELPER(A2_vmaxb)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fMAX(fGETBYTE(i,RttV),fGETBYTE(i,RssV))); } }
COUNT_HELPER(A2_vmaxb);
return RddV;
})
DEF_QEMU(A2_vminub,{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fMIN(fGETUBYTE(i,RttV),fGETUBYTE(i,RssV))); } },
DEF_HELPER_3(A2_vminub, s64, env, s64, s64),
{
/* A2_vminub */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vminub(gen_helper_A2_vminub(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fMIN(fGETUBYTE(i,RttV),fGETUBYTE(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vminub */
},
int64_t HELPER(A2_vminub)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fMIN(fGETUBYTE(i,RttV),fGETUBYTE(i,RssV))); } }
COUNT_HELPER(A2_vminub);
return RddV;
})
DEF_QEMU(A2_vmaxub,{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fMAX(fGETUBYTE(i,RttV),fGETUBYTE(i,RssV))); } },
DEF_HELPER_3(A2_vmaxub, s64, env, s64, s64),
{
/* A2_vmaxub */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vmaxub(gen_helper_A2_vmaxub(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fMAX(fGETUBYTE(i,RttV),fGETUBYTE(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vmaxub */
},
int64_t HELPER(A2_vmaxub)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fMAX(fGETUBYTE(i,RttV),fGETUBYTE(i,RssV))); } }
COUNT_HELPER(A2_vmaxub);
return RddV;
})
DEF_QEMU(A2_vminh,{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETHALF(i,RddV,fMIN(fGETHALF(i,RttV),fGETHALF(i,RssV))); } },
DEF_HELPER_3(A2_vminh, s64, env, s64, s64),
{
/* A2_vminh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vminh(gen_helper_A2_vminh(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETHALF(i,RddV,fMIN(fGETHALF(i,RttV),fGETHALF(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vminh */
},
int64_t HELPER(A2_vminh)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETHALF(i,RddV,fMIN(fGETHALF(i,RttV),fGETHALF(i,RssV))); } }
COUNT_HELPER(A2_vminh);
return RddV;
})
DEF_QEMU(A2_vmaxh,{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETHALF(i,RddV,fMAX(fGETHALF(i,RttV),fGETHALF(i,RssV))); } },
DEF_HELPER_3(A2_vmaxh, s64, env, s64, s64),
{
/* A2_vmaxh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vmaxh(gen_helper_A2_vmaxh(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETHALF(i,RddV,fMAX(fGETHALF(i,RttV),fGETHALF(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vmaxh */
},
int64_t HELPER(A2_vmaxh)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETHALF(i,RddV,fMAX(fGETHALF(i,RttV),fGETHALF(i,RssV))); } }
COUNT_HELPER(A2_vmaxh);
return RddV;
})
DEF_QEMU(A2_vminuh,{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETHALF(i,RddV,fMIN(fGETUHALF(i,RttV),fGETUHALF(i,RssV))); } },
DEF_HELPER_3(A2_vminuh, s64, env, s64, s64),
{
/* A2_vminuh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vminuh(gen_helper_A2_vminuh(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETHALF(i,RddV,fMIN(fGETUHALF(i,RttV),fGETUHALF(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vminuh */
},
int64_t HELPER(A2_vminuh)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETHALF(i,RddV,fMIN(fGETUHALF(i,RttV),fGETUHALF(i,RssV))); } }
COUNT_HELPER(A2_vminuh);
return RddV;
})
DEF_QEMU(A2_vmaxuh,{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETHALF(i,RddV,fMAX(fGETUHALF(i,RttV),fGETUHALF(i,RssV))); } },
DEF_HELPER_3(A2_vmaxuh, s64, env, s64, s64),
{
/* A2_vmaxuh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vmaxuh(gen_helper_A2_vmaxuh(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETHALF(i,RddV,fMAX(fGETUHALF(i,RttV),fGETUHALF(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vmaxuh */
},
int64_t HELPER(A2_vmaxuh)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETHALF(i,RddV,fMAX(fGETUHALF(i,RttV),fGETUHALF(i,RssV))); } }
COUNT_HELPER(A2_vmaxuh);
return RddV;
})
DEF_QEMU(A2_vminw,{ fHIDE(int i;) for (i = 0; i < 2; i++) { fSETWORD(i,RddV,fMIN(fGETWORD(i,RttV),fGETWORD(i,RssV))); } },
DEF_HELPER_3(A2_vminw, s64, env, s64, s64),
{
/* A2_vminw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vminw(gen_helper_A2_vminw(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i = 0; i < 2; i++) { fSETWORD(i,RddV,fMIN(fGETWORD(i,RttV),fGETWORD(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vminw */
},
int64_t HELPER(A2_vminw)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 2; i++) { fSETWORD(i,RddV,fMIN(fGETWORD(i,RttV),fGETWORD(i,RssV))); } }
COUNT_HELPER(A2_vminw);
return RddV;
})
DEF_QEMU(A2_vmaxw,{ fHIDE(int i;) for (i = 0; i < 2; i++) { fSETWORD(i,RddV,fMAX(fGETWORD(i,RttV),fGETWORD(i,RssV))); } },
DEF_HELPER_3(A2_vmaxw, s64, env, s64, s64),
{
/* A2_vmaxw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vmaxw(gen_helper_A2_vmaxw(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i = 0; i < 2; i++) { fSETWORD(i,RddV,fMAX(fGETWORD(i,RttV),fGETWORD(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vmaxw */
},
int64_t HELPER(A2_vmaxw)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 2; i++) { fSETWORD(i,RddV,fMAX(fGETWORD(i,RttV),fGETWORD(i,RssV))); } }
COUNT_HELPER(A2_vmaxw);
return RddV;
})
DEF_QEMU(A2_vminuw,{ fHIDE(int i;) for (i = 0; i < 2; i++) { fSETWORD(i,RddV,fMIN(fGETUWORD(i,RttV),fGETUWORD(i,RssV))); } },
DEF_HELPER_3(A2_vminuw, s64, env, s64, s64),
{
/* A2_vminuw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vminuw(gen_helper_A2_vminuw(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i = 0; i < 2; i++) { fSETWORD(i,RddV,fMIN(fGETUWORD(i,RttV),fGETUWORD(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vminuw */
},
int64_t HELPER(A2_vminuw)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 2; i++) { fSETWORD(i,RddV,fMIN(fGETUWORD(i,RttV),fGETUWORD(i,RssV))); } }
COUNT_HELPER(A2_vminuw);
return RddV;
})
DEF_QEMU(A2_vmaxuw,{ fHIDE(int i;) for (i = 0; i < 2; i++) { fSETWORD(i,RddV,fMAX(fGETUWORD(i,RttV),fGETUWORD(i,RssV))); } },
DEF_HELPER_3(A2_vmaxuw, s64, env, s64, s64),
{
/* A2_vmaxuw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A2_vmaxuw(gen_helper_A2_vmaxuw(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i = 0; i < 2; i++) { fSETWORD(i,RddV,fMAX(fGETUWORD(i,RttV),fGETUWORD(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A2_vmaxuw */
},
int64_t HELPER(A2_vmaxuw)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i = 0; i < 2; i++) { fSETWORD(i,RddV,fMAX(fGETUWORD(i,RttV),fGETUWORD(i,RssV))); } }
COUNT_HELPER(A2_vmaxuw);
return RddV;
})
DEF_QEMU(A5_ACS,{ fHIDE(int i;) fHIDE(int xv;) fHIDE(int sv;) fHIDE(int tv;) for (i = 0; i < 4; i++) { xv = (int) fGETHALF(i,RxxV); sv = (int) fGETHALF(i,RssV); tv = (int) fGETHALF(i,RttV); xv = xv + tv; sv = sv - tv; fSETBIT(i*2, PeV, (xv > sv)); fSETBIT(i*2+1,PeV, (xv > sv)); fSETHALF(i, RxxV, fSATH(fMAX(xv,sv))); } },
DEF_HELPER_1(A5_ACS, void, env),
{
/* A5_ACS */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PREG_e(TCGv, PeV, PeN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 3, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_A5_ACS(gen_helper_A5_ACS(RxxV, PeV, cpu_env, RxxV, RssV, RttV);,
{ fHIDE(int i;) fHIDE(int xv;) fHIDE(int sv;) fHIDE(int tv;) for (i = 0; i < 4; i++) { xv = (int) fGETHALF(i,RxxV); sv = (int) fGETHALF(i,RssV); tv = (int) fGETHALF(i,RttV); xv = xv + tv; sv = sv - tv; fSETBIT(i*2, PeV, (xv > sv)); fSETBIT(i*2+1,PeV, (xv > sv)); fSETHALF(i, RxxV, fSATH(fMAX(xv,sv))); } })
WRITE_RREG_PAIR(RxxN,RxxV);
WRITE_PREG(PeN,PeV);
FREE_REG_PAIR(RxxV);
FREE_REG_e(PeV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* A5_ACS */
},
void HELPER(A5_ACS)(CPUHexagonState *env) { BOGUS_HELPER(A5_ACS); }
)
DEF_QEMU(A6_vminub_RdP,{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i, PeV, (fGETUBYTE(i,RttV) > fGETUBYTE(i,RssV))); fSETBYTE(i,RddV,fMIN(fGETUBYTE(i,RttV),fGETUBYTE(i,RssV))); } },
DEF_HELPER_1(A6_vminub_RdP, void, env),
{
/* A6_vminub_RdP */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PREG_e(TCGv, PeV, PeN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 3, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_A6_vminub_RdP(gen_helper_A6_vminub_RdP(RddV, PeV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i, PeV, (fGETUBYTE(i,RttV) > fGETUBYTE(i,RssV))); fSETBYTE(i,RddV,fMIN(fGETUBYTE(i,RttV),fGETUBYTE(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
WRITE_PREG(PeN,PeV);
FREE_REG_PAIR(RddV);
FREE_REG_e(PeV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* A6_vminub_RdP */
},
void HELPER(A6_vminub_RdP)(CPUHexagonState *env) { BOGUS_HELPER(A6_vminub_RdP); }
)
DEF_QEMU(A4_modwrapu,{ if (RsV < 0) { RdV = RsV + fCAST4u(RtV); } else if (fCAST4u(RsV) >= fCAST4u(RtV)) { RdV = RsV - fCAST4u(RtV); } else { RdV = RsV; } },
DEF_HELPER_3(A4_modwrapu, s32, env, s32, s32),
{
/* A4_modwrapu */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A4_modwrapu(gen_helper_A4_modwrapu(RdV, cpu_env, RsV, RtV);,
{ if (RsV < 0) { RdV = RsV + fCAST4u(RtV); } else if (fCAST4u(RsV) >= fCAST4u(RtV)) { RdV = RsV - fCAST4u(RtV); } else { RdV = RsV; } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A4_modwrapu */
},
int32_t HELPER(A4_modwrapu)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ if (RsV < 0) { RdV = RsV + fCAST4u(RtV); } else if (fCAST4u(RsV) >= fCAST4u(RtV)) { RdV = RsV - fCAST4u(RtV); } else { RdV = RsV; } }
COUNT_HELPER(A4_modwrapu);
return RdV;
})
DEF_QEMU(F2_sfadd,{ RdV=fUNFLOAT(fFLOAT(RsV)+fFLOAT(RtV));},
DEF_HELPER_3(F2_sfadd, s32, env, s32, s32),
{
/* F2_sfadd */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_F2_sfadd(gen_helper_F2_sfadd(RdV, cpu_env, RsV, RtV);,
{ RdV=fUNFLOAT(fFLOAT(RsV)+fFLOAT(RtV));})
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* F2_sfadd */
},
int32_t HELPER(F2_sfadd)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ RdV=fUNFLOAT(fFLOAT(RsV)+fFLOAT(RtV));}
COUNT_HELPER(F2_sfadd);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_sfsub,{ RdV=fUNFLOAT(fFLOAT(RsV)-fFLOAT(RtV));},
DEF_HELPER_3(F2_sfsub, s32, env, s32, s32),
{
/* F2_sfsub */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_F2_sfsub(gen_helper_F2_sfsub(RdV, cpu_env, RsV, RtV);,
{ RdV=fUNFLOAT(fFLOAT(RsV)-fFLOAT(RtV));})
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* F2_sfsub */
},
int32_t HELPER(F2_sfsub)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ RdV=fUNFLOAT(fFLOAT(RsV)-fFLOAT(RtV));}
COUNT_HELPER(F2_sfsub);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_sfmpy,{ RdV=fUNFLOAT(fSFMPY(fFLOAT(RsV),fFLOAT(RtV)));},
DEF_HELPER_3(F2_sfmpy, s32, env, s32, s32),
{
/* F2_sfmpy */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_F2_sfmpy(gen_helper_F2_sfmpy(RdV, cpu_env, RsV, RtV);,
{ RdV=fUNFLOAT(fSFMPY(fFLOAT(RsV),fFLOAT(RtV)));})
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* F2_sfmpy */
},
int32_t HELPER(F2_sfmpy)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ RdV=fUNFLOAT(fSFMPY(fFLOAT(RsV),fFLOAT(RtV)));}
COUNT_HELPER(F2_sfmpy);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_sffma,{ RxV=fUNFLOAT(fFMAF(fFLOAT(RsV),fFLOAT(RtV),fFLOAT(RxV)));},
DEF_HELPER_4(F2_sffma, s32, env, s32, s32, s32),
{
/* F2_sffma */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
fFPOP_START();
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_F2_sffma(gen_helper_F2_sffma(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV=fUNFLOAT(fFMAF(fFLOAT(RsV),fFLOAT(RtV),fFLOAT(RxV)));})
WRITE_RREG(RxN,RxV);
fFPOP_END();
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* F2_sffma */
},
int32_t HELPER(F2_sffma)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
fFPOP_START();
{ RxV=fUNFLOAT(fFMAF(fFLOAT(RsV),fFLOAT(RtV),fFLOAT(RxV)));}
COUNT_HELPER(F2_sffma);
fFPOP_END();
return RxV;
})
DEF_QEMU(F2_sffma_sc,{ fPREDUSE_TIMING(); fHIDE(size4s_t tmp;) fCHECKSFNAN3(RxV,RxV,RsV,RtV); tmp=fUNFLOAT(fFMAFX(fFLOAT(RsV),fFLOAT(RtV),fFLOAT(RxV),PuV)); if (!((fFLOAT(RxV) == 0.0) && fISZEROPROD(fFLOAT(RsV),fFLOAT(RtV)))) RxV = tmp; },
DEF_HELPER_5(F2_sffma_sc, s32, env, s32, s32, s32, s32),
{
/* F2_sffma_sc */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_PREG_u(TCGv, PuV, PuN, 3, 0);
fFPOP_START();
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
READ_PREG_u(PuV, PuN);
fWRAP_F2_sffma_sc(gen_helper_F2_sffma_sc(RxV, cpu_env, RxV, RsV, RtV, PuV);,
{ fPREDUSE_TIMING(); fHIDE(size4s_t tmp;) fCHECKSFNAN3(RxV,RxV,RsV,RtV); tmp=fUNFLOAT(fFMAFX(fFLOAT(RsV),fFLOAT(RtV),fFLOAT(RxV),PuV)); if (!((fFLOAT(RxV) == 0.0) && fISZEROPROD(fFLOAT(RsV),fFLOAT(RtV)))) RxV = tmp; })
WRITE_RREG(RxN,RxV);
fFPOP_END();
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_REG_u(PuV);
/* F2_sffma_sc */
},
int32_t HELPER(F2_sffma_sc)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV, int32_t PuV)
{
uint32_t slot = 4; slot = slot;
fFPOP_START();
{ fPREDUSE_TIMING(); fHIDE(size4s_t tmp;) fCHECKSFNAN3(RxV,RxV,RsV,RtV); tmp=fUNFLOAT(fFMAFX(fFLOAT(RsV),fFLOAT(RtV),fFLOAT(RxV),PuV)); if (!((fFLOAT(RxV) == 0.0) && fISZEROPROD(fFLOAT(RsV),fFLOAT(RtV)))) RxV = tmp; }
COUNT_HELPER(F2_sffma_sc);
fFPOP_END();
return RxV;
})
DEF_QEMU(F2_sffms,{ RxV=fUNFLOAT(fFMAF(-fFLOAT(RsV),fFLOAT(RtV),fFLOAT(RxV))); },
DEF_HELPER_4(F2_sffms, s32, env, s32, s32, s32),
{
/* F2_sffms */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
fFPOP_START();
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_F2_sffms(gen_helper_F2_sffms(RxV, cpu_env, RxV, RsV, RtV);,
{ RxV=fUNFLOAT(fFMAF(-fFLOAT(RsV),fFLOAT(RtV),fFLOAT(RxV))); })
WRITE_RREG(RxN,RxV);
fFPOP_END();
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* F2_sffms */
},
int32_t HELPER(F2_sffms)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
fFPOP_START();
{ RxV=fUNFLOAT(fFMAF(-fFLOAT(RsV),fFLOAT(RtV),fFLOAT(RxV))); }
COUNT_HELPER(F2_sffms);
fFPOP_END();
return RxV;
})
DEF_QEMU(F2_sffma_lib,{ fFPSETROUND_NEAREST(); fHIDE(int infinp; int infminusinf; size4s_t tmp;) infminusinf = ((isinf(fFLOAT(RxV))) && (fISINFPROD(fFLOAT(RsV),fFLOAT(RtV))) && (fGETBIT(31,RsV ^ RxV ^ RtV) != 0)); infinp = (isinf(fFLOAT(RxV))) || (isinf(fFLOAT(RtV))) || (isinf(fFLOAT(RsV))); fCHECKSFNAN3(RxV,RxV,RsV,RtV); tmp=fUNFLOAT(fFMAF(fFLOAT(RsV),fFLOAT(RtV),fFLOAT(RxV))); if (!((fFLOAT(RxV) == 0.0) && fISZEROPROD(fFLOAT(RsV),fFLOAT(RtV)))) RxV = tmp; fFPCANCELFLAGS(); if (isinf(fFLOAT(RxV)) && !infinp) RxV = RxV - 1; if (infminusinf) RxV = 0; },
DEF_HELPER_4(F2_sffma_lib, s32, env, s32, s32, s32),
{
/* F2_sffma_lib */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
fFPOP_START();
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_F2_sffma_lib(gen_helper_F2_sffma_lib(RxV, cpu_env, RxV, RsV, RtV);,
{ fFPSETROUND_NEAREST(); fHIDE(int infinp; int infminusinf; size4s_t tmp;) infminusinf = ((isinf(fFLOAT(RxV))) && (fISINFPROD(fFLOAT(RsV),fFLOAT(RtV))) && (fGETBIT(31,RsV ^ RxV ^ RtV) != 0)); infinp = (isinf(fFLOAT(RxV))) || (isinf(fFLOAT(RtV))) || (isinf(fFLOAT(RsV))); fCHECKSFNAN3(RxV,RxV,RsV,RtV); tmp=fUNFLOAT(fFMAF(fFLOAT(RsV),fFLOAT(RtV),fFLOAT(RxV))); if (!((fFLOAT(RxV) == 0.0) && fISZEROPROD(fFLOAT(RsV),fFLOAT(RtV)))) RxV = tmp; fFPCANCELFLAGS(); if (isinf(fFLOAT(RxV)) && !infinp) RxV = RxV - 1; if (infminusinf) RxV = 0; })
WRITE_RREG(RxN,RxV);
fFPOP_END();
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* F2_sffma_lib */
},
int32_t HELPER(F2_sffma_lib)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
fFPOP_START();
{ fFPSETROUND_NEAREST(); fHIDE(int infinp; int infminusinf; size4s_t tmp;) infminusinf = ((isinf(fFLOAT(RxV))) && (fISINFPROD(fFLOAT(RsV),fFLOAT(RtV))) && (fGETBIT(31,RsV ^ RxV ^ RtV) != 0)); infinp = (isinf(fFLOAT(RxV))) || (isinf(fFLOAT(RtV))) || (isinf(fFLOAT(RsV))); fCHECKSFNAN3(RxV,RxV,RsV,RtV); tmp=fUNFLOAT(fFMAF(fFLOAT(RsV),fFLOAT(RtV),fFLOAT(RxV))); if (!((fFLOAT(RxV) == 0.0) && fISZEROPROD(fFLOAT(RsV),fFLOAT(RtV)))) RxV = tmp; fFPCANCELFLAGS(); if (isinf(fFLOAT(RxV)) && !infinp) RxV = RxV - 1; if (infminusinf) RxV = 0; }
COUNT_HELPER(F2_sffma_lib);
fFPOP_END();
return RxV;
})
DEF_QEMU(F2_sffms_lib,{ fFPSETROUND_NEAREST(); fHIDE(int infinp; int infminusinf; size4s_t tmp;) infminusinf = ((isinf(fFLOAT(RxV))) && (fISINFPROD(fFLOAT(RsV),fFLOAT(RtV))) && (fGETBIT(31,RsV ^ RxV ^ RtV) == 0)); infinp = (isinf(fFLOAT(RxV))) || (isinf(fFLOAT(RtV))) || (isinf(fFLOAT(RsV))); fCHECKSFNAN3(RxV,RxV,RsV,RtV); tmp=fUNFLOAT(fFMAF(-fFLOAT(RsV),fFLOAT(RtV),fFLOAT(RxV))); if (!((fFLOAT(RxV) == 0.0) && fISZEROPROD(fFLOAT(RsV),fFLOAT(RtV)))) RxV = tmp; fFPCANCELFLAGS(); if (isinf(fFLOAT(RxV)) && !infinp) RxV = RxV - 1; if (infminusinf) RxV = 0; },
DEF_HELPER_4(F2_sffms_lib, s32, env, s32, s32, s32),
{
/* F2_sffms_lib */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
fFPOP_START();
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_F2_sffms_lib(gen_helper_F2_sffms_lib(RxV, cpu_env, RxV, RsV, RtV);,
{ fFPSETROUND_NEAREST(); fHIDE(int infinp; int infminusinf; size4s_t tmp;) infminusinf = ((isinf(fFLOAT(RxV))) && (fISINFPROD(fFLOAT(RsV),fFLOAT(RtV))) && (fGETBIT(31,RsV ^ RxV ^ RtV) == 0)); infinp = (isinf(fFLOAT(RxV))) || (isinf(fFLOAT(RtV))) || (isinf(fFLOAT(RsV))); fCHECKSFNAN3(RxV,RxV,RsV,RtV); tmp=fUNFLOAT(fFMAF(-fFLOAT(RsV),fFLOAT(RtV),fFLOAT(RxV))); if (!((fFLOAT(RxV) == 0.0) && fISZEROPROD(fFLOAT(RsV),fFLOAT(RtV)))) RxV = tmp; fFPCANCELFLAGS(); if (isinf(fFLOAT(RxV)) && !infinp) RxV = RxV - 1; if (infminusinf) RxV = 0; })
WRITE_RREG(RxN,RxV);
fFPOP_END();
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* F2_sffms_lib */
},
int32_t HELPER(F2_sffms_lib)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
fFPOP_START();
{ fFPSETROUND_NEAREST(); fHIDE(int infinp; int infminusinf; size4s_t tmp;) infminusinf = ((isinf(fFLOAT(RxV))) && (fISINFPROD(fFLOAT(RsV),fFLOAT(RtV))) && (fGETBIT(31,RsV ^ RxV ^ RtV) == 0)); infinp = (isinf(fFLOAT(RxV))) || (isinf(fFLOAT(RtV))) || (isinf(fFLOAT(RsV))); fCHECKSFNAN3(RxV,RxV,RsV,RtV); tmp=fUNFLOAT(fFMAF(-fFLOAT(RsV),fFLOAT(RtV),fFLOAT(RxV))); if (!((fFLOAT(RxV) == 0.0) && fISZEROPROD(fFLOAT(RsV),fFLOAT(RtV)))) RxV = tmp; fFPCANCELFLAGS(); if (isinf(fFLOAT(RxV)) && !infinp) RxV = RxV - 1; if (infminusinf) RxV = 0; }
COUNT_HELPER(F2_sffms_lib);
fFPOP_END();
return RxV;
})
DEF_QEMU(F2_sfcmpeq,{PdV=f8BITSOF(fFLOAT(RsV)==fFLOAT(RtV));},
DEF_HELPER_3(F2_sfcmpeq, s32, env, s32, s32),
{
/* F2_sfcmpeq */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_F2_sfcmpeq(gen_helper_F2_sfcmpeq(PdV, cpu_env, RsV, RtV);,
{PdV=f8BITSOF(fFLOAT(RsV)==fFLOAT(RtV));})
WRITE_PREG(PdN,PdV);
fFPOP_END();
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* F2_sfcmpeq */
},
int32_t HELPER(F2_sfcmpeq)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
fFPOP_START();
{PdV=f8BITSOF(fFLOAT(RsV)==fFLOAT(RtV));}
COUNT_HELPER(F2_sfcmpeq);
fFPOP_END();
return PdV;
})
DEF_QEMU(F2_sfcmpgt,{PdV=f8BITSOF(fFLOAT(RsV)>fFLOAT(RtV));},
DEF_HELPER_3(F2_sfcmpgt, s32, env, s32, s32),
{
/* F2_sfcmpgt */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_F2_sfcmpgt(gen_helper_F2_sfcmpgt(PdV, cpu_env, RsV, RtV);,
{PdV=f8BITSOF(fFLOAT(RsV)>fFLOAT(RtV));})
WRITE_PREG(PdN,PdV);
fFPOP_END();
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* F2_sfcmpgt */
},
int32_t HELPER(F2_sfcmpgt)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
fFPOP_START();
{PdV=f8BITSOF(fFLOAT(RsV)>fFLOAT(RtV));}
COUNT_HELPER(F2_sfcmpgt);
fFPOP_END();
return PdV;
})
DEF_QEMU(F2_sfcmpge,{PdV=f8BITSOF(fFLOAT(RsV)>=fFLOAT(RtV));},
DEF_HELPER_3(F2_sfcmpge, s32, env, s32, s32),
{
/* F2_sfcmpge */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_F2_sfcmpge(gen_helper_F2_sfcmpge(PdV, cpu_env, RsV, RtV);,
{PdV=f8BITSOF(fFLOAT(RsV)>=fFLOAT(RtV));})
WRITE_PREG(PdN,PdV);
fFPOP_END();
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* F2_sfcmpge */
},
int32_t HELPER(F2_sfcmpge)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
fFPOP_START();
{PdV=f8BITSOF(fFLOAT(RsV)>=fFLOAT(RtV));}
COUNT_HELPER(F2_sfcmpge);
fFPOP_END();
return PdV;
})
DEF_QEMU(F2_sfcmpuo,{PdV=f8BITSOF(isunordered(fFLOAT(RsV),fFLOAT(RtV)));},
DEF_HELPER_3(F2_sfcmpuo, s32, env, s32, s32),
{
/* F2_sfcmpuo */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_F2_sfcmpuo(gen_helper_F2_sfcmpuo(PdV, cpu_env, RsV, RtV);,
{PdV=f8BITSOF(isunordered(fFLOAT(RsV),fFLOAT(RtV)));})
WRITE_PREG(PdN,PdV);
fFPOP_END();
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* F2_sfcmpuo */
},
int32_t HELPER(F2_sfcmpuo)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
fFPOP_START();
{PdV=f8BITSOF(isunordered(fFLOAT(RsV),fFLOAT(RtV)));}
COUNT_HELPER(F2_sfcmpuo);
fFPOP_END();
return PdV;
})
DEF_QEMU(F2_sfmax,{ RdV = fUNFLOAT(fSF_MAX(fFLOAT(RsV),fFLOAT(RtV))); },
DEF_HELPER_3(F2_sfmax, s32, env, s32, s32),
{
/* F2_sfmax */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_F2_sfmax(gen_helper_F2_sfmax(RdV, cpu_env, RsV, RtV);,
{ RdV = fUNFLOAT(fSF_MAX(fFLOAT(RsV),fFLOAT(RtV))); })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* F2_sfmax */
},
int32_t HELPER(F2_sfmax)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ RdV = fUNFLOAT(fSF_MAX(fFLOAT(RsV),fFLOAT(RtV))); }
COUNT_HELPER(F2_sfmax);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_sfmin,{ RdV = fUNFLOAT(fSF_MIN(fFLOAT(RsV),fFLOAT(RtV))); },
DEF_HELPER_3(F2_sfmin, s32, env, s32, s32),
{
/* F2_sfmin */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_F2_sfmin(gen_helper_F2_sfmin(RdV, cpu_env, RsV, RtV);,
{ RdV = fUNFLOAT(fSF_MIN(fFLOAT(RsV),fFLOAT(RtV))); })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* F2_sfmin */
},
int32_t HELPER(F2_sfmin)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ RdV = fUNFLOAT(fSF_MIN(fFLOAT(RsV),fFLOAT(RtV))); }
COUNT_HELPER(F2_sfmin);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_sfclass,{ fHIDE(int class;) PdV = 0; class = fpclassify(fFLOAT(RsV)); if (fGETBIT(0,uiV) && (class == FP_ZERO)) PdV = 0xff; if (fGETBIT(1,uiV) && (class == FP_NORMAL)) PdV = 0xff; if (fGETBIT(2,uiV) && (class == FP_SUBNORMAL)) PdV = 0xff; if (fGETBIT(3,uiV) && (class == FP_INFINITE)) PdV = 0xff; if (fGETBIT(4,uiV) && (class == FP_NAN)) PdV = 0xff; fFPCANCELFLAGS(); },
DEF_HELPER_3(F2_sfclass, s32, env, s32, s32),
{
/* F2_sfclass */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
fWRAP_F2_sfclass(gen_helper_F2_sfclass(PdV, cpu_env, RsV, uiV);,
{ fHIDE(int class;) PdV = 0; class = fpclassify(fFLOAT(RsV)); if (fGETBIT(0,uiV) && (class == FP_ZERO)) PdV = 0xff; if (fGETBIT(1,uiV) && (class == FP_NORMAL)) PdV = 0xff; if (fGETBIT(2,uiV) && (class == FP_SUBNORMAL)) PdV = 0xff; if (fGETBIT(3,uiV) && (class == FP_INFINITE)) PdV = 0xff; if (fGETBIT(4,uiV) && (class == FP_NAN)) PdV = 0xff; fFPCANCELFLAGS(); })
WRITE_PREG(PdN,PdV);
fFPOP_END();
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* F2_sfclass */
},
int32_t HELPER(F2_sfclass)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
fFPOP_START();
{ fHIDE(int class;) PdV = 0; class = fpclassify(fFLOAT(RsV)); if (fGETBIT(0,uiV) && (class == FP_ZERO)) PdV = 0xff; if (fGETBIT(1,uiV) && (class == FP_NORMAL)) PdV = 0xff; if (fGETBIT(2,uiV) && (class == FP_SUBNORMAL)) PdV = 0xff; if (fGETBIT(3,uiV) && (class == FP_INFINITE)) PdV = 0xff; if (fGETBIT(4,uiV) && (class == FP_NAN)) PdV = 0xff; fFPCANCELFLAGS(); }
COUNT_HELPER(F2_sfclass);
fFPOP_END();
return PdV;
})
DEF_QEMU(F2_sfimm_p,{ RdV = (127 - 6) << 23; RdV += uiV << 17; },
DEF_HELPER_2(F2_sfimm_p, s32, env, s32),
{
/* F2_sfimm_p */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_F2_sfimm_p(gen_helper_F2_sfimm_p(RdV, cpu_env, uiV);,
{ RdV = (127 - 6) << 23; RdV += uiV << 17; })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* F2_sfimm_p */
},
int32_t HELPER(F2_sfimm_p)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = (127 - 6) << 23; RdV += uiV << 17; }
COUNT_HELPER(F2_sfimm_p);
return RdV;
})
DEF_QEMU(F2_sfimm_n,{ RdV = (127 - 6) << 23; RdV += (uiV << 17); RdV |= (1 << 31); },
DEF_HELPER_2(F2_sfimm_n, s32, env, s32),
{
/* F2_sfimm_n */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_F2_sfimm_n(gen_helper_F2_sfimm_n(RdV, cpu_env, uiV);,
{ RdV = (127 - 6) << 23; RdV += (uiV << 17); RdV |= (1 << 31); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* F2_sfimm_n */
},
int32_t HELPER(F2_sfimm_n)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = (127 - 6) << 23; RdV += (uiV << 17); RdV |= (1 << 31); }
COUNT_HELPER(F2_sfimm_n);
return RdV;
})
DEF_QEMU(F2_sfdivcheat,{ RdV = fUNFLOAT(fFLOAT(RsV) / fFLOAT(RtV)); },
DEF_HELPER_3(F2_sfdivcheat, s32, env, s32, s32),
{
/* F2_sfdivcheat */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_F2_sfdivcheat(gen_helper_F2_sfdivcheat(RdV, cpu_env, RsV, RtV);,
{ RdV = fUNFLOAT(fFLOAT(RsV) / fFLOAT(RtV)); })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* F2_sfdivcheat */
},
int32_t HELPER(F2_sfdivcheat)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ RdV = fUNFLOAT(fFLOAT(RsV) / fFLOAT(RtV)); }
COUNT_HELPER(F2_sfdivcheat);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_sfrecipa,{ fHIDE(int idx;) fHIDE(int adjust;) fHIDE(int mant;) fHIDE(int exp;) if (fSF_RECIP_COMMON(RsV,RtV,RdV,adjust)) { PeV = adjust; idx = (RtV >> 16) & 0x7f; mant = (fSF_RECIP_LOOKUP(idx) << 15) | 1; exp = fSF_BIAS() - (fSF_GETEXP(RtV) - fSF_BIAS()) - 1; RdV = fMAKESF(fGETBIT(31,RtV),exp,mant); } },
DEF_HELPER_1(F2_sfrecipa, void, env),
{
/* F2_sfrecipa */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PREG_e(TCGv, PeV, PeN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_F2_sfrecipa(gen_helper_F2_sfrecipa(RdV, PeV, cpu_env, RsV, RtV);,
{ fHIDE(int idx;) fHIDE(int adjust;) fHIDE(int mant;) fHIDE(int exp;) if (fSF_RECIP_COMMON(RsV,RtV,RdV,adjust)) { PeV = adjust; idx = (RtV >> 16) & 0x7f; mant = (fSF_RECIP_LOOKUP(idx) << 15) | 1; exp = fSF_BIAS() - (fSF_GETEXP(RtV) - fSF_BIAS()) - 1; RdV = fMAKESF(fGETBIT(31,RtV),exp,mant); } })
WRITE_RREG(RdN,RdV);
WRITE_PREG(PeN,PeV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_e(PeV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* F2_sfrecipa */
},
void HELPER(F2_sfrecipa)(CPUHexagonState *env) { BOGUS_HELPER(F2_sfrecipa); }
)
DEF_QEMU(F2_sffixupn,{ fHIDE(int adjust;) fSF_RECIP_COMMON(RsV,RtV,RdV,adjust); RdV = RsV; },
DEF_HELPER_3(F2_sffixupn, s32, env, s32, s32),
{
/* F2_sffixupn */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_F2_sffixupn(gen_helper_F2_sffixupn(RdV, cpu_env, RsV, RtV);,
{ fHIDE(int adjust;) fSF_RECIP_COMMON(RsV,RtV,RdV,adjust); RdV = RsV; })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* F2_sffixupn */
},
int32_t HELPER(F2_sffixupn)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ fHIDE(int adjust;) fSF_RECIP_COMMON(RsV,RtV,RdV,adjust); RdV = RsV; }
COUNT_HELPER(F2_sffixupn);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_sffixupd,{ fHIDE(int adjust;) fSF_RECIP_COMMON(RsV,RtV,RdV,adjust); RdV = RtV; },
DEF_HELPER_3(F2_sffixupd, s32, env, s32, s32),
{
/* F2_sffixupd */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_F2_sffixupd(gen_helper_F2_sffixupd(RdV, cpu_env, RsV, RtV);,
{ fHIDE(int adjust;) fSF_RECIP_COMMON(RsV,RtV,RdV,adjust); RdV = RtV; })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* F2_sffixupd */
},
int32_t HELPER(F2_sffixupd)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ fHIDE(int adjust;) fSF_RECIP_COMMON(RsV,RtV,RdV,adjust); RdV = RtV; }
COUNT_HELPER(F2_sffixupd);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_sfinvsqrta,{ fHIDE(int idx;) fHIDE(int adjust;) fHIDE(int mant;) fHIDE(int exp;) if (fSF_INVSQRT_COMMON(RsV,RdV,adjust)) { PeV = adjust; idx = (RsV >> 17) & 0x7f; mant = (fSF_INVSQRT_LOOKUP(idx) << 15); exp = fSF_BIAS() - ((fSF_GETEXP(RsV) - fSF_BIAS()) >> 1) - 1; RdV = fMAKESF(fGETBIT(31,RsV),exp,mant); } },
DEF_HELPER_1(F2_sfinvsqrta, void, env),
{
/* F2_sfinvsqrta */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PREG_e(TCGv, PeV, PeN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
fWRAP_F2_sfinvsqrta(gen_helper_F2_sfinvsqrta(RdV, PeV, cpu_env, RsV);,
{ fHIDE(int idx;) fHIDE(int adjust;) fHIDE(int mant;) fHIDE(int exp;) if (fSF_INVSQRT_COMMON(RsV,RdV,adjust)) { PeV = adjust; idx = (RsV >> 17) & 0x7f; mant = (fSF_INVSQRT_LOOKUP(idx) << 15); exp = fSF_BIAS() - ((fSF_GETEXP(RsV) - fSF_BIAS()) >> 1) - 1; RdV = fMAKESF(fGETBIT(31,RsV),exp,mant); } })
WRITE_RREG(RdN,RdV);
WRITE_PREG(PeN,PeV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_e(PeV);
FREE_REG_s(RsV);
/* F2_sfinvsqrta */
},
void HELPER(F2_sfinvsqrta)(CPUHexagonState *env) { BOGUS_HELPER(F2_sfinvsqrta); }
)
DEF_QEMU(F2_sffixupr,{ fHIDE(int adjust;) fSF_INVSQRT_COMMON(RsV,RdV,adjust); RdV = RsV; },
DEF_HELPER_2(F2_sffixupr, s32, env, s32),
{
/* F2_sffixupr */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
fWRAP_F2_sffixupr(gen_helper_F2_sffixupr(RdV, cpu_env, RsV);,
{ fHIDE(int adjust;) fSF_INVSQRT_COMMON(RsV,RdV,adjust); RdV = RsV; })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* F2_sffixupr */
},
int32_t HELPER(F2_sffixupr)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ fHIDE(int adjust;) fSF_INVSQRT_COMMON(RsV,RdV,adjust); RdV = RsV; }
COUNT_HELPER(F2_sffixupr);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_sfsqrtcheat,{ RdV = fUNFLOAT(sqrtf(fFLOAT(RsV))); },
DEF_HELPER_2(F2_sfsqrtcheat, s32, env, s32),
{
/* F2_sfsqrtcheat */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
fWRAP_F2_sfsqrtcheat(gen_helper_F2_sfsqrtcheat(RdV, cpu_env, RsV);,
{ RdV = fUNFLOAT(sqrtf(fFLOAT(RsV))); })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* F2_sfsqrtcheat */
},
int32_t HELPER(F2_sfsqrtcheat)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ RdV = fUNFLOAT(sqrtf(fFLOAT(RsV))); }
COUNT_HELPER(F2_sfsqrtcheat);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_dfadd,{ RddV=fUNDOUBLE(fDOUBLE(RssV)+fDOUBLE(RttV));},
DEF_HELPER_3(F2_dfadd, s64, env, s64, s64),
{
/* F2_dfadd */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_F2_dfadd(gen_helper_F2_dfadd(RddV, cpu_env, RssV, RttV);,
{ RddV=fUNDOUBLE(fDOUBLE(RssV)+fDOUBLE(RttV));})
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* F2_dfadd */
},
int64_t HELPER(F2_dfadd)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ RddV=fUNDOUBLE(fDOUBLE(RssV)+fDOUBLE(RttV));}
COUNT_HELPER(F2_dfadd);
fFPOP_END();
return RddV;
})
DEF_QEMU(F2_dfsub,{ RddV=fUNDOUBLE(fDOUBLE(RssV)-fDOUBLE(RttV));},
DEF_HELPER_3(F2_dfsub, s64, env, s64, s64),
{
/* F2_dfsub */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_F2_dfsub(gen_helper_F2_dfsub(RddV, cpu_env, RssV, RttV);,
{ RddV=fUNDOUBLE(fDOUBLE(RssV)-fDOUBLE(RttV));})
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* F2_dfsub */
},
int64_t HELPER(F2_dfsub)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ RddV=fUNDOUBLE(fDOUBLE(RssV)-fDOUBLE(RttV));}
COUNT_HELPER(F2_dfsub);
fFPOP_END();
return RddV;
})
DEF_QEMU(F2_dfmax,{ RddV = fUNDOUBLE(fDF_MAX(fDOUBLE(RssV),fDOUBLE(RttV))); },
DEF_HELPER_3(F2_dfmax, s64, env, s64, s64),
{
/* F2_dfmax */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_F2_dfmax(gen_helper_F2_dfmax(RddV, cpu_env, RssV, RttV);,
{ RddV = fUNDOUBLE(fDF_MAX(fDOUBLE(RssV),fDOUBLE(RttV))); })
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* F2_dfmax */
},
int64_t HELPER(F2_dfmax)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ RddV = fUNDOUBLE(fDF_MAX(fDOUBLE(RssV),fDOUBLE(RttV))); }
COUNT_HELPER(F2_dfmax);
fFPOP_END();
return RddV;
})
DEF_QEMU(F2_dfmin,{ RddV = fUNDOUBLE(fDF_MIN(fDOUBLE(RssV),fDOUBLE(RttV))); },
DEF_HELPER_3(F2_dfmin, s64, env, s64, s64),
{
/* F2_dfmin */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_F2_dfmin(gen_helper_F2_dfmin(RddV, cpu_env, RssV, RttV);,
{ RddV = fUNDOUBLE(fDF_MIN(fDOUBLE(RssV),fDOUBLE(RttV))); })
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* F2_dfmin */
},
int64_t HELPER(F2_dfmin)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ RddV = fUNDOUBLE(fDF_MIN(fDOUBLE(RssV),fDOUBLE(RttV))); }
COUNT_HELPER(F2_dfmin);
fFPOP_END();
return RddV;
})
DEF_QEMU(F2_dfmpyfix,{ if (fDF_ISDENORM(RssV) && fDF_ISBIG(RttV) && fDF_ISNORMAL(RttV)) RddV = fUNDOUBLE(fDOUBLE(RssV) * 0x1.0p52); else if (fDF_ISDENORM(RttV) && fDF_ISBIG(RssV) && fDF_ISNORMAL(RssV)) RddV = fUNDOUBLE(fDOUBLE(RssV) * 0x1.0p-52); else RddV = RssV; },
DEF_HELPER_3(F2_dfmpyfix, s64, env, s64, s64),
{
/* F2_dfmpyfix */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_F2_dfmpyfix(gen_helper_F2_dfmpyfix(RddV, cpu_env, RssV, RttV);,
{ if (fDF_ISDENORM(RssV) && fDF_ISBIG(RttV) && fDF_ISNORMAL(RttV)) RddV = fUNDOUBLE(fDOUBLE(RssV) * 0x1.0p52); else if (fDF_ISDENORM(RttV) && fDF_ISBIG(RssV) && fDF_ISNORMAL(RssV)) RddV = fUNDOUBLE(fDOUBLE(RssV) * 0x1.0p-52); else RddV = RssV; })
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* F2_dfmpyfix */
},
int64_t HELPER(F2_dfmpyfix)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ if (fDF_ISDENORM(RssV) && fDF_ISBIG(RttV) && fDF_ISNORMAL(RttV)) RddV = fUNDOUBLE(fDOUBLE(RssV) * 0x1.0p52); else if (fDF_ISDENORM(RttV) && fDF_ISBIG(RssV) && fDF_ISNORMAL(RssV)) RddV = fUNDOUBLE(fDOUBLE(RssV) * 0x1.0p-52); else RddV = RssV; }
COUNT_HELPER(F2_dfmpyfix);
fFPOP_END();
return RddV;
})
DEF_QEMU(F2_dfmpyll,{ fHIDE(size8u_t prod;) prod = fMPY32UU(fGETUWORD(0,RssV),fGETUWORD(0,RttV)); RddV = (prod >> 32) << 1; if (fGETUWORD(0,prod) != 0) fSETBIT(0,RddV,1); },
DEF_HELPER_3(F2_dfmpyll, s64, env, s64, s64),
{
/* F2_dfmpyll */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_F2_dfmpyll(gen_helper_F2_dfmpyll(RddV, cpu_env, RssV, RttV);,
{ fHIDE(size8u_t prod;) prod = fMPY32UU(fGETUWORD(0,RssV),fGETUWORD(0,RttV)); RddV = (prod >> 32) << 1; if (fGETUWORD(0,prod) != 0) fSETBIT(0,RddV,1); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* F2_dfmpyll */
},
int64_t HELPER(F2_dfmpyll)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(size8u_t prod;) prod = fMPY32UU(fGETUWORD(0,RssV),fGETUWORD(0,RttV)); RddV = (prod >> 32) << 1; if (fGETUWORD(0,prod) != 0) fSETBIT(0,RddV,1); }
COUNT_HELPER(F2_dfmpyll);
return RddV;
})
DEF_QEMU(F2_dfmpylh,{ RxxV += (fGETUWORD(0,RssV) * (0x00100000 | fZXTN(20,64,fGETUWORD(1,RttV)))) << 1; },
DEF_HELPER_4(F2_dfmpylh, s64, env, s64, s64, s64),
{
/* F2_dfmpylh */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_F2_dfmpylh(gen_helper_F2_dfmpylh(RxxV, cpu_env, RxxV, RssV, RttV);,
{ RxxV += (fGETUWORD(0,RssV) * (0x00100000 | fZXTN(20,64,fGETUWORD(1,RttV)))) << 1; })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* F2_dfmpylh */
},
int64_t HELPER(F2_dfmpylh)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ RxxV += (fGETUWORD(0,RssV) * (0x00100000 | fZXTN(20,64,fGETUWORD(1,RttV)))) << 1; }
COUNT_HELPER(F2_dfmpylh);
return RxxV;
})
DEF_QEMU(F2_dfmpyhh,{ RxxV = fUNDOUBLE(fDF_MPY_HH(fDOUBLE(RssV),fDOUBLE(RttV),RxxV)); },
DEF_HELPER_4(F2_dfmpyhh, s64, env, s64, s64, s64),
{
/* F2_dfmpyhh */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
fFPOP_START();
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_F2_dfmpyhh(gen_helper_F2_dfmpyhh(RxxV, cpu_env, RxxV, RssV, RttV);,
{ RxxV = fUNDOUBLE(fDF_MPY_HH(fDOUBLE(RssV),fDOUBLE(RttV),RxxV)); })
WRITE_RREG_PAIR(RxxN,RxxV);
fFPOP_END();
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* F2_dfmpyhh */
},
int64_t HELPER(F2_dfmpyhh)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
fFPOP_START();
{ RxxV = fUNDOUBLE(fDF_MPY_HH(fDOUBLE(RssV),fDOUBLE(RttV),RxxV)); }
COUNT_HELPER(F2_dfmpyhh);
fFPOP_END();
return RxxV;
})
DEF_QEMU(F2_dfcmpeq,{PdV=f8BITSOF(fDOUBLE(RssV)==fDOUBLE(RttV));},
DEF_HELPER_3(F2_dfcmpeq, s32, env, s64, s64),
{
/* F2_dfcmpeq */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_F2_dfcmpeq(gen_helper_F2_dfcmpeq(PdV, cpu_env, RssV, RttV);,
{PdV=f8BITSOF(fDOUBLE(RssV)==fDOUBLE(RttV));})
WRITE_PREG(PdN,PdV);
fFPOP_END();
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* F2_dfcmpeq */
},
int32_t HELPER(F2_dfcmpeq)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
fFPOP_START();
{PdV=f8BITSOF(fDOUBLE(RssV)==fDOUBLE(RttV));}
COUNT_HELPER(F2_dfcmpeq);
fFPOP_END();
return PdV;
})
DEF_QEMU(F2_dfcmpgt,{PdV=f8BITSOF(fDOUBLE(RssV)>fDOUBLE(RttV));},
DEF_HELPER_3(F2_dfcmpgt, s32, env, s64, s64),
{
/* F2_dfcmpgt */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_F2_dfcmpgt(gen_helper_F2_dfcmpgt(PdV, cpu_env, RssV, RttV);,
{PdV=f8BITSOF(fDOUBLE(RssV)>fDOUBLE(RttV));})
WRITE_PREG(PdN,PdV);
fFPOP_END();
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* F2_dfcmpgt */
},
int32_t HELPER(F2_dfcmpgt)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
fFPOP_START();
{PdV=f8BITSOF(fDOUBLE(RssV)>fDOUBLE(RttV));}
COUNT_HELPER(F2_dfcmpgt);
fFPOP_END();
return PdV;
})
DEF_QEMU(F2_dfcmpge,{PdV=f8BITSOF(fDOUBLE(RssV)>=fDOUBLE(RttV));},
DEF_HELPER_3(F2_dfcmpge, s32, env, s64, s64),
{
/* F2_dfcmpge */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_F2_dfcmpge(gen_helper_F2_dfcmpge(PdV, cpu_env, RssV, RttV);,
{PdV=f8BITSOF(fDOUBLE(RssV)>=fDOUBLE(RttV));})
WRITE_PREG(PdN,PdV);
fFPOP_END();
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* F2_dfcmpge */
},
int32_t HELPER(F2_dfcmpge)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
fFPOP_START();
{PdV=f8BITSOF(fDOUBLE(RssV)>=fDOUBLE(RttV));}
COUNT_HELPER(F2_dfcmpge);
fFPOP_END();
return PdV;
})
DEF_QEMU(F2_dfcmpuo,{PdV=f8BITSOF(isunordered(fDOUBLE(RssV),fDOUBLE(RttV)));},
DEF_HELPER_3(F2_dfcmpuo, s32, env, s64, s64),
{
/* F2_dfcmpuo */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_F2_dfcmpuo(gen_helper_F2_dfcmpuo(PdV, cpu_env, RssV, RttV);,
{PdV=f8BITSOF(isunordered(fDOUBLE(RssV),fDOUBLE(RttV)));})
WRITE_PREG(PdN,PdV);
fFPOP_END();
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* F2_dfcmpuo */
},
int32_t HELPER(F2_dfcmpuo)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
fFPOP_START();
{PdV=f8BITSOF(isunordered(fDOUBLE(RssV),fDOUBLE(RttV)));}
COUNT_HELPER(F2_dfcmpuo);
fFPOP_END();
return PdV;
})
DEF_QEMU(F2_dfclass,{ fHIDE(int class;) PdV = 0; class = fpclassify(fDOUBLE(RssV)); if (fGETBIT(0,uiV) && (class == FP_ZERO)) PdV = 0xff; if (fGETBIT(1,uiV) && (class == FP_NORMAL)) PdV = 0xff; if (fGETBIT(2,uiV) && (class == FP_SUBNORMAL)) PdV = 0xff; if (fGETBIT(3,uiV) && (class == FP_INFINITE)) PdV = 0xff; if (fGETBIT(4,uiV) && (class == FP_NAN)) PdV = 0xff; fFPCANCELFLAGS(); },
DEF_HELPER_3(F2_dfclass, s32, env, s64, s32),
{
/* F2_dfclass */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
fWRAP_F2_dfclass(gen_helper_F2_dfclass(PdV, cpu_env, RssV, uiV);,
{ fHIDE(int class;) PdV = 0; class = fpclassify(fDOUBLE(RssV)); if (fGETBIT(0,uiV) && (class == FP_ZERO)) PdV = 0xff; if (fGETBIT(1,uiV) && (class == FP_NORMAL)) PdV = 0xff; if (fGETBIT(2,uiV) && (class == FP_SUBNORMAL)) PdV = 0xff; if (fGETBIT(3,uiV) && (class == FP_INFINITE)) PdV = 0xff; if (fGETBIT(4,uiV) && (class == FP_NAN)) PdV = 0xff; fFPCANCELFLAGS(); })
WRITE_PREG(PdN,PdV);
fFPOP_END();
FREE_REG_d(PdV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* F2_dfclass */
},
int32_t HELPER(F2_dfclass)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
fFPOP_START();
{ fHIDE(int class;) PdV = 0; class = fpclassify(fDOUBLE(RssV)); if (fGETBIT(0,uiV) && (class == FP_ZERO)) PdV = 0xff; if (fGETBIT(1,uiV) && (class == FP_NORMAL)) PdV = 0xff; if (fGETBIT(2,uiV) && (class == FP_SUBNORMAL)) PdV = 0xff; if (fGETBIT(3,uiV) && (class == FP_INFINITE)) PdV = 0xff; if (fGETBIT(4,uiV) && (class == FP_NAN)) PdV = 0xff; fFPCANCELFLAGS(); }
COUNT_HELPER(F2_dfclass);
fFPOP_END();
return PdV;
})
DEF_QEMU(F2_dfimm_p,{ RddV = (1023ULL - 6) << 52; RddV += (fHIDE((size8u_t))uiV) << 46; },
DEF_HELPER_2(F2_dfimm_p, s64, env, s32),
{
/* F2_dfimm_p */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_F2_dfimm_p(gen_helper_F2_dfimm_p(RddV, cpu_env, uiV);,
{ RddV = (1023ULL - 6) << 52; RddV += (fHIDE((size8u_t))uiV) << 46; })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_IMM(uiV);
/* F2_dfimm_p */
},
int64_t HELPER(F2_dfimm_p)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = (1023ULL - 6) << 52; RddV += (fHIDE((size8u_t))uiV) << 46; }
COUNT_HELPER(F2_dfimm_p);
return RddV;
})
DEF_QEMU(F2_dfimm_n,{ RddV = (1023ULL - 6) << 52; RddV += (fHIDE((size8u_t))uiV) << 46; RddV |= ((1ULL) << 63); },
DEF_HELPER_2(F2_dfimm_n, s64, env, s32),
{
/* F2_dfimm_n */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_F2_dfimm_n(gen_helper_F2_dfimm_n(RddV, cpu_env, uiV);,
{ RddV = (1023ULL - 6) << 52; RddV += (fHIDE((size8u_t))uiV) << 46; RddV |= ((1ULL) << 63); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_IMM(uiV);
/* F2_dfimm_n */
},
int64_t HELPER(F2_dfimm_n)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = (1023ULL - 6) << 52; RddV += (fHIDE((size8u_t))uiV) << 46; RddV |= ((1ULL) << 63); }
COUNT_HELPER(F2_dfimm_n);
return RddV;
})
DEF_QEMU(F2_conv_sf2df,{ RddV = fUNDOUBLE(conv_sf_to_df(fFLOAT(RsV))); },
DEF_HELPER_2(F2_conv_sf2df, s64, env, s32),
{
/* F2_conv_sf2df */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
fWRAP_F2_conv_sf2df(gen_helper_F2_conv_sf2df(RddV, cpu_env, RsV);,
{ RddV = fUNDOUBLE(conv_sf_to_df(fFLOAT(RsV))); })
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* F2_conv_sf2df */
},
int64_t HELPER(F2_conv_sf2df)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ RddV = fUNDOUBLE(conv_sf_to_df(fFLOAT(RsV))); }
COUNT_HELPER(F2_conv_sf2df);
fFPOP_END();
return RddV;
})
DEF_QEMU(F2_conv_df2sf,{ RdV = fUNFLOAT(conv_df_to_sf(fDOUBLE(RssV))); },
DEF_HELPER_2(F2_conv_df2sf, s32, env, s64),
{
/* F2_conv_df2sf */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
fWRAP_F2_conv_df2sf(gen_helper_F2_conv_df2sf(RdV, cpu_env, RssV);,
{ RdV = fUNFLOAT(conv_df_to_sf(fDOUBLE(RssV))); })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* F2_conv_df2sf */
},
int32_t HELPER(F2_conv_df2sf)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ RdV = fUNFLOAT(conv_df_to_sf(fDOUBLE(RssV))); }
COUNT_HELPER(F2_conv_df2sf);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_conv_uw2sf,{ RdV = fUNFLOAT(conv_4u_to_sf(fCAST4u(RsV))); },
DEF_HELPER_2(F2_conv_uw2sf, s32, env, s32),
{
/* F2_conv_uw2sf */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
fWRAP_F2_conv_uw2sf(gen_helper_F2_conv_uw2sf(RdV, cpu_env, RsV);,
{ RdV = fUNFLOAT(conv_4u_to_sf(fCAST4u(RsV))); })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* F2_conv_uw2sf */
},
int32_t HELPER(F2_conv_uw2sf)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ RdV = fUNFLOAT(conv_4u_to_sf(fCAST4u(RsV))); }
COUNT_HELPER(F2_conv_uw2sf);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_conv_uw2df,{ RddV = fUNDOUBLE(conv_4u_to_df(fCAST4u(RsV))); },
DEF_HELPER_2(F2_conv_uw2df, s64, env, s32),
{
/* F2_conv_uw2df */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
fWRAP_F2_conv_uw2df(gen_helper_F2_conv_uw2df(RddV, cpu_env, RsV);,
{ RddV = fUNDOUBLE(conv_4u_to_df(fCAST4u(RsV))); })
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* F2_conv_uw2df */
},
int64_t HELPER(F2_conv_uw2df)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ RddV = fUNDOUBLE(conv_4u_to_df(fCAST4u(RsV))); }
COUNT_HELPER(F2_conv_uw2df);
fFPOP_END();
return RddV;
})
DEF_QEMU(F2_conv_w2sf,{ RdV = fUNFLOAT(conv_4s_to_sf(fCAST4s(RsV))); },
DEF_HELPER_2(F2_conv_w2sf, s32, env, s32),
{
/* F2_conv_w2sf */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
fWRAP_F2_conv_w2sf(gen_helper_F2_conv_w2sf(RdV, cpu_env, RsV);,
{ RdV = fUNFLOAT(conv_4s_to_sf(fCAST4s(RsV))); })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* F2_conv_w2sf */
},
int32_t HELPER(F2_conv_w2sf)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ RdV = fUNFLOAT(conv_4s_to_sf(fCAST4s(RsV))); }
COUNT_HELPER(F2_conv_w2sf);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_conv_w2df,{ RddV = fUNDOUBLE(conv_4s_to_df(fCAST4s(RsV))); },
DEF_HELPER_2(F2_conv_w2df, s64, env, s32),
{
/* F2_conv_w2df */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
fWRAP_F2_conv_w2df(gen_helper_F2_conv_w2df(RddV, cpu_env, RsV);,
{ RddV = fUNDOUBLE(conv_4s_to_df(fCAST4s(RsV))); })
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* F2_conv_w2df */
},
int64_t HELPER(F2_conv_w2df)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ RddV = fUNDOUBLE(conv_4s_to_df(fCAST4s(RsV))); }
COUNT_HELPER(F2_conv_w2df);
fFPOP_END();
return RddV;
})
DEF_QEMU(F2_conv_ud2sf,{ RdV = fUNFLOAT(conv_8u_to_sf(fCAST8u(RssV))); },
DEF_HELPER_2(F2_conv_ud2sf, s32, env, s64),
{
/* F2_conv_ud2sf */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
fWRAP_F2_conv_ud2sf(gen_helper_F2_conv_ud2sf(RdV, cpu_env, RssV);,
{ RdV = fUNFLOAT(conv_8u_to_sf(fCAST8u(RssV))); })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* F2_conv_ud2sf */
},
int32_t HELPER(F2_conv_ud2sf)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ RdV = fUNFLOAT(conv_8u_to_sf(fCAST8u(RssV))); }
COUNT_HELPER(F2_conv_ud2sf);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_conv_ud2df,{ RddV = fUNDOUBLE(conv_8u_to_df(fCAST8u(RssV))); },
DEF_HELPER_2(F2_conv_ud2df, s64, env, s64),
{
/* F2_conv_ud2df */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
fWRAP_F2_conv_ud2df(gen_helper_F2_conv_ud2df(RddV, cpu_env, RssV);,
{ RddV = fUNDOUBLE(conv_8u_to_df(fCAST8u(RssV))); })
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* F2_conv_ud2df */
},
int64_t HELPER(F2_conv_ud2df)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ RddV = fUNDOUBLE(conv_8u_to_df(fCAST8u(RssV))); }
COUNT_HELPER(F2_conv_ud2df);
fFPOP_END();
return RddV;
})
DEF_QEMU(F2_conv_d2sf,{ RdV = fUNFLOAT(conv_8s_to_sf(fCAST8s(RssV))); },
DEF_HELPER_2(F2_conv_d2sf, s32, env, s64),
{
/* F2_conv_d2sf */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
fWRAP_F2_conv_d2sf(gen_helper_F2_conv_d2sf(RdV, cpu_env, RssV);,
{ RdV = fUNFLOAT(conv_8s_to_sf(fCAST8s(RssV))); })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* F2_conv_d2sf */
},
int32_t HELPER(F2_conv_d2sf)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ RdV = fUNFLOAT(conv_8s_to_sf(fCAST8s(RssV))); }
COUNT_HELPER(F2_conv_d2sf);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_conv_d2df,{ RddV = fUNDOUBLE(conv_8s_to_df(fCAST8s(RssV))); },
DEF_HELPER_2(F2_conv_d2df, s64, env, s64),
{
/* F2_conv_d2df */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
fWRAP_F2_conv_d2df(gen_helper_F2_conv_d2df(RddV, cpu_env, RssV);,
{ RddV = fUNDOUBLE(conv_8s_to_df(fCAST8s(RssV))); })
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* F2_conv_d2df */
},
int64_t HELPER(F2_conv_d2df)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ RddV = fUNDOUBLE(conv_8s_to_df(fCAST8s(RssV))); }
COUNT_HELPER(F2_conv_d2df);
fFPOP_END();
return RddV;
})
DEF_QEMU(F2_conv_sf2uw,{ RdV = fCAST4u(conv_sf_to_4u(fFLOAT(RsV))); },
DEF_HELPER_2(F2_conv_sf2uw, s32, env, s32),
{
/* F2_conv_sf2uw */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
fWRAP_F2_conv_sf2uw(gen_helper_F2_conv_sf2uw(RdV, cpu_env, RsV);,
{ RdV = fCAST4u(conv_sf_to_4u(fFLOAT(RsV))); })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* F2_conv_sf2uw */
},
int32_t HELPER(F2_conv_sf2uw)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ RdV = fCAST4u(conv_sf_to_4u(fFLOAT(RsV))); }
COUNT_HELPER(F2_conv_sf2uw);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_conv_sf2w,{ RdV = fCAST4s(conv_sf_to_4s(fFLOAT(RsV))); },
DEF_HELPER_2(F2_conv_sf2w, s32, env, s32),
{
/* F2_conv_sf2w */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
fWRAP_F2_conv_sf2w(gen_helper_F2_conv_sf2w(RdV, cpu_env, RsV);,
{ RdV = fCAST4s(conv_sf_to_4s(fFLOAT(RsV))); })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* F2_conv_sf2w */
},
int32_t HELPER(F2_conv_sf2w)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ RdV = fCAST4s(conv_sf_to_4s(fFLOAT(RsV))); }
COUNT_HELPER(F2_conv_sf2w);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_conv_sf2ud,{ RddV = fCAST8u(conv_sf_to_8u(fFLOAT(RsV))); },
DEF_HELPER_2(F2_conv_sf2ud, s64, env, s32),
{
/* F2_conv_sf2ud */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
fWRAP_F2_conv_sf2ud(gen_helper_F2_conv_sf2ud(RddV, cpu_env, RsV);,
{ RddV = fCAST8u(conv_sf_to_8u(fFLOAT(RsV))); })
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* F2_conv_sf2ud */
},
int64_t HELPER(F2_conv_sf2ud)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ RddV = fCAST8u(conv_sf_to_8u(fFLOAT(RsV))); }
COUNT_HELPER(F2_conv_sf2ud);
fFPOP_END();
return RddV;
})
DEF_QEMU(F2_conv_sf2d,{ RddV = fCAST8s(conv_sf_to_8s(fFLOAT(RsV))); },
DEF_HELPER_2(F2_conv_sf2d, s64, env, s32),
{
/* F2_conv_sf2d */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
fWRAP_F2_conv_sf2d(gen_helper_F2_conv_sf2d(RddV, cpu_env, RsV);,
{ RddV = fCAST8s(conv_sf_to_8s(fFLOAT(RsV))); })
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* F2_conv_sf2d */
},
int64_t HELPER(F2_conv_sf2d)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ RddV = fCAST8s(conv_sf_to_8s(fFLOAT(RsV))); }
COUNT_HELPER(F2_conv_sf2d);
fFPOP_END();
return RddV;
})
DEF_QEMU(F2_conv_df2uw,{ RdV = fCAST4u(conv_df_to_4u(fDOUBLE(RssV))); },
DEF_HELPER_2(F2_conv_df2uw, s32, env, s64),
{
/* F2_conv_df2uw */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
fWRAP_F2_conv_df2uw(gen_helper_F2_conv_df2uw(RdV, cpu_env, RssV);,
{ RdV = fCAST4u(conv_df_to_4u(fDOUBLE(RssV))); })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* F2_conv_df2uw */
},
int32_t HELPER(F2_conv_df2uw)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ RdV = fCAST4u(conv_df_to_4u(fDOUBLE(RssV))); }
COUNT_HELPER(F2_conv_df2uw);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_conv_df2w,{ RdV = fCAST4s(conv_df_to_4s(fDOUBLE(RssV))); },
DEF_HELPER_2(F2_conv_df2w, s32, env, s64),
{
/* F2_conv_df2w */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
fWRAP_F2_conv_df2w(gen_helper_F2_conv_df2w(RdV, cpu_env, RssV);,
{ RdV = fCAST4s(conv_df_to_4s(fDOUBLE(RssV))); })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* F2_conv_df2w */
},
int32_t HELPER(F2_conv_df2w)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ RdV = fCAST4s(conv_df_to_4s(fDOUBLE(RssV))); }
COUNT_HELPER(F2_conv_df2w);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_conv_df2ud,{ RddV = fCAST8u(conv_df_to_8u(fDOUBLE(RssV))); },
DEF_HELPER_2(F2_conv_df2ud, s64, env, s64),
{
/* F2_conv_df2ud */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
fWRAP_F2_conv_df2ud(gen_helper_F2_conv_df2ud(RddV, cpu_env, RssV);,
{ RddV = fCAST8u(conv_df_to_8u(fDOUBLE(RssV))); })
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* F2_conv_df2ud */
},
int64_t HELPER(F2_conv_df2ud)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ RddV = fCAST8u(conv_df_to_8u(fDOUBLE(RssV))); }
COUNT_HELPER(F2_conv_df2ud);
fFPOP_END();
return RddV;
})
DEF_QEMU(F2_conv_df2d,{ RddV = fCAST8s(conv_df_to_8s(fDOUBLE(RssV))); },
DEF_HELPER_2(F2_conv_df2d, s64, env, s64),
{
/* F2_conv_df2d */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
fWRAP_F2_conv_df2d(gen_helper_F2_conv_df2d(RddV, cpu_env, RssV);,
{ RddV = fCAST8s(conv_df_to_8s(fDOUBLE(RssV))); })
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* F2_conv_df2d */
},
int64_t HELPER(F2_conv_df2d)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ RddV = fCAST8s(conv_df_to_8s(fDOUBLE(RssV))); }
COUNT_HELPER(F2_conv_df2d);
fFPOP_END();
return RddV;
})
DEF_QEMU(F2_conv_sf2uw_chop,{ fFPSETROUND_CHOP(); RdV = fCAST4u(conv_sf_to_4u(fFLOAT(RsV))); },
DEF_HELPER_2(F2_conv_sf2uw_chop, s32, env, s32),
{
/* F2_conv_sf2uw_chop */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
fWRAP_F2_conv_sf2uw_chop(gen_helper_F2_conv_sf2uw_chop(RdV, cpu_env, RsV);,
{ fFPSETROUND_CHOP(); RdV = fCAST4u(conv_sf_to_4u(fFLOAT(RsV))); })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* F2_conv_sf2uw_chop */
},
int32_t HELPER(F2_conv_sf2uw_chop)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ fFPSETROUND_CHOP(); RdV = fCAST4u(conv_sf_to_4u(fFLOAT(RsV))); }
COUNT_HELPER(F2_conv_sf2uw_chop);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_conv_sf2w_chop,{ fFPSETROUND_CHOP(); RdV = fCAST4s(conv_sf_to_4s(fFLOAT(RsV))); },
DEF_HELPER_2(F2_conv_sf2w_chop, s32, env, s32),
{
/* F2_conv_sf2w_chop */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
fWRAP_F2_conv_sf2w_chop(gen_helper_F2_conv_sf2w_chop(RdV, cpu_env, RsV);,
{ fFPSETROUND_CHOP(); RdV = fCAST4s(conv_sf_to_4s(fFLOAT(RsV))); })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* F2_conv_sf2w_chop */
},
int32_t HELPER(F2_conv_sf2w_chop)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ fFPSETROUND_CHOP(); RdV = fCAST4s(conv_sf_to_4s(fFLOAT(RsV))); }
COUNT_HELPER(F2_conv_sf2w_chop);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_conv_sf2ud_chop,{ fFPSETROUND_CHOP(); RddV = fCAST8u(conv_sf_to_8u(fFLOAT(RsV))); },
DEF_HELPER_2(F2_conv_sf2ud_chop, s64, env, s32),
{
/* F2_conv_sf2ud_chop */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
fWRAP_F2_conv_sf2ud_chop(gen_helper_F2_conv_sf2ud_chop(RddV, cpu_env, RsV);,
{ fFPSETROUND_CHOP(); RddV = fCAST8u(conv_sf_to_8u(fFLOAT(RsV))); })
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* F2_conv_sf2ud_chop */
},
int64_t HELPER(F2_conv_sf2ud_chop)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ fFPSETROUND_CHOP(); RddV = fCAST8u(conv_sf_to_8u(fFLOAT(RsV))); }
COUNT_HELPER(F2_conv_sf2ud_chop);
fFPOP_END();
return RddV;
})
DEF_QEMU(F2_conv_sf2d_chop,{ fFPSETROUND_CHOP(); RddV = fCAST8s(conv_sf_to_8s(fFLOAT(RsV))); },
DEF_HELPER_2(F2_conv_sf2d_chop, s64, env, s32),
{
/* F2_conv_sf2d_chop */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
fFPOP_START();
READ_RREG_s(RsV, RsN);
fWRAP_F2_conv_sf2d_chop(gen_helper_F2_conv_sf2d_chop(RddV, cpu_env, RsV);,
{ fFPSETROUND_CHOP(); RddV = fCAST8s(conv_sf_to_8s(fFLOAT(RsV))); })
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* F2_conv_sf2d_chop */
},
int64_t HELPER(F2_conv_sf2d_chop)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ fFPSETROUND_CHOP(); RddV = fCAST8s(conv_sf_to_8s(fFLOAT(RsV))); }
COUNT_HELPER(F2_conv_sf2d_chop);
fFPOP_END();
return RddV;
})
DEF_QEMU(F2_conv_df2uw_chop,{ fFPSETROUND_CHOP(); RdV = fCAST4u(conv_df_to_4u(fDOUBLE(RssV))); },
DEF_HELPER_2(F2_conv_df2uw_chop, s32, env, s64),
{
/* F2_conv_df2uw_chop */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
fWRAP_F2_conv_df2uw_chop(gen_helper_F2_conv_df2uw_chop(RdV, cpu_env, RssV);,
{ fFPSETROUND_CHOP(); RdV = fCAST4u(conv_df_to_4u(fDOUBLE(RssV))); })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* F2_conv_df2uw_chop */
},
int32_t HELPER(F2_conv_df2uw_chop)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ fFPSETROUND_CHOP(); RdV = fCAST4u(conv_df_to_4u(fDOUBLE(RssV))); }
COUNT_HELPER(F2_conv_df2uw_chop);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_conv_df2w_chop,{ fFPSETROUND_CHOP(); RdV = fCAST4s(conv_df_to_4s(fDOUBLE(RssV))); },
DEF_HELPER_2(F2_conv_df2w_chop, s32, env, s64),
{
/* F2_conv_df2w_chop */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
fWRAP_F2_conv_df2w_chop(gen_helper_F2_conv_df2w_chop(RdV, cpu_env, RssV);,
{ fFPSETROUND_CHOP(); RdV = fCAST4s(conv_df_to_4s(fDOUBLE(RssV))); })
WRITE_RREG(RdN,RdV);
fFPOP_END();
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* F2_conv_df2w_chop */
},
int32_t HELPER(F2_conv_df2w_chop)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
fFPOP_START();
{ fFPSETROUND_CHOP(); RdV = fCAST4s(conv_df_to_4s(fDOUBLE(RssV))); }
COUNT_HELPER(F2_conv_df2w_chop);
fFPOP_END();
return RdV;
})
DEF_QEMU(F2_conv_df2ud_chop,{ fFPSETROUND_CHOP(); RddV = fCAST8u(conv_df_to_8u(fDOUBLE(RssV))); },
DEF_HELPER_2(F2_conv_df2ud_chop, s64, env, s64),
{
/* F2_conv_df2ud_chop */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
fWRAP_F2_conv_df2ud_chop(gen_helper_F2_conv_df2ud_chop(RddV, cpu_env, RssV);,
{ fFPSETROUND_CHOP(); RddV = fCAST8u(conv_df_to_8u(fDOUBLE(RssV))); })
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* F2_conv_df2ud_chop */
},
int64_t HELPER(F2_conv_df2ud_chop)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ fFPSETROUND_CHOP(); RddV = fCAST8u(conv_df_to_8u(fDOUBLE(RssV))); }
COUNT_HELPER(F2_conv_df2ud_chop);
fFPOP_END();
return RddV;
})
DEF_QEMU(F2_conv_df2d_chop,{ fFPSETROUND_CHOP(); RddV = fCAST8s(conv_df_to_8s(fDOUBLE(RssV))); },
DEF_HELPER_2(F2_conv_df2d_chop, s64, env, s64),
{
/* F2_conv_df2d_chop */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
fFPOP_START();
READ_RREG_PAIR(RssV, RssN);
fWRAP_F2_conv_df2d_chop(gen_helper_F2_conv_df2d_chop(RddV, cpu_env, RssV);,
{ fFPSETROUND_CHOP(); RddV = fCAST8s(conv_df_to_8s(fDOUBLE(RssV))); })
WRITE_RREG_PAIR(RddN,RddV);
fFPOP_END();
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* F2_conv_df2d_chop */
},
int64_t HELPER(F2_conv_df2d_chop)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
fFPOP_START();
{ fFPSETROUND_CHOP(); RddV = fCAST8s(conv_df_to_8s(fDOUBLE(RssV))); }
COUNT_HELPER(F2_conv_df2d_chop);
fFPOP_END();
return RddV;
})
DEF_QEMU(S2_asr_r_r,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fECHO( fBIDIR_ASHIFTR(RsV,shamt,4_8)); },
DEF_HELPER_3(S2_asr_r_r, s32, env, s32, s32),
{
/* S2_asr_r_r */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asr_r_r(gen_helper_S2_asr_r_r(RdV, cpu_env, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fECHO( fBIDIR_ASHIFTR(RsV,shamt,4_8)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_asr_r_r */
},
int32_t HELPER(S2_asr_r_r)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fECHO( fBIDIR_ASHIFTR(RsV,shamt,4_8)); }
COUNT_HELPER(S2_asr_r_r);
return RdV;
})
DEF_QEMU(S2_asl_r_r,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fECHO( fBIDIR_ASHIFTL(RsV,shamt,4_8)); },
DEF_HELPER_3(S2_asl_r_r, s32, env, s32, s32),
{
/* S2_asl_r_r */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asl_r_r(gen_helper_S2_asl_r_r(RdV, cpu_env, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fECHO( fBIDIR_ASHIFTL(RsV,shamt,4_8)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_asl_r_r */
},
int32_t HELPER(S2_asl_r_r)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fECHO( fBIDIR_ASHIFTL(RsV,shamt,4_8)); }
COUNT_HELPER(S2_asl_r_r);
return RdV;
})
DEF_QEMU(S2_lsr_r_r,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fECHO( fBIDIR_LSHIFTR(RsV,shamt,4_8)); },
DEF_HELPER_3(S2_lsr_r_r, s32, env, s32, s32),
{
/* S2_lsr_r_r */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsr_r_r(gen_helper_S2_lsr_r_r(RdV, cpu_env, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fECHO( fBIDIR_LSHIFTR(RsV,shamt,4_8)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_lsr_r_r */
},
int32_t HELPER(S2_lsr_r_r)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fECHO( fBIDIR_LSHIFTR(RsV,shamt,4_8)); }
COUNT_HELPER(S2_lsr_r_r);
return RdV;
})
DEF_QEMU(S2_lsl_r_r,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fECHO( fBIDIR_LSHIFTL(RsV,shamt,4_8)); },
DEF_HELPER_3(S2_lsl_r_r, s32, env, s32, s32),
{
/* S2_lsl_r_r */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsl_r_r(gen_helper_S2_lsl_r_r(RdV, cpu_env, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fECHO( fBIDIR_LSHIFTL(RsV,shamt,4_8)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_lsl_r_r */
},
int32_t HELPER(S2_lsl_r_r)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fECHO( fBIDIR_LSHIFTL(RsV,shamt,4_8)); }
COUNT_HELPER(S2_lsl_r_r);
return RdV;
})
DEF_QEMU(S2_asr_r_p,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RddV = fECHO( fBIDIR_ASHIFTR(RssV,shamt,8_8)); },
DEF_HELPER_3(S2_asr_r_p, s64, env, s64, s32),
{
/* S2_asr_r_p */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asr_r_p(gen_helper_S2_asr_r_p(RddV, cpu_env, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RddV = fECHO( fBIDIR_ASHIFTR(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_asr_r_p */
},
int64_t HELPER(S2_asr_r_p)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RddV = fECHO( fBIDIR_ASHIFTR(RssV,shamt,8_8)); }
COUNT_HELPER(S2_asr_r_p);
return RddV;
})
DEF_QEMU(S2_asl_r_p,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RddV = fECHO( fBIDIR_ASHIFTL(RssV,shamt,8_8)); },
DEF_HELPER_3(S2_asl_r_p, s64, env, s64, s32),
{
/* S2_asl_r_p */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asl_r_p(gen_helper_S2_asl_r_p(RddV, cpu_env, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RddV = fECHO( fBIDIR_ASHIFTL(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_asl_r_p */
},
int64_t HELPER(S2_asl_r_p)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RddV = fECHO( fBIDIR_ASHIFTL(RssV,shamt,8_8)); }
COUNT_HELPER(S2_asl_r_p);
return RddV;
})
DEF_QEMU(S2_lsr_r_p,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RddV = fECHO( fBIDIR_LSHIFTR(RssV,shamt,8_8)); },
DEF_HELPER_3(S2_lsr_r_p, s64, env, s64, s32),
{
/* S2_lsr_r_p */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsr_r_p(gen_helper_S2_lsr_r_p(RddV, cpu_env, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RddV = fECHO( fBIDIR_LSHIFTR(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_lsr_r_p */
},
int64_t HELPER(S2_lsr_r_p)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RddV = fECHO( fBIDIR_LSHIFTR(RssV,shamt,8_8)); }
COUNT_HELPER(S2_lsr_r_p);
return RddV;
})
DEF_QEMU(S2_lsl_r_p,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RddV = fECHO( fBIDIR_LSHIFTL(RssV,shamt,8_8)); },
DEF_HELPER_3(S2_lsl_r_p, s64, env, s64, s32),
{
/* S2_lsl_r_p */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsl_r_p(gen_helper_S2_lsl_r_p(RddV, cpu_env, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RddV = fECHO( fBIDIR_LSHIFTL(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_lsl_r_p */
},
int64_t HELPER(S2_lsl_r_p)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RddV = fECHO( fBIDIR_LSHIFTL(RssV,shamt,8_8)); }
COUNT_HELPER(S2_lsl_r_p);
return RddV;
})
DEF_QEMU(S2_asr_r_r_acc,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV + fBIDIR_ASHIFTR(RsV,shamt,4_8)); },
DEF_HELPER_4(S2_asr_r_r_acc, s32, env, s32, s32, s32),
{
/* S2_asr_r_r_acc */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asr_r_r_acc(gen_helper_S2_asr_r_r_acc(RxV, cpu_env, RxV, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV + fBIDIR_ASHIFTR(RsV,shamt,4_8)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_asr_r_r_acc */
},
int32_t HELPER(S2_asr_r_r_acc)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV + fBIDIR_ASHIFTR(RsV,shamt,4_8)); }
COUNT_HELPER(S2_asr_r_r_acc);
return RxV;
})
DEF_QEMU(S2_asl_r_r_acc,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV + fBIDIR_ASHIFTL(RsV,shamt,4_8)); },
DEF_HELPER_4(S2_asl_r_r_acc, s32, env, s32, s32, s32),
{
/* S2_asl_r_r_acc */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asl_r_r_acc(gen_helper_S2_asl_r_r_acc(RxV, cpu_env, RxV, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV + fBIDIR_ASHIFTL(RsV,shamt,4_8)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_asl_r_r_acc */
},
int32_t HELPER(S2_asl_r_r_acc)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV + fBIDIR_ASHIFTL(RsV,shamt,4_8)); }
COUNT_HELPER(S2_asl_r_r_acc);
return RxV;
})
DEF_QEMU(S2_lsr_r_r_acc,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV + fBIDIR_LSHIFTR(RsV,shamt,4_8)); },
DEF_HELPER_4(S2_lsr_r_r_acc, s32, env, s32, s32, s32),
{
/* S2_lsr_r_r_acc */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsr_r_r_acc(gen_helper_S2_lsr_r_r_acc(RxV, cpu_env, RxV, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV + fBIDIR_LSHIFTR(RsV,shamt,4_8)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_lsr_r_r_acc */
},
int32_t HELPER(S2_lsr_r_r_acc)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV + fBIDIR_LSHIFTR(RsV,shamt,4_8)); }
COUNT_HELPER(S2_lsr_r_r_acc);
return RxV;
})
DEF_QEMU(S2_lsl_r_r_acc,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV + fBIDIR_LSHIFTL(RsV,shamt,4_8)); },
DEF_HELPER_4(S2_lsl_r_r_acc, s32, env, s32, s32, s32),
{
/* S2_lsl_r_r_acc */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsl_r_r_acc(gen_helper_S2_lsl_r_r_acc(RxV, cpu_env, RxV, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV + fBIDIR_LSHIFTL(RsV,shamt,4_8)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_lsl_r_r_acc */
},
int32_t HELPER(S2_lsl_r_r_acc)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV + fBIDIR_LSHIFTL(RsV,shamt,4_8)); }
COUNT_HELPER(S2_lsl_r_r_acc);
return RxV;
})
DEF_QEMU(S2_asr_r_p_acc,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV + fBIDIR_ASHIFTR(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_asr_r_p_acc, s64, env, s64, s64, s32),
{
/* S2_asr_r_p_acc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asr_r_p_acc(gen_helper_S2_asr_r_p_acc(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV + fBIDIR_ASHIFTR(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_asr_r_p_acc */
},
int64_t HELPER(S2_asr_r_p_acc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV + fBIDIR_ASHIFTR(RssV,shamt,8_8)); }
COUNT_HELPER(S2_asr_r_p_acc);
return RxxV;
})
DEF_QEMU(S2_asl_r_p_acc,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV + fBIDIR_ASHIFTL(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_asl_r_p_acc, s64, env, s64, s64, s32),
{
/* S2_asl_r_p_acc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asl_r_p_acc(gen_helper_S2_asl_r_p_acc(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV + fBIDIR_ASHIFTL(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_asl_r_p_acc */
},
int64_t HELPER(S2_asl_r_p_acc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV + fBIDIR_ASHIFTL(RssV,shamt,8_8)); }
COUNT_HELPER(S2_asl_r_p_acc);
return RxxV;
})
DEF_QEMU(S2_lsr_r_p_acc,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV + fBIDIR_LSHIFTR(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_lsr_r_p_acc, s64, env, s64, s64, s32),
{
/* S2_lsr_r_p_acc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsr_r_p_acc(gen_helper_S2_lsr_r_p_acc(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV + fBIDIR_LSHIFTR(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_lsr_r_p_acc */
},
int64_t HELPER(S2_lsr_r_p_acc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV + fBIDIR_LSHIFTR(RssV,shamt,8_8)); }
COUNT_HELPER(S2_lsr_r_p_acc);
return RxxV;
})
DEF_QEMU(S2_lsl_r_p_acc,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV + fBIDIR_LSHIFTL(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_lsl_r_p_acc, s64, env, s64, s64, s32),
{
/* S2_lsl_r_p_acc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsl_r_p_acc(gen_helper_S2_lsl_r_p_acc(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV + fBIDIR_LSHIFTL(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_lsl_r_p_acc */
},
int64_t HELPER(S2_lsl_r_p_acc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV + fBIDIR_LSHIFTL(RssV,shamt,8_8)); }
COUNT_HELPER(S2_lsl_r_p_acc);
return RxxV;
})
DEF_QEMU(S2_asr_r_r_nac,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV - fBIDIR_ASHIFTR(RsV,shamt,4_8)); },
DEF_HELPER_4(S2_asr_r_r_nac, s32, env, s32, s32, s32),
{
/* S2_asr_r_r_nac */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asr_r_r_nac(gen_helper_S2_asr_r_r_nac(RxV, cpu_env, RxV, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV - fBIDIR_ASHIFTR(RsV,shamt,4_8)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_asr_r_r_nac */
},
int32_t HELPER(S2_asr_r_r_nac)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV - fBIDIR_ASHIFTR(RsV,shamt,4_8)); }
COUNT_HELPER(S2_asr_r_r_nac);
return RxV;
})
DEF_QEMU(S2_asl_r_r_nac,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV - fBIDIR_ASHIFTL(RsV,shamt,4_8)); },
DEF_HELPER_4(S2_asl_r_r_nac, s32, env, s32, s32, s32),
{
/* S2_asl_r_r_nac */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asl_r_r_nac(gen_helper_S2_asl_r_r_nac(RxV, cpu_env, RxV, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV - fBIDIR_ASHIFTL(RsV,shamt,4_8)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_asl_r_r_nac */
},
int32_t HELPER(S2_asl_r_r_nac)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV - fBIDIR_ASHIFTL(RsV,shamt,4_8)); }
COUNT_HELPER(S2_asl_r_r_nac);
return RxV;
})
DEF_QEMU(S2_lsr_r_r_nac,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV - fBIDIR_LSHIFTR(RsV,shamt,4_8)); },
DEF_HELPER_4(S2_lsr_r_r_nac, s32, env, s32, s32, s32),
{
/* S2_lsr_r_r_nac */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsr_r_r_nac(gen_helper_S2_lsr_r_r_nac(RxV, cpu_env, RxV, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV - fBIDIR_LSHIFTR(RsV,shamt,4_8)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_lsr_r_r_nac */
},
int32_t HELPER(S2_lsr_r_r_nac)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV - fBIDIR_LSHIFTR(RsV,shamt,4_8)); }
COUNT_HELPER(S2_lsr_r_r_nac);
return RxV;
})
DEF_QEMU(S2_lsl_r_r_nac,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV - fBIDIR_LSHIFTL(RsV,shamt,4_8)); },
DEF_HELPER_4(S2_lsl_r_r_nac, s32, env, s32, s32, s32),
{
/* S2_lsl_r_r_nac */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsl_r_r_nac(gen_helper_S2_lsl_r_r_nac(RxV, cpu_env, RxV, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV - fBIDIR_LSHIFTL(RsV,shamt,4_8)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_lsl_r_r_nac */
},
int32_t HELPER(S2_lsl_r_r_nac)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV - fBIDIR_LSHIFTL(RsV,shamt,4_8)); }
COUNT_HELPER(S2_lsl_r_r_nac);
return RxV;
})
DEF_QEMU(S2_asr_r_p_nac,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV - fBIDIR_ASHIFTR(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_asr_r_p_nac, s64, env, s64, s64, s32),
{
/* S2_asr_r_p_nac */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asr_r_p_nac(gen_helper_S2_asr_r_p_nac(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV - fBIDIR_ASHIFTR(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_asr_r_p_nac */
},
int64_t HELPER(S2_asr_r_p_nac)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV - fBIDIR_ASHIFTR(RssV,shamt,8_8)); }
COUNT_HELPER(S2_asr_r_p_nac);
return RxxV;
})
DEF_QEMU(S2_asl_r_p_nac,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV - fBIDIR_ASHIFTL(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_asl_r_p_nac, s64, env, s64, s64, s32),
{
/* S2_asl_r_p_nac */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asl_r_p_nac(gen_helper_S2_asl_r_p_nac(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV - fBIDIR_ASHIFTL(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_asl_r_p_nac */
},
int64_t HELPER(S2_asl_r_p_nac)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV - fBIDIR_ASHIFTL(RssV,shamt,8_8)); }
COUNT_HELPER(S2_asl_r_p_nac);
return RxxV;
})
DEF_QEMU(S2_lsr_r_p_nac,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV - fBIDIR_LSHIFTR(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_lsr_r_p_nac, s64, env, s64, s64, s32),
{
/* S2_lsr_r_p_nac */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsr_r_p_nac(gen_helper_S2_lsr_r_p_nac(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV - fBIDIR_LSHIFTR(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_lsr_r_p_nac */
},
int64_t HELPER(S2_lsr_r_p_nac)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV - fBIDIR_LSHIFTR(RssV,shamt,8_8)); }
COUNT_HELPER(S2_lsr_r_p_nac);
return RxxV;
})
DEF_QEMU(S2_lsl_r_p_nac,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV - fBIDIR_LSHIFTL(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_lsl_r_p_nac, s64, env, s64, s64, s32),
{
/* S2_lsl_r_p_nac */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsl_r_p_nac(gen_helper_S2_lsl_r_p_nac(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV - fBIDIR_LSHIFTL(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_lsl_r_p_nac */
},
int64_t HELPER(S2_lsl_r_p_nac)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV - fBIDIR_LSHIFTL(RssV,shamt,8_8)); }
COUNT_HELPER(S2_lsl_r_p_nac);
return RxxV;
})
DEF_QEMU(S2_asr_r_r_and,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV & fBIDIR_ASHIFTR(RsV,shamt,4_8)); },
DEF_HELPER_4(S2_asr_r_r_and, s32, env, s32, s32, s32),
{
/* S2_asr_r_r_and */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asr_r_r_and(gen_helper_S2_asr_r_r_and(RxV, cpu_env, RxV, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV & fBIDIR_ASHIFTR(RsV,shamt,4_8)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_asr_r_r_and */
},
int32_t HELPER(S2_asr_r_r_and)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV & fBIDIR_ASHIFTR(RsV,shamt,4_8)); }
COUNT_HELPER(S2_asr_r_r_and);
return RxV;
})
DEF_QEMU(S2_asl_r_r_and,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV & fBIDIR_ASHIFTL(RsV,shamt,4_8)); },
DEF_HELPER_4(S2_asl_r_r_and, s32, env, s32, s32, s32),
{
/* S2_asl_r_r_and */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asl_r_r_and(gen_helper_S2_asl_r_r_and(RxV, cpu_env, RxV, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV & fBIDIR_ASHIFTL(RsV,shamt,4_8)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_asl_r_r_and */
},
int32_t HELPER(S2_asl_r_r_and)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV & fBIDIR_ASHIFTL(RsV,shamt,4_8)); }
COUNT_HELPER(S2_asl_r_r_and);
return RxV;
})
DEF_QEMU(S2_lsr_r_r_and,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV & fBIDIR_LSHIFTR(RsV,shamt,4_8)); },
DEF_HELPER_4(S2_lsr_r_r_and, s32, env, s32, s32, s32),
{
/* S2_lsr_r_r_and */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsr_r_r_and(gen_helper_S2_lsr_r_r_and(RxV, cpu_env, RxV, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV & fBIDIR_LSHIFTR(RsV,shamt,4_8)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_lsr_r_r_and */
},
int32_t HELPER(S2_lsr_r_r_and)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV & fBIDIR_LSHIFTR(RsV,shamt,4_8)); }
COUNT_HELPER(S2_lsr_r_r_and);
return RxV;
})
DEF_QEMU(S2_lsl_r_r_and,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV & fBIDIR_LSHIFTL(RsV,shamt,4_8)); },
DEF_HELPER_4(S2_lsl_r_r_and, s32, env, s32, s32, s32),
{
/* S2_lsl_r_r_and */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsl_r_r_and(gen_helper_S2_lsl_r_r_and(RxV, cpu_env, RxV, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV & fBIDIR_LSHIFTL(RsV,shamt,4_8)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_lsl_r_r_and */
},
int32_t HELPER(S2_lsl_r_r_and)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV & fBIDIR_LSHIFTL(RsV,shamt,4_8)); }
COUNT_HELPER(S2_lsl_r_r_and);
return RxV;
})
DEF_QEMU(S2_asr_r_r_or,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV | fBIDIR_ASHIFTR(RsV,shamt,4_8)); },
DEF_HELPER_4(S2_asr_r_r_or, s32, env, s32, s32, s32),
{
/* S2_asr_r_r_or */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asr_r_r_or(gen_helper_S2_asr_r_r_or(RxV, cpu_env, RxV, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV | fBIDIR_ASHIFTR(RsV,shamt,4_8)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_asr_r_r_or */
},
int32_t HELPER(S2_asr_r_r_or)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV | fBIDIR_ASHIFTR(RsV,shamt,4_8)); }
COUNT_HELPER(S2_asr_r_r_or);
return RxV;
})
DEF_QEMU(S2_asl_r_r_or,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV | fBIDIR_ASHIFTL(RsV,shamt,4_8)); },
DEF_HELPER_4(S2_asl_r_r_or, s32, env, s32, s32, s32),
{
/* S2_asl_r_r_or */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asl_r_r_or(gen_helper_S2_asl_r_r_or(RxV, cpu_env, RxV, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV | fBIDIR_ASHIFTL(RsV,shamt,4_8)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_asl_r_r_or */
},
int32_t HELPER(S2_asl_r_r_or)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV | fBIDIR_ASHIFTL(RsV,shamt,4_8)); }
COUNT_HELPER(S2_asl_r_r_or);
return RxV;
})
DEF_QEMU(S2_lsr_r_r_or,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV | fBIDIR_LSHIFTR(RsV,shamt,4_8)); },
DEF_HELPER_4(S2_lsr_r_r_or, s32, env, s32, s32, s32),
{
/* S2_lsr_r_r_or */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsr_r_r_or(gen_helper_S2_lsr_r_r_or(RxV, cpu_env, RxV, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV | fBIDIR_LSHIFTR(RsV,shamt,4_8)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_lsr_r_r_or */
},
int32_t HELPER(S2_lsr_r_r_or)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV | fBIDIR_LSHIFTR(RsV,shamt,4_8)); }
COUNT_HELPER(S2_lsr_r_r_or);
return RxV;
})
DEF_QEMU(S2_lsl_r_r_or,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV | fBIDIR_LSHIFTL(RsV,shamt,4_8)); },
DEF_HELPER_4(S2_lsl_r_r_or, s32, env, s32, s32, s32),
{
/* S2_lsl_r_r_or */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsl_r_r_or(gen_helper_S2_lsl_r_r_or(RxV, cpu_env, RxV, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV | fBIDIR_LSHIFTL(RsV,shamt,4_8)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_lsl_r_r_or */
},
int32_t HELPER(S2_lsl_r_r_or)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxV = fECHO(RxV | fBIDIR_LSHIFTL(RsV,shamt,4_8)); }
COUNT_HELPER(S2_lsl_r_r_or);
return RxV;
})
DEF_QEMU(S2_asr_r_p_and,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV & fBIDIR_ASHIFTR(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_asr_r_p_and, s64, env, s64, s64, s32),
{
/* S2_asr_r_p_and */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asr_r_p_and(gen_helper_S2_asr_r_p_and(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV & fBIDIR_ASHIFTR(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_asr_r_p_and */
},
int64_t HELPER(S2_asr_r_p_and)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV & fBIDIR_ASHIFTR(RssV,shamt,8_8)); }
COUNT_HELPER(S2_asr_r_p_and);
return RxxV;
})
DEF_QEMU(S2_asl_r_p_and,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV & fBIDIR_ASHIFTL(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_asl_r_p_and, s64, env, s64, s64, s32),
{
/* S2_asl_r_p_and */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asl_r_p_and(gen_helper_S2_asl_r_p_and(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV & fBIDIR_ASHIFTL(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_asl_r_p_and */
},
int64_t HELPER(S2_asl_r_p_and)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV & fBIDIR_ASHIFTL(RssV,shamt,8_8)); }
COUNT_HELPER(S2_asl_r_p_and);
return RxxV;
})
DEF_QEMU(S2_lsr_r_p_and,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV & fBIDIR_LSHIFTR(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_lsr_r_p_and, s64, env, s64, s64, s32),
{
/* S2_lsr_r_p_and */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsr_r_p_and(gen_helper_S2_lsr_r_p_and(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV & fBIDIR_LSHIFTR(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_lsr_r_p_and */
},
int64_t HELPER(S2_lsr_r_p_and)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV & fBIDIR_LSHIFTR(RssV,shamt,8_8)); }
COUNT_HELPER(S2_lsr_r_p_and);
return RxxV;
})
DEF_QEMU(S2_lsl_r_p_and,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV & fBIDIR_LSHIFTL(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_lsl_r_p_and, s64, env, s64, s64, s32),
{
/* S2_lsl_r_p_and */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsl_r_p_and(gen_helper_S2_lsl_r_p_and(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV & fBIDIR_LSHIFTL(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_lsl_r_p_and */
},
int64_t HELPER(S2_lsl_r_p_and)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV & fBIDIR_LSHIFTL(RssV,shamt,8_8)); }
COUNT_HELPER(S2_lsl_r_p_and);
return RxxV;
})
DEF_QEMU(S2_asr_r_p_or,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV | fBIDIR_ASHIFTR(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_asr_r_p_or, s64, env, s64, s64, s32),
{
/* S2_asr_r_p_or */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asr_r_p_or(gen_helper_S2_asr_r_p_or(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV | fBIDIR_ASHIFTR(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_asr_r_p_or */
},
int64_t HELPER(S2_asr_r_p_or)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV | fBIDIR_ASHIFTR(RssV,shamt,8_8)); }
COUNT_HELPER(S2_asr_r_p_or);
return RxxV;
})
DEF_QEMU(S2_asl_r_p_or,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV | fBIDIR_ASHIFTL(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_asl_r_p_or, s64, env, s64, s64, s32),
{
/* S2_asl_r_p_or */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asl_r_p_or(gen_helper_S2_asl_r_p_or(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV | fBIDIR_ASHIFTL(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_asl_r_p_or */
},
int64_t HELPER(S2_asl_r_p_or)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV | fBIDIR_ASHIFTL(RssV,shamt,8_8)); }
COUNT_HELPER(S2_asl_r_p_or);
return RxxV;
})
DEF_QEMU(S2_lsr_r_p_or,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV | fBIDIR_LSHIFTR(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_lsr_r_p_or, s64, env, s64, s64, s32),
{
/* S2_lsr_r_p_or */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsr_r_p_or(gen_helper_S2_lsr_r_p_or(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV | fBIDIR_LSHIFTR(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_lsr_r_p_or */
},
int64_t HELPER(S2_lsr_r_p_or)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV | fBIDIR_LSHIFTR(RssV,shamt,8_8)); }
COUNT_HELPER(S2_lsr_r_p_or);
return RxxV;
})
DEF_QEMU(S2_lsl_r_p_or,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV | fBIDIR_LSHIFTL(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_lsl_r_p_or, s64, env, s64, s64, s32),
{
/* S2_lsl_r_p_or */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsl_r_p_or(gen_helper_S2_lsl_r_p_or(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV | fBIDIR_LSHIFTL(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_lsl_r_p_or */
},
int64_t HELPER(S2_lsl_r_p_or)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV | fBIDIR_LSHIFTL(RssV,shamt,8_8)); }
COUNT_HELPER(S2_lsl_r_p_or);
return RxxV;
})
DEF_QEMU(S2_asr_r_p_xor,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV ^ fBIDIR_ASHIFTR(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_asr_r_p_xor, s64, env, s64, s64, s32),
{
/* S2_asr_r_p_xor */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asr_r_p_xor(gen_helper_S2_asr_r_p_xor(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV ^ fBIDIR_ASHIFTR(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_asr_r_p_xor */
},
int64_t HELPER(S2_asr_r_p_xor)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV ^ fBIDIR_ASHIFTR(RssV,shamt,8_8)); }
COUNT_HELPER(S2_asr_r_p_xor);
return RxxV;
})
DEF_QEMU(S2_asl_r_p_xor,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV ^ fBIDIR_ASHIFTL(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_asl_r_p_xor, s64, env, s64, s64, s32),
{
/* S2_asl_r_p_xor */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asl_r_p_xor(gen_helper_S2_asl_r_p_xor(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV ^ fBIDIR_ASHIFTL(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_asl_r_p_xor */
},
int64_t HELPER(S2_asl_r_p_xor)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV ^ fBIDIR_ASHIFTL(RssV,shamt,8_8)); }
COUNT_HELPER(S2_asl_r_p_xor);
return RxxV;
})
DEF_QEMU(S2_lsr_r_p_xor,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV ^ fBIDIR_LSHIFTR(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_lsr_r_p_xor, s64, env, s64, s64, s32),
{
/* S2_lsr_r_p_xor */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsr_r_p_xor(gen_helper_S2_lsr_r_p_xor(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV ^ fBIDIR_LSHIFTR(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_lsr_r_p_xor */
},
int64_t HELPER(S2_lsr_r_p_xor)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV ^ fBIDIR_LSHIFTR(RssV,shamt,8_8)); }
COUNT_HELPER(S2_lsr_r_p_xor);
return RxxV;
})
DEF_QEMU(S2_lsl_r_p_xor,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV ^ fBIDIR_LSHIFTL(RssV,shamt,8_8)); },
DEF_HELPER_4(S2_lsl_r_p_xor, s64, env, s64, s64, s32),
{
/* S2_lsl_r_p_xor */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsl_r_p_xor(gen_helper_S2_lsl_r_p_xor(RxxV, cpu_env, RxxV, RssV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV ^ fBIDIR_LSHIFTL(RssV,shamt,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_lsl_r_p_xor */
},
int64_t HELPER(S2_lsl_r_p_xor)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RxxV = fECHO(RxxV ^ fBIDIR_LSHIFTL(RssV,shamt,8_8)); }
COUNT_HELPER(S2_lsl_r_p_xor);
return RxxV;
})
DEF_QEMU(S2_asr_r_r_sat,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fBIDIR_ASHIFTR_SAT(RsV,shamt,4_8); },
DEF_HELPER_3(S2_asr_r_r_sat, s32, env, s32, s32),
{
/* S2_asr_r_r_sat */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asr_r_r_sat(gen_helper_S2_asr_r_r_sat(RdV, cpu_env, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fBIDIR_ASHIFTR_SAT(RsV,shamt,4_8); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_asr_r_r_sat */
},
int32_t HELPER(S2_asr_r_r_sat)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fBIDIR_ASHIFTR_SAT(RsV,shamt,4_8); }
COUNT_HELPER(S2_asr_r_r_sat);
return RdV;
})
DEF_QEMU(S2_asl_r_r_sat,{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fBIDIR_ASHIFTL_SAT(RsV,shamt,4_8); },
DEF_HELPER_3(S2_asl_r_r_sat, s32, env, s32, s32),
{
/* S2_asl_r_r_sat */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asl_r_r_sat(gen_helper_S2_asl_r_r_sat(RdV, cpu_env, RsV, RtV);,
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fBIDIR_ASHIFTL_SAT(RsV,shamt,4_8); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_asl_r_r_sat */
},
int32_t HELPER(S2_asl_r_r_sat)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(size4s_t) shamt=fSXTN(7,32,RtV); RdV = fBIDIR_ASHIFTL_SAT(RsV,shamt,4_8); }
COUNT_HELPER(S2_asl_r_r_sat);
return RdV;
})
DEF_QEMU(S2_asr_i_r,{ RdV = fECHO( fASHIFTR(RsV,uiV,4_4)); },
DEF_HELPER_3(S2_asr_i_r, s32, env, s32, s32),
{
/* S2_asr_i_r */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_asr_i_r(gen_helper_S2_asr_i_r(RdV, cpu_env, RsV, uiV);,
{ RdV = fECHO( fASHIFTR(RsV,uiV,4_4)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_asr_i_r */
},
int32_t HELPER(S2_asr_i_r)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fECHO( fASHIFTR(RsV,uiV,4_4)); }
COUNT_HELPER(S2_asr_i_r);
return RdV;
})
DEF_QEMU(S2_lsr_i_r,{ RdV = fECHO( fLSHIFTR(RsV,uiV,4_4)); },
DEF_HELPER_3(S2_lsr_i_r, s32, env, s32, s32),
{
/* S2_lsr_i_r */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_lsr_i_r(gen_helper_S2_lsr_i_r(RdV, cpu_env, RsV, uiV);,
{ RdV = fECHO( fLSHIFTR(RsV,uiV,4_4)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_lsr_i_r */
},
int32_t HELPER(S2_lsr_i_r)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fECHO( fLSHIFTR(RsV,uiV,4_4)); }
COUNT_HELPER(S2_lsr_i_r);
return RdV;
})
DEF_QEMU(S2_asl_i_r,{ RdV = fECHO( fASHIFTL(RsV,uiV,4_4)); },
DEF_HELPER_3(S2_asl_i_r, s32, env, s32, s32),
{
/* S2_asl_i_r */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_asl_i_r(gen_helper_S2_asl_i_r(RdV, cpu_env, RsV, uiV);,
{ RdV = fECHO( fASHIFTL(RsV,uiV,4_4)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_asl_i_r */
},
int32_t HELPER(S2_asl_i_r)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fECHO( fASHIFTL(RsV,uiV,4_4)); }
COUNT_HELPER(S2_asl_i_r);
return RdV;
})
DEF_QEMU(S6_rol_i_r,{ RdV = fECHO( fROTL(RsV,uiV,4_4)); },
DEF_HELPER_3(S6_rol_i_r, s32, env, s32, s32),
{
/* S6_rol_i_r */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_S6_rol_i_r(gen_helper_S6_rol_i_r(RdV, cpu_env, RsV, uiV);,
{ RdV = fECHO( fROTL(RsV,uiV,4_4)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S6_rol_i_r */
},
int32_t HELPER(S6_rol_i_r)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fECHO( fROTL(RsV,uiV,4_4)); }
COUNT_HELPER(S6_rol_i_r);
return RdV;
})
DEF_QEMU(S2_asr_i_p,{ RddV = fECHO( fASHIFTR(RssV,uiV,8_8)); },
DEF_HELPER_3(S2_asr_i_p, s64, env, s64, s32),
{
/* S2_asr_i_p */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_asr_i_p(gen_helper_S2_asr_i_p(RddV, cpu_env, RssV, uiV);,
{ RddV = fECHO( fASHIFTR(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_asr_i_p */
},
int64_t HELPER(S2_asr_i_p)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fECHO( fASHIFTR(RssV,uiV,8_8)); }
COUNT_HELPER(S2_asr_i_p);
return RddV;
})
DEF_QEMU(S2_lsr_i_p,{ RddV = fECHO( fLSHIFTR(RssV,uiV,8_8)); },
DEF_HELPER_3(S2_lsr_i_p, s64, env, s64, s32),
{
/* S2_lsr_i_p */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_lsr_i_p(gen_helper_S2_lsr_i_p(RddV, cpu_env, RssV, uiV);,
{ RddV = fECHO( fLSHIFTR(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_lsr_i_p */
},
int64_t HELPER(S2_lsr_i_p)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fECHO( fLSHIFTR(RssV,uiV,8_8)); }
COUNT_HELPER(S2_lsr_i_p);
return RddV;
})
DEF_QEMU(S2_asl_i_p,{ RddV = fECHO( fASHIFTL(RssV,uiV,8_8)); },
DEF_HELPER_3(S2_asl_i_p, s64, env, s64, s32),
{
/* S2_asl_i_p */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_asl_i_p(gen_helper_S2_asl_i_p(RddV, cpu_env, RssV, uiV);,
{ RddV = fECHO( fASHIFTL(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_asl_i_p */
},
int64_t HELPER(S2_asl_i_p)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fECHO( fASHIFTL(RssV,uiV,8_8)); }
COUNT_HELPER(S2_asl_i_p);
return RddV;
})
DEF_QEMU(S6_rol_i_p,{ RddV = fECHO( fROTL(RssV,uiV,8_8)); },
DEF_HELPER_3(S6_rol_i_p, s64, env, s64, s32),
{
/* S6_rol_i_p */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S6_rol_i_p(gen_helper_S6_rol_i_p(RddV, cpu_env, RssV, uiV);,
{ RddV = fECHO( fROTL(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S6_rol_i_p */
},
int64_t HELPER(S6_rol_i_p)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fECHO( fROTL(RssV,uiV,8_8)); }
COUNT_HELPER(S6_rol_i_p);
return RddV;
})
DEF_QEMU(S2_asr_i_r_acc,{ RxV = fECHO(RxV + fASHIFTR(RsV,uiV,4_4)); },
DEF_HELPER_4(S2_asr_i_r_acc, s32, env, s32, s32, s32),
{
/* S2_asr_i_r_acc */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_asr_i_r_acc(gen_helper_S2_asr_i_r_acc(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV + fASHIFTR(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_asr_i_r_acc */
},
int32_t HELPER(S2_asr_i_r_acc)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV + fASHIFTR(RsV,uiV,4_4)); }
COUNT_HELPER(S2_asr_i_r_acc);
return RxV;
})
DEF_QEMU(S2_lsr_i_r_acc,{ RxV = fECHO(RxV + fLSHIFTR(RsV,uiV,4_4)); },
DEF_HELPER_4(S2_lsr_i_r_acc, s32, env, s32, s32, s32),
{
/* S2_lsr_i_r_acc */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_lsr_i_r_acc(gen_helper_S2_lsr_i_r_acc(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV + fLSHIFTR(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_lsr_i_r_acc */
},
int32_t HELPER(S2_lsr_i_r_acc)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV + fLSHIFTR(RsV,uiV,4_4)); }
COUNT_HELPER(S2_lsr_i_r_acc);
return RxV;
})
DEF_QEMU(S2_asl_i_r_acc,{ RxV = fECHO(RxV + fASHIFTL(RsV,uiV,4_4)); },
DEF_HELPER_4(S2_asl_i_r_acc, s32, env, s32, s32, s32),
{
/* S2_asl_i_r_acc */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_asl_i_r_acc(gen_helper_S2_asl_i_r_acc(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV + fASHIFTL(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_asl_i_r_acc */
},
int32_t HELPER(S2_asl_i_r_acc)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV + fASHIFTL(RsV,uiV,4_4)); }
COUNT_HELPER(S2_asl_i_r_acc);
return RxV;
})
DEF_QEMU(S6_rol_i_r_acc,{ RxV = fECHO(RxV + fROTL(RsV,uiV,4_4)); },
DEF_HELPER_4(S6_rol_i_r_acc, s32, env, s32, s32, s32),
{
/* S6_rol_i_r_acc */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S6_rol_i_r_acc(gen_helper_S6_rol_i_r_acc(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV + fROTL(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S6_rol_i_r_acc */
},
int32_t HELPER(S6_rol_i_r_acc)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV + fROTL(RsV,uiV,4_4)); }
COUNT_HELPER(S6_rol_i_r_acc);
return RxV;
})
DEF_QEMU(S2_asr_i_p_acc,{ RxxV = fECHO(RxxV + fASHIFTR(RssV,uiV,8_8)); },
DEF_HELPER_4(S2_asr_i_p_acc, s64, env, s64, s64, s32),
{
/* S2_asr_i_p_acc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_asr_i_p_acc(gen_helper_S2_asr_i_p_acc(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV + fASHIFTR(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_asr_i_p_acc */
},
int64_t HELPER(S2_asr_i_p_acc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV + fASHIFTR(RssV,uiV,8_8)); }
COUNT_HELPER(S2_asr_i_p_acc);
return RxxV;
})
DEF_QEMU(S2_lsr_i_p_acc,{ RxxV = fECHO(RxxV + fLSHIFTR(RssV,uiV,8_8)); },
DEF_HELPER_4(S2_lsr_i_p_acc, s64, env, s64, s64, s32),
{
/* S2_lsr_i_p_acc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_lsr_i_p_acc(gen_helper_S2_lsr_i_p_acc(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV + fLSHIFTR(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_lsr_i_p_acc */
},
int64_t HELPER(S2_lsr_i_p_acc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV + fLSHIFTR(RssV,uiV,8_8)); }
COUNT_HELPER(S2_lsr_i_p_acc);
return RxxV;
})
DEF_QEMU(S2_asl_i_p_acc,{ RxxV = fECHO(RxxV + fASHIFTL(RssV,uiV,8_8)); },
DEF_HELPER_4(S2_asl_i_p_acc, s64, env, s64, s64, s32),
{
/* S2_asl_i_p_acc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_asl_i_p_acc(gen_helper_S2_asl_i_p_acc(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV + fASHIFTL(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_asl_i_p_acc */
},
int64_t HELPER(S2_asl_i_p_acc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV + fASHIFTL(RssV,uiV,8_8)); }
COUNT_HELPER(S2_asl_i_p_acc);
return RxxV;
})
DEF_QEMU(S6_rol_i_p_acc,{ RxxV = fECHO(RxxV + fROTL(RssV,uiV,8_8)); },
DEF_HELPER_4(S6_rol_i_p_acc, s64, env, s64, s64, s32),
{
/* S6_rol_i_p_acc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S6_rol_i_p_acc(gen_helper_S6_rol_i_p_acc(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV + fROTL(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S6_rol_i_p_acc */
},
int64_t HELPER(S6_rol_i_p_acc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV + fROTL(RssV,uiV,8_8)); }
COUNT_HELPER(S6_rol_i_p_acc);
return RxxV;
})
DEF_QEMU(S2_asr_i_r_nac,{ RxV = fECHO(RxV - fASHIFTR(RsV,uiV,4_4)); },
DEF_HELPER_4(S2_asr_i_r_nac, s32, env, s32, s32, s32),
{
/* S2_asr_i_r_nac */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_asr_i_r_nac(gen_helper_S2_asr_i_r_nac(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV - fASHIFTR(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_asr_i_r_nac */
},
int32_t HELPER(S2_asr_i_r_nac)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV - fASHIFTR(RsV,uiV,4_4)); }
COUNT_HELPER(S2_asr_i_r_nac);
return RxV;
})
DEF_QEMU(S2_lsr_i_r_nac,{ RxV = fECHO(RxV - fLSHIFTR(RsV,uiV,4_4)); },
DEF_HELPER_4(S2_lsr_i_r_nac, s32, env, s32, s32, s32),
{
/* S2_lsr_i_r_nac */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_lsr_i_r_nac(gen_helper_S2_lsr_i_r_nac(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV - fLSHIFTR(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_lsr_i_r_nac */
},
int32_t HELPER(S2_lsr_i_r_nac)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV - fLSHIFTR(RsV,uiV,4_4)); }
COUNT_HELPER(S2_lsr_i_r_nac);
return RxV;
})
DEF_QEMU(S2_asl_i_r_nac,{ RxV = fECHO(RxV - fASHIFTL(RsV,uiV,4_4)); },
DEF_HELPER_4(S2_asl_i_r_nac, s32, env, s32, s32, s32),
{
/* S2_asl_i_r_nac */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_asl_i_r_nac(gen_helper_S2_asl_i_r_nac(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV - fASHIFTL(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_asl_i_r_nac */
},
int32_t HELPER(S2_asl_i_r_nac)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV - fASHIFTL(RsV,uiV,4_4)); }
COUNT_HELPER(S2_asl_i_r_nac);
return RxV;
})
DEF_QEMU(S6_rol_i_r_nac,{ RxV = fECHO(RxV - fROTL(RsV,uiV,4_4)); },
DEF_HELPER_4(S6_rol_i_r_nac, s32, env, s32, s32, s32),
{
/* S6_rol_i_r_nac */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S6_rol_i_r_nac(gen_helper_S6_rol_i_r_nac(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV - fROTL(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S6_rol_i_r_nac */
},
int32_t HELPER(S6_rol_i_r_nac)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV - fROTL(RsV,uiV,4_4)); }
COUNT_HELPER(S6_rol_i_r_nac);
return RxV;
})
DEF_QEMU(S2_asr_i_p_nac,{ RxxV = fECHO(RxxV - fASHIFTR(RssV,uiV,8_8)); },
DEF_HELPER_4(S2_asr_i_p_nac, s64, env, s64, s64, s32),
{
/* S2_asr_i_p_nac */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_asr_i_p_nac(gen_helper_S2_asr_i_p_nac(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV - fASHIFTR(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_asr_i_p_nac */
},
int64_t HELPER(S2_asr_i_p_nac)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV - fASHIFTR(RssV,uiV,8_8)); }
COUNT_HELPER(S2_asr_i_p_nac);
return RxxV;
})
DEF_QEMU(S2_lsr_i_p_nac,{ RxxV = fECHO(RxxV - fLSHIFTR(RssV,uiV,8_8)); },
DEF_HELPER_4(S2_lsr_i_p_nac, s64, env, s64, s64, s32),
{
/* S2_lsr_i_p_nac */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_lsr_i_p_nac(gen_helper_S2_lsr_i_p_nac(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV - fLSHIFTR(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_lsr_i_p_nac */
},
int64_t HELPER(S2_lsr_i_p_nac)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV - fLSHIFTR(RssV,uiV,8_8)); }
COUNT_HELPER(S2_lsr_i_p_nac);
return RxxV;
})
DEF_QEMU(S2_asl_i_p_nac,{ RxxV = fECHO(RxxV - fASHIFTL(RssV,uiV,8_8)); },
DEF_HELPER_4(S2_asl_i_p_nac, s64, env, s64, s64, s32),
{
/* S2_asl_i_p_nac */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_asl_i_p_nac(gen_helper_S2_asl_i_p_nac(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV - fASHIFTL(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_asl_i_p_nac */
},
int64_t HELPER(S2_asl_i_p_nac)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV - fASHIFTL(RssV,uiV,8_8)); }
COUNT_HELPER(S2_asl_i_p_nac);
return RxxV;
})
DEF_QEMU(S6_rol_i_p_nac,{ RxxV = fECHO(RxxV - fROTL(RssV,uiV,8_8)); },
DEF_HELPER_4(S6_rol_i_p_nac, s64, env, s64, s64, s32),
{
/* S6_rol_i_p_nac */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S6_rol_i_p_nac(gen_helper_S6_rol_i_p_nac(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV - fROTL(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S6_rol_i_p_nac */
},
int64_t HELPER(S6_rol_i_p_nac)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV - fROTL(RssV,uiV,8_8)); }
COUNT_HELPER(S6_rol_i_p_nac);
return RxxV;
})
DEF_QEMU(S2_lsr_i_r_xacc,{ RxV = fECHO(RxV ^ fLSHIFTR(RsV,uiV,4_4)); },
DEF_HELPER_4(S2_lsr_i_r_xacc, s32, env, s32, s32, s32),
{
/* S2_lsr_i_r_xacc */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_lsr_i_r_xacc(gen_helper_S2_lsr_i_r_xacc(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV ^ fLSHIFTR(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_lsr_i_r_xacc */
},
int32_t HELPER(S2_lsr_i_r_xacc)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV ^ fLSHIFTR(RsV,uiV,4_4)); }
COUNT_HELPER(S2_lsr_i_r_xacc);
return RxV;
})
DEF_QEMU(S2_asl_i_r_xacc,{ RxV = fECHO(RxV ^ fASHIFTL(RsV,uiV,4_4)); },
DEF_HELPER_4(S2_asl_i_r_xacc, s32, env, s32, s32, s32),
{
/* S2_asl_i_r_xacc */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_asl_i_r_xacc(gen_helper_S2_asl_i_r_xacc(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV ^ fASHIFTL(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_asl_i_r_xacc */
},
int32_t HELPER(S2_asl_i_r_xacc)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV ^ fASHIFTL(RsV,uiV,4_4)); }
COUNT_HELPER(S2_asl_i_r_xacc);
return RxV;
})
DEF_QEMU(S6_rol_i_r_xacc,{ RxV = fECHO(RxV ^ fROTL(RsV,uiV,4_4)); },
DEF_HELPER_4(S6_rol_i_r_xacc, s32, env, s32, s32, s32),
{
/* S6_rol_i_r_xacc */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S6_rol_i_r_xacc(gen_helper_S6_rol_i_r_xacc(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV ^ fROTL(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S6_rol_i_r_xacc */
},
int32_t HELPER(S6_rol_i_r_xacc)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV ^ fROTL(RsV,uiV,4_4)); }
COUNT_HELPER(S6_rol_i_r_xacc);
return RxV;
})
DEF_QEMU(S2_lsr_i_p_xacc,{ RxxV = fECHO(RxxV ^ fLSHIFTR(RssV,uiV,8_8)); },
DEF_HELPER_4(S2_lsr_i_p_xacc, s64, env, s64, s64, s32),
{
/* S2_lsr_i_p_xacc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_lsr_i_p_xacc(gen_helper_S2_lsr_i_p_xacc(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV ^ fLSHIFTR(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_lsr_i_p_xacc */
},
int64_t HELPER(S2_lsr_i_p_xacc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV ^ fLSHIFTR(RssV,uiV,8_8)); }
COUNT_HELPER(S2_lsr_i_p_xacc);
return RxxV;
})
DEF_QEMU(S2_asl_i_p_xacc,{ RxxV = fECHO(RxxV ^ fASHIFTL(RssV,uiV,8_8)); },
DEF_HELPER_4(S2_asl_i_p_xacc, s64, env, s64, s64, s32),
{
/* S2_asl_i_p_xacc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_asl_i_p_xacc(gen_helper_S2_asl_i_p_xacc(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV ^ fASHIFTL(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_asl_i_p_xacc */
},
int64_t HELPER(S2_asl_i_p_xacc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV ^ fASHIFTL(RssV,uiV,8_8)); }
COUNT_HELPER(S2_asl_i_p_xacc);
return RxxV;
})
DEF_QEMU(S6_rol_i_p_xacc,{ RxxV = fECHO(RxxV ^ fROTL(RssV,uiV,8_8)); },
DEF_HELPER_4(S6_rol_i_p_xacc, s64, env, s64, s64, s32),
{
/* S6_rol_i_p_xacc */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S6_rol_i_p_xacc(gen_helper_S6_rol_i_p_xacc(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV ^ fROTL(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S6_rol_i_p_xacc */
},
int64_t HELPER(S6_rol_i_p_xacc)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV ^ fROTL(RssV,uiV,8_8)); }
COUNT_HELPER(S6_rol_i_p_xacc);
return RxxV;
})
DEF_QEMU(S2_asr_i_r_and,{ RxV = fECHO(RxV & fASHIFTR(RsV,uiV,4_4)); },
DEF_HELPER_4(S2_asr_i_r_and, s32, env, s32, s32, s32),
{
/* S2_asr_i_r_and */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_asr_i_r_and(gen_helper_S2_asr_i_r_and(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV & fASHIFTR(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_asr_i_r_and */
},
int32_t HELPER(S2_asr_i_r_and)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV & fASHIFTR(RsV,uiV,4_4)); }
COUNT_HELPER(S2_asr_i_r_and);
return RxV;
})
DEF_QEMU(S2_lsr_i_r_and,{ RxV = fECHO(RxV & fLSHIFTR(RsV,uiV,4_4)); },
DEF_HELPER_4(S2_lsr_i_r_and, s32, env, s32, s32, s32),
{
/* S2_lsr_i_r_and */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_lsr_i_r_and(gen_helper_S2_lsr_i_r_and(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV & fLSHIFTR(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_lsr_i_r_and */
},
int32_t HELPER(S2_lsr_i_r_and)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV & fLSHIFTR(RsV,uiV,4_4)); }
COUNT_HELPER(S2_lsr_i_r_and);
return RxV;
})
DEF_QEMU(S2_asl_i_r_and,{ RxV = fECHO(RxV & fASHIFTL(RsV,uiV,4_4)); },
DEF_HELPER_4(S2_asl_i_r_and, s32, env, s32, s32, s32),
{
/* S2_asl_i_r_and */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_asl_i_r_and(gen_helper_S2_asl_i_r_and(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV & fASHIFTL(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_asl_i_r_and */
},
int32_t HELPER(S2_asl_i_r_and)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV & fASHIFTL(RsV,uiV,4_4)); }
COUNT_HELPER(S2_asl_i_r_and);
return RxV;
})
DEF_QEMU(S6_rol_i_r_and,{ RxV = fECHO(RxV & fROTL(RsV,uiV,4_4)); },
DEF_HELPER_4(S6_rol_i_r_and, s32, env, s32, s32, s32),
{
/* S6_rol_i_r_and */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S6_rol_i_r_and(gen_helper_S6_rol_i_r_and(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV & fROTL(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S6_rol_i_r_and */
},
int32_t HELPER(S6_rol_i_r_and)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV & fROTL(RsV,uiV,4_4)); }
COUNT_HELPER(S6_rol_i_r_and);
return RxV;
})
DEF_QEMU(S2_asr_i_r_or,{ RxV = fECHO(RxV | fASHIFTR(RsV,uiV,4_4)); },
DEF_HELPER_4(S2_asr_i_r_or, s32, env, s32, s32, s32),
{
/* S2_asr_i_r_or */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_asr_i_r_or(gen_helper_S2_asr_i_r_or(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV | fASHIFTR(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_asr_i_r_or */
},
int32_t HELPER(S2_asr_i_r_or)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV | fASHIFTR(RsV,uiV,4_4)); }
COUNT_HELPER(S2_asr_i_r_or);
return RxV;
})
DEF_QEMU(S2_lsr_i_r_or,{ RxV = fECHO(RxV | fLSHIFTR(RsV,uiV,4_4)); },
DEF_HELPER_4(S2_lsr_i_r_or, s32, env, s32, s32, s32),
{
/* S2_lsr_i_r_or */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_lsr_i_r_or(gen_helper_S2_lsr_i_r_or(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV | fLSHIFTR(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_lsr_i_r_or */
},
int32_t HELPER(S2_lsr_i_r_or)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV | fLSHIFTR(RsV,uiV,4_4)); }
COUNT_HELPER(S2_lsr_i_r_or);
return RxV;
})
DEF_QEMU(S2_asl_i_r_or,{ RxV = fECHO(RxV | fASHIFTL(RsV,uiV,4_4)); },
DEF_HELPER_4(S2_asl_i_r_or, s32, env, s32, s32, s32),
{
/* S2_asl_i_r_or */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_asl_i_r_or(gen_helper_S2_asl_i_r_or(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV | fASHIFTL(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_asl_i_r_or */
},
int32_t HELPER(S2_asl_i_r_or)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV | fASHIFTL(RsV,uiV,4_4)); }
COUNT_HELPER(S2_asl_i_r_or);
return RxV;
})
DEF_QEMU(S6_rol_i_r_or,{ RxV = fECHO(RxV | fROTL(RsV,uiV,4_4)); },
DEF_HELPER_4(S6_rol_i_r_or, s32, env, s32, s32, s32),
{
/* S6_rol_i_r_or */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S6_rol_i_r_or(gen_helper_S6_rol_i_r_or(RxV, cpu_env, RxV, RsV, uiV);,
{ RxV = fECHO(RxV | fROTL(RsV,uiV,4_4)); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S6_rol_i_r_or */
},
int32_t HELPER(S6_rol_i_r_or)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxV = fECHO(RxV | fROTL(RsV,uiV,4_4)); }
COUNT_HELPER(S6_rol_i_r_or);
return RxV;
})
DEF_QEMU(S2_asr_i_p_and,{ RxxV = fECHO(RxxV & fASHIFTR(RssV,uiV,8_8)); },
DEF_HELPER_4(S2_asr_i_p_and, s64, env, s64, s64, s32),
{
/* S2_asr_i_p_and */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_asr_i_p_and(gen_helper_S2_asr_i_p_and(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV & fASHIFTR(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_asr_i_p_and */
},
int64_t HELPER(S2_asr_i_p_and)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV & fASHIFTR(RssV,uiV,8_8)); }
COUNT_HELPER(S2_asr_i_p_and);
return RxxV;
})
DEF_QEMU(S2_lsr_i_p_and,{ RxxV = fECHO(RxxV & fLSHIFTR(RssV,uiV,8_8)); },
DEF_HELPER_4(S2_lsr_i_p_and, s64, env, s64, s64, s32),
{
/* S2_lsr_i_p_and */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_lsr_i_p_and(gen_helper_S2_lsr_i_p_and(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV & fLSHIFTR(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_lsr_i_p_and */
},
int64_t HELPER(S2_lsr_i_p_and)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV & fLSHIFTR(RssV,uiV,8_8)); }
COUNT_HELPER(S2_lsr_i_p_and);
return RxxV;
})
DEF_QEMU(S2_asl_i_p_and,{ RxxV = fECHO(RxxV & fASHIFTL(RssV,uiV,8_8)); },
DEF_HELPER_4(S2_asl_i_p_and, s64, env, s64, s64, s32),
{
/* S2_asl_i_p_and */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_asl_i_p_and(gen_helper_S2_asl_i_p_and(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV & fASHIFTL(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_asl_i_p_and */
},
int64_t HELPER(S2_asl_i_p_and)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV & fASHIFTL(RssV,uiV,8_8)); }
COUNT_HELPER(S2_asl_i_p_and);
return RxxV;
})
DEF_QEMU(S6_rol_i_p_and,{ RxxV = fECHO(RxxV & fROTL(RssV,uiV,8_8)); },
DEF_HELPER_4(S6_rol_i_p_and, s64, env, s64, s64, s32),
{
/* S6_rol_i_p_and */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S6_rol_i_p_and(gen_helper_S6_rol_i_p_and(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV & fROTL(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S6_rol_i_p_and */
},
int64_t HELPER(S6_rol_i_p_and)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV & fROTL(RssV,uiV,8_8)); }
COUNT_HELPER(S6_rol_i_p_and);
return RxxV;
})
DEF_QEMU(S2_asr_i_p_or,{ RxxV = fECHO(RxxV | fASHIFTR(RssV,uiV,8_8)); },
DEF_HELPER_4(S2_asr_i_p_or, s64, env, s64, s64, s32),
{
/* S2_asr_i_p_or */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_asr_i_p_or(gen_helper_S2_asr_i_p_or(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV | fASHIFTR(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_asr_i_p_or */
},
int64_t HELPER(S2_asr_i_p_or)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV | fASHIFTR(RssV,uiV,8_8)); }
COUNT_HELPER(S2_asr_i_p_or);
return RxxV;
})
DEF_QEMU(S2_lsr_i_p_or,{ RxxV = fECHO(RxxV | fLSHIFTR(RssV,uiV,8_8)); },
DEF_HELPER_4(S2_lsr_i_p_or, s64, env, s64, s64, s32),
{
/* S2_lsr_i_p_or */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_lsr_i_p_or(gen_helper_S2_lsr_i_p_or(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV | fLSHIFTR(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_lsr_i_p_or */
},
int64_t HELPER(S2_lsr_i_p_or)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV | fLSHIFTR(RssV,uiV,8_8)); }
COUNT_HELPER(S2_lsr_i_p_or);
return RxxV;
})
DEF_QEMU(S2_asl_i_p_or,{ RxxV = fECHO(RxxV | fASHIFTL(RssV,uiV,8_8)); },
DEF_HELPER_4(S2_asl_i_p_or, s64, env, s64, s64, s32),
{
/* S2_asl_i_p_or */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_asl_i_p_or(gen_helper_S2_asl_i_p_or(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV | fASHIFTL(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_asl_i_p_or */
},
int64_t HELPER(S2_asl_i_p_or)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV | fASHIFTL(RssV,uiV,8_8)); }
COUNT_HELPER(S2_asl_i_p_or);
return RxxV;
})
DEF_QEMU(S6_rol_i_p_or,{ RxxV = fECHO(RxxV | fROTL(RssV,uiV,8_8)); },
DEF_HELPER_4(S6_rol_i_p_or, s64, env, s64, s64, s32),
{
/* S6_rol_i_p_or */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S6_rol_i_p_or(gen_helper_S6_rol_i_p_or(RxxV, cpu_env, RxxV, RssV, uiV);,
{ RxxV = fECHO(RxxV | fROTL(RssV,uiV,8_8)); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S6_rol_i_p_or */
},
int64_t HELPER(S6_rol_i_p_or)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{ RxxV = fECHO(RxxV | fROTL(RssV,uiV,8_8)); }
COUNT_HELPER(S6_rol_i_p_or);
return RxxV;
})
DEF_QEMU(S2_asl_i_r_sat,{ RdV = fSAT( fASHIFTL(RsV,uiV,4_8)); },
DEF_HELPER_3(S2_asl_i_r_sat, s32, env, s32, s32),
{
/* S2_asl_i_r_sat */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_asl_i_r_sat(gen_helper_S2_asl_i_r_sat(RdV, cpu_env, RsV, uiV);,
{ RdV = fSAT( fASHIFTL(RsV,uiV,4_8)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_asl_i_r_sat */
},
int32_t HELPER(S2_asl_i_r_sat)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fSAT( fASHIFTL(RsV,uiV,4_8)); }
COUNT_HELPER(S2_asl_i_r_sat);
return RdV;
})
DEF_QEMU(S2_asr_i_r_rnd,{ RdV = fASHIFTR(((fASHIFTR(RsV,uiV,4_8))+1),1,8_8); },
DEF_HELPER_3(S2_asr_i_r_rnd, s32, env, s32, s32),
{
/* S2_asr_i_r_rnd */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_asr_i_r_rnd(gen_helper_S2_asr_i_r_rnd(RdV, cpu_env, RsV, uiV);,
{ RdV = fASHIFTR(((fASHIFTR(RsV,uiV,4_8))+1),1,8_8); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_asr_i_r_rnd */
},
int32_t HELPER(S2_asr_i_r_rnd)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fASHIFTR(((fASHIFTR(RsV,uiV,4_8))+1),1,8_8); }
COUNT_HELPER(S2_asr_i_r_rnd);
return RdV;
})
DEF_QEMU(S2_asr_i_p_rnd,{ fHIDE(size8u_t tmp;) fHIDE(size8u_t rnd;) tmp = fASHIFTR(RssV,uiV,8_8); rnd = tmp & 1; RddV = fASHIFTR(tmp,1,8_8) + rnd; },
DEF_HELPER_3(S2_asr_i_p_rnd, s64, env, s64, s32),
{
/* S2_asr_i_p_rnd */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_asr_i_p_rnd(gen_helper_S2_asr_i_p_rnd(RddV, cpu_env, RssV, uiV);,
{ fHIDE(size8u_t tmp;) fHIDE(size8u_t rnd;) tmp = fASHIFTR(RssV,uiV,8_8); rnd = tmp & 1; RddV = fASHIFTR(tmp,1,8_8) + rnd; })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_asr_i_p_rnd */
},
int64_t HELPER(S2_asr_i_p_rnd)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(size8u_t tmp;) fHIDE(size8u_t rnd;) tmp = fASHIFTR(RssV,uiV,8_8); rnd = tmp & 1; RddV = fASHIFTR(tmp,1,8_8) + rnd; }
COUNT_HELPER(S2_asr_i_p_rnd);
return RddV;
})
DEF_QEMU(S4_lsli,{ fHIDE(size4s_t) shamt = fSXTN(7,32,RtV); RdV = fBIDIR_LSHIFTL(siV,shamt,4_8); },
DEF_HELPER_3(S4_lsli, s32, env, s32, s32),
{
/* S4_lsli */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_t(RtV, RtN);
fWRAP_S4_lsli(gen_helper_S4_lsli(RdV, cpu_env, RtV, siV);,
{ fHIDE(size4s_t) shamt = fSXTN(7,32,RtV); RdV = fBIDIR_LSHIFTL(siV,shamt,4_8); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* S4_lsli */
},
int32_t HELPER(S4_lsli)(CPUHexagonState *env, int32_t RtV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(size4s_t) shamt = fSXTN(7,32,RtV); RdV = fBIDIR_LSHIFTL(siV,shamt,4_8); }
COUNT_HELPER(S4_lsli);
return RdV;
})
DEF_QEMU(S2_addasl_rrri,{ RdV = RtV + fASHIFTL(RsV,uiV,4_4); },
DEF_HELPER_4(S2_addasl_rrri, s32, env, s32, s32, s32),
{
/* S2_addasl_rrri */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_t(RtV, RtN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_addasl_rrri(gen_helper_S2_addasl_rrri(RdV, cpu_env, RtV, RsV, uiV);,
{ RdV = RtV + fASHIFTL(RsV,uiV,4_4); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_t(RtV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_addasl_rrri */
},
int32_t HELPER(S2_addasl_rrri)(CPUHexagonState *env, int32_t RtV, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = RtV + fASHIFTL(RsV,uiV,4_4); }
COUNT_HELPER(S2_addasl_rrri);
return RdV;
})
DEF_QEMU(S4_andi_asl_ri,{RxV=fIMMEXT(uiV)&(RxV<<UiV);},
DEF_HELPER_4(S4_andi_asl_ri, s32, env, s32, s32, s32),
{
/* S4_andi_asl_ri */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_x(RxV, RxN);
fWRAP_S4_andi_asl_ri(gen_helper_S4_andi_asl_ri(RxV, cpu_env, RxV, uiV, UiV);,
{RxV=fIMMEXT(uiV)&(RxV<<UiV);})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_andi_asl_ri */
},
int32_t HELPER(S4_andi_asl_ri)(CPUHexagonState *env, int32_t RxV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
{RxV=fIMMEXT(uiV)&(RxV<<UiV);}
COUNT_HELPER(S4_andi_asl_ri);
return RxV;
})
DEF_QEMU(S4_ori_asl_ri,{RxV=fIMMEXT(uiV)|(RxV<<UiV);},
DEF_HELPER_4(S4_ori_asl_ri, s32, env, s32, s32, s32),
{
/* S4_ori_asl_ri */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_x(RxV, RxN);
fWRAP_S4_ori_asl_ri(gen_helper_S4_ori_asl_ri(RxV, cpu_env, RxV, uiV, UiV);,
{RxV=fIMMEXT(uiV)|(RxV<<UiV);})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_ori_asl_ri */
},
int32_t HELPER(S4_ori_asl_ri)(CPUHexagonState *env, int32_t RxV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
{RxV=fIMMEXT(uiV)|(RxV<<UiV);}
COUNT_HELPER(S4_ori_asl_ri);
return RxV;
})
DEF_QEMU(S4_addi_asl_ri,{RxV=fIMMEXT(uiV)+(RxV<<UiV);},
DEF_HELPER_4(S4_addi_asl_ri, s32, env, s32, s32, s32),
{
/* S4_addi_asl_ri */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_x(RxV, RxN);
fWRAP_S4_addi_asl_ri(gen_helper_S4_addi_asl_ri(RxV, cpu_env, RxV, uiV, UiV);,
{RxV=fIMMEXT(uiV)+(RxV<<UiV);})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_addi_asl_ri */
},
int32_t HELPER(S4_addi_asl_ri)(CPUHexagonState *env, int32_t RxV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
{RxV=fIMMEXT(uiV)+(RxV<<UiV);}
COUNT_HELPER(S4_addi_asl_ri);
return RxV;
})
DEF_QEMU(S4_subi_asl_ri,{RxV=fIMMEXT(uiV)-(RxV<<UiV);},
DEF_HELPER_4(S4_subi_asl_ri, s32, env, s32, s32, s32),
{
/* S4_subi_asl_ri */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_x(RxV, RxN);
fWRAP_S4_subi_asl_ri(gen_helper_S4_subi_asl_ri(RxV, cpu_env, RxV, uiV, UiV);,
{RxV=fIMMEXT(uiV)-(RxV<<UiV);})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_subi_asl_ri */
},
int32_t HELPER(S4_subi_asl_ri)(CPUHexagonState *env, int32_t RxV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
{RxV=fIMMEXT(uiV)-(RxV<<UiV);}
COUNT_HELPER(S4_subi_asl_ri);
return RxV;
})
DEF_QEMU(S4_andi_lsr_ri,{RxV=fIMMEXT(uiV)&(((unsigned int)RxV)>>UiV);},
DEF_HELPER_4(S4_andi_lsr_ri, s32, env, s32, s32, s32),
{
/* S4_andi_lsr_ri */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_x(RxV, RxN);
fWRAP_S4_andi_lsr_ri(gen_helper_S4_andi_lsr_ri(RxV, cpu_env, RxV, uiV, UiV);,
{RxV=fIMMEXT(uiV)&(((unsigned int)RxV)>>UiV);})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_andi_lsr_ri */
},
int32_t HELPER(S4_andi_lsr_ri)(CPUHexagonState *env, int32_t RxV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
{RxV=fIMMEXT(uiV)&(((unsigned int)RxV)>>UiV);}
COUNT_HELPER(S4_andi_lsr_ri);
return RxV;
})
DEF_QEMU(S4_ori_lsr_ri,{RxV=fIMMEXT(uiV)|(((unsigned int)RxV)>>UiV);},
DEF_HELPER_4(S4_ori_lsr_ri, s32, env, s32, s32, s32),
{
/* S4_ori_lsr_ri */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_x(RxV, RxN);
fWRAP_S4_ori_lsr_ri(gen_helper_S4_ori_lsr_ri(RxV, cpu_env, RxV, uiV, UiV);,
{RxV=fIMMEXT(uiV)|(((unsigned int)RxV)>>UiV);})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_ori_lsr_ri */
},
int32_t HELPER(S4_ori_lsr_ri)(CPUHexagonState *env, int32_t RxV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
{RxV=fIMMEXT(uiV)|(((unsigned int)RxV)>>UiV);}
COUNT_HELPER(S4_ori_lsr_ri);
return RxV;
})
DEF_QEMU(S4_addi_lsr_ri,{RxV=fIMMEXT(uiV)+(((unsigned int)RxV)>>UiV);},
DEF_HELPER_4(S4_addi_lsr_ri, s32, env, s32, s32, s32),
{
/* S4_addi_lsr_ri */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_x(RxV, RxN);
fWRAP_S4_addi_lsr_ri(gen_helper_S4_addi_lsr_ri(RxV, cpu_env, RxV, uiV, UiV);,
{RxV=fIMMEXT(uiV)+(((unsigned int)RxV)>>UiV);})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_addi_lsr_ri */
},
int32_t HELPER(S4_addi_lsr_ri)(CPUHexagonState *env, int32_t RxV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
{RxV=fIMMEXT(uiV)+(((unsigned int)RxV)>>UiV);}
COUNT_HELPER(S4_addi_lsr_ri);
return RxV;
})
DEF_QEMU(S4_subi_lsr_ri,{RxV=fIMMEXT(uiV)-(((unsigned int)RxV)>>UiV);},
DEF_HELPER_4(S4_subi_lsr_ri, s32, env, s32, s32, s32),
{
/* S4_subi_lsr_ri */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_x(RxV, RxN);
fWRAP_S4_subi_lsr_ri(gen_helper_S4_subi_lsr_ri(RxV, cpu_env, RxV, uiV, UiV);,
{RxV=fIMMEXT(uiV)-(((unsigned int)RxV)>>UiV);})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_subi_lsr_ri */
},
int32_t HELPER(S4_subi_lsr_ri)(CPUHexagonState *env, int32_t RxV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
{RxV=fIMMEXT(uiV)-(((unsigned int)RxV)>>UiV);}
COUNT_HELPER(S4_subi_lsr_ri);
return RxV;
})
DEF_QEMU(S2_valignib,{ RddV = (fLSHIFTR(RssV,uiV*8,8_8))|(fASHIFTL(RttV,((8-uiV)*8),8_8)); },
DEF_HELPER_4(S2_valignib, s64, env, s64, s64, s32),
{
/* S2_valignib */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_valignib(gen_helper_S2_valignib(RddV, cpu_env, RttV, RssV, uiV);,
{ RddV = (fLSHIFTR(RssV,uiV*8,8_8))|(fASHIFTL(RttV,((8-uiV)*8),8_8)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_valignib */
},
int64_t HELPER(S2_valignib)(CPUHexagonState *env, int64_t RttV, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = (fLSHIFTR(RssV,uiV*8,8_8))|(fASHIFTL(RttV,((8-uiV)*8),8_8)); }
COUNT_HELPER(S2_valignib);
return RddV;
})
DEF_QEMU(S2_valignrb,{ fPREDUSE_TIMING();RddV = fLSHIFTR(RssV,(PuV&0x7)*8,8_8)|(fASHIFTL(RttV,(8-(PuV&0x7))*8,8_8));},
DEF_HELPER_4(S2_valignrb, s64, env, s64, s64, s32),
{
/* S2_valignrb */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
DECL_PREG_u(TCGv, PuV, PuN, 3, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
READ_PREG_u(PuV, PuN);
fWRAP_S2_valignrb(gen_helper_S2_valignrb(RddV, cpu_env, RttV, RssV, PuV);,
{ fPREDUSE_TIMING();RddV = fLSHIFTR(RssV,(PuV&0x7)*8,8_8)|(fASHIFTL(RttV,(8-(PuV&0x7))*8,8_8));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
FREE_REG_u(PuV);
/* S2_valignrb */
},
int64_t HELPER(S2_valignrb)(CPUHexagonState *env, int64_t RttV, int64_t RssV, int32_t PuV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fPREDUSE_TIMING();RddV = fLSHIFTR(RssV,(PuV&0x7)*8,8_8)|(fASHIFTL(RttV,(8-(PuV&0x7))*8,8_8));}
COUNT_HELPER(S2_valignrb);
return RddV;
})
DEF_QEMU(S2_vspliceib,{ RddV = fASHIFTL(RttV,uiV*8,8_8) | fZXTN(uiV*8,64,RssV); },
DEF_HELPER_4(S2_vspliceib, s64, env, s64, s64, s32),
{
/* S2_vspliceib */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_vspliceib(gen_helper_S2_vspliceib(RddV, cpu_env, RssV, RttV, uiV);,
{ RddV = fASHIFTL(RttV,uiV*8,8_8) | fZXTN(uiV*8,64,RssV); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
FREE_IMM(uiV);
/* S2_vspliceib */
},
int64_t HELPER(S2_vspliceib)(CPUHexagonState *env, int64_t RssV, int64_t RttV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = fASHIFTL(RttV,uiV*8,8_8) | fZXTN(uiV*8,64,RssV); }
COUNT_HELPER(S2_vspliceib);
return RddV;
})
DEF_QEMU(S2_vsplicerb,{ fPREDUSE_TIMING();RddV = fASHIFTL(RttV,(PuV&7)*8,8_8) | fZXTN((PuV&7)*8,64,RssV); },
DEF_HELPER_4(S2_vsplicerb, s64, env, s64, s64, s32),
{
/* S2_vsplicerb */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
DECL_PREG_u(TCGv, PuV, PuN, 3, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
READ_PREG_u(PuV, PuN);
fWRAP_S2_vsplicerb(gen_helper_S2_vsplicerb(RddV, cpu_env, RssV, RttV, PuV);,
{ fPREDUSE_TIMING();RddV = fASHIFTL(RttV,(PuV&7)*8,8_8) | fZXTN((PuV&7)*8,64,RssV); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
FREE_REG_u(PuV);
/* S2_vsplicerb */
},
int64_t HELPER(S2_vsplicerb)(CPUHexagonState *env, int64_t RssV, int64_t RttV, int32_t PuV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fPREDUSE_TIMING();RddV = fASHIFTL(RttV,(PuV&7)*8,8_8) | fZXTN((PuV&7)*8,64,RssV); }
COUNT_HELPER(S2_vsplicerb);
return RddV;
})
DEF_QEMU(S2_vsplatrh,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, fGETHALF(0,RsV)); } },
DEF_HELPER_2(S2_vsplatrh, s64, env, s32),
{
/* S2_vsplatrh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_vsplatrh(gen_helper_S2_vsplatrh(RddV, cpu_env, RsV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, fGETHALF(0,RsV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* S2_vsplatrh */
},
int64_t HELPER(S2_vsplatrh)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, fGETHALF(0,RsV)); } }
COUNT_HELPER(S2_vsplatrh);
return RddV;
})
DEF_QEMU(S2_vsplatrb,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV, fGETBYTE(0,RsV)); } },
DEF_HELPER_2(S2_vsplatrb, s32, env, s32),
{
/* S2_vsplatrb */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_vsplatrb(gen_helper_S2_vsplatrb(RdV, cpu_env, RsV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV, fGETBYTE(0,RsV)); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* S2_vsplatrb */
},
int32_t HELPER(S2_vsplatrb)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV, fGETBYTE(0,RsV)); } }
COUNT_HELPER(S2_vsplatrb);
return RdV;
})
DEF_QEMU(S6_vsplatrbp,{ fHIDE(int i;) for (i=0;i<8;i++) { fSETBYTE(i,RddV, fGETBYTE(0,RsV)); } },
DEF_HELPER_2(S6_vsplatrbp, s64, env, s32),
{
/* S6_vsplatrbp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_S6_vsplatrbp(gen_helper_S6_vsplatrbp(RddV, cpu_env, RsV);,
{ fHIDE(int i;) for (i=0;i<8;i++) { fSETBYTE(i,RddV, fGETBYTE(0,RsV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* S6_vsplatrbp */
},
int64_t HELPER(S6_vsplatrbp)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<8;i++) { fSETBYTE(i,RddV, fGETBYTE(0,RsV)); } }
COUNT_HELPER(S6_vsplatrbp);
return RddV;
})
DEF_QEMU(S2_insert,{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RxV &= ~(((fCONSTLL(1)<<width)-1)<<offset); RxV |= ((RsV & ((fCONSTLL(1)<<width)-1)) << offset); },
DEF_HELPER_5(S2_insert, s32, env, s32, s32, s32, s32),
{
/* S2_insert */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_insert(gen_helper_S2_insert(RxV, cpu_env, RxV, RsV, uiV, UiV);,
{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RxV &= ~(((fCONSTLL(1)<<width)-1)<<offset); RxV |= ((RsV & ((fCONSTLL(1)<<width)-1)) << offset); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S2_insert */
},
int32_t HELPER(S2_insert)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RxV &= ~(((fCONSTLL(1)<<width)-1)<<offset); RxV |= ((RsV & ((fCONSTLL(1)<<width)-1)) << offset); }
COUNT_HELPER(S2_insert);
return RxV;
})
DEF_QEMU(S2_tableidxb,{ fHIDE(int) width=uiV; fHIDE(int) offset=SiV; fHIDE(int) field = fEXTRACTU_BIDIR(RsV,width,offset); fINSERT_BITS(RxV,width,0,field); },
DEF_HELPER_5(S2_tableidxb, s32, env, s32, s32, s32, s32),
{
/* S2_tableidxb */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_tableidxb(gen_helper_S2_tableidxb(RxV, cpu_env, RxV, RsV, uiV, SiV);,
{ fHIDE(int) width=uiV; fHIDE(int) offset=SiV; fHIDE(int) field = fEXTRACTU_BIDIR(RsV,width,offset); fINSERT_BITS(RxV,width,0,field); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S2_tableidxb */
},
int32_t HELPER(S2_tableidxb)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV, int32_t SiV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int) width=uiV; fHIDE(int) offset=SiV; fHIDE(int) field = fEXTRACTU_BIDIR(RsV,width,offset); fINSERT_BITS(RxV,width,0,field); }
COUNT_HELPER(S2_tableidxb);
return RxV;
})
DEF_QEMU(S2_tableidxh,{ fHIDE(int) width=uiV; fHIDE(int) offset=SiV+1; fHIDE(int) field = fEXTRACTU_BIDIR(RsV,width,offset); fINSERT_BITS(RxV,width,1,field); },
DEF_HELPER_5(S2_tableidxh, s32, env, s32, s32, s32, s32),
{
/* S2_tableidxh */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_tableidxh(gen_helper_S2_tableidxh(RxV, cpu_env, RxV, RsV, uiV, SiV);,
{ fHIDE(int) width=uiV; fHIDE(int) offset=SiV+1; fHIDE(int) field = fEXTRACTU_BIDIR(RsV,width,offset); fINSERT_BITS(RxV,width,1,field); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S2_tableidxh */
},
int32_t HELPER(S2_tableidxh)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV, int32_t SiV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int) width=uiV; fHIDE(int) offset=SiV+1; fHIDE(int) field = fEXTRACTU_BIDIR(RsV,width,offset); fINSERT_BITS(RxV,width,1,field); }
COUNT_HELPER(S2_tableidxh);
return RxV;
})
DEF_QEMU(S2_tableidxw,{ fHIDE(int) width=uiV; fHIDE(int) offset=SiV+2; fHIDE(int) field = fEXTRACTU_BIDIR(RsV,width,offset); fINSERT_BITS(RxV,width,2,field); },
DEF_HELPER_5(S2_tableidxw, s32, env, s32, s32, s32, s32),
{
/* S2_tableidxw */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_tableidxw(gen_helper_S2_tableidxw(RxV, cpu_env, RxV, RsV, uiV, SiV);,
{ fHIDE(int) width=uiV; fHIDE(int) offset=SiV+2; fHIDE(int) field = fEXTRACTU_BIDIR(RsV,width,offset); fINSERT_BITS(RxV,width,2,field); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S2_tableidxw */
},
int32_t HELPER(S2_tableidxw)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV, int32_t SiV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int) width=uiV; fHIDE(int) offset=SiV+2; fHIDE(int) field = fEXTRACTU_BIDIR(RsV,width,offset); fINSERT_BITS(RxV,width,2,field); }
COUNT_HELPER(S2_tableidxw);
return RxV;
})
DEF_QEMU(S2_tableidxd,{ fHIDE(int) width=uiV; fHIDE(int) offset=SiV+3; fHIDE(int) field = fEXTRACTU_BIDIR(RsV,width,offset); fINSERT_BITS(RxV,width,3,field); },
DEF_HELPER_5(S2_tableidxd, s32, env, s32, s32, s32, s32),
{
/* S2_tableidxd */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(SiV,1);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_S2_tableidxd(gen_helper_S2_tableidxd(RxV, cpu_env, RxV, RsV, uiV, SiV);,
{ fHIDE(int) width=uiV; fHIDE(int) offset=SiV+3; fHIDE(int) field = fEXTRACTU_BIDIR(RsV,width,offset); fINSERT_BITS(RxV,width,3,field); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(SiV);
/* S2_tableidxd */
},
int32_t HELPER(S2_tableidxd)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int32_t uiV, int32_t SiV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int) width=uiV; fHIDE(int) offset=SiV+3; fHIDE(int) field = fEXTRACTU_BIDIR(RsV,width,offset); fINSERT_BITS(RxV,width,3,field); }
COUNT_HELPER(S2_tableidxd);
return RxV;
})
DEF_QEMU(A4_bitspliti,{ fSETWORD(1,RddV,(fCAST4_4u(RsV)>>uiV)); fSETWORD(0,RddV,fZXTN(uiV,32,RsV)); },
DEF_HELPER_3(A4_bitspliti, s64, env, s32, s32),
{
/* A4_bitspliti */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_A4_bitspliti(gen_helper_A4_bitspliti(RddV, cpu_env, RsV, uiV);,
{ fSETWORD(1,RddV,(fCAST4_4u(RsV)>>uiV)); fSETWORD(0,RddV,fZXTN(uiV,32,RsV)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* A4_bitspliti */
},
int64_t HELPER(A4_bitspliti)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(1,RddV,(fCAST4_4u(RsV)>>uiV)); fSETWORD(0,RddV,fZXTN(uiV,32,RsV)); }
COUNT_HELPER(A4_bitspliti);
return RddV;
})
DEF_QEMU(A4_bitsplit,{ fHIDE(size4u_t) shamt = fZXTN(5,32,RtV); fSETWORD(1,RddV,(fCAST4_4u(RsV)>>shamt)); fSETWORD(0,RddV,fZXTN(shamt,32,RsV)); },
DEF_HELPER_3(A4_bitsplit, s64, env, s32, s32),
{
/* A4_bitsplit */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_A4_bitsplit(gen_helper_A4_bitsplit(RddV, cpu_env, RsV, RtV);,
{ fHIDE(size4u_t) shamt = fZXTN(5,32,RtV); fSETWORD(1,RddV,(fCAST4_4u(RsV)>>shamt)); fSETWORD(0,RddV,fZXTN(shamt,32,RsV)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* A4_bitsplit */
},
int64_t HELPER(A4_bitsplit)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(size4u_t) shamt = fZXTN(5,32,RtV); fSETWORD(1,RddV,(fCAST4_4u(RsV)>>shamt)); fSETWORD(0,RddV,fZXTN(shamt,32,RsV)); }
COUNT_HELPER(A4_bitsplit);
return RddV;
})
DEF_QEMU(S4_extract,{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RdV = fSXTN(width,32,(fCAST4_4u(RsV) >> offset)); },
DEF_HELPER_4(S4_extract, s32, env, s32, s32, s32),
{
/* S4_extract */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_S4_extract(gen_helper_S4_extract(RdV, cpu_env, RsV, uiV, UiV);,
{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RdV = fSXTN(width,32,(fCAST4_4u(RsV) >> offset)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_extract */
},
int32_t HELPER(S4_extract)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RdV = fSXTN(width,32,(fCAST4_4u(RsV) >> offset)); }
COUNT_HELPER(S4_extract);
return RdV;
})
DEF_QEMU(S2_extractu,{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RdV = fZXTN(width,32,(fCAST4_4u(RsV) >> offset)); },
DEF_HELPER_4(S2_extractu, s32, env, s32, s32, s32),
{
/* S2_extractu */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_s(RsV, RsN);
fWRAP_S2_extractu(gen_helper_S2_extractu(RdV, cpu_env, RsV, uiV, UiV);,
{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RdV = fZXTN(width,32,(fCAST4_4u(RsV) >> offset)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S2_extractu */
},
int32_t HELPER(S2_extractu)(CPUHexagonState *env, int32_t RsV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RdV = fZXTN(width,32,(fCAST4_4u(RsV) >> offset)); }
COUNT_HELPER(S2_extractu);
return RdV;
})
DEF_QEMU(S2_insertp,{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RxxV &= ~(((fCONSTLL(1)<<width)-1)<<offset); RxxV |= ((RssV & ((fCONSTLL(1)<<width)-1)) << offset); },
DEF_HELPER_5(S2_insertp, s64, env, s64, s64, s32, s32),
{
/* S2_insertp */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_insertp(gen_helper_S2_insertp(RxxV, cpu_env, RxxV, RssV, uiV, UiV);,
{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RxxV &= ~(((fCONSTLL(1)<<width)-1)<<offset); RxxV |= ((RssV & ((fCONSTLL(1)<<width)-1)) << offset); })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S2_insertp */
},
int64_t HELPER(S2_insertp)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RxxV &= ~(((fCONSTLL(1)<<width)-1)<<offset); RxxV |= ((RssV & ((fCONSTLL(1)<<width)-1)) << offset); }
COUNT_HELPER(S2_insertp);
return RxxV;
})
DEF_QEMU(S4_extractp,{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RddV = fSXTN(width,64,(fCAST8_8u(RssV) >> offset)); },
DEF_HELPER_4(S4_extractp, s64, env, s64, s32, s32),
{
/* S4_extractp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S4_extractp(gen_helper_S4_extractp(RddV, cpu_env, RssV, uiV, UiV);,
{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RddV = fSXTN(width,64,(fCAST8_8u(RssV) >> offset)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S4_extractp */
},
int64_t HELPER(S4_extractp)(CPUHexagonState *env, int64_t RssV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RddV = fSXTN(width,64,(fCAST8_8u(RssV) >> offset)); }
COUNT_HELPER(S4_extractp);
return RddV;
})
DEF_QEMU(S2_extractup,{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RddV = fZXTN(width,64,(fCAST8_8u(RssV) >> offset)); },
DEF_HELPER_4(S2_extractup, s64, env, s64, s32, s32),
{
/* S2_extractup */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_extractup(gen_helper_S2_extractup(RddV, cpu_env, RssV, uiV, UiV);,
{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RddV = fZXTN(width,64,(fCAST8_8u(RssV) >> offset)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S2_extractup */
},
int64_t HELPER(S2_extractup)(CPUHexagonState *env, int64_t RssV, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int) width=uiV; fHIDE(int) offset=UiV; RddV = fZXTN(width,64,(fCAST8_8u(RssV) >> offset)); }
COUNT_HELPER(S2_extractup);
return RddV;
})
DEF_QEMU(S2_mask,{ RdV = ((1<<uiV)-1) << UiV; },
DEF_HELPER_3(S2_mask, s32, env, s32, s32),
{
/* S2_mask */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_IMM(uiV,0);
DECL_IMM(UiV,1);
fWRAP_S2_mask(gen_helper_S2_mask(RdV, cpu_env, uiV, UiV);,
{ RdV = ((1<<uiV)-1) << UiV; })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_IMM(uiV);
FREE_IMM(UiV);
/* S2_mask */
},
int32_t HELPER(S2_mask)(CPUHexagonState *env, int32_t uiV, int32_t UiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = ((1<<uiV)-1) << UiV; }
COUNT_HELPER(S2_mask);
return RdV;
})
DEF_QEMU(S2_insert_rp,{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); fHIDE(size8u_t) mask = ((fCONSTLL(1)<<width)-1); if (offset < 0) { RxV = 0; } else { RxV &= ~(mask<<offset); RxV |= ((RsV & mask) << offset); } },
DEF_HELPER_4(S2_insert_rp, s32, env, s32, s32, s64),
{
/* S2_insert_rp */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_insert_rp(gen_helper_S2_insert_rp(RxV, cpu_env, RxV, RsV, RttV);,
{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); fHIDE(size8u_t) mask = ((fCONSTLL(1)<<width)-1); if (offset < 0) { RxV = 0; } else { RxV &= ~(mask<<offset); RxV |= ((RsV & mask) << offset); } })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
FREE_REG_PAIR(RttV);
/* S2_insert_rp */
},
int32_t HELPER(S2_insert_rp)(CPUHexagonState *env, int32_t RxV, int32_t RsV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); fHIDE(size8u_t) mask = ((fCONSTLL(1)<<width)-1); if (offset < 0) { RxV = 0; } else { RxV &= ~(mask<<offset); RxV |= ((RsV & mask) << offset); } }
COUNT_HELPER(S2_insert_rp);
return RxV;
})
DEF_QEMU(S4_extract_rp,{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); RdV = fSXTN(width,64,fBIDIR_LSHIFTR(fCAST4_8u(RsV),offset,4_8)); },
DEF_HELPER_3(S4_extract_rp, s32, env, s32, s64),
{
/* S4_extract_rp */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_extract_rp(gen_helper_S4_extract_rp(RdV, cpu_env, RsV, RttV);,
{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); RdV = fSXTN(width,64,fBIDIR_LSHIFTR(fCAST4_8u(RsV),offset,4_8)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_PAIR(RttV);
/* S4_extract_rp */
},
int32_t HELPER(S4_extract_rp)(CPUHexagonState *env, int32_t RsV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); RdV = fSXTN(width,64,fBIDIR_LSHIFTR(fCAST4_8u(RsV),offset,4_8)); }
COUNT_HELPER(S4_extract_rp);
return RdV;
})
DEF_QEMU(S2_extractu_rp,{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); RdV = fZXTN(width,64,fBIDIR_LSHIFTR(fCAST4_8u(RsV),offset,4_8)); },
DEF_HELPER_3(S2_extractu_rp, s32, env, s32, s64),
{
/* S2_extractu_rp */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_extractu_rp(gen_helper_S2_extractu_rp(RdV, cpu_env, RsV, RttV);,
{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); RdV = fZXTN(width,64,fBIDIR_LSHIFTR(fCAST4_8u(RsV),offset,4_8)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_PAIR(RttV);
/* S2_extractu_rp */
},
int32_t HELPER(S2_extractu_rp)(CPUHexagonState *env, int32_t RsV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); RdV = fZXTN(width,64,fBIDIR_LSHIFTR(fCAST4_8u(RsV),offset,4_8)); }
COUNT_HELPER(S2_extractu_rp);
return RdV;
})
DEF_QEMU(S2_insertp_rp,{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); fHIDE(size8u_t) mask = ((fCONSTLL(1)<<width)-1); if (offset < 0) { RxxV = 0; } else { RxxV &= ~(mask<<offset); RxxV |= ((RssV & mask) << offset); } },
DEF_HELPER_4(S2_insertp_rp, s64, env, s64, s64, s64),
{
/* S2_insertp_rp */
DECL_PAIR_xx(TCGv_i64, RxxV, RxxN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RxxV, RxxN);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_insertp_rp(gen_helper_S2_insertp_rp(RxxV, cpu_env, RxxV, RssV, RttV);,
{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); fHIDE(size8u_t) mask = ((fCONSTLL(1)<<width)-1); if (offset < 0) { RxxV = 0; } else { RxxV &= ~(mask<<offset); RxxV |= ((RssV & mask) << offset); } })
WRITE_RREG_PAIR(RxxN,RxxV);
FREE_REG_PAIR(RxxV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S2_insertp_rp */
},
int64_t HELPER(S2_insertp_rp)(CPUHexagonState *env, int64_t RxxV, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); fHIDE(size8u_t) mask = ((fCONSTLL(1)<<width)-1); if (offset < 0) { RxxV = 0; } else { RxxV &= ~(mask<<offset); RxxV |= ((RssV & mask) << offset); } }
COUNT_HELPER(S2_insertp_rp);
return RxxV;
})
DEF_QEMU(S4_extractp_rp,{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); RddV = fSXTN(width,64,fBIDIR_LSHIFTR(fCAST8_8u(RssV),offset,8_8)); },
DEF_HELPER_3(S4_extractp_rp, s64, env, s64, s64),
{
/* S4_extractp_rp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S4_extractp_rp(gen_helper_S4_extractp_rp(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); RddV = fSXTN(width,64,fBIDIR_LSHIFTR(fCAST8_8u(RssV),offset,8_8)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S4_extractp_rp */
},
int64_t HELPER(S4_extractp_rp)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); RddV = fSXTN(width,64,fBIDIR_LSHIFTR(fCAST8_8u(RssV),offset,8_8)); }
COUNT_HELPER(S4_extractp_rp);
return RddV;
})
DEF_QEMU(S2_extractup_rp,{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); RddV = fZXTN(width,64,fBIDIR_LSHIFTR(fCAST8_8u(RssV),offset,8_8)); },
DEF_HELPER_3(S2_extractup_rp, s64, env, s64, s64),
{
/* S2_extractup_rp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_extractup_rp(gen_helper_S2_extractup_rp(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); RddV = fZXTN(width,64,fBIDIR_LSHIFTR(fCAST8_8u(RssV),offset,8_8)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S2_extractup_rp */
},
int64_t HELPER(S2_extractup_rp)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int) width=fZXTN(6,32,(fGETWORD(1,RttV))); fHIDE(int) offset=fSXTN(7,32,(fGETWORD(0,RttV))); RddV = fZXTN(width,64,fBIDIR_LSHIFTR(fCAST8_8u(RssV),offset,8_8)); }
COUNT_HELPER(S2_extractup_rp);
return RddV;
})
DEF_QEMU(S2_tstbit_i,{ PdV = f8BITSOF((RsV & (1<<uiV)) != 0); },
DEF_HELPER_3(S2_tstbit_i, s32, env, s32, s32),
{
/* S2_tstbit_i */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_tstbit_i(gen_helper_S2_tstbit_i(PdV, cpu_env, RsV, uiV);,
{ PdV = f8BITSOF((RsV & (1<<uiV)) != 0); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_tstbit_i */
},
int32_t HELPER(S2_tstbit_i)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ PdV = f8BITSOF((RsV & (1<<uiV)) != 0); }
COUNT_HELPER(S2_tstbit_i);
return PdV;
})
DEF_QEMU(S4_ntstbit_i,{ PdV = f8BITSOF((RsV & (1<<uiV)) == 0); },
DEF_HELPER_3(S4_ntstbit_i, s32, env, s32, s32),
{
/* S4_ntstbit_i */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_S4_ntstbit_i(gen_helper_S4_ntstbit_i(PdV, cpu_env, RsV, uiV);,
{ PdV = f8BITSOF((RsV & (1<<uiV)) == 0); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S4_ntstbit_i */
},
int32_t HELPER(S4_ntstbit_i)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ PdV = f8BITSOF((RsV & (1<<uiV)) == 0); }
COUNT_HELPER(S4_ntstbit_i);
return PdV;
})
DEF_QEMU(S2_setbit_i,{ RdV = (RsV | (1<<uiV)); },
DEF_HELPER_3(S2_setbit_i, s32, env, s32, s32),
{
/* S2_setbit_i */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_setbit_i(gen_helper_S2_setbit_i(RdV, cpu_env, RsV, uiV);,
{ RdV = (RsV | (1<<uiV)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_setbit_i */
},
int32_t HELPER(S2_setbit_i)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = (RsV | (1<<uiV)); }
COUNT_HELPER(S2_setbit_i);
return RdV;
})
DEF_QEMU(S2_togglebit_i,{ RdV = (RsV ^ (1<<uiV)); },
DEF_HELPER_3(S2_togglebit_i, s32, env, s32, s32),
{
/* S2_togglebit_i */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_togglebit_i(gen_helper_S2_togglebit_i(RdV, cpu_env, RsV, uiV);,
{ RdV = (RsV ^ (1<<uiV)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_togglebit_i */
},
int32_t HELPER(S2_togglebit_i)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = (RsV ^ (1<<uiV)); }
COUNT_HELPER(S2_togglebit_i);
return RdV;
})
DEF_QEMU(S2_clrbit_i,{ RdV = (RsV & (~(1<<uiV))); },
DEF_HELPER_3(S2_clrbit_i, s32, env, s32, s32),
{
/* S2_clrbit_i */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_clrbit_i(gen_helper_S2_clrbit_i(RdV, cpu_env, RsV, uiV);,
{ RdV = (RsV & (~(1<<uiV))); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* S2_clrbit_i */
},
int32_t HELPER(S2_clrbit_i)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = (RsV & (~(1<<uiV))); }
COUNT_HELPER(S2_clrbit_i);
return RdV;
})
DEF_QEMU(S2_tstbit_r,{ PdV = f8BITSOF((fCAST4_8u(RsV) & fBIDIR_LSHIFTL(1,fSXTN(7,32,RtV),4_8)) != 0); },
DEF_HELPER_3(S2_tstbit_r, s32, env, s32, s32),
{
/* S2_tstbit_r */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_tstbit_r(gen_helper_S2_tstbit_r(PdV, cpu_env, RsV, RtV);,
{ PdV = f8BITSOF((fCAST4_8u(RsV) & fBIDIR_LSHIFTL(1,fSXTN(7,32,RtV),4_8)) != 0); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_tstbit_r */
},
int32_t HELPER(S2_tstbit_r)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ PdV = f8BITSOF((fCAST4_8u(RsV) & fBIDIR_LSHIFTL(1,fSXTN(7,32,RtV),4_8)) != 0); }
COUNT_HELPER(S2_tstbit_r);
return PdV;
})
DEF_QEMU(S4_ntstbit_r,{ PdV = f8BITSOF((fCAST4_8u(RsV) & fBIDIR_LSHIFTL(1,fSXTN(7,32,RtV),4_8)) == 0); },
DEF_HELPER_3(S4_ntstbit_r, s32, env, s32, s32),
{
/* S4_ntstbit_r */
DECL_PREG_d(TCGv, PdV, PdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_ntstbit_r(gen_helper_S4_ntstbit_r(PdV, cpu_env, RsV, RtV);,
{ PdV = f8BITSOF((fCAST4_8u(RsV) & fBIDIR_LSHIFTL(1,fSXTN(7,32,RtV),4_8)) == 0); })
WRITE_PREG(PdN,PdV);
FREE_REG_d(PdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S4_ntstbit_r */
},
int32_t HELPER(S4_ntstbit_r)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t PdV = 0;
{ PdV = f8BITSOF((fCAST4_8u(RsV) & fBIDIR_LSHIFTL(1,fSXTN(7,32,RtV),4_8)) == 0); }
COUNT_HELPER(S4_ntstbit_r);
return PdV;
})
DEF_QEMU(S2_setbit_r,{ RdV = (RsV | fBIDIR_LSHIFTL(1,fSXTN(7,32,RtV),4_8)); },
DEF_HELPER_3(S2_setbit_r, s32, env, s32, s32),
{
/* S2_setbit_r */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_setbit_r(gen_helper_S2_setbit_r(RdV, cpu_env, RsV, RtV);,
{ RdV = (RsV | fBIDIR_LSHIFTL(1,fSXTN(7,32,RtV),4_8)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_setbit_r */
},
int32_t HELPER(S2_setbit_r)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = (RsV | fBIDIR_LSHIFTL(1,fSXTN(7,32,RtV),4_8)); }
COUNT_HELPER(S2_setbit_r);
return RdV;
})
DEF_QEMU(S2_togglebit_r,{ RdV = (RsV ^ fBIDIR_LSHIFTL(1,fSXTN(7,32,RtV),4_8)); },
DEF_HELPER_3(S2_togglebit_r, s32, env, s32, s32),
{
/* S2_togglebit_r */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_togglebit_r(gen_helper_S2_togglebit_r(RdV, cpu_env, RsV, RtV);,
{ RdV = (RsV ^ fBIDIR_LSHIFTL(1,fSXTN(7,32,RtV),4_8)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_togglebit_r */
},
int32_t HELPER(S2_togglebit_r)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = (RsV ^ fBIDIR_LSHIFTL(1,fSXTN(7,32,RtV),4_8)); }
COUNT_HELPER(S2_togglebit_r);
return RdV;
})
DEF_QEMU(S2_clrbit_r,{ RdV = (RsV & (~(fBIDIR_LSHIFTL(1,fSXTN(7,32,RtV),4_8)))); },
DEF_HELPER_3(S2_clrbit_r, s32, env, s32, s32),
{
/* S2_clrbit_r */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_clrbit_r(gen_helper_S2_clrbit_r(RdV, cpu_env, RsV, RtV);,
{ RdV = (RsV & (~(fBIDIR_LSHIFTL(1,fSXTN(7,32,RtV),4_8)))); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_clrbit_r */
},
int32_t HELPER(S2_clrbit_r)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = (RsV & (~(fBIDIR_LSHIFTL(1,fSXTN(7,32,RtV),4_8)))); }
COUNT_HELPER(S2_clrbit_r);
return RdV;
})
DEF_QEMU(S2_asr_i_vh,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, (fGETHALF(i,RssV)>>uiV)); } },
DEF_HELPER_3(S2_asr_i_vh, s64, env, s64, s32),
{
/* S2_asr_i_vh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_asr_i_vh(gen_helper_S2_asr_i_vh(RddV, cpu_env, RssV, uiV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, (fGETHALF(i,RssV)>>uiV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_asr_i_vh */
},
int64_t HELPER(S2_asr_i_vh)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, (fGETHALF(i,RssV)>>uiV)); } }
COUNT_HELPER(S2_asr_i_vh);
return RddV;
})
DEF_QEMU(S2_lsr_i_vh,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, (fGETUHALF(i,RssV)>>uiV)); } },
DEF_HELPER_3(S2_lsr_i_vh, s64, env, s64, s32),
{
/* S2_lsr_i_vh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_lsr_i_vh(gen_helper_S2_lsr_i_vh(RddV, cpu_env, RssV, uiV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, (fGETUHALF(i,RssV)>>uiV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_lsr_i_vh */
},
int64_t HELPER(S2_lsr_i_vh)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, (fGETUHALF(i,RssV)>>uiV)); } }
COUNT_HELPER(S2_lsr_i_vh);
return RddV;
})
DEF_QEMU(S2_asl_i_vh,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, (fGETHALF(i,RssV)<<uiV)); } },
DEF_HELPER_3(S2_asl_i_vh, s64, env, s64, s32),
{
/* S2_asl_i_vh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_asl_i_vh(gen_helper_S2_asl_i_vh(RddV, cpu_env, RssV, uiV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, (fGETHALF(i,RssV)<<uiV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_asl_i_vh */
},
int64_t HELPER(S2_asl_i_vh)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, (fGETHALF(i,RssV)<<uiV)); } }
COUNT_HELPER(S2_asl_i_vh);
return RddV;
})
DEF_QEMU(S2_asr_r_vh,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, fBIDIR_ASHIFTR(fGETHALF(i,RssV),fSXTN(7,32,RtV),2_8)); } },
DEF_HELPER_3(S2_asr_r_vh, s64, env, s64, s32),
{
/* S2_asr_r_vh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asr_r_vh(gen_helper_S2_asr_r_vh(RddV, cpu_env, RssV, RtV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, fBIDIR_ASHIFTR(fGETHALF(i,RssV),fSXTN(7,32,RtV),2_8)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_asr_r_vh */
},
int64_t HELPER(S2_asr_r_vh)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, fBIDIR_ASHIFTR(fGETHALF(i,RssV),fSXTN(7,32,RtV),2_8)); } }
COUNT_HELPER(S2_asr_r_vh);
return RddV;
})
DEF_QEMU(S5_asrhub_rnd_sat,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV, fSATUB( ((fGETHALF(i,RssV) >> uiV )+1)>>1 )); } },
DEF_HELPER_3(S5_asrhub_rnd_sat, s32, env, s64, s32),
{
/* S5_asrhub_rnd_sat */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S5_asrhub_rnd_sat(gen_helper_S5_asrhub_rnd_sat(RdV, cpu_env, RssV, uiV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV, fSATUB( ((fGETHALF(i,RssV) >> uiV )+1)>>1 )); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S5_asrhub_rnd_sat */
},
int32_t HELPER(S5_asrhub_rnd_sat)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV, fSATUB( ((fGETHALF(i,RssV) >> uiV )+1)>>1 )); } }
COUNT_HELPER(S5_asrhub_rnd_sat);
return RdV;
})
DEF_QEMU(S5_asrhub_sat,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV, fSATUB( fGETHALF(i,RssV) >> uiV )); } },
DEF_HELPER_3(S5_asrhub_sat, s32, env, s64, s32),
{
/* S5_asrhub_sat */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S5_asrhub_sat(gen_helper_S5_asrhub_sat(RdV, cpu_env, RssV, uiV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV, fSATUB( fGETHALF(i,RssV) >> uiV )); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S5_asrhub_sat */
},
int32_t HELPER(S5_asrhub_sat)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV, fSATUB( fGETHALF(i,RssV) >> uiV )); } }
COUNT_HELPER(S5_asrhub_sat);
return RdV;
})
DEF_QEMU(S5_vasrhrnd,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, ( ((fGETHALF(i,RssV) >> uiV)+1)>>1 )); } },
DEF_HELPER_3(S5_vasrhrnd, s64, env, s64, s32),
{
/* S5_vasrhrnd */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S5_vasrhrnd(gen_helper_S5_vasrhrnd(RddV, cpu_env, RssV, uiV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, ( ((fGETHALF(i,RssV) >> uiV)+1)>>1 )); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S5_vasrhrnd */
},
int64_t HELPER(S5_vasrhrnd)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, ( ((fGETHALF(i,RssV) >> uiV)+1)>>1 )); } }
COUNT_HELPER(S5_vasrhrnd);
return RddV;
})
DEF_QEMU(S2_asl_r_vh,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, fBIDIR_ASHIFTL(fGETHALF(i,RssV),fSXTN(7,32,RtV),2_8)); } },
DEF_HELPER_3(S2_asl_r_vh, s64, env, s64, s32),
{
/* S2_asl_r_vh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asl_r_vh(gen_helper_S2_asl_r_vh(RddV, cpu_env, RssV, RtV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, fBIDIR_ASHIFTL(fGETHALF(i,RssV),fSXTN(7,32,RtV),2_8)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_asl_r_vh */
},
int64_t HELPER(S2_asl_r_vh)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, fBIDIR_ASHIFTL(fGETHALF(i,RssV),fSXTN(7,32,RtV),2_8)); } }
COUNT_HELPER(S2_asl_r_vh);
return RddV;
})
DEF_QEMU(S2_lsr_r_vh,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, fBIDIR_LSHIFTR(fGETUHALF(i,RssV),fSXTN(7,32,RtV),2_8)); } },
DEF_HELPER_3(S2_lsr_r_vh, s64, env, s64, s32),
{
/* S2_lsr_r_vh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsr_r_vh(gen_helper_S2_lsr_r_vh(RddV, cpu_env, RssV, RtV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, fBIDIR_LSHIFTR(fGETUHALF(i,RssV),fSXTN(7,32,RtV),2_8)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_lsr_r_vh */
},
int64_t HELPER(S2_lsr_r_vh)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, fBIDIR_LSHIFTR(fGETUHALF(i,RssV),fSXTN(7,32,RtV),2_8)); } }
COUNT_HELPER(S2_lsr_r_vh);
return RddV;
})
DEF_QEMU(S2_lsl_r_vh,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, fBIDIR_LSHIFTL(fGETUHALF(i,RssV),fSXTN(7,32,RtV),2_8)); } },
DEF_HELPER_3(S2_lsl_r_vh, s64, env, s64, s32),
{
/* S2_lsl_r_vh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsl_r_vh(gen_helper_S2_lsl_r_vh(RddV, cpu_env, RssV, RtV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, fBIDIR_LSHIFTL(fGETUHALF(i,RssV),fSXTN(7,32,RtV),2_8)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_lsl_r_vh */
},
int64_t HELPER(S2_lsl_r_vh)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV, fBIDIR_LSHIFTL(fGETUHALF(i,RssV),fSXTN(7,32,RtV),2_8)); } }
COUNT_HELPER(S2_lsl_r_vh);
return RddV;
})
DEF_QEMU(S2_asr_i_vw,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fGETWORD(i,RssV)>>uiV)); } },
DEF_HELPER_3(S2_asr_i_vw, s64, env, s64, s32),
{
/* S2_asr_i_vw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_asr_i_vw(gen_helper_S2_asr_i_vw(RddV, cpu_env, RssV, uiV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fGETWORD(i,RssV)>>uiV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_asr_i_vw */
},
int64_t HELPER(S2_asr_i_vw)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fGETWORD(i,RssV)>>uiV)); } }
COUNT_HELPER(S2_asr_i_vw);
return RddV;
})
DEF_QEMU(S2_asr_i_svw_trun,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(0,(fGETWORD(i,RssV)>>uiV))); } },
DEF_HELPER_3(S2_asr_i_svw_trun, s32, env, s64, s32),
{
/* S2_asr_i_svw_trun */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_asr_i_svw_trun(gen_helper_S2_asr_i_svw_trun(RdV, cpu_env, RssV, uiV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(0,(fGETWORD(i,RssV)>>uiV))); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_asr_i_svw_trun */
},
int32_t HELPER(S2_asr_i_svw_trun)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(0,(fGETWORD(i,RssV)>>uiV))); } }
COUNT_HELPER(S2_asr_i_svw_trun);
return RdV;
})
DEF_QEMU(S2_asr_r_svw_trun,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(0,fBIDIR_ASHIFTR(fGETWORD(i,RssV),fSXTN(7,32,RtV),4_8))); } },
DEF_HELPER_3(S2_asr_r_svw_trun, s32, env, s64, s32),
{
/* S2_asr_r_svw_trun */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asr_r_svw_trun(gen_helper_S2_asr_r_svw_trun(RdV, cpu_env, RssV, RtV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(0,fBIDIR_ASHIFTR(fGETWORD(i,RssV),fSXTN(7,32,RtV),4_8))); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_asr_r_svw_trun */
},
int32_t HELPER(S2_asr_r_svw_trun)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(0,fBIDIR_ASHIFTR(fGETWORD(i,RssV),fSXTN(7,32,RtV),4_8))); } }
COUNT_HELPER(S2_asr_r_svw_trun);
return RdV;
})
DEF_QEMU(S2_lsr_i_vw,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fGETUWORD(i,RssV)>>uiV)); } },
DEF_HELPER_3(S2_lsr_i_vw, s64, env, s64, s32),
{
/* S2_lsr_i_vw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_lsr_i_vw(gen_helper_S2_lsr_i_vw(RddV, cpu_env, RssV, uiV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fGETUWORD(i,RssV)>>uiV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_lsr_i_vw */
},
int64_t HELPER(S2_lsr_i_vw)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fGETUWORD(i,RssV)>>uiV)); } }
COUNT_HELPER(S2_lsr_i_vw);
return RddV;
})
DEF_QEMU(S2_asl_i_vw,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fGETWORD(i,RssV)<<uiV)); } },
DEF_HELPER_3(S2_asl_i_vw, s64, env, s64, s32),
{
/* S2_asl_i_vw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_asl_i_vw(gen_helper_S2_asl_i_vw(RddV, cpu_env, RssV, uiV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fGETWORD(i,RssV)<<uiV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_IMM(uiV);
/* S2_asl_i_vw */
},
int64_t HELPER(S2_asl_i_vw)(CPUHexagonState *env, int64_t RssV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fGETWORD(i,RssV)<<uiV)); } }
COUNT_HELPER(S2_asl_i_vw);
return RddV;
})
DEF_QEMU(S2_asr_r_vw,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV, fBIDIR_ASHIFTR(fGETWORD(i,RssV),fSXTN(7,32,RtV),4_8)); } },
DEF_HELPER_3(S2_asr_r_vw, s64, env, s64, s32),
{
/* S2_asr_r_vw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asr_r_vw(gen_helper_S2_asr_r_vw(RddV, cpu_env, RssV, RtV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV, fBIDIR_ASHIFTR(fGETWORD(i,RssV),fSXTN(7,32,RtV),4_8)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_asr_r_vw */
},
int64_t HELPER(S2_asr_r_vw)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV, fBIDIR_ASHIFTR(fGETWORD(i,RssV),fSXTN(7,32,RtV),4_8)); } }
COUNT_HELPER(S2_asr_r_vw);
return RddV;
})
DEF_QEMU(S2_asl_r_vw,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV, fBIDIR_ASHIFTL(fGETWORD(i,RssV),fSXTN(7,32,RtV),4_8)); } },
DEF_HELPER_3(S2_asl_r_vw, s64, env, s64, s32),
{
/* S2_asl_r_vw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_asl_r_vw(gen_helper_S2_asl_r_vw(RddV, cpu_env, RssV, RtV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV, fBIDIR_ASHIFTL(fGETWORD(i,RssV),fSXTN(7,32,RtV),4_8)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_asl_r_vw */
},
int64_t HELPER(S2_asl_r_vw)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV, fBIDIR_ASHIFTL(fGETWORD(i,RssV),fSXTN(7,32,RtV),4_8)); } }
COUNT_HELPER(S2_asl_r_vw);
return RddV;
})
DEF_QEMU(S2_lsr_r_vw,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV, fBIDIR_LSHIFTR(fGETUWORD(i,RssV),fSXTN(7,32,RtV),4_8)); } },
DEF_HELPER_3(S2_lsr_r_vw, s64, env, s64, s32),
{
/* S2_lsr_r_vw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsr_r_vw(gen_helper_S2_lsr_r_vw(RddV, cpu_env, RssV, RtV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV, fBIDIR_LSHIFTR(fGETUWORD(i,RssV),fSXTN(7,32,RtV),4_8)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_lsr_r_vw */
},
int64_t HELPER(S2_lsr_r_vw)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV, fBIDIR_LSHIFTR(fGETUWORD(i,RssV),fSXTN(7,32,RtV),4_8)); } }
COUNT_HELPER(S2_lsr_r_vw);
return RddV;
})
DEF_QEMU(S2_lsl_r_vw,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV, fBIDIR_LSHIFTL(fGETUWORD(i,RssV),fSXTN(7,32,RtV),4_8)); } },
DEF_HELPER_3(S2_lsl_r_vw, s64, env, s64, s32),
{
/* S2_lsl_r_vw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_lsl_r_vw(gen_helper_S2_lsl_r_vw(RddV, cpu_env, RssV, RtV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV, fBIDIR_LSHIFTL(fGETUWORD(i,RssV),fSXTN(7,32,RtV),4_8)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_t(RtV);
/* S2_lsl_r_vw */
},
int64_t HELPER(S2_lsl_r_vw)(CPUHexagonState *env, int64_t RssV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV, fBIDIR_LSHIFTL(fGETUWORD(i,RssV),fSXTN(7,32,RtV),4_8)); } }
COUNT_HELPER(S2_lsl_r_vw);
return RddV;
})
DEF_QEMU(S2_vrndpackwh,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(1,(fGETWORD(i,RssV)+0x08000))); } },
DEF_HELPER_2(S2_vrndpackwh, s32, env, s64),
{
/* S2_vrndpackwh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_vrndpackwh(gen_helper_S2_vrndpackwh(RdV, cpu_env, RssV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(1,(fGETWORD(i,RssV)+0x08000))); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* S2_vrndpackwh */
},
int32_t HELPER(S2_vrndpackwh)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(1,(fGETWORD(i,RssV)+0x08000))); } }
COUNT_HELPER(S2_vrndpackwh);
return RdV;
})
DEF_QEMU(S2_vrndpackwhs,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(1,fSAT(fGETWORD(i,RssV)+0x08000))); } },
DEF_HELPER_2(S2_vrndpackwhs, s32, env, s64),
{
/* S2_vrndpackwhs */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_vrndpackwhs(gen_helper_S2_vrndpackwhs(RdV, cpu_env, RssV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(1,fSAT(fGETWORD(i,RssV)+0x08000))); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* S2_vrndpackwhs */
},
int32_t HELPER(S2_vrndpackwhs)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(1,fSAT(fGETWORD(i,RssV)+0x08000))); } }
COUNT_HELPER(S2_vrndpackwhs);
return RdV;
})
DEF_QEMU(S2_vsxtbh,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,RsV)); } },
DEF_HELPER_2(S2_vsxtbh, s64, env, s32),
{
/* S2_vsxtbh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_vsxtbh(gen_helper_S2_vsxtbh(RddV, cpu_env, RsV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,RsV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* S2_vsxtbh */
},
int64_t HELPER(S2_vsxtbh)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETBYTE(i,RsV)); } }
COUNT_HELPER(S2_vsxtbh);
return RddV;
})
DEF_QEMU(S2_vzxtbh,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,RsV)); } },
DEF_HELPER_2(S2_vzxtbh, s64, env, s32),
{
/* S2_vzxtbh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_vzxtbh(gen_helper_S2_vzxtbh(RddV, cpu_env, RsV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,RsV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* S2_vzxtbh */
},
int64_t HELPER(S2_vzxtbh)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETUBYTE(i,RsV)); } }
COUNT_HELPER(S2_vzxtbh);
return RddV;
})
DEF_QEMU(S2_vsathub,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV,fSATUN(8,fGETHALF(i,RssV))); } },
DEF_HELPER_2(S2_vsathub, s32, env, s64),
{
/* S2_vsathub */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_vsathub(gen_helper_S2_vsathub(RdV, cpu_env, RssV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV,fSATUN(8,fGETHALF(i,RssV))); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* S2_vsathub */
},
int32_t HELPER(S2_vsathub)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV,fSATUN(8,fGETHALF(i,RssV))); } }
COUNT_HELPER(S2_vsathub);
return RdV;
})
DEF_QEMU(S2_svsathub,{ fSETBYTE(0,RdV,fSATUN(8,fGETHALF(0,RsV))); fSETBYTE(1,RdV,fSATUN(8,fGETHALF(1,RsV))); fSETBYTE(2,RdV,0); fSETBYTE(3,RdV,0); },
DEF_HELPER_2(S2_svsathub, s32, env, s32),
{
/* S2_svsathub */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_svsathub(gen_helper_S2_svsathub(RdV, cpu_env, RsV);,
{ fSETBYTE(0,RdV,fSATUN(8,fGETHALF(0,RsV))); fSETBYTE(1,RdV,fSATUN(8,fGETHALF(1,RsV))); fSETBYTE(2,RdV,0); fSETBYTE(3,RdV,0); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* S2_svsathub */
},
int32_t HELPER(S2_svsathub)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fSETBYTE(0,RdV,fSATUN(8,fGETHALF(0,RsV))); fSETBYTE(1,RdV,fSATUN(8,fGETHALF(1,RsV))); fSETBYTE(2,RdV,0); fSETBYTE(3,RdV,0); }
COUNT_HELPER(S2_svsathub);
return RdV;
})
DEF_QEMU(S2_svsathb,{ fSETBYTE(0,RdV,fSATN(8,fGETHALF(0,RsV))); fSETBYTE(1,RdV,fSATN(8,fGETHALF(1,RsV))); fSETBYTE(2,RdV,0); fSETBYTE(3,RdV,0); },
DEF_HELPER_2(S2_svsathb, s32, env, s32),
{
/* S2_svsathb */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_svsathb(gen_helper_S2_svsathb(RdV, cpu_env, RsV);,
{ fSETBYTE(0,RdV,fSATN(8,fGETHALF(0,RsV))); fSETBYTE(1,RdV,fSATN(8,fGETHALF(1,RsV))); fSETBYTE(2,RdV,0); fSETBYTE(3,RdV,0); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* S2_svsathb */
},
int32_t HELPER(S2_svsathb)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fSETBYTE(0,RdV,fSATN(8,fGETHALF(0,RsV))); fSETBYTE(1,RdV,fSATN(8,fGETHALF(1,RsV))); fSETBYTE(2,RdV,0); fSETBYTE(3,RdV,0); }
COUNT_HELPER(S2_svsathb);
return RdV;
})
DEF_QEMU(S2_vsathb,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV,fSATN(8,fGETHALF(i,RssV))); } },
DEF_HELPER_2(S2_vsathb, s32, env, s64),
{
/* S2_vsathb */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_vsathb(gen_helper_S2_vsathb(RdV, cpu_env, RssV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV,fSATN(8,fGETHALF(i,RssV))); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* S2_vsathb */
},
int32_t HELPER(S2_vsathb)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV,fSATN(8,fGETHALF(i,RssV))); } }
COUNT_HELPER(S2_vsathb);
return RdV;
})
DEF_QEMU(S2_vtrunohb,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV,fGETBYTE(i*2+1,RssV)); } },
DEF_HELPER_2(S2_vtrunohb, s32, env, s64),
{
/* S2_vtrunohb */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_vtrunohb(gen_helper_S2_vtrunohb(RdV, cpu_env, RssV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV,fGETBYTE(i*2+1,RssV)); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* S2_vtrunohb */
},
int32_t HELPER(S2_vtrunohb)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV,fGETBYTE(i*2+1,RssV)); } }
COUNT_HELPER(S2_vtrunohb);
return RdV;
})
DEF_QEMU(S2_vtrunewh,{ fSETHALF(0,RddV,fGETHALF(0,RttV)); fSETHALF(1,RddV,fGETHALF(2,RttV)); fSETHALF(2,RddV,fGETHALF(0,RssV)); fSETHALF(3,RddV,fGETHALF(2,RssV)); },
DEF_HELPER_3(S2_vtrunewh, s64, env, s64, s64),
{
/* S2_vtrunewh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_vtrunewh(gen_helper_S2_vtrunewh(RddV, cpu_env, RssV, RttV);,
{ fSETHALF(0,RddV,fGETHALF(0,RttV)); fSETHALF(1,RddV,fGETHALF(2,RttV)); fSETHALF(2,RddV,fGETHALF(0,RssV)); fSETHALF(3,RddV,fGETHALF(2,RssV)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S2_vtrunewh */
},
int64_t HELPER(S2_vtrunewh)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETHALF(0,RddV,fGETHALF(0,RttV)); fSETHALF(1,RddV,fGETHALF(2,RttV)); fSETHALF(2,RddV,fGETHALF(0,RssV)); fSETHALF(3,RddV,fGETHALF(2,RssV)); }
COUNT_HELPER(S2_vtrunewh);
return RddV;
})
DEF_QEMU(S2_vtrunowh,{ fSETHALF(0,RddV,fGETHALF(1,RttV)); fSETHALF(1,RddV,fGETHALF(3,RttV)); fSETHALF(2,RddV,fGETHALF(1,RssV)); fSETHALF(3,RddV,fGETHALF(3,RssV)); },
DEF_HELPER_3(S2_vtrunowh, s64, env, s64, s64),
{
/* S2_vtrunowh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_vtrunowh(gen_helper_S2_vtrunowh(RddV, cpu_env, RssV, RttV);,
{ fSETHALF(0,RddV,fGETHALF(1,RttV)); fSETHALF(1,RddV,fGETHALF(3,RttV)); fSETHALF(2,RddV,fGETHALF(1,RssV)); fSETHALF(3,RddV,fGETHALF(3,RssV)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S2_vtrunowh */
},
int64_t HELPER(S2_vtrunowh)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETHALF(0,RddV,fGETHALF(1,RttV)); fSETHALF(1,RddV,fGETHALF(3,RttV)); fSETHALF(2,RddV,fGETHALF(1,RssV)); fSETHALF(3,RddV,fGETHALF(3,RssV)); }
COUNT_HELPER(S2_vtrunowh);
return RddV;
})
DEF_QEMU(S2_vtrunehb,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV,fGETBYTE(i*2,RssV)); } },
DEF_HELPER_2(S2_vtrunehb, s32, env, s64),
{
/* S2_vtrunehb */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_vtrunehb(gen_helper_S2_vtrunehb(RdV, cpu_env, RssV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV,fGETBYTE(i*2,RssV)); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* S2_vtrunehb */
},
int32_t HELPER(S2_vtrunehb)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV,fGETBYTE(i*2,RssV)); } }
COUNT_HELPER(S2_vtrunehb);
return RdV;
})
DEF_QEMU(S6_vtrunehb_ppp,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RddV,fGETBYTE(i*2,RttV)); fSETBYTE(i+4,RddV,fGETBYTE(i*2,RssV)); } },
DEF_HELPER_3(S6_vtrunehb_ppp, s64, env, s64, s64),
{
/* S6_vtrunehb_ppp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S6_vtrunehb_ppp(gen_helper_S6_vtrunehb_ppp(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RddV,fGETBYTE(i*2,RttV)); fSETBYTE(i+4,RddV,fGETBYTE(i*2,RssV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S6_vtrunehb_ppp */
},
int64_t HELPER(S6_vtrunehb_ppp)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RddV,fGETBYTE(i*2,RttV)); fSETBYTE(i+4,RddV,fGETBYTE(i*2,RssV)); } }
COUNT_HELPER(S6_vtrunehb_ppp);
return RddV;
})
DEF_QEMU(S6_vtrunohb_ppp,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RddV,fGETBYTE(i*2+1,RttV)); fSETBYTE(i+4,RddV,fGETBYTE(i*2+1,RssV)); } },
DEF_HELPER_3(S6_vtrunohb_ppp, s64, env, s64, s64),
{
/* S6_vtrunohb_ppp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S6_vtrunohb_ppp(gen_helper_S6_vtrunohb_ppp(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RddV,fGETBYTE(i*2+1,RttV)); fSETBYTE(i+4,RddV,fGETBYTE(i*2+1,RssV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S6_vtrunohb_ppp */
},
int64_t HELPER(S6_vtrunohb_ppp)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RddV,fGETBYTE(i*2+1,RttV)); fSETBYTE(i+4,RddV,fGETBYTE(i*2+1,RssV)); } }
COUNT_HELPER(S6_vtrunohb_ppp);
return RddV;
})
DEF_QEMU(S2_vsxthw,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fGETHALF(i,RsV)); } },
DEF_HELPER_2(S2_vsxthw, s64, env, s32),
{
/* S2_vsxthw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_vsxthw(gen_helper_S2_vsxthw(RddV, cpu_env, RsV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fGETHALF(i,RsV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* S2_vsxthw */
},
int64_t HELPER(S2_vsxthw)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fGETHALF(i,RsV)); } }
COUNT_HELPER(S2_vsxthw);
return RddV;
})
DEF_QEMU(S2_vzxthw,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fGETUHALF(i,RsV)); } },
DEF_HELPER_2(S2_vzxthw, s64, env, s32),
{
/* S2_vzxthw */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_vzxthw(gen_helper_S2_vzxthw(RddV, cpu_env, RsV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fGETUHALF(i,RsV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* S2_vzxthw */
},
int64_t HELPER(S2_vzxthw)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fGETUHALF(i,RsV)); } }
COUNT_HELPER(S2_vzxthw);
return RddV;
})
DEF_QEMU(S2_vsatwh,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATN(16,fGETWORD(i,RssV))); } },
DEF_HELPER_2(S2_vsatwh, s32, env, s64),
{
/* S2_vsatwh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_vsatwh(gen_helper_S2_vsatwh(RdV, cpu_env, RssV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATN(16,fGETWORD(i,RssV))); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* S2_vsatwh */
},
int32_t HELPER(S2_vsatwh)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATN(16,fGETWORD(i,RssV))); } }
COUNT_HELPER(S2_vsatwh);
return RdV;
})
DEF_QEMU(S2_vsatwuh,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATUN(16,fGETWORD(i,RssV))); } },
DEF_HELPER_2(S2_vsatwuh, s32, env, s64),
{
/* S2_vsatwuh */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_vsatwuh(gen_helper_S2_vsatwuh(RdV, cpu_env, RssV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATUN(16,fGETWORD(i,RssV))); } })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* S2_vsatwuh */
},
int32_t HELPER(S2_vsatwuh)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATUN(16,fGETWORD(i,RssV))); } }
COUNT_HELPER(S2_vsatwuh);
return RdV;
})
DEF_QEMU(S2_packhl,{ fSETHALF(0,RddV,fGETHALF(0,RtV)); fSETHALF(1,RddV,fGETHALF(0,RsV)); fSETHALF(2,RddV,fGETHALF(1,RtV)); fSETHALF(3,RddV,fGETHALF(1,RsV)); },
DEF_HELPER_3(S2_packhl, s64, env, s32, s32),
{
/* S2_packhl */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S2_packhl(gen_helper_S2_packhl(RddV, cpu_env, RsV, RtV);,
{ fSETHALF(0,RddV,fGETHALF(0,RtV)); fSETHALF(1,RddV,fGETHALF(0,RsV)); fSETHALF(2,RddV,fGETHALF(1,RtV)); fSETHALF(3,RddV,fGETHALF(1,RsV)); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S2_packhl */
},
int64_t HELPER(S2_packhl)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETHALF(0,RddV,fGETHALF(0,RtV)); fSETHALF(1,RddV,fGETHALF(0,RsV)); fSETHALF(2,RddV,fGETHALF(1,RtV)); fSETHALF(3,RddV,fGETHALF(1,RsV)); }
COUNT_HELPER(S2_packhl);
return RddV;
})
DEF_QEMU(A2_swiz,{ fSETBYTE(0,RdV,fGETBYTE(3,RsV)); fSETBYTE(1,RdV,fGETBYTE(2,RsV)); fSETBYTE(2,RdV,fGETBYTE(1,RsV)); fSETBYTE(3,RdV,fGETBYTE(0,RsV)); },
DEF_HELPER_2(A2_swiz, s32, env, s32),
{
/* A2_swiz */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_A2_swiz(gen_helper_A2_swiz(RdV, cpu_env, RsV);,
{ fSETBYTE(0,RdV,fGETBYTE(3,RsV)); fSETBYTE(1,RdV,fGETBYTE(2,RsV)); fSETBYTE(2,RdV,fGETBYTE(1,RsV)); fSETBYTE(3,RdV,fGETBYTE(0,RsV)); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* A2_swiz */
},
int32_t HELPER(A2_swiz)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fSETBYTE(0,RdV,fGETBYTE(3,RsV)); fSETBYTE(1,RdV,fGETBYTE(2,RsV)); fSETBYTE(2,RdV,fGETBYTE(1,RsV)); fSETBYTE(3,RdV,fGETBYTE(0,RsV)); }
COUNT_HELPER(A2_swiz);
return RdV;
})
DEF_QEMU(S2_vsathub_nopack,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATUN(8,fGETHALF(i,RssV))); } },
DEF_HELPER_2(S2_vsathub_nopack, s64, env, s64),
{
/* S2_vsathub_nopack */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_vsathub_nopack(gen_helper_S2_vsathub_nopack(RddV, cpu_env, RssV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATUN(8,fGETHALF(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* S2_vsathub_nopack */
},
int64_t HELPER(S2_vsathub_nopack)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATUN(8,fGETHALF(i,RssV))); } }
COUNT_HELPER(S2_vsathub_nopack);
return RddV;
})
DEF_QEMU(S2_vsathb_nopack,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATN(8,fGETHALF(i,RssV))); } },
DEF_HELPER_2(S2_vsathb_nopack, s64, env, s64),
{
/* S2_vsathb_nopack */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_vsathb_nopack(gen_helper_S2_vsathb_nopack(RddV, cpu_env, RssV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATN(8,fGETHALF(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* S2_vsathb_nopack */
},
int64_t HELPER(S2_vsathb_nopack)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATN(8,fGETHALF(i,RssV))); } }
COUNT_HELPER(S2_vsathb_nopack);
return RddV;
})
DEF_QEMU(S2_vsatwh_nopack,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSATN(16,fGETWORD(i,RssV))); } },
DEF_HELPER_2(S2_vsatwh_nopack, s64, env, s64),
{
/* S2_vsatwh_nopack */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_vsatwh_nopack(gen_helper_S2_vsatwh_nopack(RddV, cpu_env, RssV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSATN(16,fGETWORD(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* S2_vsatwh_nopack */
},
int64_t HELPER(S2_vsatwh_nopack)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSATN(16,fGETWORD(i,RssV))); } }
COUNT_HELPER(S2_vsatwh_nopack);
return RddV;
})
DEF_QEMU(S2_vsatwuh_nopack,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSATUN(16,fGETWORD(i,RssV))); } },
DEF_HELPER_2(S2_vsatwuh_nopack, s64, env, s64),
{
/* S2_vsatwuh_nopack */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_vsatwuh_nopack(gen_helper_S2_vsatwuh_nopack(RddV, cpu_env, RssV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSATUN(16,fGETWORD(i,RssV))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* S2_vsatwuh_nopack */
},
int64_t HELPER(S2_vsatwuh_nopack)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSATUN(16,fGETWORD(i,RssV))); } }
COUNT_HELPER(S2_vsatwuh_nopack);
return RddV;
})
DEF_QEMU(S2_shuffob,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i*2 ,RddV,fGETBYTE(i*2+1,RssV)); fSETBYTE(i*2+1,RddV,fGETBYTE(i*2+1,RttV)); } },
DEF_HELPER_3(S2_shuffob, s64, env, s64, s64),
{
/* S2_shuffob */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_shuffob(gen_helper_S2_shuffob(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i*2 ,RddV,fGETBYTE(i*2+1,RssV)); fSETBYTE(i*2+1,RddV,fGETBYTE(i*2+1,RttV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* S2_shuffob */
},
int64_t HELPER(S2_shuffob)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i*2 ,RddV,fGETBYTE(i*2+1,RssV)); fSETBYTE(i*2+1,RddV,fGETBYTE(i*2+1,RttV)); } }
COUNT_HELPER(S2_shuffob);
return RddV;
})
DEF_QEMU(S2_shuffeb,{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i*2 ,RddV,fGETBYTE(i*2,RttV)); fSETBYTE(i*2+1,RddV,fGETBYTE(i*2,RssV)); } },
DEF_HELPER_3(S2_shuffeb, s64, env, s64, s64),
{
/* S2_shuffeb */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_shuffeb(gen_helper_S2_shuffeb(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i*2 ,RddV,fGETBYTE(i*2,RttV)); fSETBYTE(i*2+1,RddV,fGETBYTE(i*2,RssV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S2_shuffeb */
},
int64_t HELPER(S2_shuffeb)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i*2 ,RddV,fGETBYTE(i*2,RttV)); fSETBYTE(i*2+1,RddV,fGETBYTE(i*2,RssV)); } }
COUNT_HELPER(S2_shuffeb);
return RddV;
})
DEF_QEMU(S2_shuffoh,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i*2 ,RddV,fGETHALF(i*2+1,RssV)); fSETHALF(i*2+1,RddV,fGETHALF(i*2+1,RttV)); } },
DEF_HELPER_3(S2_shuffoh, s64, env, s64, s64),
{
/* S2_shuffoh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 2, 0);
READ_RREG_PAIR(RttV, RttN);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_shuffoh(gen_helper_S2_shuffoh(RddV, cpu_env, RttV, RssV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i*2 ,RddV,fGETHALF(i*2+1,RssV)); fSETHALF(i*2+1,RddV,fGETHALF(i*2+1,RttV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RttV);
FREE_REG_PAIR(RssV);
/* S2_shuffoh */
},
int64_t HELPER(S2_shuffoh)(CPUHexagonState *env, int64_t RttV, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i*2 ,RddV,fGETHALF(i*2+1,RssV)); fSETHALF(i*2+1,RddV,fGETHALF(i*2+1,RttV)); } }
COUNT_HELPER(S2_shuffoh);
return RddV;
})
DEF_QEMU(S2_shuffeh,{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i*2 ,RddV,fGETHALF(i*2,RttV)); fSETHALF(i*2+1,RddV,fGETHALF(i*2,RssV)); } },
DEF_HELPER_3(S2_shuffeh, s64, env, s64, s64),
{
/* S2_shuffeh */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_shuffeh(gen_helper_S2_shuffeh(RddV, cpu_env, RssV, RttV);,
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i*2 ,RddV,fGETHALF(i*2,RttV)); fSETHALF(i*2+1,RddV,fGETHALF(i*2,RssV)); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S2_shuffeh */
},
int64_t HELPER(S2_shuffeh)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i*2 ,RddV,fGETHALF(i*2,RttV)); fSETHALF(i*2+1,RddV,fGETHALF(i*2,RssV)); } }
COUNT_HELPER(S2_shuffeh);
return RddV;
})
DEF_QEMU(S5_popcountp,{ RdV = fCOUNTONES_8(RssV); },
DEF_HELPER_2(S5_popcountp, s32, env, s64),
{
/* S5_popcountp */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S5_popcountp(gen_helper_S5_popcountp(RdV, cpu_env, RssV);,
{ RdV = fCOUNTONES_8(RssV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* S5_popcountp */
},
int32_t HELPER(S5_popcountp)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = fCOUNTONES_8(RssV); }
COUNT_HELPER(S5_popcountp);
return RdV;
})
DEF_QEMU(S4_parity,{ RdV = 1&fCOUNTONES_4(RsV & RtV); },
DEF_HELPER_3(S4_parity, s32, env, s32, s32),
{
/* S4_parity */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_S4_parity(gen_helper_S4_parity(RdV, cpu_env, RsV, RtV);,
{ RdV = 1&fCOUNTONES_4(RsV & RtV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* S4_parity */
},
int32_t HELPER(S4_parity)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = 1&fCOUNTONES_4(RsV & RtV); }
COUNT_HELPER(S4_parity);
return RdV;
})
DEF_QEMU(S2_parityp,{ RdV = 1&fCOUNTONES_8(RssV & RttV); },
DEF_HELPER_3(S2_parityp, s32, env, s64, s64),
{
/* S2_parityp */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_parityp(gen_helper_S2_parityp(RdV, cpu_env, RssV, RttV);,
{ RdV = 1&fCOUNTONES_8(RssV & RttV); })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S2_parityp */
},
int32_t HELPER(S2_parityp)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = 1&fCOUNTONES_8(RssV & RttV); }
COUNT_HELPER(S2_parityp);
return RdV;
})
DEF_QEMU(S2_lfsp,{ RddV = (fCAST8u(RssV) >> 1) | (fCAST8u((1&fCOUNTONES_8(RssV & RttV)))<<63) ; },
DEF_HELPER_3(S2_lfsp, s64, env, s64, s64),
{
/* S2_lfsp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_lfsp(gen_helper_S2_lfsp(RddV, cpu_env, RssV, RttV);,
{ RddV = (fCAST8u(RssV) >> 1) | (fCAST8u((1&fCOUNTONES_8(RssV & RttV)))<<63) ; })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S2_lfsp */
},
int64_t HELPER(S2_lfsp)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ RddV = (fCAST8u(RssV) >> 1) | (fCAST8u((1&fCOUNTONES_8(RssV & RttV)))<<63) ; }
COUNT_HELPER(S2_lfsp);
return RddV;
})
DEF_QEMU(S2_clbnorm,{ if (RsV == 0) { RdV = 0; } else { RdV = (fMAX(fCL1_4(RsV),fCL1_4(~RsV)))-1;} },
DEF_HELPER_2(S2_clbnorm, s32, env, s32),
{
/* S2_clbnorm */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_clbnorm(gen_helper_S2_clbnorm(RdV, cpu_env, RsV);,
{ if (RsV == 0) { RdV = 0; } else { RdV = (fMAX(fCL1_4(RsV),fCL1_4(~RsV)))-1;} })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* S2_clbnorm */
},
int32_t HELPER(S2_clbnorm)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ if (RsV == 0) { RdV = 0; } else { RdV = (fMAX(fCL1_4(RsV),fCL1_4(~RsV)))-1;} }
COUNT_HELPER(S2_clbnorm);
return RdV;
})
DEF_QEMU(S4_clbaddi,{ RdV = (fMAX(fCL1_4(RsV),fCL1_4(~RsV)))+siV;},
DEF_HELPER_3(S4_clbaddi, s32, env, s32, s32),
{
/* S4_clbaddi */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_s(RsV, RsN);
fWRAP_S4_clbaddi(gen_helper_S4_clbaddi(RdV, cpu_env, RsV, siV);,
{ RdV = (fMAX(fCL1_4(RsV),fCL1_4(~RsV)))+siV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(siV);
/* S4_clbaddi */
},
int32_t HELPER(S4_clbaddi)(CPUHexagonState *env, int32_t RsV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = (fMAX(fCL1_4(RsV),fCL1_4(~RsV)))+siV;}
COUNT_HELPER(S4_clbaddi);
return RdV;
})
DEF_QEMU(S4_clbpnorm,{ if (RssV == 0) { RdV = 0; } else { RdV = (fMAX(fCL1_8(RssV),fCL1_8(~RssV)))-1;}},
DEF_HELPER_2(S4_clbpnorm, s32, env, s64),
{
/* S4_clbpnorm */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S4_clbpnorm(gen_helper_S4_clbpnorm(RdV, cpu_env, RssV);,
{ if (RssV == 0) { RdV = 0; } else { RdV = (fMAX(fCL1_8(RssV),fCL1_8(~RssV)))-1;}})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* S4_clbpnorm */
},
int32_t HELPER(S4_clbpnorm)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ if (RssV == 0) { RdV = 0; } else { RdV = (fMAX(fCL1_8(RssV),fCL1_8(~RssV)))-1;}}
COUNT_HELPER(S4_clbpnorm);
return RdV;
})
DEF_QEMU(S4_clbpaddi,{ RdV = (fMAX(fCL1_8(RssV),fCL1_8(~RssV)))+siV;},
DEF_HELPER_3(S4_clbpaddi, s32, env, s64, s32),
{
/* S4_clbpaddi */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S4_clbpaddi(gen_helper_S4_clbpaddi(RdV, cpu_env, RssV, siV);,
{ RdV = (fMAX(fCL1_8(RssV),fCL1_8(~RssV)))+siV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
FREE_IMM(siV);
/* S4_clbpaddi */
},
int32_t HELPER(S4_clbpaddi)(CPUHexagonState *env, int64_t RssV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV = (fMAX(fCL1_8(RssV),fCL1_8(~RssV)))+siV;}
COUNT_HELPER(S4_clbpaddi);
return RdV;
})
DEF_QEMU(S2_cabacdecbin,{ fHIDE(size4u_t state;) fHIDE(size4u_t valMPS;) fHIDE(size4u_t bitpos;) fHIDE(size4u_t range;) fHIDE(size4u_t offset;) fHIDE(size4u_t rLPS;) fHIDE(size4u_t rMPS;) state = fEXTRACTU_RANGE( fGETWORD(1,RttV) ,5,0); valMPS = fEXTRACTU_RANGE( fGETWORD(1,RttV) ,8,8); bitpos = fEXTRACTU_RANGE( fGETWORD(0,RttV) ,4,0); range = fGETWORD(0,RssV); offset = fGETWORD(1,RssV); range <<= bitpos; offset <<= bitpos; rLPS = rLPS_table_64x4[state][ (range >>29)&3]; rLPS = rLPS << 23; rMPS= (range&0xff800000) - rLPS; if (offset < rMPS) { RddV = AC_next_state_MPS_64[state]; fINSERT_RANGE(RddV,8,8,valMPS); fINSERT_RANGE(RddV,31,23,(rMPS>>23)); fSETWORD(1,RddV,offset); fWRITE_P0(valMPS); } else { RddV = AC_next_state_LPS_64[state]; fINSERT_RANGE(RddV,8,8,((!state)?(1-valMPS):(valMPS))); fINSERT_RANGE(RddV,31,23,(rLPS>>23)); fSETWORD(1,RddV,(offset-rMPS)); fWRITE_P0((valMPS^1)); } fHIDE(MARK_LATE_PRED_WRITE(0)) },
DEF_HELPER_3(S2_cabacdecbin, s64, env, s64, s64),
{
/* S2_cabacdecbin */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_S2_cabacdecbin(gen_helper_S2_cabacdecbin(RddV, cpu_env, RssV, RttV);,
{ fHIDE(size4u_t state;) fHIDE(size4u_t valMPS;) fHIDE(size4u_t bitpos;) fHIDE(size4u_t range;) fHIDE(size4u_t offset;) fHIDE(size4u_t rLPS;) fHIDE(size4u_t rMPS;) state = fEXTRACTU_RANGE( fGETWORD(1,RttV) ,5,0); valMPS = fEXTRACTU_RANGE( fGETWORD(1,RttV) ,8,8); bitpos = fEXTRACTU_RANGE( fGETWORD(0,RttV) ,4,0); range = fGETWORD(0,RssV); offset = fGETWORD(1,RssV); range <<= bitpos; offset <<= bitpos; rLPS = rLPS_table_64x4[state][ (range >>29)&3]; rLPS = rLPS << 23; rMPS= (range&0xff800000) - rLPS; if (offset < rMPS) { RddV = AC_next_state_MPS_64[state]; fINSERT_RANGE(RddV,8,8,valMPS); fINSERT_RANGE(RddV,31,23,(rMPS>>23)); fSETWORD(1,RddV,offset); fWRITE_P0(valMPS); } else { RddV = AC_next_state_LPS_64[state]; fINSERT_RANGE(RddV,8,8,((!state)?(1-valMPS):(valMPS))); fINSERT_RANGE(RddV,31,23,(rLPS>>23)); fSETWORD(1,RddV,(offset-rMPS)); fWRITE_P0((valMPS^1)); } fHIDE(MARK_LATE_PRED_WRITE(0)) })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
/* S2_cabacdecbin */
},
int64_t HELPER(S2_cabacdecbin)(CPUHexagonState *env, int64_t RssV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fHIDE(size4u_t state;) fHIDE(size4u_t valMPS;) fHIDE(size4u_t bitpos;) fHIDE(size4u_t range;) fHIDE(size4u_t offset;) fHIDE(size4u_t rLPS;) fHIDE(size4u_t rMPS;) state = fEXTRACTU_RANGE( fGETWORD(1,RttV) ,5,0); valMPS = fEXTRACTU_RANGE( fGETWORD(1,RttV) ,8,8); bitpos = fEXTRACTU_RANGE( fGETWORD(0,RttV) ,4,0); range = fGETWORD(0,RssV); offset = fGETWORD(1,RssV); range <<= bitpos; offset <<= bitpos; rLPS = rLPS_table_64x4[state][ (range >>29)&3]; rLPS = rLPS << 23; rMPS= (range&0xff800000) - rLPS; if (offset < rMPS) { RddV = AC_next_state_MPS_64[state]; fINSERT_RANGE(RddV,8,8,valMPS); fINSERT_RANGE(RddV,31,23,(rMPS>>23)); fSETWORD(1,RddV,offset); fWRITE_P0(valMPS); } else { RddV = AC_next_state_LPS_64[state]; fINSERT_RANGE(RddV,8,8,((!state)?(1-valMPS):(valMPS))); fINSERT_RANGE(RddV,31,23,(rLPS>>23)); fSETWORD(1,RddV,(offset-rMPS)); fWRITE_P0((valMPS^1)); } fHIDE(MARK_LATE_PRED_WRITE(0)) }
COUNT_HELPER(S2_cabacdecbin);
return RddV;
})
DEF_QEMU(S2_cabacencbin,{ fPREDUSE_TIMING(); fHIDE(size4u_t state;) fHIDE(size4u_t valMPS;) fHIDE(size4u_t bitpos;) fHIDE(size4u_t range;) fHIDE(size4u_t low;) fHIDE(size4u_t rLPS;) fHIDE(size4u_t rMPS;) fHIDE(size4u_t bin;) state = fEXTRACTU_RANGE( fGETWORD(1,RttV) ,5,0); valMPS = fEXTRACTU_RANGE( fGETWORD(1,RttV) ,8,8); bitpos = fEXTRACTU_RANGE( fGETWORD(0,RttV) ,4,0); range = fGETWORD(0,RssV); low = fGETWORD(1,RssV); bin = fLSBOLD(PuV); range <<= bitpos; range &= 0xFF800000U; rLPS = rLPS_table_64x4[state][(range>>29)&3]; rLPS = rLPS << 23; rMPS = range - rLPS; if (bin == valMPS) { RddV = AC_next_state_MPS_64[state]; fINSERT_RANGE(RddV,8,8,valMPS); fINSERT_RANGE(RddV,31,23,(rMPS>>23)); fSETWORD(1,RddV,low); } else { RddV = AC_next_state_LPS_64[state]; fINSERT_RANGE(RddV,8,8,((!state)?(1-valMPS):(valMPS))); fINSERT_RANGE(RddV,31,23,(rLPS>>23)); fSETWORD(1,RddV,(low+(rMPS >> bitpos))); } },
DEF_HELPER_4(S2_cabacencbin, s64, env, s64, s64, s32),
{
/* S2_cabacencbin */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
DECL_PREG_u(TCGv, PuV, PuN, 3, 0);
READ_RREG_PAIR(RssV, RssN);
READ_RREG_PAIR(RttV, RttN);
READ_PREG_u(PuV, PuN);
fWRAP_S2_cabacencbin(gen_helper_S2_cabacencbin(RddV, cpu_env, RssV, RttV, PuV);,
{ fPREDUSE_TIMING(); fHIDE(size4u_t state;) fHIDE(size4u_t valMPS;) fHIDE(size4u_t bitpos;) fHIDE(size4u_t range;) fHIDE(size4u_t low;) fHIDE(size4u_t rLPS;) fHIDE(size4u_t rMPS;) fHIDE(size4u_t bin;) state = fEXTRACTU_RANGE( fGETWORD(1,RttV) ,5,0); valMPS = fEXTRACTU_RANGE( fGETWORD(1,RttV) ,8,8); bitpos = fEXTRACTU_RANGE( fGETWORD(0,RttV) ,4,0); range = fGETWORD(0,RssV); low = fGETWORD(1,RssV); bin = fLSBOLD(PuV); range <<= bitpos; range &= 0xFF800000U; rLPS = rLPS_table_64x4[state][(range>>29)&3]; rLPS = rLPS << 23; rMPS = range - rLPS; if (bin == valMPS) { RddV = AC_next_state_MPS_64[state]; fINSERT_RANGE(RddV,8,8,valMPS); fINSERT_RANGE(RddV,31,23,(rMPS>>23)); fSETWORD(1,RddV,low); } else { RddV = AC_next_state_LPS_64[state]; fINSERT_RANGE(RddV,8,8,((!state)?(1-valMPS):(valMPS))); fINSERT_RANGE(RddV,31,23,(rLPS>>23)); fSETWORD(1,RddV,(low+(rMPS >> bitpos))); } })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
FREE_REG_PAIR(RttV);
FREE_REG_u(PuV);
/* S2_cabacencbin */
},
int64_t HELPER(S2_cabacencbin)(CPUHexagonState *env, int64_t RssV, int64_t RttV, int32_t PuV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fPREDUSE_TIMING(); fHIDE(size4u_t state;) fHIDE(size4u_t valMPS;) fHIDE(size4u_t bitpos;) fHIDE(size4u_t range;) fHIDE(size4u_t low;) fHIDE(size4u_t rLPS;) fHIDE(size4u_t rMPS;) fHIDE(size4u_t bin;) state = fEXTRACTU_RANGE( fGETWORD(1,RttV) ,5,0); valMPS = fEXTRACTU_RANGE( fGETWORD(1,RttV) ,8,8); bitpos = fEXTRACTU_RANGE( fGETWORD(0,RttV) ,4,0); range = fGETWORD(0,RssV); low = fGETWORD(1,RssV); bin = fLSBOLD(PuV); range <<= bitpos; range &= 0xFF800000U; rLPS = rLPS_table_64x4[state][(range>>29)&3]; rLPS = rLPS << 23; rMPS = range - rLPS; if (bin == valMPS) { RddV = AC_next_state_MPS_64[state]; fINSERT_RANGE(RddV,8,8,valMPS); fINSERT_RANGE(RddV,31,23,(rMPS>>23)); fSETWORD(1,RddV,low); } else { RddV = AC_next_state_LPS_64[state]; fINSERT_RANGE(RddV,8,8,((!state)?(1-valMPS):(valMPS))); fINSERT_RANGE(RddV,31,23,(rLPS>>23)); fSETWORD(1,RddV,(low+(rMPS >> bitpos))); } }
COUNT_HELPER(S2_cabacencbin);
return RddV;
})
DEF_QEMU(S2_clb,{RdV = fMAX(fCL1_4(RsV),fCL1_4(~RsV));},
DEF_HELPER_2(S2_clb, s32, env, s32),
{
/* S2_clb */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_clb(gen_helper_S2_clb(RdV, cpu_env, RsV);,
{RdV = fMAX(fCL1_4(RsV),fCL1_4(~RsV));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* S2_clb */
},
int32_t HELPER(S2_clb)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fMAX(fCL1_4(RsV),fCL1_4(~RsV));}
COUNT_HELPER(S2_clb);
return RdV;
})
DEF_QEMU(S2_cl0,{RdV = fCL1_4(~RsV);},
DEF_HELPER_2(S2_cl0, s32, env, s32),
{
/* S2_cl0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_cl0(gen_helper_S2_cl0(RdV, cpu_env, RsV);,
{RdV = fCL1_4(~RsV);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* S2_cl0 */
},
int32_t HELPER(S2_cl0)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fCL1_4(~RsV);}
COUNT_HELPER(S2_cl0);
return RdV;
})
DEF_QEMU(S2_cl1,{RdV = fCL1_4(RsV);},
DEF_HELPER_2(S2_cl1, s32, env, s32),
{
/* S2_cl1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_cl1(gen_helper_S2_cl1(RdV, cpu_env, RsV);,
{RdV = fCL1_4(RsV);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* S2_cl1 */
},
int32_t HELPER(S2_cl1)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fCL1_4(RsV);}
COUNT_HELPER(S2_cl1);
return RdV;
})
DEF_QEMU(S2_clbp,{RdV = fMAX(fCL1_8(RssV),fCL1_8(~RssV));},
DEF_HELPER_2(S2_clbp, s32, env, s64),
{
/* S2_clbp */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_clbp(gen_helper_S2_clbp(RdV, cpu_env, RssV);,
{RdV = fMAX(fCL1_8(RssV),fCL1_8(~RssV));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* S2_clbp */
},
int32_t HELPER(S2_clbp)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fMAX(fCL1_8(RssV),fCL1_8(~RssV));}
COUNT_HELPER(S2_clbp);
return RdV;
})
DEF_QEMU(S2_cl0p,{RdV = fCL1_8(~RssV);},
DEF_HELPER_2(S2_cl0p, s32, env, s64),
{
/* S2_cl0p */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_cl0p(gen_helper_S2_cl0p(RdV, cpu_env, RssV);,
{RdV = fCL1_8(~RssV);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* S2_cl0p */
},
int32_t HELPER(S2_cl0p)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fCL1_8(~RssV);}
COUNT_HELPER(S2_cl0p);
return RdV;
})
DEF_QEMU(S2_cl1p,{RdV = fCL1_8(RssV);},
DEF_HELPER_2(S2_cl1p, s32, env, s64),
{
/* S2_cl1p */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_cl1p(gen_helper_S2_cl1p(RdV, cpu_env, RssV);,
{RdV = fCL1_8(RssV);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* S2_cl1p */
},
int32_t HELPER(S2_cl1p)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fCL1_8(RssV);}
COUNT_HELPER(S2_cl1p);
return RdV;
})
DEF_QEMU(S2_brev,{RdV = fBREV_4(RsV);},
DEF_HELPER_2(S2_brev, s32, env, s32),
{
/* S2_brev */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_brev(gen_helper_S2_brev(RdV, cpu_env, RsV);,
{RdV = fBREV_4(RsV);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* S2_brev */
},
int32_t HELPER(S2_brev)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fBREV_4(RsV);}
COUNT_HELPER(S2_brev);
return RdV;
})
DEF_QEMU(S2_brevp,{RddV = fBREV_8(RssV);},
DEF_HELPER_2(S2_brevp, s64, env, s64),
{
/* S2_brevp */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_brevp(gen_helper_S2_brevp(RddV, cpu_env, RssV);,
{RddV = fBREV_8(RssV);})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* S2_brevp */
},
int64_t HELPER(S2_brevp)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV = fBREV_8(RssV);}
COUNT_HELPER(S2_brevp);
return RddV;
})
DEF_QEMU(S2_ct0,{RdV = fCL1_4(~fBREV_4(RsV));},
DEF_HELPER_2(S2_ct0, s32, env, s32),
{
/* S2_ct0 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_ct0(gen_helper_S2_ct0(RdV, cpu_env, RsV);,
{RdV = fCL1_4(~fBREV_4(RsV));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* S2_ct0 */
},
int32_t HELPER(S2_ct0)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fCL1_4(~fBREV_4(RsV));}
COUNT_HELPER(S2_ct0);
return RdV;
})
DEF_QEMU(S2_ct1,{RdV = fCL1_4(fBREV_4(RsV));},
DEF_HELPER_2(S2_ct1, s32, env, s32),
{
/* S2_ct1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_S2_ct1(gen_helper_S2_ct1(RdV, cpu_env, RsV);,
{RdV = fCL1_4(fBREV_4(RsV));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* S2_ct1 */
},
int32_t HELPER(S2_ct1)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fCL1_4(fBREV_4(RsV));}
COUNT_HELPER(S2_ct1);
return RdV;
})
DEF_QEMU(S2_ct0p,{RdV = fCL1_8(~fBREV_8(RssV));},
DEF_HELPER_2(S2_ct0p, s32, env, s64),
{
/* S2_ct0p */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_ct0p(gen_helper_S2_ct0p(RdV, cpu_env, RssV);,
{RdV = fCL1_8(~fBREV_8(RssV));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* S2_ct0p */
},
int32_t HELPER(S2_ct0p)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fCL1_8(~fBREV_8(RssV));}
COUNT_HELPER(S2_ct0p);
return RdV;
})
DEF_QEMU(S2_ct1p,{RdV = fCL1_8(fBREV_8(RssV));},
DEF_HELPER_2(S2_ct1p, s32, env, s64),
{
/* S2_ct1p */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_ct1p(gen_helper_S2_ct1p(RdV, cpu_env, RssV);,
{RdV = fCL1_8(fBREV_8(RssV));})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_PAIR(RssV);
/* S2_ct1p */
},
int32_t HELPER(S2_ct1p)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{RdV = fCL1_8(fBREV_8(RssV));}
COUNT_HELPER(S2_ct1p);
return RdV;
})
DEF_QEMU(S2_interleave,{RddV = fINTERLEAVE(fGETWORD(1,RssV),fGETWORD(0,RssV));},
DEF_HELPER_2(S2_interleave, s64, env, s64),
{
/* S2_interleave */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_interleave(gen_helper_S2_interleave(RddV, cpu_env, RssV);,
{RddV = fINTERLEAVE(fGETWORD(1,RssV),fGETWORD(0,RssV));})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* S2_interleave */
},
int64_t HELPER(S2_interleave)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV = fINTERLEAVE(fGETWORD(1,RssV),fGETWORD(0,RssV));}
COUNT_HELPER(S2_interleave);
return RddV;
})
DEF_QEMU(S2_deinterleave,{RddV = fDEINTERLEAVE(RssV);},
DEF_HELPER_2(S2_deinterleave, s64, env, s64),
{
/* S2_deinterleave */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_PAIR_ss(TCGv_i64, RssV, RssN, 1, 0);
READ_RREG_PAIR(RssV, RssN);
fWRAP_S2_deinterleave(gen_helper_S2_deinterleave(RddV, cpu_env, RssV);,
{RddV = fDEINTERLEAVE(RssV);})
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_PAIR(RssV);
/* S2_deinterleave */
},
int64_t HELPER(S2_deinterleave)(CPUHexagonState *env, int64_t RssV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{RddV = fDEINTERLEAVE(RssV);}
COUNT_HELPER(S2_deinterleave);
return RddV;
})
DEF_QEMU(J2_trap0,fTRAP(0,uiV);,
DEF_HELPER_2(J2_trap0, void, env, s32),
{
/* J2_trap0 */
DECL_IMM(uiV,0);
fWRAP_J2_trap0(gen_helper_J2_trap0(cpu_env, uiV);,
fTRAP(0,uiV);)
FREE_IMM(uiV);
/* J2_trap0 */
},
void HELPER(J2_trap0)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
fTRAP(0,uiV);
COUNT_HELPER(J2_trap0);
})
DEF_QEMU(J2_trap1,if (!fTRAP1_VIRTINSN(uiV)) { fTRAP(1,uiV); } else if (uiV == 1) { fVIRTINSN_RTE(uiV,RxV); } else if (uiV == 3) { fVIRTINSN_SETIE(uiV,RxV); } else if (uiV == 4) { fVIRTINSN_GETIE(uiV,RxV); } else if (uiV == 6) { fVIRTINSN_SPSWAP(uiV,RxV); },
DEF_HELPER_3(J2_trap1, s32, env, s32, s32),
{
/* J2_trap1 */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_IMM(uiV,0);
READ_RREG_x(RxV, RxN);
fWRAP_J2_trap1(gen_helper_J2_trap1(RxV, cpu_env, RxV, uiV);,
if (!fTRAP1_VIRTINSN(uiV)) { fTRAP(1,uiV); } else if (uiV == 1) { fVIRTINSN_RTE(uiV,RxV); } else if (uiV == 3) { fVIRTINSN_SETIE(uiV,RxV); } else if (uiV == 4) { fVIRTINSN_GETIE(uiV,RxV); } else if (uiV == 6) { fVIRTINSN_SPSWAP(uiV,RxV); })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_IMM(uiV);
/* J2_trap1 */
},
int32_t HELPER(J2_trap1)(CPUHexagonState *env, int32_t RxV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
if (!fTRAP1_VIRTINSN(uiV)) { fTRAP(1,uiV); } else if (uiV == 1) { fVIRTINSN_RTE(uiV,RxV); } else if (uiV == 3) { fVIRTINSN_SETIE(uiV,RxV); } else if (uiV == 4) { fVIRTINSN_GETIE(uiV,RxV); } else if (uiV == 6) { fVIRTINSN_SPSWAP(uiV,RxV); }
COUNT_HELPER(J2_trap1);
return RxV;
})
DEF_QEMU(J2_pause,{fPAUSE(uiV);},
DEF_HELPER_2(J2_pause, void, env, s32),
{
/* J2_pause */
DECL_IMM(uiV,0);
fWRAP_J2_pause(gen_helper_J2_pause(cpu_env, uiV);,
{fPAUSE(uiV);})
FREE_IMM(uiV);
/* J2_pause */
},
void HELPER(J2_pause)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{fPAUSE(uiV);}
COUNT_HELPER(J2_pause);
})
DEF_QEMU(Y4_trace,{ fDO_TRACE(RsV); },
DEF_HELPER_2(Y4_trace, void, env, s32),
{
/* Y4_trace */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
READ_RREG_s(RsV, RsN);
fWRAP_Y4_trace(gen_helper_Y4_trace(cpu_env, RsV);,
{ fDO_TRACE(RsV); })
FREE_REG_s(RsV);
/* Y4_trace */
},
void HELPER(Y4_trace)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
{ fDO_TRACE(RsV); }
COUNT_HELPER(Y4_trace);
})
DEF_QEMU(Y2_break,{fBREAK();},
DEF_HELPER_1(Y2_break, void, env),
{
/* Y2_break */
fWRAP_Y2_break(gen_helper_Y2_break(cpu_env);,
{fBREAK();})
/* Y2_break */
},
void HELPER(Y2_break)(CPUHexagonState *env)
{
uint32_t slot = 4; slot = slot;
{fBREAK();}
COUNT_HELPER(Y2_break);
})
DEF_QEMU(Y2_icinva,{fEA_REG(RsV); fICINVA(EA);},
DEF_HELPER_2(Y2_icinva, void, env, s32),
{
/* Y2_icinva */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
READ_RREG_s(RsV, RsN);
fWRAP_Y2_icinva(gen_helper_Y2_icinva(cpu_env, RsV);,
{fEA_REG(RsV); fICINVA(EA);})
FREE_EA;
FREE_REG_s(RsV);
/* Y2_icinva */
},
void HELPER(Y2_icinva)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
{fEA_REG(RsV); fICINVA(EA);}
COUNT_HELPER(Y2_icinva);
})
DEF_QEMU(Y2_isync,{fISYNC();},
DEF_HELPER_1(Y2_isync, void, env),
{
/* Y2_isync */
fWRAP_Y2_isync(gen_helper_Y2_isync(cpu_env);,
{fISYNC();})
/* Y2_isync */
},
void HELPER(Y2_isync)(CPUHexagonState *env)
{
uint32_t slot = 4; slot = slot;
{fISYNC();}
COUNT_HELPER(Y2_isync);
})
DEF_QEMU(Y2_barrier,{fBARRIER();},
DEF_HELPER_1(Y2_barrier, void, env),
{
/* Y2_barrier */
fWRAP_Y2_barrier(gen_helper_Y2_barrier(cpu_env);,
{fBARRIER();})
/* Y2_barrier */
},
void HELPER(Y2_barrier)(CPUHexagonState *env)
{
uint32_t slot = 4; slot = slot;
{fBARRIER();}
COUNT_HELPER(Y2_barrier);
})
DEF_QEMU(Y2_syncht,{fSYNCH();},
DEF_HELPER_1(Y2_syncht, void, env),
{
/* Y2_syncht */
fWRAP_Y2_syncht(gen_helper_Y2_syncht(cpu_env);,
{fSYNCH();})
/* Y2_syncht */
},
void HELPER(Y2_syncht)(CPUHexagonState *env)
{
uint32_t slot = 4; slot = slot;
{fSYNCH();}
COUNT_HELPER(Y2_syncht);
})
DEF_QEMU(Y2_dcfetchbo,{fEA_RI(RsV,uiV); fDCFETCH(EA);},
DEF_HELPER_3(Y2_dcfetchbo, void, env, s32, s32),
{
/* Y2_dcfetchbo */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_Y2_dcfetchbo(gen_helper_Y2_dcfetchbo(cpu_env, RsV, uiV);,
{fEA_RI(RsV,uiV); fDCFETCH(EA);})
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* Y2_dcfetchbo */
},
void HELPER(Y2_dcfetchbo)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
{fEA_RI(RsV,uiV); fDCFETCH(EA);}
COUNT_HELPER(Y2_dcfetchbo);
})
DEF_QEMU(Y2_dczeroa,{fEA_REG(RsV); fDCZEROA(EA);},
DEF_HELPER_3(Y2_dczeroa, void, env, s32, i32),
{
/* Y2_dczeroa */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
READ_RREG_s(RsV, RsN);
fWRAP_Y2_dczeroa(SLOT_WRAP(gen_helper_Y2_dczeroa(cpu_env, RsV, slot));,
{fEA_REG(RsV); fDCZEROA(EA);})
FREE_EA;
FREE_REG_s(RsV);
/* Y2_dczeroa */
},
void HELPER(Y2_dczeroa)(CPUHexagonState *env, int32_t RsV, uint32_t slot)
{
size4u_t EA;
{fEA_REG(RsV); fDCZEROA(EA);}
COUNT_HELPER(Y2_dczeroa);
})
DEF_QEMU(Y2_dccleana,{fEA_REG(RsV); fDCCLEANA(EA);},
DEF_HELPER_2(Y2_dccleana, void, env, s32),
{
/* Y2_dccleana */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
READ_RREG_s(RsV, RsN);
fWRAP_Y2_dccleana(gen_helper_Y2_dccleana(cpu_env, RsV);,
{fEA_REG(RsV); fDCCLEANA(EA);})
FREE_EA;
FREE_REG_s(RsV);
/* Y2_dccleana */
},
void HELPER(Y2_dccleana)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
{fEA_REG(RsV); fDCCLEANA(EA);}
COUNT_HELPER(Y2_dccleana);
})
DEF_QEMU(Y2_dccleaninva,{fEA_REG(RsV); fDCCLEANINVA(EA);},
DEF_HELPER_2(Y2_dccleaninva, void, env, s32),
{
/* Y2_dccleaninva */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
READ_RREG_s(RsV, RsN);
fWRAP_Y2_dccleaninva(gen_helper_Y2_dccleaninva(cpu_env, RsV);,
{fEA_REG(RsV); fDCCLEANINVA(EA);})
FREE_EA;
FREE_REG_s(RsV);
/* Y2_dccleaninva */
},
void HELPER(Y2_dccleaninva)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
{fEA_REG(RsV); fDCCLEANINVA(EA);}
COUNT_HELPER(Y2_dccleaninva);
})
DEF_QEMU(Y2_dcinva,{fEA_REG(RsV); fDCCLEANINVA(EA);},
DEF_HELPER_2(Y2_dcinva, void, env, s32),
{
/* Y2_dcinva */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
READ_RREG_s(RsV, RsN);
fWRAP_Y2_dcinva(gen_helper_Y2_dcinva(cpu_env, RsV);,
{fEA_REG(RsV); fDCCLEANINVA(EA);})
FREE_EA;
FREE_REG_s(RsV);
/* Y2_dcinva */
},
void HELPER(Y2_dcinva)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
{fEA_REG(RsV); fDCCLEANINVA(EA);}
COUNT_HELPER(Y2_dcinva);
})
DEF_QEMU(Y4_l2fetch,{ fL2FETCH(RsV, (RtV&0xff), ((RtV>>8)&0xff), ((RtV>>16)&0xffff), 0); },
DEF_HELPER_3(Y4_l2fetch, void, env, s32, s32),
{
/* Y4_l2fetch */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_Y4_l2fetch(gen_helper_Y4_l2fetch(cpu_env, RsV, RtV);,
{ fL2FETCH(RsV, (RtV&0xff), ((RtV>>8)&0xff), ((RtV>>16)&0xffff), 0); })
FREE_REG_s(RsV);
FREE_REG_t(RtV);
/* Y4_l2fetch */
},
void HELPER(Y4_l2fetch)(CPUHexagonState *env, int32_t RsV, int32_t RtV)
{
uint32_t slot = 4; slot = slot;
{ fL2FETCH(RsV, (RtV&0xff), ((RtV>>8)&0xff), ((RtV>>16)&0xffff), 0); }
COUNT_HELPER(Y4_l2fetch);
})
DEF_QEMU(Y5_l2fetch,{ fL2FETCH(RsV, fGETUHALF(0,RttV), fGETUHALF(1,RttV), fGETUHALF(2,RttV), fGETUHALF(3,RttV)); },
DEF_HELPER_3(Y5_l2fetch, void, env, s32, s64),
{
/* Y5_l2fetch */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 1, 0);
READ_RREG_s(RsV, RsN);
READ_RREG_PAIR(RttV, RttN);
fWRAP_Y5_l2fetch(gen_helper_Y5_l2fetch(cpu_env, RsV, RttV);,
{ fL2FETCH(RsV, fGETUHALF(0,RttV), fGETUHALF(1,RttV), fGETUHALF(2,RttV), fGETUHALF(3,RttV)); })
FREE_REG_s(RsV);
FREE_REG_PAIR(RttV);
/* Y5_l2fetch */
},
void HELPER(Y5_l2fetch)(CPUHexagonState *env, int32_t RsV, int64_t RttV)
{
uint32_t slot = 4; slot = slot;
{ fL2FETCH(RsV, fGETUHALF(0,RttV), fGETUHALF(1,RttV), fGETUHALF(2,RttV), fGETUHALF(3,RttV)); }
COUNT_HELPER(Y5_l2fetch);
})
DEF_QEMU(SA1_addi,{ fIMMEXT(siV); RxV=RxV+siV;},
DEF_HELPER_3(SA1_addi, s32, env, s32, s32),
{
/* SA1_addi */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_SA1_addi(gen_helper_SA1_addi(RxV, cpu_env, RxV, siV);,
{ fIMMEXT(siV); RxV=RxV+siV;})
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* SA1_addi */
},
int32_t HELPER(SA1_addi)(CPUHexagonState *env, int32_t RxV, int32_t siV)
{
uint32_t slot = 4; slot = slot;
{ fIMMEXT(siV); RxV=RxV+siV;}
COUNT_HELPER(SA1_addi);
return RxV;
})
DEF_QEMU(SA1_tfr,{ RdV=RsV;},
DEF_HELPER_2(SA1_tfr, s32, env, s32),
{
/* SA1_tfr */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_SA1_tfr(gen_helper_SA1_tfr(RdV, cpu_env, RsV);,
{ RdV=RsV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* SA1_tfr */
},
int32_t HELPER(SA1_tfr)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=RsV;}
COUNT_HELPER(SA1_tfr);
return RdV;
})
DEF_QEMU(SA1_seti,{ fIMMEXT(uiV); RdV=uiV;},
DEF_HELPER_2(SA1_seti, s32, env, s32),
{
/* SA1_seti */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_SA1_seti(gen_helper_SA1_seti(RdV, cpu_env, uiV);,
{ fIMMEXT(uiV); RdV=uiV;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* SA1_seti */
},
int32_t HELPER(SA1_seti)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ fIMMEXT(uiV); RdV=uiV;}
COUNT_HELPER(SA1_seti);
return RdV;
})
DEF_QEMU(SA1_setin1,{ RdV=-1;},
DEF_HELPER_1(SA1_setin1, s32, env),
{
/* SA1_setin1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
fWRAP_SA1_setin1(gen_helper_SA1_setin1(RdV, cpu_env);,
{ RdV=-1;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
/* SA1_setin1 */
},
int32_t HELPER(SA1_setin1)(CPUHexagonState *env)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=-1;}
COUNT_HELPER(SA1_setin1);
return RdV;
})
DEF_QEMU(SA1_clrtnew,{ if (fLSBNEW0) {RdV=0;} else {CANCEL;} },
DEF_HELPER_2(SA1_clrtnew, s32, env, i32),
{
/* SA1_clrtnew */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
fWRAP_SA1_clrtnew(SLOT_WRAP(gen_helper_SA1_clrtnew(RdV, cpu_env, slot));,
{ if (fLSBNEW0) {RdV=0;} else {CANCEL;} })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
/* SA1_clrtnew */
},
int32_t HELPER(SA1_clrtnew)(CPUHexagonState *env, uint32_t slot)
{
int32_t RdV = 0;
{ if (fLSBNEW0) {RdV=0;} else {CANCEL;} }
COUNT_HELPER(SA1_clrtnew);
return RdV;
})
DEF_QEMU(SA1_clrfnew,{ if (fLSBNEW0NOT) {RdV=0;} else {CANCEL;} },
DEF_HELPER_2(SA1_clrfnew, s32, env, i32),
{
/* SA1_clrfnew */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
fWRAP_SA1_clrfnew(SLOT_WRAP(gen_helper_SA1_clrfnew(RdV, cpu_env, slot));,
{ if (fLSBNEW0NOT) {RdV=0;} else {CANCEL;} })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
/* SA1_clrfnew */
},
int32_t HELPER(SA1_clrfnew)(CPUHexagonState *env, uint32_t slot)
{
int32_t RdV = 0;
{ if (fLSBNEW0NOT) {RdV=0;} else {CANCEL;} }
COUNT_HELPER(SA1_clrfnew);
return RdV;
})
DEF_QEMU(SA1_clrt,{ if (fLSBOLD(fREAD_P0())) {RdV=0;} else {CANCEL;} },
DEF_HELPER_2(SA1_clrt, s32, env, i32),
{
/* SA1_clrt */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
fWRAP_SA1_clrt(SLOT_WRAP(gen_helper_SA1_clrt(RdV, cpu_env, slot));,
{ if (fLSBOLD(fREAD_P0())) {RdV=0;} else {CANCEL;} })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
/* SA1_clrt */
},
int32_t HELPER(SA1_clrt)(CPUHexagonState *env, uint32_t slot)
{
int32_t RdV = 0;
{ if (fLSBOLD(fREAD_P0())) {RdV=0;} else {CANCEL;} }
COUNT_HELPER(SA1_clrt);
return RdV;
})
DEF_QEMU(SA1_clrf,{ if (fLSBOLDNOT(fREAD_P0())) {RdV=0;} else {CANCEL;} },
DEF_HELPER_2(SA1_clrf, s32, env, i32),
{
/* SA1_clrf */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
fWRAP_SA1_clrf(SLOT_WRAP(gen_helper_SA1_clrf(RdV, cpu_env, slot));,
{ if (fLSBOLDNOT(fREAD_P0())) {RdV=0;} else {CANCEL;} })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
/* SA1_clrf */
},
int32_t HELPER(SA1_clrf)(CPUHexagonState *env, uint32_t slot)
{
int32_t RdV = 0;
{ if (fLSBOLDNOT(fREAD_P0())) {RdV=0;} else {CANCEL;} }
COUNT_HELPER(SA1_clrf);
return RdV;
})
DEF_QEMU(SA1_addsp,{ RdV=fREAD_SP()+uiV; },
DEF_HELPER_2(SA1_addsp, s32, env, s32),
{
/* SA1_addsp */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_SA1_addsp(gen_helper_SA1_addsp(RdV, cpu_env, uiV);,
{ RdV=fREAD_SP()+uiV; })
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* SA1_addsp */
},
int32_t HELPER(SA1_addsp)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=fREAD_SP()+uiV; }
COUNT_HELPER(SA1_addsp);
return RdV;
})
DEF_QEMU(SA1_inc,{ RdV=RsV+1;},
DEF_HELPER_2(SA1_inc, s32, env, s32),
{
/* SA1_inc */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_SA1_inc(gen_helper_SA1_inc(RdV, cpu_env, RsV);,
{ RdV=RsV+1;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* SA1_inc */
},
int32_t HELPER(SA1_inc)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=RsV+1;}
COUNT_HELPER(SA1_inc);
return RdV;
})
DEF_QEMU(SA1_dec,{ RdV=RsV-1;},
DEF_HELPER_2(SA1_dec, s32, env, s32),
{
/* SA1_dec */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_SA1_dec(gen_helper_SA1_dec(RdV, cpu_env, RsV);,
{ RdV=RsV-1;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* SA1_dec */
},
int32_t HELPER(SA1_dec)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV=RsV-1;}
COUNT_HELPER(SA1_dec);
return RdV;
})
DEF_QEMU(SA1_addrx,{ RxV=RxV+RsV; },
DEF_HELPER_3(SA1_addrx, s32, env, s32, s32),
{
/* SA1_addrx */
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_x(RxV, RxN);
READ_RREG_s(RsV, RsN);
fWRAP_SA1_addrx(gen_helper_SA1_addrx(RxV, cpu_env, RxV, RsV);,
{ RxV=RxV+RsV; })
WRITE_RREG(RxN,RxV);
FREE_REG_x(RxV);
FREE_REG_s(RsV);
/* SA1_addrx */
},
int32_t HELPER(SA1_addrx)(CPUHexagonState *env, int32_t RxV, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
{ RxV=RxV+RsV; }
COUNT_HELPER(SA1_addrx);
return RxV;
})
DEF_QEMU(SA1_zxtb,{ RdV= fZXTN(8,32,RsV);},
DEF_HELPER_2(SA1_zxtb, s32, env, s32),
{
/* SA1_zxtb */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_SA1_zxtb(gen_helper_SA1_zxtb(RdV, cpu_env, RsV);,
{ RdV= fZXTN(8,32,RsV);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* SA1_zxtb */
},
int32_t HELPER(SA1_zxtb)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV= fZXTN(8,32,RsV);}
COUNT_HELPER(SA1_zxtb);
return RdV;
})
DEF_QEMU(SA1_and1,{ RdV= RsV&1;},
DEF_HELPER_2(SA1_and1, s32, env, s32),
{
/* SA1_and1 */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_SA1_and1(gen_helper_SA1_and1(RdV, cpu_env, RsV);,
{ RdV= RsV&1;})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* SA1_and1 */
},
int32_t HELPER(SA1_and1)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV= RsV&1;}
COUNT_HELPER(SA1_and1);
return RdV;
})
DEF_QEMU(SA1_sxtb,{ RdV= fSXTN(8,32,RsV);},
DEF_HELPER_2(SA1_sxtb, s32, env, s32),
{
/* SA1_sxtb */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_SA1_sxtb(gen_helper_SA1_sxtb(RdV, cpu_env, RsV);,
{ RdV= fSXTN(8,32,RsV);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* SA1_sxtb */
},
int32_t HELPER(SA1_sxtb)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV= fSXTN(8,32,RsV);}
COUNT_HELPER(SA1_sxtb);
return RdV;
})
DEF_QEMU(SA1_zxth,{ RdV= fZXTN(16,32,RsV);},
DEF_HELPER_2(SA1_zxth, s32, env, s32),
{
/* SA1_zxth */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_SA1_zxth(gen_helper_SA1_zxth(RdV, cpu_env, RsV);,
{ RdV= fZXTN(16,32,RsV);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* SA1_zxth */
},
int32_t HELPER(SA1_zxth)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV= fZXTN(16,32,RsV);}
COUNT_HELPER(SA1_zxth);
return RdV;
})
DEF_QEMU(SA1_sxth,{ RdV= fSXTN(16,32,RsV);},
DEF_HELPER_2(SA1_sxth, s32, env, s32),
{
/* SA1_sxth */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_SA1_sxth(gen_helper_SA1_sxth(RdV, cpu_env, RsV);,
{ RdV= fSXTN(16,32,RsV);})
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_REG_s(RsV);
/* SA1_sxth */
},
int32_t HELPER(SA1_sxth)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int32_t RdV = 0;
{ RdV= fSXTN(16,32,RsV);}
COUNT_HELPER(SA1_sxth);
return RdV;
})
DEF_QEMU(SA1_combinezr,{ fSETWORD(0,RddV,RsV); fSETWORD(1,RddV,0); },
DEF_HELPER_2(SA1_combinezr, s64, env, s32),
{
/* SA1_combinezr */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_SA1_combinezr(gen_helper_SA1_combinezr(RddV, cpu_env, RsV);,
{ fSETWORD(0,RddV,RsV); fSETWORD(1,RddV,0); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* SA1_combinezr */
},
int64_t HELPER(SA1_combinezr)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,RsV); fSETWORD(1,RddV,0); }
COUNT_HELPER(SA1_combinezr);
return RddV;
})
DEF_QEMU(SA1_combinerz,{ fSETWORD(0,RddV,0); fSETWORD(1,RddV,RsV); },
DEF_HELPER_2(SA1_combinerz, s64, env, s32),
{
/* SA1_combinerz */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
READ_RREG_s(RsV, RsN);
fWRAP_SA1_combinerz(gen_helper_SA1_combinerz(RddV, cpu_env, RsV);,
{ fSETWORD(0,RddV,0); fSETWORD(1,RddV,RsV); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_REG_s(RsV);
/* SA1_combinerz */
},
int64_t HELPER(SA1_combinerz)(CPUHexagonState *env, int32_t RsV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,0); fSETWORD(1,RddV,RsV); }
COUNT_HELPER(SA1_combinerz);
return RddV;
})
DEF_QEMU(SA1_combine0i,{ fSETWORD(0,RddV,uiV); fSETWORD(1,RddV,0); },
DEF_HELPER_2(SA1_combine0i, s64, env, s32),
{
/* SA1_combine0i */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_SA1_combine0i(gen_helper_SA1_combine0i(RddV, cpu_env, uiV);,
{ fSETWORD(0,RddV,uiV); fSETWORD(1,RddV,0); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_IMM(uiV);
/* SA1_combine0i */
},
int64_t HELPER(SA1_combine0i)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,uiV); fSETWORD(1,RddV,0); }
COUNT_HELPER(SA1_combine0i);
return RddV;
})
DEF_QEMU(SA1_combine1i,{ fSETWORD(0,RddV,uiV); fSETWORD(1,RddV,1); },
DEF_HELPER_2(SA1_combine1i, s64, env, s32),
{
/* SA1_combine1i */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_SA1_combine1i(gen_helper_SA1_combine1i(RddV, cpu_env, uiV);,
{ fSETWORD(0,RddV,uiV); fSETWORD(1,RddV,1); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_IMM(uiV);
/* SA1_combine1i */
},
int64_t HELPER(SA1_combine1i)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,uiV); fSETWORD(1,RddV,1); }
COUNT_HELPER(SA1_combine1i);
return RddV;
})
DEF_QEMU(SA1_combine2i,{ fSETWORD(0,RddV,uiV); fSETWORD(1,RddV,2); },
DEF_HELPER_2(SA1_combine2i, s64, env, s32),
{
/* SA1_combine2i */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_SA1_combine2i(gen_helper_SA1_combine2i(RddV, cpu_env, uiV);,
{ fSETWORD(0,RddV,uiV); fSETWORD(1,RddV,2); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_IMM(uiV);
/* SA1_combine2i */
},
int64_t HELPER(SA1_combine2i)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,uiV); fSETWORD(1,RddV,2); }
COUNT_HELPER(SA1_combine2i);
return RddV;
})
DEF_QEMU(SA1_combine3i,{ fSETWORD(0,RddV,uiV); fSETWORD(1,RddV,3); },
DEF_HELPER_2(SA1_combine3i, s64, env, s32),
{
/* SA1_combine3i */
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_SA1_combine3i(gen_helper_SA1_combine3i(RddV, cpu_env, uiV);,
{ fSETWORD(0,RddV,uiV); fSETWORD(1,RddV,3); })
WRITE_RREG_PAIR(RddN,RddV);
FREE_REG_PAIR(RddV);
FREE_IMM(uiV);
/* SA1_combine3i */
},
int64_t HELPER(SA1_combine3i)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
int64_t RddV = 0;
{ fSETWORD(0,RddV,uiV); fSETWORD(1,RddV,3); }
COUNT_HELPER(SA1_combine3i);
return RddV;
})
DEF_QEMU(SA1_cmpeqi,{fWRITE_P0(f8BITSOF(RsV==uiV));},
DEF_HELPER_3(SA1_cmpeqi, void, env, s32, s32),
{
/* SA1_cmpeqi */
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_SA1_cmpeqi(gen_helper_SA1_cmpeqi(cpu_env, RsV, uiV);,
{fWRITE_P0(f8BITSOF(RsV==uiV));})
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* SA1_cmpeqi */
},
void HELPER(SA1_cmpeqi)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
{fWRITE_P0(f8BITSOF(RsV==uiV));}
COUNT_HELPER(SA1_cmpeqi);
})
DEF_QEMU(SL1_loadri_io,{fEA_RI(RsV,uiV); fLOAD(1,4,u,EA,RdV);},
DEF_HELPER_3(SL1_loadri_io, s32, env, s32, s32),
{
/* SL1_loadri_io */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_SL1_loadri_io(gen_helper_SL1_loadri_io(RdV, cpu_env, RsV, uiV);,
{fEA_RI(RsV,uiV); fLOAD(1,4,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* SL1_loadri_io */
},
int32_t HELPER(SL1_loadri_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fEA_RI(RsV,uiV); fLOAD(1,4,u,EA,RdV);}
COUNT_HELPER(SL1_loadri_io);
return RdV;
})
DEF_QEMU(SL1_loadrub_io,{fEA_RI(RsV,uiV); fLOAD(1,1,u,EA,RdV);},
DEF_HELPER_3(SL1_loadrub_io, s32, env, s32, s32),
{
/* SL1_loadrub_io */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_SL1_loadrub_io(gen_helper_SL1_loadrub_io(RdV, cpu_env, RsV, uiV);,
{fEA_RI(RsV,uiV); fLOAD(1,1,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* SL1_loadrub_io */
},
int32_t HELPER(SL1_loadrub_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fEA_RI(RsV,uiV); fLOAD(1,1,u,EA,RdV);}
COUNT_HELPER(SL1_loadrub_io);
return RdV;
})
DEF_QEMU(SL2_loadrh_io,{fEA_RI(RsV,uiV); fLOAD(1,2,s,EA,RdV);},
DEF_HELPER_3(SL2_loadrh_io, s32, env, s32, s32),
{
/* SL2_loadrh_io */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_SL2_loadrh_io(gen_helper_SL2_loadrh_io(RdV, cpu_env, RsV, uiV);,
{fEA_RI(RsV,uiV); fLOAD(1,2,s,EA,RdV);})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* SL2_loadrh_io */
},
int32_t HELPER(SL2_loadrh_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fEA_RI(RsV,uiV); fLOAD(1,2,s,EA,RdV);}
COUNT_HELPER(SL2_loadrh_io);
return RdV;
})
DEF_QEMU(SL2_loadruh_io,{fEA_RI(RsV,uiV); fLOAD(1,2,u,EA,RdV);},
DEF_HELPER_3(SL2_loadruh_io, s32, env, s32, s32),
{
/* SL2_loadruh_io */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_SL2_loadruh_io(gen_helper_SL2_loadruh_io(RdV, cpu_env, RsV, uiV);,
{fEA_RI(RsV,uiV); fLOAD(1,2,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* SL2_loadruh_io */
},
int32_t HELPER(SL2_loadruh_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fEA_RI(RsV,uiV); fLOAD(1,2,u,EA,RdV);}
COUNT_HELPER(SL2_loadruh_io);
return RdV;
})
DEF_QEMU(SL2_loadrb_io,{fEA_RI(RsV,uiV); fLOAD(1,1,s,EA,RdV);},
DEF_HELPER_3(SL2_loadrb_io, s32, env, s32, s32),
{
/* SL2_loadrb_io */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_RREG_s(TCGv, RsV, RsN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_SL2_loadrb_io(gen_helper_SL2_loadrb_io(RdV, cpu_env, RsV, uiV);,
{fEA_RI(RsV,uiV); fLOAD(1,1,s,EA,RdV);})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* SL2_loadrb_io */
},
int32_t HELPER(SL2_loadrb_io)(CPUHexagonState *env, int32_t RsV, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fEA_RI(RsV,uiV); fLOAD(1,1,s,EA,RdV);}
COUNT_HELPER(SL2_loadrb_io);
return RdV;
})
DEF_QEMU(SL2_loadri_sp,{fEA_RI(fREAD_SP(),uiV); fLOAD(1,4,u,EA,RdV);},
DEF_HELPER_2(SL2_loadri_sp, s32, env, s32),
{
/* SL2_loadri_sp */
DECL_EA;
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_SL2_loadri_sp(gen_helper_SL2_loadri_sp(RdV, cpu_env, uiV);,
{fEA_RI(fREAD_SP(),uiV); fLOAD(1,4,u,EA,RdV);})
WRITE_RREG(RdN,RdV);
FREE_EA;
FREE_REG_d(RdV);
FREE_IMM(uiV);
/* SL2_loadri_sp */
},
int32_t HELPER(SL2_loadri_sp)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int32_t RdV = 0;
{fEA_RI(fREAD_SP(),uiV); fLOAD(1,4,u,EA,RdV);}
COUNT_HELPER(SL2_loadri_sp);
return RdV;
})
DEF_QEMU(SL2_loadrd_sp,{fEA_RI(fREAD_SP(),uiV); fLOAD(1,8,u,EA,RddV);},
DEF_HELPER_2(SL2_loadrd_sp, s64, env, s32),
{
/* SL2_loadrd_sp */
DECL_EA;
DECL_PAIR_dd(TCGv_i64, RddV, RddN, 0, 0);
DECL_IMM(uiV,0);
fWRAP_SL2_loadrd_sp(gen_helper_SL2_loadrd_sp(RddV, cpu_env, uiV);,
{fEA_RI(fREAD_SP(),uiV); fLOAD(1,8,u,EA,RddV);})
WRITE_RREG_PAIR(RddN,RddV);
FREE_EA;
FREE_REG_PAIR(RddV);
FREE_IMM(uiV);
/* SL2_loadrd_sp */
},
int64_t HELPER(SL2_loadrd_sp)(CPUHexagonState *env, int32_t uiV)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
int64_t RddV = 0;
{fEA_RI(fREAD_SP(),uiV); fLOAD(1,8,u,EA,RddV);}
COUNT_HELPER(SL2_loadrd_sp);
return RddV;
})
DEF_QEMU(SL2_deallocframe,{ fHIDE(size8u_t tmp;) fEA_REG(fREAD_FP()); fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); },
DEF_HELPER_1(SL2_deallocframe, void, env),
{
/* SL2_deallocframe */
DECL_EA;
fWRAP_SL2_deallocframe(gen_helper_SL2_deallocframe(cpu_env);,
{ fHIDE(size8u_t tmp;) fEA_REG(fREAD_FP()); fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); })
FREE_EA;
/* SL2_deallocframe */
},
void HELPER(SL2_deallocframe)(CPUHexagonState *env)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
{ fHIDE(size8u_t tmp;) fEA_REG(fREAD_FP()); fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); }
COUNT_HELPER(SL2_deallocframe);
})
DEF_QEMU(SL2_return,{ fHIDE(size8u_t tmp;) fEA_REG(fREAD_FP()); fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,tmp),COF_TYPE_JUMPR);},
DEF_HELPER_1(SL2_return, void, env),
{
/* SL2_return */
DECL_EA;
fWRAP_SL2_return(gen_helper_SL2_return(cpu_env);,
{ fHIDE(size8u_t tmp;) fEA_REG(fREAD_FP()); fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,tmp),COF_TYPE_JUMPR);})
FREE_EA;
/* SL2_return */
},
void HELPER(SL2_return)(CPUHexagonState *env)
{
uint32_t slot = 4; slot = slot;
size4u_t EA;
{ fHIDE(size8u_t tmp;) fEA_REG(fREAD_FP()); fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,tmp),COF_TYPE_JUMPR);}
COUNT_HELPER(SL2_return);
})
DEF_QEMU(SL2_return_t,{ fHIDE(size8u_t tmp;); fBRANCH_SPECULATE_STALL(fLSBOLD(fREAD_P0()),, SPECULATE_NOT_TAKEN,4,0); fEA_REG(fREAD_FP()); if (fLSBOLD(fREAD_P0())) { fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,tmp),COF_TYPE_JUMPR);} else {LOAD_CANCEL(EA);} },
DEF_HELPER_2(SL2_return_t, void, env, i32),
{
/* SL2_return_t */
DECL_EA;
fWRAP_SL2_return_t(SLOT_WRAP(gen_helper_SL2_return_t(cpu_env, slot));,
{ fHIDE(size8u_t tmp;); fBRANCH_SPECULATE_STALL(fLSBOLD(fREAD_P0()),, SPECULATE_NOT_TAKEN,4,0); fEA_REG(fREAD_FP()); if (fLSBOLD(fREAD_P0())) { fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,tmp),COF_TYPE_JUMPR);} else {LOAD_CANCEL(EA);} })
FREE_EA;
/* SL2_return_t */
},
void HELPER(SL2_return_t)(CPUHexagonState *env, uint32_t slot)
{
size4u_t EA;
{ fHIDE(size8u_t tmp;); fBRANCH_SPECULATE_STALL(fLSBOLD(fREAD_P0()),, SPECULATE_NOT_TAKEN,4,0); fEA_REG(fREAD_FP()); if (fLSBOLD(fREAD_P0())) { fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,tmp),COF_TYPE_JUMPR);} else {LOAD_CANCEL(EA);} }
COUNT_HELPER(SL2_return_t);
})
DEF_QEMU(SL2_return_f,{ fHIDE(size8u_t tmp;);fBRANCH_SPECULATE_STALL(fLSBOLDNOT(fREAD_P0()),, SPECULATE_NOT_TAKEN,4,0); fEA_REG(fREAD_FP()); if (fLSBOLDNOT(fREAD_P0())) { fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,tmp),COF_TYPE_JUMPR);} else {LOAD_CANCEL(EA);} },
DEF_HELPER_2(SL2_return_f, void, env, i32),
{
/* SL2_return_f */
DECL_EA;
fWRAP_SL2_return_f(SLOT_WRAP(gen_helper_SL2_return_f(cpu_env, slot));,
{ fHIDE(size8u_t tmp;);fBRANCH_SPECULATE_STALL(fLSBOLDNOT(fREAD_P0()),, SPECULATE_NOT_TAKEN,4,0); fEA_REG(fREAD_FP()); if (fLSBOLDNOT(fREAD_P0())) { fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,tmp),COF_TYPE_JUMPR);} else {LOAD_CANCEL(EA);} })
FREE_EA;
/* SL2_return_f */
},
void HELPER(SL2_return_f)(CPUHexagonState *env, uint32_t slot)
{
size4u_t EA;
{ fHIDE(size8u_t tmp;);fBRANCH_SPECULATE_STALL(fLSBOLDNOT(fREAD_P0()),, SPECULATE_NOT_TAKEN,4,0); fEA_REG(fREAD_FP()); if (fLSBOLDNOT(fREAD_P0())) { fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,tmp),COF_TYPE_JUMPR);} else {LOAD_CANCEL(EA);} }
COUNT_HELPER(SL2_return_f);
})
DEF_QEMU(SL2_return_tnew,{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEW0,, SPECULATE_NOT_TAKEN , 4,3); fEA_REG(fREAD_FP()); if (fLSBNEW0) { fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,tmp),COF_TYPE_JUMPR);} else {LOAD_CANCEL(EA);} },
DEF_HELPER_2(SL2_return_tnew, void, env, i32),
{
/* SL2_return_tnew */
DECL_EA;
fWRAP_SL2_return_tnew(SLOT_WRAP(gen_helper_SL2_return_tnew(cpu_env, slot));,
{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEW0,, SPECULATE_NOT_TAKEN , 4,3); fEA_REG(fREAD_FP()); if (fLSBNEW0) { fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,tmp),COF_TYPE_JUMPR);} else {LOAD_CANCEL(EA);} })
FREE_EA;
/* SL2_return_tnew */
},
void HELPER(SL2_return_tnew)(CPUHexagonState *env, uint32_t slot)
{
size4u_t EA;
{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEW0,, SPECULATE_NOT_TAKEN , 4,3); fEA_REG(fREAD_FP()); if (fLSBNEW0) { fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,tmp),COF_TYPE_JUMPR);} else {LOAD_CANCEL(EA);} }
COUNT_HELPER(SL2_return_tnew);
})
DEF_QEMU(SL2_return_fnew,{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,, SPECULATE_NOT_TAKEN , 4,3); fEA_REG(fREAD_FP()); if (fLSBNEW0NOT) { fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,tmp),COF_TYPE_JUMPR);} else {LOAD_CANCEL(EA);} },
DEF_HELPER_2(SL2_return_fnew, void, env, i32),
{
/* SL2_return_fnew */
DECL_EA;
fWRAP_SL2_return_fnew(SLOT_WRAP(gen_helper_SL2_return_fnew(cpu_env, slot));,
{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,, SPECULATE_NOT_TAKEN , 4,3); fEA_REG(fREAD_FP()); if (fLSBNEW0NOT) { fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,tmp),COF_TYPE_JUMPR);} else {LOAD_CANCEL(EA);} })
FREE_EA;
/* SL2_return_fnew */
},
void HELPER(SL2_return_fnew)(CPUHexagonState *env, uint32_t slot)
{
size4u_t EA;
{ fHIDE(size8u_t tmp;) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,, SPECULATE_NOT_TAKEN , 4,3); fEA_REG(fREAD_FP()); if (fLSBNEW0NOT) { fLOAD(1,8,u,EA,tmp); tmp = fFRAME_UNSCRAMBLE(tmp); fWRITE_LR(fGETWORD(1,tmp)); fWRITE_FP(fGETWORD(0,tmp)); fWRITE_SP(EA+8); fJUMPR(REG_LR,fGETWORD(1,tmp),COF_TYPE_JUMPR);} else {LOAD_CANCEL(EA);} }
COUNT_HELPER(SL2_return_fnew);
})
DEF_QEMU(SL2_jumpr31,{ fJUMPR(REG_LR,fREAD_LR(),COF_TYPE_JUMPR);},
DEF_HELPER_1(SL2_jumpr31, void, env),
{
/* SL2_jumpr31 */
fWRAP_SL2_jumpr31(gen_helper_SL2_jumpr31(cpu_env);,
{ fJUMPR(REG_LR,fREAD_LR(),COF_TYPE_JUMPR);})
/* SL2_jumpr31 */
},
void HELPER(SL2_jumpr31)(CPUHexagonState *env)
{
uint32_t slot = 4; slot = slot;
{ fJUMPR(REG_LR,fREAD_LR(),COF_TYPE_JUMPR);}
COUNT_HELPER(SL2_jumpr31);
})
DEF_QEMU(SL2_jumpr31_t,{fBRANCH_SPECULATE_STALL(fLSBOLD(fREAD_P0()),, SPECULATE_TAKEN,4,0); if (fLSBOLD(fREAD_P0())) {fJUMPR(REG_LR,fREAD_LR(),COF_TYPE_JUMPR);}},
DEF_HELPER_1(SL2_jumpr31_t, void, env),
{
/* SL2_jumpr31_t */
fWRAP_SL2_jumpr31_t(gen_helper_SL2_jumpr31_t(cpu_env);,
{fBRANCH_SPECULATE_STALL(fLSBOLD(fREAD_P0()),, SPECULATE_TAKEN,4,0); if (fLSBOLD(fREAD_P0())) {fJUMPR(REG_LR,fREAD_LR(),COF_TYPE_JUMPR);}})
/* SL2_jumpr31_t */
},
void HELPER(SL2_jumpr31_t)(CPUHexagonState *env)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBOLD(fREAD_P0()),, SPECULATE_TAKEN,4,0); if (fLSBOLD(fREAD_P0())) {fJUMPR(REG_LR,fREAD_LR(),COF_TYPE_JUMPR);}}
COUNT_HELPER(SL2_jumpr31_t);
})
DEF_QEMU(SL2_jumpr31_f,{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(fREAD_P0()),, SPECULATE_TAKEN,4,0); if (fLSBOLDNOT(fREAD_P0())) {fJUMPR(REG_LR,fREAD_LR(),COF_TYPE_JUMPR);}},
DEF_HELPER_1(SL2_jumpr31_f, void, env),
{
/* SL2_jumpr31_f */
fWRAP_SL2_jumpr31_f(gen_helper_SL2_jumpr31_f(cpu_env);,
{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(fREAD_P0()),, SPECULATE_TAKEN,4,0); if (fLSBOLDNOT(fREAD_P0())) {fJUMPR(REG_LR,fREAD_LR(),COF_TYPE_JUMPR);}})
/* SL2_jumpr31_f */
},
void HELPER(SL2_jumpr31_f)(CPUHexagonState *env)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(fREAD_P0()),, SPECULATE_TAKEN,4,0); if (fLSBOLDNOT(fREAD_P0())) {fJUMPR(REG_LR,fREAD_LR(),COF_TYPE_JUMPR);}}
COUNT_HELPER(SL2_jumpr31_f);
})
DEF_QEMU(SL2_jumpr31_tnew,{fBRANCH_SPECULATE_STALL(fLSBNEW0,, SPECULATE_NOT_TAKEN , 4,3); if (fLSBNEW0) {fJUMPR(REG_LR,fREAD_LR(),COF_TYPE_JUMPR);}},
DEF_HELPER_1(SL2_jumpr31_tnew, void, env),
{
/* SL2_jumpr31_tnew */
fWRAP_SL2_jumpr31_tnew(gen_helper_SL2_jumpr31_tnew(cpu_env);,
{fBRANCH_SPECULATE_STALL(fLSBNEW0,, SPECULATE_NOT_TAKEN , 4,3); if (fLSBNEW0) {fJUMPR(REG_LR,fREAD_LR(),COF_TYPE_JUMPR);}})
/* SL2_jumpr31_tnew */
},
void HELPER(SL2_jumpr31_tnew)(CPUHexagonState *env)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBNEW0,, SPECULATE_NOT_TAKEN , 4,3); if (fLSBNEW0) {fJUMPR(REG_LR,fREAD_LR(),COF_TYPE_JUMPR);}}
COUNT_HELPER(SL2_jumpr31_tnew);
})
DEF_QEMU(SL2_jumpr31_fnew,{fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,, SPECULATE_NOT_TAKEN , 4,3); if (fLSBNEW0NOT) {fJUMPR(REG_LR,fREAD_LR(),COF_TYPE_JUMPR);}},
DEF_HELPER_1(SL2_jumpr31_fnew, void, env),
{
/* SL2_jumpr31_fnew */
fWRAP_SL2_jumpr31_fnew(gen_helper_SL2_jumpr31_fnew(cpu_env);,
{fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,, SPECULATE_NOT_TAKEN , 4,3); if (fLSBNEW0NOT) {fJUMPR(REG_LR,fREAD_LR(),COF_TYPE_JUMPR);}})
/* SL2_jumpr31_fnew */
},
void HELPER(SL2_jumpr31_fnew)(CPUHexagonState *env)
{
uint32_t slot = 4; slot = slot;
{fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,, SPECULATE_NOT_TAKEN , 4,3); if (fLSBNEW0NOT) {fJUMPR(REG_LR,fREAD_LR(),COF_TYPE_JUMPR);}}
COUNT_HELPER(SL2_jumpr31_fnew);
})
DEF_QEMU(SS1_storew_io,{fEA_RI(RsV,uiV); fSTORE(1,4,EA,RtV);},
DEF_HELPER_5(SS1_storew_io, void, env, s32, s32, s32, i32),
{
/* SS1_storew_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_SS1_storew_io(SLOT_WRAP(gen_helper_SS1_storew_io(cpu_env, RsV, RtV, uiV, slot));,
{fEA_RI(RsV,uiV); fSTORE(1,4,EA,RtV);})
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* SS1_storew_io */
},
void HELPER(SS1_storew_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); fSTORE(1,4,EA,RtV);}
COUNT_HELPER(SS1_storew_io);
})
DEF_QEMU(SS1_storeb_io,{fEA_RI(RsV,uiV); fSTORE(1,1,EA,fGETBYTE(0,RtV));},
DEF_HELPER_5(SS1_storeb_io, void, env, s32, s32, s32, i32),
{
/* SS1_storeb_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_SS1_storeb_io(SLOT_WRAP(gen_helper_SS1_storeb_io(cpu_env, RsV, RtV, uiV, slot));,
{fEA_RI(RsV,uiV); fSTORE(1,1,EA,fGETBYTE(0,RtV));})
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* SS1_storeb_io */
},
void HELPER(SS1_storeb_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); fSTORE(1,1,EA,fGETBYTE(0,RtV));}
COUNT_HELPER(SS1_storeb_io);
})
DEF_QEMU(SS2_storeh_io,{fEA_RI(RsV,uiV); fSTORE(1,2,EA,fGETHALF(0,RtV));},
DEF_HELPER_5(SS2_storeh_io, void, env, s32, s32, s32, i32),
{
/* SS2_storeh_io */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
READ_RREG_t(RtV, RtN);
fWRAP_SS2_storeh_io(SLOT_WRAP(gen_helper_SS2_storeh_io(cpu_env, RsV, RtV, uiV, slot));,
{fEA_RI(RsV,uiV); fSTORE(1,2,EA,fGETHALF(0,RtV));})
FREE_EA;
FREE_REG_s(RsV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* SS2_storeh_io */
},
void HELPER(SS2_storeh_io)(CPUHexagonState *env, int32_t RsV, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); fSTORE(1,2,EA,fGETHALF(0,RtV));}
COUNT_HELPER(SS2_storeh_io);
})
DEF_QEMU(SS2_stored_sp,{fEA_RI(fREAD_SP(),siV); fSTORE(1,8,EA,RttV);},
DEF_HELPER_4(SS2_stored_sp, void, env, s64, s32, i32),
{
/* SS2_stored_sp */
DECL_EA;
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 0, 0);
DECL_IMM(siV,0);
READ_RREG_PAIR(RttV, RttN);
fWRAP_SS2_stored_sp(SLOT_WRAP(gen_helper_SS2_stored_sp(cpu_env, RttV, siV, slot));,
{fEA_RI(fREAD_SP(),siV); fSTORE(1,8,EA,RttV);})
FREE_EA;
FREE_REG_PAIR(RttV);
FREE_IMM(siV);
/* SS2_stored_sp */
},
void HELPER(SS2_stored_sp)(CPUHexagonState *env, int64_t RttV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(fREAD_SP(),siV); fSTORE(1,8,EA,RttV);}
COUNT_HELPER(SS2_stored_sp);
})
DEF_QEMU(SS2_storew_sp,{fEA_RI(fREAD_SP(),uiV); fSTORE(1,4,EA,RtV);},
DEF_HELPER_4(SS2_storew_sp, void, env, s32, s32, i32),
{
/* SS2_storew_sp */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_IMM(uiV,0);
READ_RREG_t(RtV, RtN);
fWRAP_SS2_storew_sp(SLOT_WRAP(gen_helper_SS2_storew_sp(cpu_env, RtV, uiV, slot));,
{fEA_RI(fREAD_SP(),uiV); fSTORE(1,4,EA,RtV);})
FREE_EA;
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* SS2_storew_sp */
},
void HELPER(SS2_storew_sp)(CPUHexagonState *env, int32_t RtV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(fREAD_SP(),uiV); fSTORE(1,4,EA,RtV);}
COUNT_HELPER(SS2_storew_sp);
})
DEF_QEMU(SS2_storewi0,{fEA_RI(RsV,uiV); fSTORE(1,4,EA,0);},
DEF_HELPER_4(SS2_storewi0, void, env, s32, s32, i32),
{
/* SS2_storewi0 */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_SS2_storewi0(SLOT_WRAP(gen_helper_SS2_storewi0(cpu_env, RsV, uiV, slot));,
{fEA_RI(RsV,uiV); fSTORE(1,4,EA,0);})
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* SS2_storewi0 */
},
void HELPER(SS2_storewi0)(CPUHexagonState *env, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); fSTORE(1,4,EA,0);}
COUNT_HELPER(SS2_storewi0);
})
DEF_QEMU(SS2_storebi0,{fEA_RI(RsV,uiV); fSTORE(1,1,EA,0);},
DEF_HELPER_4(SS2_storebi0, void, env, s32, s32, i32),
{
/* SS2_storebi0 */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_SS2_storebi0(SLOT_WRAP(gen_helper_SS2_storebi0(cpu_env, RsV, uiV, slot));,
{fEA_RI(RsV,uiV); fSTORE(1,1,EA,0);})
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* SS2_storebi0 */
},
void HELPER(SS2_storebi0)(CPUHexagonState *env, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); fSTORE(1,1,EA,0);}
COUNT_HELPER(SS2_storebi0);
})
DEF_QEMU(SS2_storewi1,{fEA_RI(RsV,uiV); fSTORE(1,4,EA,1);},
DEF_HELPER_4(SS2_storewi1, void, env, s32, s32, i32),
{
/* SS2_storewi1 */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_SS2_storewi1(SLOT_WRAP(gen_helper_SS2_storewi1(cpu_env, RsV, uiV, slot));,
{fEA_RI(RsV,uiV); fSTORE(1,4,EA,1);})
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* SS2_storewi1 */
},
void HELPER(SS2_storewi1)(CPUHexagonState *env, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); fSTORE(1,4,EA,1);}
COUNT_HELPER(SS2_storewi1);
})
DEF_QEMU(SS2_storebi1,{fEA_RI(RsV,uiV); fSTORE(1,1,EA,1);},
DEF_HELPER_4(SS2_storebi1, void, env, s32, s32, i32),
{
/* SS2_storebi1 */
DECL_EA;
DECL_RREG_s(TCGv, RsV, RsN, 0, 0);
DECL_IMM(uiV,0);
READ_RREG_s(RsV, RsN);
fWRAP_SS2_storebi1(SLOT_WRAP(gen_helper_SS2_storebi1(cpu_env, RsV, uiV, slot));,
{fEA_RI(RsV,uiV); fSTORE(1,1,EA,1);})
FREE_EA;
FREE_REG_s(RsV);
FREE_IMM(uiV);
/* SS2_storebi1 */
},
void HELPER(SS2_storebi1)(CPUHexagonState *env, int32_t RsV, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{fEA_RI(RsV,uiV); fSTORE(1,1,EA,1);}
COUNT_HELPER(SS2_storebi1);
})
DEF_QEMU(SS2_allocframe,{ fEA_RI(fREAD_SP(),-8); fSTORE(1,8,EA,fFRAME_SCRAMBLE((fCAST8_8u(fREAD_LR()) << 32) | fCAST4_4u(fREAD_FP()))); fWRITE_FP(EA); fFRAMECHECK(EA-uiV,EA); fWRITE_SP(EA-uiV); },
DEF_HELPER_3(SS2_allocframe, void, env, s32, i32),
{
/* SS2_allocframe */
DECL_EA;
DECL_IMM(uiV,0);
fWRAP_SS2_allocframe(SLOT_WRAP(gen_helper_SS2_allocframe(cpu_env, uiV, slot));,
{ fEA_RI(fREAD_SP(),-8); fSTORE(1,8,EA,fFRAME_SCRAMBLE((fCAST8_8u(fREAD_LR()) << 32) | fCAST4_4u(fREAD_FP()))); fWRITE_FP(EA); fFRAMECHECK(EA-uiV,EA); fWRITE_SP(EA-uiV); })
FREE_EA;
FREE_IMM(uiV);
/* SS2_allocframe */
},
void HELPER(SS2_allocframe)(CPUHexagonState *env, int32_t uiV, uint32_t slot)
{
size4u_t EA;
{ fEA_RI(fREAD_SP(),-8); fSTORE(1,8,EA,fFRAME_SCRAMBLE((fCAST8_8u(fREAD_LR()) << 32) | fCAST4_4u(fREAD_FP()))); fWRITE_FP(EA); fFRAMECHECK(EA-uiV,EA); fWRITE_SP(EA-uiV); }
COUNT_HELPER(SS2_allocframe);
})
DEF_QEMU(V6_vL32b_pi,{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); },
DEF_HELPER_5(V6_vL32b_pi, s32, env, ptr, s32, s32, i32),
{
/* V6_vL32b_pi */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_pi(SLOT_WRAP(gen_helper_V6_vL32b_pi(RxV, cpu_env, VdV, RxV, siV, slot));,
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_pi */
},
int32_t HELPER(V6_vL32b_pi)(CPUHexagonState *env, void *VdV_void, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); }
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_ai,{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);},
DEF_HELPER_5(V6_vL32b_ai, void, env, ptr, s32, s32, i32),
{
/* V6_vL32b_ai */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_ai(SLOT_WRAP(gen_helper_V6_vL32b_ai(cpu_env, VdV, RtV, siV, slot));,
{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);})
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_ai */
},
void HELPER(V6_vL32b_ai)(CPUHexagonState *env, void *VdV_void, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_ppu,{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); },
DEF_HELPER_5(V6_vL32b_ppu, s32, env, ptr, s32, s32, i32),
{
/* V6_vL32b_ppu */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_ppu(SLOT_WRAP(gen_helper_V6_vL32b_ppu(RxV, cpu_env, VdV, RxV, MuV, slot));,
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_ppu */
},
int32_t HELPER(V6_vL32b_ppu)(CPUHexagonState *env, void *VdV_void, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); }
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_cur_pi,{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); },
DEF_HELPER_5(V6_vL32b_cur_pi, s32, env, ptr, s32, s32, i32),
{
/* V6_vL32b_cur_pi */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_cur_pi(SLOT_WRAP(gen_helper_V6_vL32b_cur_pi(RxV, cpu_env, VdV, RxV, siV, slot));,
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); })
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_cur_pi */
},
int32_t HELPER(V6_vL32b_cur_pi)(CPUHexagonState *env, void *VdV_void, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); }
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_cur_ai,{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);},
DEF_HELPER_5(V6_vL32b_cur_ai, void, env, ptr, s32, s32, i32),
{
/* V6_vL32b_cur_ai */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_cur_ai(SLOT_WRAP(gen_helper_V6_vL32b_cur_ai(cpu_env, VdV, RtV, siV, slot));,
{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);})
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_cur_ai */
},
void HELPER(V6_vL32b_cur_ai)(CPUHexagonState *env, void *VdV_void, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_cur_ppu,{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); },
DEF_HELPER_5(V6_vL32b_cur_ppu, s32, env, ptr, s32, s32, i32),
{
/* V6_vL32b_cur_ppu */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_cur_ppu(SLOT_WRAP(gen_helper_V6_vL32b_cur_ppu(RxV, cpu_env, VdV, RxV, MuV, slot));,
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); })
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_cur_ppu */
},
int32_t HELPER(V6_vL32b_cur_ppu)(CPUHexagonState *env, void *VdV_void, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); }
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_tmp_pi,{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); },
DEF_HELPER_5(V6_vL32b_tmp_pi, s32, env, ptr, s32, s32, i32),
{
/* V6_vL32b_tmp_pi */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_tmp_pi(SLOT_WRAP(gen_helper_V6_vL32b_tmp_pi(RxV, cpu_env, VdV, RxV, siV, slot));,
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); })
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_tmp_pi */
},
int32_t HELPER(V6_vL32b_tmp_pi)(CPUHexagonState *env, void *VdV_void, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); }
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_tmp_ai,{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);},
DEF_HELPER_5(V6_vL32b_tmp_ai, void, env, ptr, s32, s32, i32),
{
/* V6_vL32b_tmp_ai */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_tmp_ai(SLOT_WRAP(gen_helper_V6_vL32b_tmp_ai(cpu_env, VdV, RtV, siV, slot));,
{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);})
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_tmp_ai */
},
void HELPER(V6_vL32b_tmp_ai)(CPUHexagonState *env, void *VdV_void, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_tmp_ppu,{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); },
DEF_HELPER_5(V6_vL32b_tmp_ppu, s32, env, ptr, s32, s32, i32),
{
/* V6_vL32b_tmp_ppu */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_tmp_ppu(SLOT_WRAP(gen_helper_V6_vL32b_tmp_ppu(RxV, cpu_env, VdV, RxV, MuV, slot));,
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); })
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_tmp_ppu */
},
int32_t HELPER(V6_vL32b_tmp_ppu)(CPUHexagonState *env, void *VdV_void, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); }
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_pred_pi,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_pred_pi, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_pred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_pred_pi(SLOT_WRAP(gen_helper_V6_vL32b_pred_pi(RxV, cpu_env, VdV, PvV, RxV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_pred_pi */
},
int32_t HELPER(V6_vL32b_pred_pi)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_pred_ai,{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_pred_ai, void, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_pred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_pred_ai(SLOT_WRAP(gen_helper_V6_vL32b_pred_ai(cpu_env, VdV, PvV, RtV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_pred_ai */
},
void HELPER(V6_vL32b_pred_ai)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_pred_ppu,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_pred_ppu, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_pred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_MREG_u(TCGv, MuV, MuN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_pred_ppu(SLOT_WRAP(gen_helper_V6_vL32b_pred_ppu(RxV, cpu_env, VdV, PvV, RxV, MuV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_pred_ppu */
},
int32_t HELPER(V6_vL32b_pred_ppu)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_npred_pi,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_npred_pi, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_npred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_npred_pi(SLOT_WRAP(gen_helper_V6_vL32b_npred_pi(RxV, cpu_env, VdV, PvV, RxV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_npred_pi */
},
int32_t HELPER(V6_vL32b_npred_pi)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_npred_ai,{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_npred_ai, void, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_npred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_npred_ai(SLOT_WRAP(gen_helper_V6_vL32b_npred_ai(cpu_env, VdV, PvV, RtV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_npred_ai */
},
void HELPER(V6_vL32b_npred_ai)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_npred_ppu,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_npred_ppu, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_npred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_MREG_u(TCGv, MuV, MuN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_npred_ppu(SLOT_WRAP(gen_helper_V6_vL32b_npred_ppu(RxV, cpu_env, VdV, PvV, RxV, MuV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_npred_ppu */
},
int32_t HELPER(V6_vL32b_npred_ppu)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_cur_pred_pi,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_cur_pred_pi, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_cur_pred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_cur_pred_pi(SLOT_WRAP(gen_helper_V6_vL32b_cur_pred_pi(RxV, cpu_env, VdV, PvV, RxV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_cur_pred_pi */
},
int32_t HELPER(V6_vL32b_cur_pred_pi)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_cur_pred_ai,{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_cur_pred_ai, void, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_cur_pred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_cur_pred_ai(SLOT_WRAP(gen_helper_V6_vL32b_cur_pred_ai(cpu_env, VdV, PvV, RtV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_cur_pred_ai */
},
void HELPER(V6_vL32b_cur_pred_ai)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_cur_pred_ppu,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_cur_pred_ppu, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_cur_pred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_MREG_u(TCGv, MuV, MuN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_cur_pred_ppu(SLOT_WRAP(gen_helper_V6_vL32b_cur_pred_ppu(RxV, cpu_env, VdV, PvV, RxV, MuV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_cur_pred_ppu */
},
int32_t HELPER(V6_vL32b_cur_pred_ppu)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_cur_npred_pi,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_cur_npred_pi, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_cur_npred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_cur_npred_pi(SLOT_WRAP(gen_helper_V6_vL32b_cur_npred_pi(RxV, cpu_env, VdV, PvV, RxV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_cur_npred_pi */
},
int32_t HELPER(V6_vL32b_cur_npred_pi)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_cur_npred_ai,{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_cur_npred_ai, void, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_cur_npred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_cur_npred_ai(SLOT_WRAP(gen_helper_V6_vL32b_cur_npred_ai(cpu_env, VdV, PvV, RtV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_cur_npred_ai */
},
void HELPER(V6_vL32b_cur_npred_ai)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_cur_npred_ppu,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_cur_npred_ppu, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_cur_npred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_MREG_u(TCGv, MuV, MuN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_cur_npred_ppu(SLOT_WRAP(gen_helper_V6_vL32b_cur_npred_ppu(RxV, cpu_env, VdV, PvV, RxV, MuV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_cur_npred_ppu */
},
int32_t HELPER(V6_vL32b_cur_npred_ppu)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_tmp_pred_pi,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_tmp_pred_pi, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_tmp_pred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_tmp_pred_pi(SLOT_WRAP(gen_helper_V6_vL32b_tmp_pred_pi(RxV, cpu_env, VdV, PvV, RxV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_tmp_pred_pi */
},
int32_t HELPER(V6_vL32b_tmp_pred_pi)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_tmp_pred_ai,{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_tmp_pred_ai, void, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_tmp_pred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_tmp_pred_ai(SLOT_WRAP(gen_helper_V6_vL32b_tmp_pred_ai(cpu_env, VdV, PvV, RtV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_tmp_pred_ai */
},
void HELPER(V6_vL32b_tmp_pred_ai)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_tmp_pred_ppu,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_tmp_pred_ppu, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_tmp_pred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_MREG_u(TCGv, MuV, MuN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_tmp_pred_ppu(SLOT_WRAP(gen_helper_V6_vL32b_tmp_pred_ppu(RxV, cpu_env, VdV, PvV, RxV, MuV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_tmp_pred_ppu */
},
int32_t HELPER(V6_vL32b_tmp_pred_ppu)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_tmp_npred_pi,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_tmp_npred_pi, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_tmp_npred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_tmp_npred_pi(SLOT_WRAP(gen_helper_V6_vL32b_tmp_npred_pi(RxV, cpu_env, VdV, PvV, RxV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_tmp_npred_pi */
},
int32_t HELPER(V6_vL32b_tmp_npred_pi)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_tmp_npred_ai,{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_tmp_npred_ai, void, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_tmp_npred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_tmp_npred_ai(SLOT_WRAP(gen_helper_V6_vL32b_tmp_npred_ai(cpu_env, VdV, PvV, RtV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_tmp_npred_ai */
},
void HELPER(V6_vL32b_tmp_npred_ai)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_tmp_npred_ppu,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_tmp_npred_ppu, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_tmp_npred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_MREG_u(TCGv, MuV, MuN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_tmp_npred_ppu(SLOT_WRAP(gen_helper_V6_vL32b_tmp_npred_ppu(RxV, cpu_env, VdV, PvV, RxV, MuV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_tmp_npred_ppu */
},
int32_t HELPER(V6_vL32b_tmp_npred_ppu)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vS32b_pi,{ fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); },
DEF_HELPER_5(V6_vS32b_pi, s32, env, s32, ptr, s32, i32),
{
/* V6_vS32b_pi */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_EXT_VREG(VsV, VsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_pi(SLOT_WRAP(gen_helper_V6_vS32b_pi(RxV, cpu_env, RxV, VsV, siV, slot));,
{ fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_pi */
},
int32_t HELPER(V6_vS32b_pi)(CPUHexagonState *env, int32_t RxV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); }
return RxV;
})
DEF_QEMU(V6_vS32b_ai,{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);},
DEF_HELPER_5(V6_vS32b_ai, void, env, s32, ptr, s32, i32),
{
/* V6_vS32b_ai */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_EXT_VREG(VsV, VsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_t(RtV, RtN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_ai(SLOT_WRAP(gen_helper_V6_vS32b_ai(cpu_env, RtV, VsV, siV, slot));,
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);})
FREE_EA;
FREE_REG_t(RtV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_ai */
},
void HELPER(V6_vS32b_ai)(CPUHexagonState *env, int32_t RtV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);}
})
DEF_QEMU(V6_vS32b_ppu,{ fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); },
DEF_HELPER_5(V6_vS32b_ppu, s32, env, s32, s32, ptr, i32),
{
/* V6_vS32b_ppu */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_ppu(SLOT_WRAP(gen_helper_V6_vS32b_ppu(RxV, cpu_env, RxV, MuV, VsV, slot));,
{ fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VsV);
/* V6_vS32b_ppu */
},
int32_t HELPER(V6_vS32b_ppu)(CPUHexagonState *env, int32_t RxV, int32_t MuV, void *VsV_void, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); }
return RxV;
})
DEF_QEMU(V6_vS32b_pred_pi,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_pred_pi, s32, env, s32, s32, ptr, s32, i32),
{
/* V6_vS32b_pred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_pred_pi(SLOT_WRAP(gen_helper_V6_vS32b_pred_pi(RxV, cpu_env, PvV, RxV, VsV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_pred_pi */
},
int32_t HELPER(V6_vS32b_pred_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32b_pred_ai,{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);} else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_pred_ai, void, env, s32, s32, ptr, s32, i32),
{
/* V6_vS32b_pred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_pred_ai(SLOT_WRAP(gen_helper_V6_vS32b_pred_ai(cpu_env, PvV, RtV, VsV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);} else {CANCEL;}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_pred_ai */
},
void HELPER(V6_vS32b_pred_ai)(CPUHexagonState *env, int32_t PvV, int32_t RtV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);} else {CANCEL;}}
})
DEF_QEMU(V6_vS32b_pred_ppu,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_pred_ppu, s32, env, s32, s32, s32, ptr, i32),
{
/* V6_vS32b_pred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_EXT_VREG(VsV, VsN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_pred_ppu(SLOT_WRAP(gen_helper_V6_vS32b_pred_ppu(RxV, cpu_env, PvV, RxV, MuV, VsV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VsV);
/* V6_vS32b_pred_ppu */
},
int32_t HELPER(V6_vS32b_pred_ppu)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t MuV, void *VsV_void, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32b_npred_pi,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_npred_pi, s32, env, s32, s32, ptr, s32, i32),
{
/* V6_vS32b_npred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_npred_pi(SLOT_WRAP(gen_helper_V6_vS32b_npred_pi(RxV, cpu_env, PvV, RxV, VsV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_npred_pi */
},
int32_t HELPER(V6_vS32b_npred_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32b_npred_ai,{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);} else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_npred_ai, void, env, s32, s32, ptr, s32, i32),
{
/* V6_vS32b_npred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_npred_ai(SLOT_WRAP(gen_helper_V6_vS32b_npred_ai(cpu_env, PvV, RtV, VsV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);} else {CANCEL;}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_npred_ai */
},
void HELPER(V6_vS32b_npred_ai)(CPUHexagonState *env, int32_t PvV, int32_t RtV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);} else {CANCEL;}}
})
DEF_QEMU(V6_vS32b_npred_ppu,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_npred_ppu, s32, env, s32, s32, s32, ptr, i32),
{
/* V6_vS32b_npred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_EXT_VREG(VsV, VsN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_npred_ppu(SLOT_WRAP(gen_helper_V6_vS32b_npred_ppu(RxV, cpu_env, PvV, RxV, MuV, VsV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VsV);
/* V6_vS32b_npred_ppu */
},
int32_t HELPER(V6_vS32b_npred_ppu)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t MuV, void *VsV_void, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32b_qpred_pi,{ fEA_REG(RxV); fSTOREMMVQ(EA,VsV,QvV); fPM_I(RxV,siV*fVECSIZE()); },
DEF_HELPER_6(V6_vS32b_qpred_pi, s32, env, ptr, s32, ptr, s32, i32),
{
/* V6_vS32b_qpred_pi */
DECL_EA;
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_EXT_QREG(QvN,QvV,0);
READ_RREG_x(RxV, RxN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_qpred_pi(SLOT_WRAP(gen_helper_V6_vS32b_qpred_pi(RxV, cpu_env, QvV, RxV, VsV, siV, slot));,
{ fEA_REG(RxV); fSTOREMMVQ(EA,VsV,QvV); fPM_I(RxV,siV*fVECSIZE()); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_QREG(QvV);
FREE_REG_x(RxV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_qpred_pi */
},
int32_t HELPER(V6_vS32b_qpred_pi)(CPUHexagonState *env, void *QvV_void, int32_t RxV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* QvV is *(mmvector_t*)(QvV_void) */
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_REG(RxV); fSTOREMMVQ(EA,VsV,QvV); fPM_I(RxV,siV*fVECSIZE()); }
return RxV;
})
DEF_QEMU(V6_vS32b_qpred_ai,{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVQ(EA,VsV,QvV);},
DEF_HELPER_6(V6_vS32b_qpred_ai, void, env, ptr, s32, ptr, s32, i32),
{
/* V6_vS32b_qpred_ai */
DECL_EA;
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_EXT_QREG(QvN,QvV,0);
READ_RREG_t(RtV, RtN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_qpred_ai(SLOT_WRAP(gen_helper_V6_vS32b_qpred_ai(cpu_env, QvV, RtV, VsV, siV, slot));,
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVQ(EA,VsV,QvV);})
FREE_EA;
FREE_EXT_QREG(QvV);
FREE_REG_t(RtV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_qpred_ai */
},
void HELPER(V6_vS32b_qpred_ai)(CPUHexagonState *env, void *QvV_void, int32_t RtV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* QvV is *(mmvector_t*)(QvV_void) */
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVQ(EA,VsV,QvV);}
})
DEF_QEMU(V6_vS32b_qpred_ppu,{ fEA_REG(RxV); fSTOREMMVQ(EA,VsV,QvV); fPM_M(RxV,MuV); },
DEF_HELPER_6(V6_vS32b_qpred_ppu, s32, env, ptr, s32, s32, ptr, i32),
{
/* V6_vS32b_qpred_ppu */
DECL_EA;
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_EXT_VREG(VsV, VsN, 3, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_qpred_ppu(SLOT_WRAP(gen_helper_V6_vS32b_qpred_ppu(RxV, cpu_env, QvV, RxV, MuV, VsV, slot));,
{ fEA_REG(RxV); fSTOREMMVQ(EA,VsV,QvV); fPM_M(RxV,MuV); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_QREG(QvV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VsV);
/* V6_vS32b_qpred_ppu */
},
int32_t HELPER(V6_vS32b_qpred_ppu)(CPUHexagonState *env, void *QvV_void, int32_t RxV, int32_t MuV, void *VsV_void, uint32_t slot)
{
size4u_t EA;
/* QvV is *(mmvector_t*)(QvV_void) */
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_REG(RxV); fSTOREMMVQ(EA,VsV,QvV); fPM_M(RxV,MuV); }
return RxV;
})
DEF_QEMU(V6_vS32b_nqpred_pi,{ fEA_REG(RxV); fSTOREMMVNQ(EA,VsV,QvV); fPM_I(RxV,siV*fVECSIZE()); },
DEF_HELPER_6(V6_vS32b_nqpred_pi, s32, env, ptr, s32, ptr, s32, i32),
{
/* V6_vS32b_nqpred_pi */
DECL_EA;
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_EXT_QREG(QvN,QvV,0);
READ_RREG_x(RxV, RxN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nqpred_pi(SLOT_WRAP(gen_helper_V6_vS32b_nqpred_pi(RxV, cpu_env, QvV, RxV, VsV, siV, slot));,
{ fEA_REG(RxV); fSTOREMMVNQ(EA,VsV,QvV); fPM_I(RxV,siV*fVECSIZE()); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_QREG(QvV);
FREE_REG_x(RxV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_nqpred_pi */
},
int32_t HELPER(V6_vS32b_nqpred_pi)(CPUHexagonState *env, void *QvV_void, int32_t RxV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* QvV is *(mmvector_t*)(QvV_void) */
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_REG(RxV); fSTOREMMVNQ(EA,VsV,QvV); fPM_I(RxV,siV*fVECSIZE()); }
return RxV;
})
DEF_QEMU(V6_vS32b_nqpred_ai,{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVNQ(EA,VsV,QvV);},
DEF_HELPER_6(V6_vS32b_nqpred_ai, void, env, ptr, s32, ptr, s32, i32),
{
/* V6_vS32b_nqpred_ai */
DECL_EA;
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_EXT_QREG(QvN,QvV,0);
READ_RREG_t(RtV, RtN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nqpred_ai(SLOT_WRAP(gen_helper_V6_vS32b_nqpred_ai(cpu_env, QvV, RtV, VsV, siV, slot));,
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVNQ(EA,VsV,QvV);})
FREE_EA;
FREE_EXT_QREG(QvV);
FREE_REG_t(RtV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_nqpred_ai */
},
void HELPER(V6_vS32b_nqpred_ai)(CPUHexagonState *env, void *QvV_void, int32_t RtV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* QvV is *(mmvector_t*)(QvV_void) */
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVNQ(EA,VsV,QvV);}
})
DEF_QEMU(V6_vS32b_nqpred_ppu,{ fEA_REG(RxV); fSTOREMMVNQ(EA,VsV,QvV); fPM_M(RxV,MuV); },
DEF_HELPER_6(V6_vS32b_nqpred_ppu, s32, env, ptr, s32, s32, ptr, i32),
{
/* V6_vS32b_nqpred_ppu */
DECL_EA;
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_EXT_VREG(VsV, VsN, 3, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nqpred_ppu(SLOT_WRAP(gen_helper_V6_vS32b_nqpred_ppu(RxV, cpu_env, QvV, RxV, MuV, VsV, slot));,
{ fEA_REG(RxV); fSTOREMMVNQ(EA,VsV,QvV); fPM_M(RxV,MuV); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_QREG(QvV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VsV);
/* V6_vS32b_nqpred_ppu */
},
int32_t HELPER(V6_vS32b_nqpred_ppu)(CPUHexagonState *env, void *QvV_void, int32_t RxV, int32_t MuV, void *VsV_void, uint32_t slot)
{
size4u_t EA;
/* QvV is *(mmvector_t*)(QvV_void) */
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_REG(RxV); fSTOREMMVNQ(EA,VsV,QvV); fPM_M(RxV,MuV); }
return RxV;
})
DEF_QEMU(V6_vL32Ub_pi,{ fEA_REG(RxV); fLOADMMVU(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); },
DEF_HELPER_5(V6_vL32Ub_pi, s32, env, ptr, s32, s32, i32),
{
/* V6_vL32Ub_pi */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32Ub_pi(SLOT_WRAP(gen_helper_V6_vL32Ub_pi(RxV, cpu_env, VdV, RxV, siV, slot));,
{ fEA_REG(RxV); fLOADMMVU(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32Ub_pi */
},
int32_t HELPER(V6_vL32Ub_pi)(CPUHexagonState *env, void *VdV_void, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_REG(RxV); fLOADMMVU(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); }
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32Ub_ai,{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMVU(EA,VdV);},
DEF_HELPER_5(V6_vL32Ub_ai, void, env, ptr, s32, s32, i32),
{
/* V6_vL32Ub_ai */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32Ub_ai(SLOT_WRAP(gen_helper_V6_vL32Ub_ai(cpu_env, VdV, RtV, siV, slot));,
{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMVU(EA,VdV);})
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32Ub_ai */
},
void HELPER(V6_vL32Ub_ai)(CPUHexagonState *env, void *VdV_void, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMVU(EA,VdV);}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32Ub_ppu,{ fEA_REG(RxV); fLOADMMVU(EA,VdV); fPM_M(RxV,MuV); },
DEF_HELPER_5(V6_vL32Ub_ppu, s32, env, ptr, s32, s32, i32),
{
/* V6_vL32Ub_ppu */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32Ub_ppu(SLOT_WRAP(gen_helper_V6_vL32Ub_ppu(RxV, cpu_env, VdV, RxV, MuV, slot));,
{ fEA_REG(RxV); fLOADMMVU(EA,VdV); fPM_M(RxV,MuV); })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32Ub_ppu */
},
int32_t HELPER(V6_vL32Ub_ppu)(CPUHexagonState *env, void *VdV_void, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_REG(RxV); fLOADMMVU(EA,VdV); fPM_M(RxV,MuV); }
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vS32Ub_pi,{ fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); },
DEF_HELPER_5(V6_vS32Ub_pi, s32, env, s32, ptr, s32, i32),
{
/* V6_vS32Ub_pi */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_EXT_VREG(VsV, VsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32Ub_pi(SLOT_WRAP(gen_helper_V6_vS32Ub_pi(RxV, cpu_env, RxV, VsV, siV, slot));,
{ fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32Ub_pi */
},
int32_t HELPER(V6_vS32Ub_pi)(CPUHexagonState *env, int32_t RxV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); }
return RxV;
})
DEF_QEMU(V6_vS32Ub_ai,{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVU(EA,VsV);},
DEF_HELPER_5(V6_vS32Ub_ai, void, env, s32, ptr, s32, i32),
{
/* V6_vS32Ub_ai */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_EXT_VREG(VsV, VsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_t(RtV, RtN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32Ub_ai(SLOT_WRAP(gen_helper_V6_vS32Ub_ai(cpu_env, RtV, VsV, siV, slot));,
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVU(EA,VsV);})
FREE_EA;
FREE_REG_t(RtV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32Ub_ai */
},
void HELPER(V6_vS32Ub_ai)(CPUHexagonState *env, int32_t RtV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVU(EA,VsV);}
})
DEF_QEMU(V6_vS32Ub_ppu,{ fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_M(RxV,MuV); },
DEF_HELPER_5(V6_vS32Ub_ppu, s32, env, s32, s32, ptr, i32),
{
/* V6_vS32Ub_ppu */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32Ub_ppu(SLOT_WRAP(gen_helper_V6_vS32Ub_ppu(RxV, cpu_env, RxV, MuV, VsV, slot));,
{ fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_M(RxV,MuV); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VsV);
/* V6_vS32Ub_ppu */
},
int32_t HELPER(V6_vS32Ub_ppu)(CPUHexagonState *env, int32_t RxV, int32_t MuV, void *VsV_void, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_M(RxV,MuV); }
return RxV;
})
DEF_QEMU(V6_vS32Ub_pred_pi,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32Ub_pred_pi, s32, env, s32, s32, ptr, s32, i32),
{
/* V6_vS32Ub_pred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32Ub_pred_pi(SLOT_WRAP(gen_helper_V6_vS32Ub_pred_pi(RxV, cpu_env, PvV, RxV, VsV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32Ub_pred_pi */
},
int32_t HELPER(V6_vS32Ub_pred_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32Ub_pred_ai,{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVU(EA,VsV);} else {CANCEL;}},
DEF_HELPER_6(V6_vS32Ub_pred_ai, void, env, s32, s32, ptr, s32, i32),
{
/* V6_vS32Ub_pred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32Ub_pred_ai(SLOT_WRAP(gen_helper_V6_vS32Ub_pred_ai(cpu_env, PvV, RtV, VsV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVU(EA,VsV);} else {CANCEL;}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32Ub_pred_ai */
},
void HELPER(V6_vS32Ub_pred_ai)(CPUHexagonState *env, int32_t PvV, int32_t RtV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVU(EA,VsV);} else {CANCEL;}}
})
DEF_QEMU(V6_vS32Ub_pred_ppu,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32Ub_pred_ppu, s32, env, s32, s32, s32, ptr, i32),
{
/* V6_vS32Ub_pred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_EXT_VREG(VsV, VsN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32Ub_pred_ppu(SLOT_WRAP(gen_helper_V6_vS32Ub_pred_ppu(RxV, cpu_env, PvV, RxV, MuV, VsV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VsV);
/* V6_vS32Ub_pred_ppu */
},
int32_t HELPER(V6_vS32Ub_pred_ppu)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t MuV, void *VsV_void, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32Ub_npred_pi,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32Ub_npred_pi, s32, env, s32, s32, ptr, s32, i32),
{
/* V6_vS32Ub_npred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32Ub_npred_pi(SLOT_WRAP(gen_helper_V6_vS32Ub_npred_pi(RxV, cpu_env, PvV, RxV, VsV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32Ub_npred_pi */
},
int32_t HELPER(V6_vS32Ub_npred_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32Ub_npred_ai,{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVU(EA,VsV);} else {CANCEL;}},
DEF_HELPER_6(V6_vS32Ub_npred_ai, void, env, s32, s32, ptr, s32, i32),
{
/* V6_vS32Ub_npred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32Ub_npred_ai(SLOT_WRAP(gen_helper_V6_vS32Ub_npred_ai(cpu_env, PvV, RtV, VsV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVU(EA,VsV);} else {CANCEL;}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32Ub_npred_ai */
},
void HELPER(V6_vS32Ub_npred_ai)(CPUHexagonState *env, int32_t PvV, int32_t RtV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVU(EA,VsV);} else {CANCEL;}}
})
DEF_QEMU(V6_vS32Ub_npred_ppu,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32Ub_npred_ppu, s32, env, s32, s32, s32, ptr, i32),
{
/* V6_vS32Ub_npred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_EXT_VREG(VsV, VsN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32Ub_npred_ppu(SLOT_WRAP(gen_helper_V6_vS32Ub_npred_ppu(RxV, cpu_env, PvV, RxV, MuV, VsV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VsV);
/* V6_vS32Ub_npred_ppu */
},
int32_t HELPER(V6_vS32Ub_npred_ppu)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t MuV, void *VsV_void, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMVU(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32b_new_pi,{ fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); },
DEF_HELPER_5(V6_vS32b_new_pi, s32, env, s32, s32, s32, i32),
{
/* V6_vS32b_new_pi */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_new_pi(SLOT_WRAP(gen_helper_V6_vS32b_new_pi(RxV, cpu_env, RxV, OsN, siV, slot));,
{ fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_NEW_OREG(OsN);
FREE_IMM(siV);
/* V6_vS32b_new_pi */
},
int32_t HELPER(V6_vS32b_new_pi)(CPUHexagonState *env, int32_t RxV, int32_t OsN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{ fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); }
return RxV;
})
DEF_QEMU(V6_vS32b_new_ai,{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));},
DEF_HELPER_5(V6_vS32b_new_ai, void, env, s32, s32, s32, i32),
{
/* V6_vS32b_new_ai */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 1, 0);
DECL_IMM(siV,0);
READ_RREG_t(RtV, RtN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_new_ai(SLOT_WRAP(gen_helper_V6_vS32b_new_ai(cpu_env, RtV, OsN, siV, slot));,
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));})
FREE_EA;
FREE_REG_t(RtV);
FREE_NEW_OREG(OsN);
FREE_IMM(siV);
/* V6_vS32b_new_ai */
},
void HELPER(V6_vS32b_new_ai)(CPUHexagonState *env, int32_t RtV, int32_t OsN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));}
})
DEF_QEMU(V6_vS32b_new_ppu,{ fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); },
DEF_HELPER_5(V6_vS32b_new_ppu, s32, env, s32, s32, s32, i32),
{
/* V6_vS32b_new_ppu */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_new_ppu(SLOT_WRAP(gen_helper_V6_vS32b_new_ppu(RxV, cpu_env, RxV, MuV, OsN, slot));,
{ fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_OREG(OsN);
/* V6_vS32b_new_ppu */
},
int32_t HELPER(V6_vS32b_new_ppu)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t OsN, uint32_t slot)
{
size4u_t EA;
{ fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); }
return RxV;
})
DEF_QEMU(V6_vS32b_srls_pi,{ fEA_REG(RxV); fSTORERELEASE(EA,0); fPM_I(RxV,siV*fVECSIZE()); },
DEF_HELPER_4(V6_vS32b_srls_pi, s32, env, s32, s32, i32),
{
/* V6_vS32b_srls_pi */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vS32b_srls_pi(SLOT_WRAP(gen_helper_V6_vS32b_srls_pi(RxV, cpu_env, RxV, siV, slot));,
{ fEA_REG(RxV); fSTORERELEASE(EA,0); fPM_I(RxV,siV*fVECSIZE()); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vS32b_srls_pi */
},
int32_t HELPER(V6_vS32b_srls_pi)(CPUHexagonState *env, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{ fEA_REG(RxV); fSTORERELEASE(EA,0); fPM_I(RxV,siV*fVECSIZE()); }
return RxV;
})
DEF_QEMU(V6_vS32b_srls_ai,{ fEA_RI(RtV,siV*fVECSIZE()); fSTORERELEASE(EA,0);},
DEF_HELPER_4(V6_vS32b_srls_ai, void, env, s32, s32, i32),
{
/* V6_vS32b_srls_ai */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_IMM(siV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vS32b_srls_ai(SLOT_WRAP(gen_helper_V6_vS32b_srls_ai(cpu_env, RtV, siV, slot));,
{ fEA_RI(RtV,siV*fVECSIZE()); fSTORERELEASE(EA,0);})
FREE_EA;
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vS32b_srls_ai */
},
void HELPER(V6_vS32b_srls_ai)(CPUHexagonState *env, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
{ fEA_RI(RtV,siV*fVECSIZE()); fSTORERELEASE(EA,0);}
})
DEF_QEMU(V6_vS32b_srls_ppu,{ fEA_REG(RxV); fSTORERELEASE(EA,0); fPM_M(RxV,MuV); },
DEF_HELPER_4(V6_vS32b_srls_ppu, s32, env, s32, s32, i32),
{
/* V6_vS32b_srls_ppu */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vS32b_srls_ppu(SLOT_WRAP(gen_helper_V6_vS32b_srls_ppu(RxV, cpu_env, RxV, MuV, slot));,
{ fEA_REG(RxV); fSTORERELEASE(EA,0); fPM_M(RxV,MuV); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vS32b_srls_ppu */
},
int32_t HELPER(V6_vS32b_srls_ppu)(CPUHexagonState *env, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
{ fEA_REG(RxV); fSTORERELEASE(EA,0); fPM_M(RxV,MuV); }
return RxV;
})
DEF_QEMU(V6_vS32b_new_pred_pi,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_new_pred_pi, s32, env, s32, s32, s32, s32, i32),
{
/* V6_vS32b_new_pred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_new_pred_pi(SLOT_WRAP(gen_helper_V6_vS32b_new_pred_pi(RxV, cpu_env, PvV, RxV, OsN, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_NEW_OREG(OsN);
FREE_IMM(siV);
/* V6_vS32b_new_pred_pi */
},
int32_t HELPER(V6_vS32b_new_pred_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t OsN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32b_new_pred_ai,{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));} else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_new_pred_ai, void, env, s32, s32, s32, s32, i32),
{
/* V6_vS32b_new_pred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_new_pred_ai(SLOT_WRAP(gen_helper_V6_vS32b_new_pred_ai(cpu_env, PvV, RtV, OsN, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));} else {CANCEL;}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_NEW_OREG(OsN);
FREE_IMM(siV);
/* V6_vS32b_new_pred_ai */
},
void HELPER(V6_vS32b_new_pred_ai)(CPUHexagonState *env, int32_t PvV, int32_t RtV, int32_t OsN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));} else {CANCEL;}}
})
DEF_QEMU(V6_vS32b_new_pred_ppu,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_new_pred_ppu, s32, env, s32, s32, s32, s32, i32),
{
/* V6_vS32b_new_pred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_new_pred_ppu(SLOT_WRAP(gen_helper_V6_vS32b_new_pred_ppu(RxV, cpu_env, PvV, RxV, MuV, OsN, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_OREG(OsN);
/* V6_vS32b_new_pred_ppu */
},
int32_t HELPER(V6_vS32b_new_pred_ppu)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t MuV, int32_t OsN, uint32_t slot)
{
size4u_t EA;
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32b_new_npred_pi,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_new_npred_pi, s32, env, s32, s32, s32, s32, i32),
{
/* V6_vS32b_new_npred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_new_npred_pi(SLOT_WRAP(gen_helper_V6_vS32b_new_npred_pi(RxV, cpu_env, PvV, RxV, OsN, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_NEW_OREG(OsN);
FREE_IMM(siV);
/* V6_vS32b_new_npred_pi */
},
int32_t HELPER(V6_vS32b_new_npred_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t OsN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32b_new_npred_ai,{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));} else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_new_npred_ai, void, env, s32, s32, s32, s32, i32),
{
/* V6_vS32b_new_npred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_new_npred_ai(SLOT_WRAP(gen_helper_V6_vS32b_new_npred_ai(cpu_env, PvV, RtV, OsN, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));} else {CANCEL;}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_NEW_OREG(OsN);
FREE_IMM(siV);
/* V6_vS32b_new_npred_ai */
},
void HELPER(V6_vS32b_new_npred_ai)(CPUHexagonState *env, int32_t PvV, int32_t RtV, int32_t OsN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));} else {CANCEL;}}
})
DEF_QEMU(V6_vS32b_new_npred_ppu,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_new_npred_ppu, s32, env, s32, s32, s32, s32, i32),
{
/* V6_vS32b_new_npred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_new_npred_ppu(SLOT_WRAP(gen_helper_V6_vS32b_new_npred_ppu(RxV, cpu_env, PvV, RxV, MuV, OsN, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_OREG(OsN);
/* V6_vS32b_new_npred_ppu */
},
int32_t HELPER(V6_vS32b_new_npred_ppu)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t MuV, int32_t OsN, uint32_t slot)
{
size4u_t EA;
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32b_nt_pi,{ fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); },
DEF_HELPER_5(V6_vS32b_nt_pi, s32, env, s32, ptr, s32, i32),
{
/* V6_vS32b_nt_pi */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_EXT_VREG(VsV, VsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nt_pi(SLOT_WRAP(gen_helper_V6_vS32b_nt_pi(RxV, cpu_env, RxV, VsV, siV, slot));,
{ fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_nt_pi */
},
int32_t HELPER(V6_vS32b_nt_pi)(CPUHexagonState *env, int32_t RxV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); }
return RxV;
})
DEF_QEMU(V6_vS32b_nt_ai,{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);},
DEF_HELPER_5(V6_vS32b_nt_ai, void, env, s32, ptr, s32, i32),
{
/* V6_vS32b_nt_ai */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_EXT_VREG(VsV, VsN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_t(RtV, RtN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nt_ai(SLOT_WRAP(gen_helper_V6_vS32b_nt_ai(cpu_env, RtV, VsV, siV, slot));,
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);})
FREE_EA;
FREE_REG_t(RtV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_nt_ai */
},
void HELPER(V6_vS32b_nt_ai)(CPUHexagonState *env, int32_t RtV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);}
})
DEF_QEMU(V6_vS32b_nt_ppu,{ fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); },
DEF_HELPER_5(V6_vS32b_nt_ppu, s32, env, s32, s32, ptr, i32),
{
/* V6_vS32b_nt_ppu */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nt_ppu(SLOT_WRAP(gen_helper_V6_vS32b_nt_ppu(RxV, cpu_env, RxV, MuV, VsV, slot));,
{ fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VsV);
/* V6_vS32b_nt_ppu */
},
int32_t HELPER(V6_vS32b_nt_ppu)(CPUHexagonState *env, int32_t RxV, int32_t MuV, void *VsV_void, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); }
return RxV;
})
DEF_QEMU(V6_vS32b_nt_pred_pi,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_nt_pred_pi, s32, env, s32, s32, ptr, s32, i32),
{
/* V6_vS32b_nt_pred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nt_pred_pi(SLOT_WRAP(gen_helper_V6_vS32b_nt_pred_pi(RxV, cpu_env, PvV, RxV, VsV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_nt_pred_pi */
},
int32_t HELPER(V6_vS32b_nt_pred_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32b_nt_pred_ai,{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);} else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_nt_pred_ai, void, env, s32, s32, ptr, s32, i32),
{
/* V6_vS32b_nt_pred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nt_pred_ai(SLOT_WRAP(gen_helper_V6_vS32b_nt_pred_ai(cpu_env, PvV, RtV, VsV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);} else {CANCEL;}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_nt_pred_ai */
},
void HELPER(V6_vS32b_nt_pred_ai)(CPUHexagonState *env, int32_t PvV, int32_t RtV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);} else {CANCEL;}}
})
DEF_QEMU(V6_vS32b_nt_pred_ppu,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_nt_pred_ppu, s32, env, s32, s32, s32, ptr, i32),
{
/* V6_vS32b_nt_pred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_EXT_VREG(VsV, VsN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nt_pred_ppu(SLOT_WRAP(gen_helper_V6_vS32b_nt_pred_ppu(RxV, cpu_env, PvV, RxV, MuV, VsV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VsV);
/* V6_vS32b_nt_pred_ppu */
},
int32_t HELPER(V6_vS32b_nt_pred_ppu)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t MuV, void *VsV_void, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32b_nt_npred_pi,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_nt_npred_pi, s32, env, s32, s32, ptr, s32, i32),
{
/* V6_vS32b_nt_npred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nt_npred_pi(SLOT_WRAP(gen_helper_V6_vS32b_nt_npred_pi(RxV, cpu_env, PvV, RxV, VsV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_nt_npred_pi */
},
int32_t HELPER(V6_vS32b_nt_npred_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32b_nt_npred_ai,{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);} else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_nt_npred_ai, void, env, s32, s32, ptr, s32, i32),
{
/* V6_vS32b_nt_npred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nt_npred_ai(SLOT_WRAP(gen_helper_V6_vS32b_nt_npred_ai(cpu_env, PvV, RtV, VsV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);} else {CANCEL;}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_nt_npred_ai */
},
void HELPER(V6_vS32b_nt_npred_ai)(CPUHexagonState *env, int32_t PvV, int32_t RtV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,VsV);} else {CANCEL;}}
})
DEF_QEMU(V6_vS32b_nt_npred_ppu,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_nt_npred_ppu, s32, env, s32, s32, s32, ptr, i32),
{
/* V6_vS32b_nt_npred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_EXT_VREG(VsV, VsN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nt_npred_ppu(SLOT_WRAP(gen_helper_V6_vS32b_nt_npred_ppu(RxV, cpu_env, PvV, RxV, MuV, VsV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VsV);
/* V6_vS32b_nt_npred_ppu */
},
int32_t HELPER(V6_vS32b_nt_npred_ppu)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t MuV, void *VsV_void, uint32_t slot)
{
size4u_t EA;
/* VsV is *(mmvector_t*)(VsV_void) */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,VsV); fPM_M(RxV,MuV); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32b_nt_new_pi,{ fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); },
DEF_HELPER_5(V6_vS32b_nt_new_pi, s32, env, s32, s32, s32, i32),
{
/* V6_vS32b_nt_new_pi */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_nt_new_pi(SLOT_WRAP(gen_helper_V6_vS32b_nt_new_pi(RxV, cpu_env, RxV, OsN, siV, slot));,
{ fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_NEW_OREG(OsN);
FREE_IMM(siV);
/* V6_vS32b_nt_new_pi */
},
int32_t HELPER(V6_vS32b_nt_new_pi)(CPUHexagonState *env, int32_t RxV, int32_t OsN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{ fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); }
return RxV;
})
DEF_QEMU(V6_vS32b_nt_new_ai,{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));},
DEF_HELPER_5(V6_vS32b_nt_new_ai, void, env, s32, s32, s32, i32),
{
/* V6_vS32b_nt_new_ai */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 1, 0);
DECL_IMM(siV,0);
READ_RREG_t(RtV, RtN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_nt_new_ai(SLOT_WRAP(gen_helper_V6_vS32b_nt_new_ai(cpu_env, RtV, OsN, siV, slot));,
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));})
FREE_EA;
FREE_REG_t(RtV);
FREE_NEW_OREG(OsN);
FREE_IMM(siV);
/* V6_vS32b_nt_new_ai */
},
void HELPER(V6_vS32b_nt_new_ai)(CPUHexagonState *env, int32_t RtV, int32_t OsN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));}
})
DEF_QEMU(V6_vS32b_nt_new_ppu,{ fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); },
DEF_HELPER_5(V6_vS32b_nt_new_ppu, s32, env, s32, s32, s32, i32),
{
/* V6_vS32b_nt_new_ppu */
DECL_EA;
DECL_RREG_x(TCGv, RxV, RxN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_nt_new_ppu(SLOT_WRAP(gen_helper_V6_vS32b_nt_new_ppu(RxV, cpu_env, RxV, MuV, OsN, slot));,
{ fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_OREG(OsN);
/* V6_vS32b_nt_new_ppu */
},
int32_t HELPER(V6_vS32b_nt_new_ppu)(CPUHexagonState *env, int32_t RxV, int32_t MuV, int32_t OsN, uint32_t slot)
{
size4u_t EA;
{ fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); }
return RxV;
})
DEF_QEMU(V6_vS32b_nt_new_pred_pi,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_nt_new_pred_pi, s32, env, s32, s32, s32, s32, i32),
{
/* V6_vS32b_nt_new_pred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_nt_new_pred_pi(SLOT_WRAP(gen_helper_V6_vS32b_nt_new_pred_pi(RxV, cpu_env, PvV, RxV, OsN, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_NEW_OREG(OsN);
FREE_IMM(siV);
/* V6_vS32b_nt_new_pred_pi */
},
int32_t HELPER(V6_vS32b_nt_new_pred_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t OsN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32b_nt_new_pred_ai,{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));} else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_nt_new_pred_ai, void, env, s32, s32, s32, s32, i32),
{
/* V6_vS32b_nt_new_pred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_nt_new_pred_ai(SLOT_WRAP(gen_helper_V6_vS32b_nt_new_pred_ai(cpu_env, PvV, RtV, OsN, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));} else {CANCEL;}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_NEW_OREG(OsN);
FREE_IMM(siV);
/* V6_vS32b_nt_new_pred_ai */
},
void HELPER(V6_vS32b_nt_new_pred_ai)(CPUHexagonState *env, int32_t PvV, int32_t RtV, int32_t OsN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));} else {CANCEL;}}
})
DEF_QEMU(V6_vS32b_nt_new_pred_ppu,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_nt_new_pred_ppu, s32, env, s32, s32, s32, s32, i32),
{
/* V6_vS32b_nt_new_pred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_nt_new_pred_ppu(SLOT_WRAP(gen_helper_V6_vS32b_nt_new_pred_ppu(RxV, cpu_env, PvV, RxV, MuV, OsN, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_OREG(OsN);
/* V6_vS32b_nt_new_pred_ppu */
},
int32_t HELPER(V6_vS32b_nt_new_pred_ppu)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t MuV, int32_t OsN, uint32_t slot)
{
size4u_t EA;
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32b_nt_new_npred_pi,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_nt_new_npred_pi, s32, env, s32, s32, s32, s32, i32),
{
/* V6_vS32b_nt_new_npred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_nt_new_npred_pi(SLOT_WRAP(gen_helper_V6_vS32b_nt_new_npred_pi(RxV, cpu_env, PvV, RxV, OsN, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_NEW_OREG(OsN);
FREE_IMM(siV);
/* V6_vS32b_nt_new_npred_pi */
},
int32_t HELPER(V6_vS32b_nt_new_npred_pi)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t OsN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32b_nt_new_npred_ai,{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));} else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_nt_new_npred_ai, void, env, s32, s32, s32, s32, i32),
{
/* V6_vS32b_nt_new_npred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_nt_new_npred_ai(SLOT_WRAP(gen_helper_V6_vS32b_nt_new_npred_ai(cpu_env, PvV, RtV, OsN, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));} else {CANCEL;}})
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_t(RtV);
FREE_NEW_OREG(OsN);
FREE_IMM(siV);
/* V6_vS32b_nt_new_npred_ai */
},
void HELPER(V6_vS32b_nt_new_npred_ai)(CPUHexagonState *env, int32_t PvV, int32_t RtV, int32_t OsN, int32_t siV, uint32_t slot)
{
size4u_t EA;
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMV(EA,fNEWVREG(OsN));} else {CANCEL;}}
})
DEF_QEMU(V6_vS32b_nt_new_npred_ppu,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vS32b_nt_new_npred_ppu, s32, env, s32, s32, s32, s32, i32),
{
/* V6_vS32b_nt_new_npred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_NEW_OREG(TCGv, OsN, OsX, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_NEW_OREG(OsN, OsX);
fWRAP_V6_vS32b_nt_new_npred_ppu(SLOT_WRAP(gen_helper_V6_vS32b_nt_new_npred_ppu(RxV, cpu_env, PvV, RxV, MuV, OsN, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_NEW_OREG(OsN);
/* V6_vS32b_nt_new_npred_ppu */
},
int32_t HELPER(V6_vS32b_nt_new_npred_ppu)(CPUHexagonState *env, int32_t PvV, int32_t RxV, int32_t MuV, int32_t OsN, uint32_t slot)
{
size4u_t EA;
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fSTOREMMV(EA,fNEWVREG(OsN)); fPM_M(RxV,MuV); } else {CANCEL;}}
return RxV;
})
DEF_QEMU(V6_vS32b_nt_qpred_pi,{ fEA_REG(RxV); fSTOREMMVQ(EA,VsV,QvV); fPM_I(RxV,siV*fVECSIZE()); },
DEF_HELPER_6(V6_vS32b_nt_qpred_pi, s32, env, ptr, s32, ptr, s32, i32),
{
/* V6_vS32b_nt_qpred_pi */
DECL_EA;
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_EXT_QREG(QvN,QvV,0);
READ_RREG_x(RxV, RxN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nt_qpred_pi(SLOT_WRAP(gen_helper_V6_vS32b_nt_qpred_pi(RxV, cpu_env, QvV, RxV, VsV, siV, slot));,
{ fEA_REG(RxV); fSTOREMMVQ(EA,VsV,QvV); fPM_I(RxV,siV*fVECSIZE()); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_QREG(QvV);
FREE_REG_x(RxV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_nt_qpred_pi */
},
int32_t HELPER(V6_vS32b_nt_qpred_pi)(CPUHexagonState *env, void *QvV_void, int32_t RxV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* QvV is *(mmvector_t*)(QvV_void) */
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_REG(RxV); fSTOREMMVQ(EA,VsV,QvV); fPM_I(RxV,siV*fVECSIZE()); }
return RxV;
})
DEF_QEMU(V6_vS32b_nt_qpred_ai,{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVQ(EA,VsV,QvV);},
DEF_HELPER_6(V6_vS32b_nt_qpred_ai, void, env, ptr, s32, ptr, s32, i32),
{
/* V6_vS32b_nt_qpred_ai */
DECL_EA;
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_EXT_QREG(QvN,QvV,0);
READ_RREG_t(RtV, RtN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nt_qpred_ai(SLOT_WRAP(gen_helper_V6_vS32b_nt_qpred_ai(cpu_env, QvV, RtV, VsV, siV, slot));,
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVQ(EA,VsV,QvV);})
FREE_EA;
FREE_EXT_QREG(QvV);
FREE_REG_t(RtV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_nt_qpred_ai */
},
void HELPER(V6_vS32b_nt_qpred_ai)(CPUHexagonState *env, void *QvV_void, int32_t RtV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* QvV is *(mmvector_t*)(QvV_void) */
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVQ(EA,VsV,QvV);}
})
DEF_QEMU(V6_vS32b_nt_qpred_ppu,{ fEA_REG(RxV); fSTOREMMVQ(EA,VsV,QvV); fPM_M(RxV,MuV); },
DEF_HELPER_6(V6_vS32b_nt_qpred_ppu, s32, env, ptr, s32, s32, ptr, i32),
{
/* V6_vS32b_nt_qpred_ppu */
DECL_EA;
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_EXT_VREG(VsV, VsN, 3, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nt_qpred_ppu(SLOT_WRAP(gen_helper_V6_vS32b_nt_qpred_ppu(RxV, cpu_env, QvV, RxV, MuV, VsV, slot));,
{ fEA_REG(RxV); fSTOREMMVQ(EA,VsV,QvV); fPM_M(RxV,MuV); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_QREG(QvV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VsV);
/* V6_vS32b_nt_qpred_ppu */
},
int32_t HELPER(V6_vS32b_nt_qpred_ppu)(CPUHexagonState *env, void *QvV_void, int32_t RxV, int32_t MuV, void *VsV_void, uint32_t slot)
{
size4u_t EA;
/* QvV is *(mmvector_t*)(QvV_void) */
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_REG(RxV); fSTOREMMVQ(EA,VsV,QvV); fPM_M(RxV,MuV); }
return RxV;
})
DEF_QEMU(V6_vS32b_nt_nqpred_pi,{ fEA_REG(RxV); fSTOREMMVNQ(EA,VsV,QvV); fPM_I(RxV,siV*fVECSIZE()); },
DEF_HELPER_6(V6_vS32b_nt_nqpred_pi, s32, env, ptr, s32, ptr, s32, i32),
{
/* V6_vS32b_nt_nqpred_pi */
DECL_EA;
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_EXT_QREG(QvN,QvV,0);
READ_RREG_x(RxV, RxN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nt_nqpred_pi(SLOT_WRAP(gen_helper_V6_vS32b_nt_nqpred_pi(RxV, cpu_env, QvV, RxV, VsV, siV, slot));,
{ fEA_REG(RxV); fSTOREMMVNQ(EA,VsV,QvV); fPM_I(RxV,siV*fVECSIZE()); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_QREG(QvV);
FREE_REG_x(RxV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_nt_nqpred_pi */
},
int32_t HELPER(V6_vS32b_nt_nqpred_pi)(CPUHexagonState *env, void *QvV_void, int32_t RxV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* QvV is *(mmvector_t*)(QvV_void) */
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_REG(RxV); fSTOREMMVNQ(EA,VsV,QvV); fPM_I(RxV,siV*fVECSIZE()); }
return RxV;
})
DEF_QEMU(V6_vS32b_nt_nqpred_ai,{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVNQ(EA,VsV,QvV);},
DEF_HELPER_6(V6_vS32b_nt_nqpred_ai, void, env, ptr, s32, ptr, s32, i32),
{
/* V6_vS32b_nt_nqpred_ai */
DECL_EA;
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_EXT_VREG(VsV, VsN, 2, 0);
DECL_IMM(siV,0);
READ_EXT_QREG(QvN,QvV,0);
READ_RREG_t(RtV, RtN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nt_nqpred_ai(SLOT_WRAP(gen_helper_V6_vS32b_nt_nqpred_ai(cpu_env, QvV, RtV, VsV, siV, slot));,
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVNQ(EA,VsV,QvV);})
FREE_EA;
FREE_EXT_QREG(QvV);
FREE_REG_t(RtV);
FREE_EXT_VREG(VsV);
FREE_IMM(siV);
/* V6_vS32b_nt_nqpred_ai */
},
void HELPER(V6_vS32b_nt_nqpred_ai)(CPUHexagonState *env, void *QvV_void, int32_t RtV, void *VsV_void, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* QvV is *(mmvector_t*)(QvV_void) */
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_RI(RtV,siV*fVECSIZE()); fSTOREMMVNQ(EA,VsV,QvV);}
})
DEF_QEMU(V6_vS32b_nt_nqpred_ppu,{ fEA_REG(RxV); fSTOREMMVNQ(EA,VsV,QvV); fPM_M(RxV,MuV); },
DEF_HELPER_6(V6_vS32b_nt_nqpred_ppu, s32, env, ptr, s32, s32, ptr, i32),
{
/* V6_vS32b_nt_nqpred_ppu */
DECL_EA;
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_EXT_VREG(VsV, VsN, 3, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VsN,VsV,0);
fWRAP_V6_vS32b_nt_nqpred_ppu(SLOT_WRAP(gen_helper_V6_vS32b_nt_nqpred_ppu(RxV, cpu_env, QvV, RxV, MuV, VsV, slot));,
{ fEA_REG(RxV); fSTOREMMVNQ(EA,VsV,QvV); fPM_M(RxV,MuV); })
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_QREG(QvV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VsV);
/* V6_vS32b_nt_nqpred_ppu */
},
int32_t HELPER(V6_vS32b_nt_nqpred_ppu)(CPUHexagonState *env, void *QvV_void, int32_t RxV, int32_t MuV, void *VsV_void, uint32_t slot)
{
size4u_t EA;
/* QvV is *(mmvector_t*)(QvV_void) */
/* VsV is *(mmvector_t*)(VsV_void) */
{ fEA_REG(RxV); fSTOREMMVNQ(EA,VsV,QvV); fPM_M(RxV,MuV); }
return RxV;
})
DEF_QEMU(V6_vL32b_nt_pi,{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); },
DEF_HELPER_5(V6_vL32b_nt_pi, s32, env, ptr, s32, s32, i32),
{
/* V6_vL32b_nt_pi */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_nt_pi(SLOT_WRAP(gen_helper_V6_vL32b_nt_pi(RxV, cpu_env, VdV, RxV, siV, slot));,
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_nt_pi */
},
int32_t HELPER(V6_vL32b_nt_pi)(CPUHexagonState *env, void *VdV_void, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); }
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_nt_ai,{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);},
DEF_HELPER_5(V6_vL32b_nt_ai, void, env, ptr, s32, s32, i32),
{
/* V6_vL32b_nt_ai */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_nt_ai(SLOT_WRAP(gen_helper_V6_vL32b_nt_ai(cpu_env, VdV, RtV, siV, slot));,
{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);})
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_nt_ai */
},
void HELPER(V6_vL32b_nt_ai)(CPUHexagonState *env, void *VdV_void, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_nt_ppu,{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); },
DEF_HELPER_5(V6_vL32b_nt_ppu, s32, env, ptr, s32, s32, i32),
{
/* V6_vL32b_nt_ppu */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_nt_ppu(SLOT_WRAP(gen_helper_V6_vL32b_nt_ppu(RxV, cpu_env, VdV, RxV, MuV, slot));,
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_nt_ppu */
},
int32_t HELPER(V6_vL32b_nt_ppu)(CPUHexagonState *env, void *VdV_void, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); }
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_nt_cur_pi,{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); },
DEF_HELPER_5(V6_vL32b_nt_cur_pi, s32, env, ptr, s32, s32, i32),
{
/* V6_vL32b_nt_cur_pi */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_nt_cur_pi(SLOT_WRAP(gen_helper_V6_vL32b_nt_cur_pi(RxV, cpu_env, VdV, RxV, siV, slot));,
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); })
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_nt_cur_pi */
},
int32_t HELPER(V6_vL32b_nt_cur_pi)(CPUHexagonState *env, void *VdV_void, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); }
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_nt_cur_ai,{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);},
DEF_HELPER_5(V6_vL32b_nt_cur_ai, void, env, ptr, s32, s32, i32),
{
/* V6_vL32b_nt_cur_ai */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_nt_cur_ai(SLOT_WRAP(gen_helper_V6_vL32b_nt_cur_ai(cpu_env, VdV, RtV, siV, slot));,
{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);})
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_nt_cur_ai */
},
void HELPER(V6_vL32b_nt_cur_ai)(CPUHexagonState *env, void *VdV_void, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_nt_cur_ppu,{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); },
DEF_HELPER_5(V6_vL32b_nt_cur_ppu, s32, env, ptr, s32, s32, i32),
{
/* V6_vL32b_nt_cur_ppu */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_nt_cur_ppu(SLOT_WRAP(gen_helper_V6_vL32b_nt_cur_ppu(RxV, cpu_env, VdV, RxV, MuV, slot));,
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); })
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_nt_cur_ppu */
},
int32_t HELPER(V6_vL32b_nt_cur_ppu)(CPUHexagonState *env, void *VdV_void, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); }
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_nt_tmp_pi,{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); },
DEF_HELPER_5(V6_vL32b_nt_tmp_pi, s32, env, ptr, s32, s32, i32),
{
/* V6_vL32b_nt_tmp_pi */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_nt_tmp_pi(SLOT_WRAP(gen_helper_V6_vL32b_nt_tmp_pi(RxV, cpu_env, VdV, RxV, siV, slot));,
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); })
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_nt_tmp_pi */
},
int32_t HELPER(V6_vL32b_nt_tmp_pi)(CPUHexagonState *env, void *VdV_void, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_I(RxV,siV*fVECSIZE()); }
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_nt_tmp_ai,{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);},
DEF_HELPER_5(V6_vL32b_nt_tmp_ai, void, env, ptr, s32, s32, i32),
{
/* V6_vL32b_nt_tmp_ai */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_IMM(siV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_nt_tmp_ai(SLOT_WRAP(gen_helper_V6_vL32b_nt_tmp_ai(cpu_env, VdV, RtV, siV, slot));,
{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);})
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_nt_tmp_ai */
},
void HELPER(V6_vL32b_nt_tmp_ai)(CPUHexagonState *env, void *VdV_void, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_nt_tmp_ppu,{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); },
DEF_HELPER_5(V6_vL32b_nt_tmp_ppu, s32, env, ptr, s32, s32, i32),
{
/* V6_vL32b_nt_tmp_ppu */
DECL_EA;
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_x(TCGv, RxV, RxN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_nt_tmp_ppu(SLOT_WRAP(gen_helper_V6_vL32b_nt_tmp_ppu(RxV, cpu_env, VdV, RxV, MuV, slot));,
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); })
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_nt_tmp_ppu */
},
int32_t HELPER(V6_vL32b_nt_tmp_ppu)(CPUHexagonState *env, void *VdV_void, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ fEA_REG(RxV); fLOADMMV(EA,VdV); fPM_M(RxV,MuV); }
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_nt_pred_pi,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_pred_pi, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_pred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_nt_pred_pi(SLOT_WRAP(gen_helper_V6_vL32b_nt_pred_pi(RxV, cpu_env, VdV, PvV, RxV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_nt_pred_pi */
},
int32_t HELPER(V6_vL32b_nt_pred_pi)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_nt_pred_ai,{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_pred_ai, void, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_pred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_nt_pred_ai(SLOT_WRAP(gen_helper_V6_vL32b_nt_pred_ai(cpu_env, VdV, PvV, RtV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_nt_pred_ai */
},
void HELPER(V6_vL32b_nt_pred_ai)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_nt_pred_ppu,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_pred_ppu, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_pred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_MREG_u(TCGv, MuV, MuN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_nt_pred_ppu(SLOT_WRAP(gen_helper_V6_vL32b_nt_pred_ppu(RxV, cpu_env, VdV, PvV, RxV, MuV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_nt_pred_ppu */
},
int32_t HELPER(V6_vL32b_nt_pred_ppu)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_nt_npred_pi,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_npred_pi, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_npred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_nt_npred_pi(SLOT_WRAP(gen_helper_V6_vL32b_nt_npred_pi(RxV, cpu_env, VdV, PvV, RxV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_nt_npred_pi */
},
int32_t HELPER(V6_vL32b_nt_npred_pi)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_nt_npred_ai,{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_npred_ai, void, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_npred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_nt_npred_ai(SLOT_WRAP(gen_helper_V6_vL32b_nt_npred_ai(cpu_env, VdV, PvV, RtV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_nt_npred_ai */
},
void HELPER(V6_vL32b_nt_npred_ai)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_nt_npred_ppu,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_npred_ppu, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_npred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_MREG_u(TCGv, MuV, MuN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_nt_npred_ppu(SLOT_WRAP(gen_helper_V6_vL32b_nt_npred_ppu(RxV, cpu_env, VdV, PvV, RxV, MuV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_nt_npred_ppu */
},
int32_t HELPER(V6_vL32b_nt_npred_ppu)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_nt_cur_pred_pi,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_cur_pred_pi, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_cur_pred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_nt_cur_pred_pi(SLOT_WRAP(gen_helper_V6_vL32b_nt_cur_pred_pi(RxV, cpu_env, VdV, PvV, RxV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_nt_cur_pred_pi */
},
int32_t HELPER(V6_vL32b_nt_cur_pred_pi)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_nt_cur_pred_ai,{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_cur_pred_ai, void, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_cur_pred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_nt_cur_pred_ai(SLOT_WRAP(gen_helper_V6_vL32b_nt_cur_pred_ai(cpu_env, VdV, PvV, RtV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_nt_cur_pred_ai */
},
void HELPER(V6_vL32b_nt_cur_pred_ai)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_nt_cur_pred_ppu,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_cur_pred_ppu, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_cur_pred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_MREG_u(TCGv, MuV, MuN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_nt_cur_pred_ppu(SLOT_WRAP(gen_helper_V6_vL32b_nt_cur_pred_ppu(RxV, cpu_env, VdV, PvV, RxV, MuV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_nt_cur_pred_ppu */
},
int32_t HELPER(V6_vL32b_nt_cur_pred_ppu)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_nt_cur_npred_pi,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_cur_npred_pi, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_cur_npred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_nt_cur_npred_pi(SLOT_WRAP(gen_helper_V6_vL32b_nt_cur_npred_pi(RxV, cpu_env, VdV, PvV, RxV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_nt_cur_npred_pi */
},
int32_t HELPER(V6_vL32b_nt_cur_npred_pi)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_nt_cur_npred_ai,{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_cur_npred_ai, void, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_cur_npred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_nt_cur_npred_ai(SLOT_WRAP(gen_helper_V6_vL32b_nt_cur_npred_ai(cpu_env, VdV, PvV, RtV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_nt_cur_npred_ai */
},
void HELPER(V6_vL32b_nt_cur_npred_ai)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_nt_cur_npred_ppu,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_cur_npred_ppu, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_cur_npred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_MREG_u(TCGv, MuV, MuN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_nt_cur_npred_ppu(SLOT_WRAP(gen_helper_V6_vL32b_nt_cur_npred_ppu(RxV, cpu_env, VdV, PvV, RxV, MuV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_NEW);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_nt_cur_npred_ppu */
},
int32_t HELPER(V6_vL32b_nt_cur_npred_ppu)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_nt_tmp_pred_pi,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_tmp_pred_pi, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_tmp_pred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_nt_tmp_pred_pi(SLOT_WRAP(gen_helper_V6_vL32b_nt_tmp_pred_pi(RxV, cpu_env, VdV, PvV, RxV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_nt_tmp_pred_pi */
},
int32_t HELPER(V6_vL32b_nt_tmp_pred_pi)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_nt_tmp_pred_ai,{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_tmp_pred_ai, void, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_tmp_pred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_nt_tmp_pred_ai(SLOT_WRAP(gen_helper_V6_vL32b_nt_tmp_pred_ai(cpu_env, VdV, PvV, RtV, siV, slot));,
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_nt_tmp_pred_ai */
},
void HELPER(V6_vL32b_nt_tmp_pred_ai)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_nt_tmp_pred_ppu,{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_tmp_pred_ppu, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_tmp_pred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_MREG_u(TCGv, MuV, MuN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_nt_tmp_pred_ppu(SLOT_WRAP(gen_helper_V6_vL32b_nt_tmp_pred_ppu(RxV, cpu_env, VdV, PvV, RxV, MuV, slot));,
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_nt_tmp_pred_ppu */
},
int32_t HELPER(V6_vL32b_nt_tmp_pred_ppu)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLD(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_nt_tmp_npred_pi,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_tmp_npred_pi, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_tmp_npred_pi */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
fWRAP_V6_vL32b_nt_tmp_npred_pi(SLOT_WRAP(gen_helper_V6_vL32b_nt_tmp_npred_pi(RxV, cpu_env, VdV, PvV, RxV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_IMM(siV);
/* V6_vL32b_nt_tmp_npred_pi */
},
int32_t HELPER(V6_vL32b_nt_tmp_npred_pi)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_I(RxV,siV*fVECSIZE()); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_vL32b_nt_tmp_npred_ai,{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_tmp_npred_ai, void, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_tmp_npred_ai */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(siV,0);
READ_PREG_v(PvV, PvN);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vL32b_nt_tmp_npred_ai(SLOT_WRAP(gen_helper_V6_vL32b_nt_tmp_npred_ai(cpu_env, VdV, PvV, RtV, siV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
FREE_IMM(siV);
/* V6_vL32b_nt_tmp_npred_ai */
},
void HELPER(V6_vL32b_nt_tmp_npred_ai)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RtV, int32_t siV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_RI(RtV,siV*fVECSIZE()); fLOADMMV(EA,VdV);;} else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vL32b_nt_tmp_npred_ppu,{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}},
DEF_HELPER_6(V6_vL32b_nt_tmp_npred_ppu, s32, env, ptr, s32, s32, s32, i32),
{
/* V6_vL32b_nt_tmp_npred_ppu */
DECL_EA;
DECL_PREG_v(TCGv, PvV, PvN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_RREG_x(TCGv, RxV, RxN, 2, 0);
DECL_MREG_u(TCGv, MuV, MuN, 3, 0);
READ_PREG_v(PvV, PvN);
READ_RREG_x(RxV, RxN);
READ_MREG_u(MuV, MuN);
fWRAP_V6_vL32b_nt_tmp_npred_ppu(SLOT_WRAP(gen_helper_V6_vL32b_nt_tmp_npred_ppu(RxV, cpu_env, VdV, PvV, RxV, MuV, slot));,
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}})
WRITE_EXT_VREG(VdN,VdV,EXT_TMP);
WRITE_RREG(RxN,RxV);
FREE_EA;
FREE_REG_v(PvV);
FREE_EXT_VREG(VdV);
FREE_REG_x(RxV);
FREE_REG_u(MuV);
/* V6_vL32b_nt_tmp_npred_ppu */
},
int32_t HELPER(V6_vL32b_nt_tmp_npred_ppu)(CPUHexagonState *env, void *VdV_void, int32_t PvV, int32_t RxV, int32_t MuV, uint32_t slot)
{
size4u_t EA;
/* VdV is *(mmvector_t*)VdV_void */
{ if (fLSBOLDNOT(PvV)) { fEA_REG(RxV); fLOADMMV(EA,VdV);; fPM_M(RxV,MuV); } else {CANCEL;}}
/* VdV is *(mmvector_t*)VdV_void */
return RxV;
})
DEF_QEMU(V6_valignb,{ unsigned shift = RtV & (fVBYTES()-1); fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) { VdV.ub[i] = (i+shift>=fVBYTES()) ? VuV.ub[i+shift-fVBYTES()] : VvV.ub[i+shift]; } },
DEF_HELPER_6(V6_valignb, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_valignb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_valignb(SLOT_WRAP(gen_helper_V6_valignb(cpu_env, VdV, VuV, VvV, RtV, slot));,
{ unsigned shift = RtV & (fVBYTES()-1); fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) { VdV.ub[i] = (i+shift>=fVBYTES()) ? VuV.ub[i+shift-fVBYTES()] : VvV.ub[i+shift]; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_valignb */
},
void HELPER(V6_valignb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ unsigned shift = RtV & (fVBYTES()-1); fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) { VdV.ub[i] = (i+shift>=fVBYTES()) ? VuV.ub[i+shift-fVBYTES()] : VvV.ub[i+shift]; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vlalignb,{ unsigned shift = fVBYTES() - (RtV & (fVBYTES()-1)); fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) { VdV.ub[i] = (i+shift>=fVBYTES()) ? VuV.ub[i+shift-fVBYTES()] : VvV.ub[i+shift]; } },
DEF_HELPER_6(V6_vlalignb, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vlalignb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vlalignb(SLOT_WRAP(gen_helper_V6_vlalignb(cpu_env, VdV, VuV, VvV, RtV, slot));,
{ unsigned shift = fVBYTES() - (RtV & (fVBYTES()-1)); fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) { VdV.ub[i] = (i+shift>=fVBYTES()) ? VuV.ub[i+shift-fVBYTES()] : VvV.ub[i+shift]; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vlalignb */
},
void HELPER(V6_vlalignb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ unsigned shift = fVBYTES() - (RtV & (fVBYTES()-1)); fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) { VdV.ub[i] = (i+shift>=fVBYTES()) ? VuV.ub[i+shift-fVBYTES()] : VvV.ub[i+shift]; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_valignbi,{ fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) { VdV.ub[i] = (i+uiV>=fVBYTES()) ? VuV.ub[i+uiV-fVBYTES()] : VvV.ub[i+uiV]; } },
DEF_HELPER_6(V6_valignbi, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_valignbi */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_IMM(uiV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_valignbi(SLOT_WRAP(gen_helper_V6_valignbi(cpu_env, VdV, VuV, VvV, uiV, slot));,
{ fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) { VdV.ub[i] = (i+uiV>=fVBYTES()) ? VuV.ub[i+uiV-fVBYTES()] : VvV.ub[i+uiV]; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_IMM(uiV);
/* V6_valignbi */
},
void HELPER(V6_valignbi)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t uiV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) { VdV.ub[i] = (i+uiV>=fVBYTES()) ? VuV.ub[i+uiV-fVBYTES()] : VvV.ub[i+uiV]; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vlalignbi,{ unsigned shift = fVBYTES() - uiV; fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) { VdV.ub[i] = (i+shift>=fVBYTES()) ? VuV.ub[i+shift-fVBYTES()] : VvV.ub[i+shift]; } },
DEF_HELPER_6(V6_vlalignbi, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vlalignbi */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_IMM(uiV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vlalignbi(SLOT_WRAP(gen_helper_V6_vlalignbi(cpu_env, VdV, VuV, VvV, uiV, slot));,
{ unsigned shift = fVBYTES() - uiV; fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) { VdV.ub[i] = (i+shift>=fVBYTES()) ? VuV.ub[i+shift-fVBYTES()] : VvV.ub[i+shift]; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_IMM(uiV);
/* V6_vlalignbi */
},
void HELPER(V6_vlalignbi)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t uiV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ unsigned shift = fVBYTES() - uiV; fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) { VdV.ub[i] = (i+shift>=fVBYTES()) ? VuV.ub[i+shift-fVBYTES()] : VvV.ub[i+shift]; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vror,{ fHIDE(int k;) for (k=0;k<fVBYTES();k++) { VdV.ub[k] = VuV.ub[(k+RtV)&(fVBYTES()-1)]; } },
DEF_HELPER_5(V6_vror, void, env, ptr, ptr, s32, i32),
{
/* V6_vror */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vror(SLOT_WRAP(gen_helper_V6_vror(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int k;) for (k=0;k<fVBYTES();k++) { VdV.ub[k] = VuV.ub[(k+RtV)&(fVBYTES()-1)]; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vror */
},
void HELPER(V6_vror)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int k;) for (k=0;k<fVBYTES();k++) { VdV.ub[k] = VuV.ub[(k+RtV)&(fVBYTES()-1)]; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vunpackub,{ fHIDE(int i;) fVFOREACH(8, i) { fVARRAY_ELEMENT_ACCESS(VddV, uh, i) = fZE8_16( VuV.ub[i]) ; } },
DEF_HELPER_4(V6_vunpackub, void, env, ptr, ptr, i32),
{
/* V6_vunpackub */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vunpackub(SLOT_WRAP(gen_helper_V6_vunpackub(cpu_env, VddV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fVARRAY_ELEMENT_ACCESS(VddV, uh, i) = fZE8_16( VuV.ub[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
/* V6_vunpackub */
},
void HELPER(V6_vunpackub)(CPUHexagonState *env, void *VddV_void, void *VuV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fVARRAY_ELEMENT_ACCESS(VddV, uh, i) = fZE8_16( VuV.ub[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vunpackb,{ fHIDE(int i;) fVFOREACH(8, i) { fVARRAY_ELEMENT_ACCESS(VddV, h, i) = fSE8_16( VuV.b[i] ) ; } },
DEF_HELPER_4(V6_vunpackb, void, env, ptr, ptr, i32),
{
/* V6_vunpackb */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vunpackb(SLOT_WRAP(gen_helper_V6_vunpackb(cpu_env, VddV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fVARRAY_ELEMENT_ACCESS(VddV, h, i) = fSE8_16( VuV.b[i] ) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
/* V6_vunpackb */
},
void HELPER(V6_vunpackb)(CPUHexagonState *env, void *VddV_void, void *VuV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fVARRAY_ELEMENT_ACCESS(VddV, h, i) = fSE8_16( VuV.b[i] ) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vunpackuh,{ fHIDE(int i;) fVFOREACH(16, i) { fVARRAY_ELEMENT_ACCESS(VddV, uw, i) = fZE16_32(VuV.uh[i]) ; } },
DEF_HELPER_4(V6_vunpackuh, void, env, ptr, ptr, i32),
{
/* V6_vunpackuh */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vunpackuh(SLOT_WRAP(gen_helper_V6_vunpackuh(cpu_env, VddV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fVARRAY_ELEMENT_ACCESS(VddV, uw, i) = fZE16_32(VuV.uh[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
/* V6_vunpackuh */
},
void HELPER(V6_vunpackuh)(CPUHexagonState *env, void *VddV_void, void *VuV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fVARRAY_ELEMENT_ACCESS(VddV, uw, i) = fZE16_32(VuV.uh[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vunpackh,{ fHIDE(int i;) fVFOREACH(16, i) { fVARRAY_ELEMENT_ACCESS(VddV, w, i) = fSE16_32(VuV.h[i] ) ; } },
DEF_HELPER_4(V6_vunpackh, void, env, ptr, ptr, i32),
{
/* V6_vunpackh */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vunpackh(SLOT_WRAP(gen_helper_V6_vunpackh(cpu_env, VddV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fVARRAY_ELEMENT_ACCESS(VddV, w, i) = fSE16_32(VuV.h[i] ) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
/* V6_vunpackh */
},
void HELPER(V6_vunpackh)(CPUHexagonState *env, void *VddV_void, void *VuV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fVARRAY_ELEMENT_ACCESS(VddV, w, i) = fSE16_32(VuV.h[i] ) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vunpackob,{ fHIDE(int i;) fVFOREACH(8, i) { fVARRAY_ELEMENT_ACCESS(VxxV, uh, i) |= fZE8_16( VuV.ub[i])<<8 ; } },
DEF_HELPER_4(V6_vunpackob, void, env, ptr, ptr, i32),
{
/* V6_vunpackob */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vunpackob(SLOT_WRAP(gen_helper_V6_vunpackob(cpu_env, VxxV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fVARRAY_ELEMENT_ACCESS(VxxV, uh, i) |= fZE8_16( VuV.ub[i])<<8 ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
/* V6_vunpackob */
},
void HELPER(V6_vunpackob)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, uint32_t slot)
{
/* VxxV2 is *(mmvector_pair_t*)(VxxV2_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fVARRAY_ELEMENT_ACCESS(VxxV, uh, i) |= fZE8_16( VuV.ub[i])<<8 ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vunpackoh,{ fHIDE(int i;) fVFOREACH(16, i) { fVARRAY_ELEMENT_ACCESS(VxxV, uw, i) |= fZE16_32(VuV.uh[i])<<16 ; } },
DEF_HELPER_4(V6_vunpackoh, void, env, ptr, ptr, i32),
{
/* V6_vunpackoh */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vunpackoh(SLOT_WRAP(gen_helper_V6_vunpackoh(cpu_env, VxxV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fVARRAY_ELEMENT_ACCESS(VxxV, uw, i) |= fZE16_32(VuV.uh[i])<<16 ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
/* V6_vunpackoh */
},
void HELPER(V6_vunpackoh)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, uint32_t slot)
{
/* VxxV2 is *(mmvector_pair_t*)(VxxV2_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fVARRAY_ELEMENT_ACCESS(VxxV, uw, i) |= fZE16_32(VuV.uh[i])<<16 ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vpackeb,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.ub[i] = fGETUBYTE(0, VvV.uh[i]); VdV.ub[i+fVELEM(16)] = fGETUBYTE(0, VuV.uh[i]) ; } },
DEF_HELPER_5(V6_vpackeb, void, env, ptr, ptr, ptr, i32),
{
/* V6_vpackeb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vpackeb(SLOT_WRAP(gen_helper_V6_vpackeb(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.ub[i] = fGETUBYTE(0, VvV.uh[i]); VdV.ub[i+fVELEM(16)] = fGETUBYTE(0, VuV.uh[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vpackeb */
},
void HELPER(V6_vpackeb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.ub[i] = fGETUBYTE(0, VvV.uh[i]); VdV.ub[i+fVELEM(16)] = fGETUBYTE(0, VuV.uh[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vpackeh,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uh[i] = fGETUHALF(0, VvV.uw[i]); VdV.uh[i+fVELEM(32)] = fGETUHALF(0, VuV.uw[i]) ; } },
DEF_HELPER_5(V6_vpackeh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vpackeh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vpackeh(SLOT_WRAP(gen_helper_V6_vpackeh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uh[i] = fGETUHALF(0, VvV.uw[i]); VdV.uh[i+fVELEM(32)] = fGETUHALF(0, VuV.uw[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vpackeh */
},
void HELPER(V6_vpackeh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uh[i] = fGETUHALF(0, VvV.uw[i]); VdV.uh[i+fVELEM(32)] = fGETUHALF(0, VuV.uw[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vpackob,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.ub[i] = fGETUBYTE(1, VvV.uh[i]); VdV.ub[i+fVELEM(16)] = fGETUBYTE(1, VuV.uh[i]) ; } },
DEF_HELPER_5(V6_vpackob, void, env, ptr, ptr, ptr, i32),
{
/* V6_vpackob */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vpackob(SLOT_WRAP(gen_helper_V6_vpackob(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.ub[i] = fGETUBYTE(1, VvV.uh[i]); VdV.ub[i+fVELEM(16)] = fGETUBYTE(1, VuV.uh[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vpackob */
},
void HELPER(V6_vpackob)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.ub[i] = fGETUBYTE(1, VvV.uh[i]); VdV.ub[i+fVELEM(16)] = fGETUBYTE(1, VuV.uh[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vpackoh,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uh[i] = fGETUHALF(1, VvV.uw[i]); VdV.uh[i+fVELEM(32)] = fGETUHALF(1, VuV.uw[i]) ; } },
DEF_HELPER_5(V6_vpackoh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vpackoh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vpackoh(SLOT_WRAP(gen_helper_V6_vpackoh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uh[i] = fGETUHALF(1, VvV.uw[i]); VdV.uh[i+fVELEM(32)] = fGETUHALF(1, VuV.uw[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vpackoh */
},
void HELPER(V6_vpackoh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uh[i] = fGETUHALF(1, VvV.uw[i]); VdV.uh[i+fVELEM(32)] = fGETUHALF(1, VuV.uw[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vpackhub_sat,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.ub[i] = fVSATUB(VvV.h[i]); VdV.ub[i+fVELEM(16)] = fVSATUB(VuV.h[i]) ; } },
DEF_HELPER_5(V6_vpackhub_sat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vpackhub_sat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vpackhub_sat(SLOT_WRAP(gen_helper_V6_vpackhub_sat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.ub[i] = fVSATUB(VvV.h[i]); VdV.ub[i+fVELEM(16)] = fVSATUB(VuV.h[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vpackhub_sat */
},
void HELPER(V6_vpackhub_sat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.ub[i] = fVSATUB(VvV.h[i]); VdV.ub[i+fVELEM(16)] = fVSATUB(VuV.h[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vpackhb_sat,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.b[i] = fVSATB(VvV.h[i]); VdV.b[i+fVELEM(16)] = fVSATB(VuV.h[i]) ; } },
DEF_HELPER_5(V6_vpackhb_sat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vpackhb_sat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vpackhb_sat(SLOT_WRAP(gen_helper_V6_vpackhb_sat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.b[i] = fVSATB(VvV.h[i]); VdV.b[i+fVELEM(16)] = fVSATB(VuV.h[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vpackhb_sat */
},
void HELPER(V6_vpackhb_sat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.b[i] = fVSATB(VvV.h[i]); VdV.b[i+fVELEM(16)] = fVSATB(VuV.h[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vpackwuh_sat,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uh[i] = fVSATUH(VvV.w[i]); VdV.uh[i+fVELEM(32)] = fVSATUH(VuV.w[i]) ; } },
DEF_HELPER_5(V6_vpackwuh_sat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vpackwuh_sat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vpackwuh_sat(SLOT_WRAP(gen_helper_V6_vpackwuh_sat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uh[i] = fVSATUH(VvV.w[i]); VdV.uh[i+fVELEM(32)] = fVSATUH(VuV.w[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vpackwuh_sat */
},
void HELPER(V6_vpackwuh_sat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uh[i] = fVSATUH(VvV.w[i]); VdV.uh[i+fVELEM(32)] = fVSATUH(VuV.w[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vpackwh_sat,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.h[i] = fVSATH(VvV.w[i]); VdV.h[i+fVELEM(32)] = fVSATH(VuV.w[i]) ; } },
DEF_HELPER_5(V6_vpackwh_sat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vpackwh_sat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vpackwh_sat(SLOT_WRAP(gen_helper_V6_vpackwh_sat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.h[i] = fVSATH(VvV.w[i]); VdV.h[i+fVELEM(32)] = fVSATH(VuV.w[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vpackwh_sat */
},
void HELPER(V6_vpackwh_sat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.h[i] = fVSATH(VvV.w[i]); VdV.h[i+fVELEM(32)] = fVSATH(VuV.w[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vzb,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fZE8_16(fGETUBYTE(0, VuV.uh[i])); VddV.v[1].uh[i] = fZE8_16(fGETUBYTE(1, VuV.uh[i])) ; } },
DEF_HELPER_4(V6_vzb, void, env, ptr, ptr, i32),
{
/* V6_vzb */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vzb(SLOT_WRAP(gen_helper_V6_vzb(cpu_env, VddV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fZE8_16(fGETUBYTE(0, VuV.uh[i])); VddV.v[1].uh[i] = fZE8_16(fGETUBYTE(1, VuV.uh[i])) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
/* V6_vzb */
},
void HELPER(V6_vzb)(CPUHexagonState *env, void *VddV_void, void *VuV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fZE8_16(fGETUBYTE(0, VuV.uh[i])); VddV.v[1].uh[i] = fZE8_16(fGETUBYTE(1, VuV.uh[i])) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vsb,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fSE8_16(fGETBYTE(0, VuV.h[i])); VddV.v[1].h[i] = fSE8_16(fGETBYTE(1, VuV.h[i])) ; } },
DEF_HELPER_4(V6_vsb, void, env, ptr, ptr, i32),
{
/* V6_vsb */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vsb(SLOT_WRAP(gen_helper_V6_vsb(cpu_env, VddV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fSE8_16(fGETBYTE(0, VuV.h[i])); VddV.v[1].h[i] = fSE8_16(fGETBYTE(1, VuV.h[i])) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
/* V6_vsb */
},
void HELPER(V6_vsb)(CPUHexagonState *env, void *VddV_void, void *VuV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fSE8_16(fGETBYTE(0, VuV.h[i])); VddV.v[1].h[i] = fSE8_16(fGETBYTE(1, VuV.h[i])) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vzh,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fZE16_32(fGETUHALF(0, VuV.uw[i])); VddV.v[1].uw[i] = fZE16_32(fGETUHALF(1, VuV.uw[i])) ; } },
DEF_HELPER_4(V6_vzh, void, env, ptr, ptr, i32),
{
/* V6_vzh */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vzh(SLOT_WRAP(gen_helper_V6_vzh(cpu_env, VddV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fZE16_32(fGETUHALF(0, VuV.uw[i])); VddV.v[1].uw[i] = fZE16_32(fGETUHALF(1, VuV.uw[i])) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
/* V6_vzh */
},
void HELPER(V6_vzh)(CPUHexagonState *env, void *VddV_void, void *VuV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fZE16_32(fGETUHALF(0, VuV.uw[i])); VddV.v[1].uw[i] = fZE16_32(fGETUHALF(1, VuV.uw[i])) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vsh,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fSE16_32(fGETHALF(0, VuV.w[i])); VddV.v[1].w[i] = fSE16_32(fGETHALF(1, VuV.w[i])) ; } },
DEF_HELPER_4(V6_vsh, void, env, ptr, ptr, i32),
{
/* V6_vsh */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vsh(SLOT_WRAP(gen_helper_V6_vsh(cpu_env, VddV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fSE16_32(fGETHALF(0, VuV.w[i])); VddV.v[1].w[i] = fSE16_32(fGETHALF(1, VuV.w[i])) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
/* V6_vsh */
},
void HELPER(V6_vsh)(CPUHexagonState *env, void *VddV_void, void *VuV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fSE16_32(fGETHALF(0, VuV.w[i])); VddV.v[1].w[i] = fSE16_32(fGETHALF(1, VuV.w[i])) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vdmpybus,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fMPY8US( fGETUBYTE(0, VuV.uh[i]), fGETBYTE((2*i) % 4, RtV)); VdV.h[i] += fMPY8US( fGETUBYTE(1, VuV.uh[i]), fGETBYTE((2*i+1)%4, RtV)) ; } },
DEF_HELPER_5(V6_vdmpybus, void, env, ptr, ptr, s32, i32),
{
/* V6_vdmpybus */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdmpybus(SLOT_WRAP(gen_helper_V6_vdmpybus(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fMPY8US( fGETUBYTE(0, VuV.uh[i]), fGETBYTE((2*i) % 4, RtV)); VdV.h[i] += fMPY8US( fGETUBYTE(1, VuV.uh[i]), fGETBYTE((2*i+1)%4, RtV)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vdmpybus */
},
void HELPER(V6_vdmpybus)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fMPY8US( fGETUBYTE(0, VuV.uh[i]), fGETBYTE((2*i) % 4, RtV)); VdV.h[i] += fMPY8US( fGETUBYTE(1, VuV.uh[i]), fGETBYTE((2*i+1)%4, RtV)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vdmpybus_acc,{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i] += fMPY8US( fGETUBYTE(0, VuV.uh[i]), fGETBYTE((2*i) % 4, RtV)); VxV.h[i] += fMPY8US( fGETUBYTE(1, VuV.uh[i]), fGETBYTE((2*i+1)%4, RtV)) ; } },
DEF_HELPER_5(V6_vdmpybus_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vdmpybus_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdmpybus_acc(SLOT_WRAP(gen_helper_V6_vdmpybus_acc(cpu_env, VxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i] += fMPY8US( fGETUBYTE(0, VuV.uh[i]), fGETBYTE((2*i) % 4, RtV)); VxV.h[i] += fMPY8US( fGETUBYTE(1, VuV.uh[i]), fGETBYTE((2*i+1)%4, RtV)) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vdmpybus_acc */
},
void HELPER(V6_vdmpybus_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i] += fMPY8US( fGETUBYTE(0, VuV.uh[i]), fGETBYTE((2*i) % 4, RtV)); VxV.h[i] += fMPY8US( fGETUBYTE(1, VuV.uh[i]), fGETBYTE((2*i+1)%4, RtV)) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vdmpybus_dv,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0, VuuV.v[0].uh[i]),fGETBYTE((2*i) % 4, RtV)); VddV.v[0].h[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]),fGETBYTE((2*i+1)%4, RtV)); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]),fGETBYTE((2*i) % 4, RtV)); VddV.v[1].h[i] += fMPY8US(fGETUBYTE(0, VuuV.v[1].uh[i]),fGETBYTE((2*i+1)%4, RtV)) ; } },
DEF_HELPER_5(V6_vdmpybus_dv, void, env, ptr, ptr, s32, i32),
{
/* V6_vdmpybus_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdmpybus_dv(SLOT_WRAP(gen_helper_V6_vdmpybus_dv(cpu_env, VddV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0, VuuV.v[0].uh[i]),fGETBYTE((2*i) % 4, RtV)); VddV.v[0].h[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]),fGETBYTE((2*i+1)%4, RtV)); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]),fGETBYTE((2*i) % 4, RtV)); VddV.v[1].h[i] += fMPY8US(fGETUBYTE(0, VuuV.v[1].uh[i]),fGETBYTE((2*i+1)%4, RtV)) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vdmpybus_dv */
},
void HELPER(V6_vdmpybus_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0, VuuV.v[0].uh[i]),fGETBYTE((2*i) % 4, RtV)); VddV.v[0].h[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]),fGETBYTE((2*i+1)%4, RtV)); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]),fGETBYTE((2*i) % 4, RtV)); VddV.v[1].h[i] += fMPY8US(fGETUBYTE(0, VuuV.v[1].uh[i]),fGETBYTE((2*i+1)%4, RtV)) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vdmpybus_dv_acc,{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(0, VuuV.v[0].uh[i]),fGETBYTE((2*i) % 4, RtV)); VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]),fGETBYTE((2*i+1)%4, RtV)); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]),fGETBYTE((2*i) % 4, RtV)); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(0, VuuV.v[1].uh[i]),fGETBYTE((2*i+1)%4, RtV)) ; } },
DEF_HELPER_5(V6_vdmpybus_dv_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vdmpybus_dv_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdmpybus_dv_acc(SLOT_WRAP(gen_helper_V6_vdmpybus_dv_acc(cpu_env, VxxV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(0, VuuV.v[0].uh[i]),fGETBYTE((2*i) % 4, RtV)); VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]),fGETBYTE((2*i+1)%4, RtV)); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]),fGETBYTE((2*i) % 4, RtV)); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(0, VuuV.v[1].uh[i]),fGETBYTE((2*i+1)%4, RtV)) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vdmpybus_dv_acc */
},
void HELPER(V6_vdmpybus_dv_acc)(CPUHexagonState *env, void *VxxV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(0, VuuV.v[0].uh[i]),fGETBYTE((2*i) % 4, RtV)); VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]),fGETBYTE((2*i+1)%4, RtV)); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]),fGETBYTE((2*i) % 4, RtV)); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(0, VuuV.v[1].uh[i]),fGETBYTE((2*i+1)%4, RtV)) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vdmpyhb,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY16SS(fGETHALF(0, VuV.w[i]),fGETBYTE((2*i+0)%4, RtV)); VdV.w[i] += fMPY16SS(fGETHALF(1, VuV.w[i]),fGETBYTE((2*i+1)%4, RtV)) ; } },
DEF_HELPER_5(V6_vdmpyhb, void, env, ptr, ptr, s32, i32),
{
/* V6_vdmpyhb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdmpyhb(SLOT_WRAP(gen_helper_V6_vdmpyhb(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY16SS(fGETHALF(0, VuV.w[i]),fGETBYTE((2*i+0)%4, RtV)); VdV.w[i] += fMPY16SS(fGETHALF(1, VuV.w[i]),fGETBYTE((2*i+1)%4, RtV)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vdmpyhb */
},
void HELPER(V6_vdmpyhb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY16SS(fGETHALF(0, VuV.w[i]),fGETBYTE((2*i+0)%4, RtV)); VdV.w[i] += fMPY16SS(fGETHALF(1, VuV.w[i]),fGETBYTE((2*i+1)%4, RtV)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vdmpyhb_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY16SS(fGETHALF(0, VuV.w[i]),fGETBYTE((2*i+0)%4, RtV)); VxV.w[i] += fMPY16SS(fGETHALF(1, VuV.w[i]),fGETBYTE((2*i+1)%4, RtV)) ; } },
DEF_HELPER_5(V6_vdmpyhb_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vdmpyhb_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdmpyhb_acc(SLOT_WRAP(gen_helper_V6_vdmpyhb_acc(cpu_env, VxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY16SS(fGETHALF(0, VuV.w[i]),fGETBYTE((2*i+0)%4, RtV)); VxV.w[i] += fMPY16SS(fGETHALF(1, VuV.w[i]),fGETBYTE((2*i+1)%4, RtV)) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vdmpyhb_acc */
},
void HELPER(V6_vdmpyhb_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY16SS(fGETHALF(0, VuV.w[i]),fGETBYTE((2*i+0)%4, RtV)); VxV.w[i] += fMPY16SS(fGETHALF(1, VuV.w[i]),fGETBYTE((2*i+1)%4, RtV)) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vdmpyhb_dv,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SS(fGETHALF(0, VuuV.v[0].w[i]),fGETBYTE((2*i+0)%4, RtV)); VddV.v[0].w[i] += fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]),fGETBYTE((2*i+1)%4, RtV)); VddV.v[1].w[i] = fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]),fGETBYTE((2*i+0)%4, RtV)); VddV.v[1].w[i] += fMPY16SS(fGETHALF(0, VuuV.v[1].w[i]),fGETBYTE((2*i+1)%4, RtV)) ; } },
DEF_HELPER_5(V6_vdmpyhb_dv, void, env, ptr, ptr, s32, i32),
{
/* V6_vdmpyhb_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdmpyhb_dv(SLOT_WRAP(gen_helper_V6_vdmpyhb_dv(cpu_env, VddV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SS(fGETHALF(0, VuuV.v[0].w[i]),fGETBYTE((2*i+0)%4, RtV)); VddV.v[0].w[i] += fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]),fGETBYTE((2*i+1)%4, RtV)); VddV.v[1].w[i] = fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]),fGETBYTE((2*i+0)%4, RtV)); VddV.v[1].w[i] += fMPY16SS(fGETHALF(0, VuuV.v[1].w[i]),fGETBYTE((2*i+1)%4, RtV)) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vdmpyhb_dv */
},
void HELPER(V6_vdmpyhb_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SS(fGETHALF(0, VuuV.v[0].w[i]),fGETBYTE((2*i+0)%4, RtV)); VddV.v[0].w[i] += fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]),fGETBYTE((2*i+1)%4, RtV)); VddV.v[1].w[i] = fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]),fGETBYTE((2*i+0)%4, RtV)); VddV.v[1].w[i] += fMPY16SS(fGETHALF(0, VuuV.v[1].w[i]),fGETBYTE((2*i+1)%4, RtV)) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vdmpyhb_dv_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY16SS(fGETHALF(0, VuuV.v[0].w[i]),fGETBYTE((2*i+0)%4, RtV)); VxxV.v[0].w[i] += fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]),fGETBYTE((2*i+1)%4, RtV)); VxxV.v[1].w[i] += fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]),fGETBYTE((2*i+0)%4, RtV)); VxxV.v[1].w[i] += fMPY16SS(fGETHALF(0, VuuV.v[1].w[i]),fGETBYTE((2*i+1)%4, RtV)) ; } },
DEF_HELPER_5(V6_vdmpyhb_dv_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vdmpyhb_dv_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdmpyhb_dv_acc(SLOT_WRAP(gen_helper_V6_vdmpyhb_dv_acc(cpu_env, VxxV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY16SS(fGETHALF(0, VuuV.v[0].w[i]),fGETBYTE((2*i+0)%4, RtV)); VxxV.v[0].w[i] += fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]),fGETBYTE((2*i+1)%4, RtV)); VxxV.v[1].w[i] += fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]),fGETBYTE((2*i+0)%4, RtV)); VxxV.v[1].w[i] += fMPY16SS(fGETHALF(0, VuuV.v[1].w[i]),fGETBYTE((2*i+1)%4, RtV)) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vdmpyhb_dv_acc */
},
void HELPER(V6_vdmpyhb_dv_acc)(CPUHexagonState *env, void *VxxV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY16SS(fGETHALF(0, VuuV.v[0].w[i]),fGETBYTE((2*i+0)%4, RtV)); VxxV.v[0].w[i] += fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]),fGETBYTE((2*i+1)%4, RtV)); VxxV.v[1].w[i] += fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]),fGETBYTE((2*i+0)%4, RtV)); VxxV.v[1].w[i] += fMPY16SS(fGETHALF(0, VuuV.v[1].w[i]),fGETBYTE((2*i+1)%4, RtV)) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vdmpyhvsat,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SS(fGETHALF(0,VuV.w[i]),fGETHALF(0, VvV.w[i])); accum += fMPY16SS(fGETHALF(1,VuV.w[i]),fGETHALF(1, VvV.w[i])); VdV.w[i] = fVSATW(accum) ; } },
DEF_HELPER_5(V6_vdmpyhvsat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vdmpyhvsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vdmpyhvsat(SLOT_WRAP(gen_helper_V6_vdmpyhvsat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SS(fGETHALF(0,VuV.w[i]),fGETHALF(0, VvV.w[i])); accum += fMPY16SS(fGETHALF(1,VuV.w[i]),fGETHALF(1, VvV.w[i])); VdV.w[i] = fVSATW(accum) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vdmpyhvsat */
},
void HELPER(V6_vdmpyhvsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SS(fGETHALF(0,VuV.w[i]),fGETHALF(0, VvV.w[i])); accum += fMPY16SS(fGETHALF(1,VuV.w[i]),fGETHALF(1, VvV.w[i])); VdV.w[i] = fVSATW(accum) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vdmpyhvsat_acc,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SS(fGETHALF(0,VuV.w[i]),fGETHALF(0, VvV.w[i])); accum += fMPY16SS(fGETHALF(1,VuV.w[i]),fGETHALF(1, VvV.w[i])); VxV.w[i] = fVSATW(VxV.w[i]+accum) ; } },
DEF_HELPER_5(V6_vdmpyhvsat_acc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vdmpyhvsat_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vdmpyhvsat_acc(SLOT_WRAP(gen_helper_V6_vdmpyhvsat_acc(cpu_env, VxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SS(fGETHALF(0,VuV.w[i]),fGETHALF(0, VvV.w[i])); accum += fMPY16SS(fGETHALF(1,VuV.w[i]),fGETHALF(1, VvV.w[i])); VxV.w[i] = fVSATW(VxV.w[i]+accum) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vdmpyhvsat_acc */
},
void HELPER(V6_vdmpyhvsat_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SS(fGETHALF(0,VuV.w[i]),fGETHALF(0, VvV.w[i])); accum += fMPY16SS(fGETHALF(1,VuV.w[i]),fGETHALF(1, VvV.w[i])); VxV.w[i] = fVSATW(VxV.w[i]+accum) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vdmpyhsat,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SS(fGETHALF(0, VuV.w[i]),fGETHALF(0, RtV)); accum += fMPY16SS(fGETHALF(1, VuV.w[i]),fGETHALF(1, RtV)); VdV.w[i] = fVSATW(accum) ; } },
DEF_HELPER_5(V6_vdmpyhsat, void, env, ptr, ptr, s32, i32),
{
/* V6_vdmpyhsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdmpyhsat(SLOT_WRAP(gen_helper_V6_vdmpyhsat(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SS(fGETHALF(0, VuV.w[i]),fGETHALF(0, RtV)); accum += fMPY16SS(fGETHALF(1, VuV.w[i]),fGETHALF(1, RtV)); VdV.w[i] = fVSATW(accum) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vdmpyhsat */
},
void HELPER(V6_vdmpyhsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SS(fGETHALF(0, VuV.w[i]),fGETHALF(0, RtV)); accum += fMPY16SS(fGETHALF(1, VuV.w[i]),fGETHALF(1, RtV)); VdV.w[i] = fVSATW(accum) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vdmpyhsat_acc,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t) accum = VxV.w[i]; accum += fMPY16SS(fGETHALF(0, VuV.w[i]),fGETHALF(0, RtV)); accum += fMPY16SS(fGETHALF(1, VuV.w[i]),fGETHALF(1, RtV)); VxV.w[i] = fVSATW(accum) ; } },
DEF_HELPER_5(V6_vdmpyhsat_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vdmpyhsat_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdmpyhsat_acc(SLOT_WRAP(gen_helper_V6_vdmpyhsat_acc(cpu_env, VxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t) accum = VxV.w[i]; accum += fMPY16SS(fGETHALF(0, VuV.w[i]),fGETHALF(0, RtV)); accum += fMPY16SS(fGETHALF(1, VuV.w[i]),fGETHALF(1, RtV)); VxV.w[i] = fVSATW(accum) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vdmpyhsat_acc */
},
void HELPER(V6_vdmpyhsat_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t) accum = VxV.w[i]; accum += fMPY16SS(fGETHALF(0, VuV.w[i]),fGETHALF(0, RtV)); accum += fMPY16SS(fGETHALF(1, VuV.w[i]),fGETHALF(1, RtV)); VxV.w[i] = fVSATW(accum) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vdmpyhisat,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]),fGETHALF(0,RtV)); accum += fMPY16SS(fGETHALF(0,VuuV.v[1].w[i]),fGETHALF(1,RtV)); VdV.w[i] = fVSATW(accum) ; } },
DEF_HELPER_5(V6_vdmpyhisat, void, env, ptr, ptr, s32, i32),
{
/* V6_vdmpyhisat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdmpyhisat(SLOT_WRAP(gen_helper_V6_vdmpyhisat(cpu_env, VdV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]),fGETHALF(0,RtV)); accum += fMPY16SS(fGETHALF(0,VuuV.v[1].w[i]),fGETHALF(1,RtV)); VdV.w[i] = fVSATW(accum) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vdmpyhisat */
},
void HELPER(V6_vdmpyhisat)(CPUHexagonState *env, void *VdV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]),fGETHALF(0,RtV)); accum += fMPY16SS(fGETHALF(0,VuuV.v[1].w[i]),fGETHALF(1,RtV)); VdV.w[i] = fVSATW(accum) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vdmpyhisat_acc,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t) accum = VxV.w[i]; accum += fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]),fGETHALF(0,RtV)); accum += fMPY16SS(fGETHALF(0,VuuV.v[1].w[i]),fGETHALF(1,RtV)); VxV.w[i] = fVSATW(accum) ; } },
DEF_HELPER_5(V6_vdmpyhisat_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vdmpyhisat_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdmpyhisat_acc(SLOT_WRAP(gen_helper_V6_vdmpyhisat_acc(cpu_env, VxV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t) accum = VxV.w[i]; accum += fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]),fGETHALF(0,RtV)); accum += fMPY16SS(fGETHALF(0,VuuV.v[1].w[i]),fGETHALF(1,RtV)); VxV.w[i] = fVSATW(accum) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vdmpyhisat_acc */
},
void HELPER(V6_vdmpyhisat_acc)(CPUHexagonState *env, void *VxV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t) accum = VxV.w[i]; accum += fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]),fGETHALF(0,RtV)); accum += fMPY16SS(fGETHALF(0,VuuV.v[1].w[i]),fGETHALF(1,RtV)); VxV.w[i] = fVSATW(accum) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vdmpyhsusat,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SU(fGETHALF(0, VuV.w[i]),fGETUHALF(0, RtV)); accum += fMPY16SU(fGETHALF(1, VuV.w[i]),fGETUHALF(1, RtV)); VdV.w[i] = fVSATW(accum) ; } },
DEF_HELPER_5(V6_vdmpyhsusat, void, env, ptr, ptr, s32, i32),
{
/* V6_vdmpyhsusat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdmpyhsusat(SLOT_WRAP(gen_helper_V6_vdmpyhsusat(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SU(fGETHALF(0, VuV.w[i]),fGETUHALF(0, RtV)); accum += fMPY16SU(fGETHALF(1, VuV.w[i]),fGETUHALF(1, RtV)); VdV.w[i] = fVSATW(accum) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vdmpyhsusat */
},
void HELPER(V6_vdmpyhsusat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SU(fGETHALF(0, VuV.w[i]),fGETUHALF(0, RtV)); accum += fMPY16SU(fGETHALF(1, VuV.w[i]),fGETUHALF(1, RtV)); VdV.w[i] = fVSATW(accum) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vdmpyhsusat_acc,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t) accum=VxV.w[i]; accum += fMPY16SU(fGETHALF(0, VuV.w[i]),fGETUHALF(0, RtV)); accum += fMPY16SU(fGETHALF(1, VuV.w[i]),fGETUHALF(1, RtV)); VxV.w[i] = fVSATW(accum) ; } },
DEF_HELPER_5(V6_vdmpyhsusat_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vdmpyhsusat_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdmpyhsusat_acc(SLOT_WRAP(gen_helper_V6_vdmpyhsusat_acc(cpu_env, VxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t) accum=VxV.w[i]; accum += fMPY16SU(fGETHALF(0, VuV.w[i]),fGETUHALF(0, RtV)); accum += fMPY16SU(fGETHALF(1, VuV.w[i]),fGETUHALF(1, RtV)); VxV.w[i] = fVSATW(accum) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vdmpyhsusat_acc */
},
void HELPER(V6_vdmpyhsusat_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t) accum=VxV.w[i]; accum += fMPY16SU(fGETHALF(0, VuV.w[i]),fGETUHALF(0, RtV)); accum += fMPY16SU(fGETHALF(1, VuV.w[i]),fGETUHALF(1, RtV)); VxV.w[i] = fVSATW(accum) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vdmpyhsuisat,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SU(fGETHALF(1,VuuV.v[0].w[i]),fGETUHALF(0,RtV)); accum += fMPY16SU(fGETHALF(0,VuuV.v[1].w[i]),fGETUHALF(1,RtV)); VdV.w[i] = fVSATW(accum) ; } },
DEF_HELPER_5(V6_vdmpyhsuisat, void, env, ptr, ptr, s32, i32),
{
/* V6_vdmpyhsuisat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdmpyhsuisat(SLOT_WRAP(gen_helper_V6_vdmpyhsuisat(cpu_env, VdV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SU(fGETHALF(1,VuuV.v[0].w[i]),fGETUHALF(0,RtV)); accum += fMPY16SU(fGETHALF(0,VuuV.v[1].w[i]),fGETUHALF(1,RtV)); VdV.w[i] = fVSATW(accum) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vdmpyhsuisat */
},
void HELPER(V6_vdmpyhsuisat)(CPUHexagonState *env, void *VdV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t accum;) accum = fMPY16SU(fGETHALF(1,VuuV.v[0].w[i]),fGETUHALF(0,RtV)); accum += fMPY16SU(fGETHALF(0,VuuV.v[1].w[i]),fGETUHALF(1,RtV)); VdV.w[i] = fVSATW(accum) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vdmpyhsuisat_acc,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t) accum=VxV.w[i]; accum += fMPY16SU(fGETHALF(1, VuuV.v[0].w[i]),fGETUHALF(0,RtV)); accum += fMPY16SU(fGETHALF(0, VuuV.v[1].w[i]),fGETUHALF(1,RtV)); VxV.w[i] = fVSATW(accum) ; } },
DEF_HELPER_5(V6_vdmpyhsuisat_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vdmpyhsuisat_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdmpyhsuisat_acc(SLOT_WRAP(gen_helper_V6_vdmpyhsuisat_acc(cpu_env, VxV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t) accum=VxV.w[i]; accum += fMPY16SU(fGETHALF(1, VuuV.v[0].w[i]),fGETUHALF(0,RtV)); accum += fMPY16SU(fGETHALF(0, VuuV.v[1].w[i]),fGETUHALF(1,RtV)); VxV.w[i] = fVSATW(accum) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vdmpyhsuisat_acc */
},
void HELPER(V6_vdmpyhsuisat_acc)(CPUHexagonState *env, void *VxV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t) accum=VxV.w[i]; accum += fMPY16SU(fGETHALF(1, VuuV.v[0].w[i]),fGETUHALF(0,RtV)); accum += fMPY16SU(fGETHALF(0, VuuV.v[1].w[i]),fGETUHALF(1,RtV)); VxV.w[i] = fVSATW(accum) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vtmpyb,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8SS(fGETBYTE(0,VuuV.v[0].h[i]), fGETBYTE((2*i )%4, RtV)); VddV.v[0].h[i] += fMPY8SS(fGETBYTE(1,VuuV.v[0].h[i]), fGETBYTE((2*i+1)%4, RtV)); VddV.v[0].h[i] += fGETBYTE(0,VuuV.v[1].h[i]); VddV.v[1].h[i] = fMPY8SS(fGETBYTE(1,VuuV.v[0].h[i]), fGETBYTE((2*i )%4, RtV)); VddV.v[1].h[i] += fMPY8SS(fGETBYTE(0,VuuV.v[1].h[i]), fGETBYTE((2*i+1)%4, RtV)); VddV.v[1].h[i] += fGETBYTE(1,VuuV.v[1].h[i]) ; } },
DEF_HELPER_5(V6_vtmpyb, void, env, ptr, ptr, s32, i32),
{
/* V6_vtmpyb */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vtmpyb(SLOT_WRAP(gen_helper_V6_vtmpyb(cpu_env, VddV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8SS(fGETBYTE(0,VuuV.v[0].h[i]), fGETBYTE((2*i )%4, RtV)); VddV.v[0].h[i] += fMPY8SS(fGETBYTE(1,VuuV.v[0].h[i]), fGETBYTE((2*i+1)%4, RtV)); VddV.v[0].h[i] += fGETBYTE(0,VuuV.v[1].h[i]); VddV.v[1].h[i] = fMPY8SS(fGETBYTE(1,VuuV.v[0].h[i]), fGETBYTE((2*i )%4, RtV)); VddV.v[1].h[i] += fMPY8SS(fGETBYTE(0,VuuV.v[1].h[i]), fGETBYTE((2*i+1)%4, RtV)); VddV.v[1].h[i] += fGETBYTE(1,VuuV.v[1].h[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vtmpyb */
},
void HELPER(V6_vtmpyb)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8SS(fGETBYTE(0,VuuV.v[0].h[i]), fGETBYTE((2*i )%4, RtV)); VddV.v[0].h[i] += fMPY8SS(fGETBYTE(1,VuuV.v[0].h[i]), fGETBYTE((2*i+1)%4, RtV)); VddV.v[0].h[i] += fGETBYTE(0,VuuV.v[1].h[i]); VddV.v[1].h[i] = fMPY8SS(fGETBYTE(1,VuuV.v[0].h[i]), fGETBYTE((2*i )%4, RtV)); VddV.v[1].h[i] += fMPY8SS(fGETBYTE(0,VuuV.v[1].h[i]), fGETBYTE((2*i+1)%4, RtV)); VddV.v[1].h[i] += fGETBYTE(1,VuuV.v[1].h[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vtmpyb_acc,{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8SS(fGETBYTE(0,VuuV.v[0].h[i]), fGETBYTE((2*i )%4, RtV)); VxxV.v[0].h[i] += fMPY8SS(fGETBYTE(1,VuuV.v[0].h[i]), fGETBYTE((2*i+1)%4, RtV)); VxxV.v[0].h[i] += fGETBYTE(0,VuuV.v[1].h[i]); VxxV.v[1].h[i] += fMPY8SS(fGETBYTE(1,VuuV.v[0].h[i]), fGETBYTE((2*i )%4, RtV)); VxxV.v[1].h[i] += fMPY8SS(fGETBYTE(0,VuuV.v[1].h[i]), fGETBYTE((2*i+1)%4, RtV)); VxxV.v[1].h[i] += fGETBYTE(1,VuuV.v[1].h[i]) ; } },
DEF_HELPER_5(V6_vtmpyb_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vtmpyb_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vtmpyb_acc(SLOT_WRAP(gen_helper_V6_vtmpyb_acc(cpu_env, VxxV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8SS(fGETBYTE(0,VuuV.v[0].h[i]), fGETBYTE((2*i )%4, RtV)); VxxV.v[0].h[i] += fMPY8SS(fGETBYTE(1,VuuV.v[0].h[i]), fGETBYTE((2*i+1)%4, RtV)); VxxV.v[0].h[i] += fGETBYTE(0,VuuV.v[1].h[i]); VxxV.v[1].h[i] += fMPY8SS(fGETBYTE(1,VuuV.v[0].h[i]), fGETBYTE((2*i )%4, RtV)); VxxV.v[1].h[i] += fMPY8SS(fGETBYTE(0,VuuV.v[1].h[i]), fGETBYTE((2*i+1)%4, RtV)); VxxV.v[1].h[i] += fGETBYTE(1,VuuV.v[1].h[i]) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vtmpyb_acc */
},
void HELPER(V6_vtmpyb_acc)(CPUHexagonState *env, void *VxxV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8SS(fGETBYTE(0,VuuV.v[0].h[i]), fGETBYTE((2*i )%4, RtV)); VxxV.v[0].h[i] += fMPY8SS(fGETBYTE(1,VuuV.v[0].h[i]), fGETBYTE((2*i+1)%4, RtV)); VxxV.v[0].h[i] += fGETBYTE(0,VuuV.v[1].h[i]); VxxV.v[1].h[i] += fMPY8SS(fGETBYTE(1,VuuV.v[0].h[i]), fGETBYTE((2*i )%4, RtV)); VxxV.v[1].h[i] += fMPY8SS(fGETBYTE(0,VuuV.v[1].h[i]), fGETBYTE((2*i+1)%4, RtV)); VxxV.v[1].h[i] += fGETBYTE(1,VuuV.v[1].h[i]) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vtmpybus,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0,VuuV.v[0].uh[i]), fGETBYTE((2*i )%4, RtV)); VddV.v[0].h[i] += fMPY8US(fGETUBYTE(1,VuuV.v[0].uh[i]), fGETBYTE((2*i+1)%4, RtV)); VddV.v[0].h[i] += fGETUBYTE(0,VuuV.v[1].uh[i]); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1,VuuV.v[0].uh[i]), fGETBYTE((2*i )%4, RtV)); VddV.v[1].h[i] += fMPY8US(fGETUBYTE(0,VuuV.v[1].uh[i]), fGETBYTE((2*i+1)%4, RtV)); VddV.v[1].h[i] += fGETUBYTE(1,VuuV.v[1].uh[i]) ; } },
DEF_HELPER_5(V6_vtmpybus, void, env, ptr, ptr, s32, i32),
{
/* V6_vtmpybus */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vtmpybus(SLOT_WRAP(gen_helper_V6_vtmpybus(cpu_env, VddV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0,VuuV.v[0].uh[i]), fGETBYTE((2*i )%4, RtV)); VddV.v[0].h[i] += fMPY8US(fGETUBYTE(1,VuuV.v[0].uh[i]), fGETBYTE((2*i+1)%4, RtV)); VddV.v[0].h[i] += fGETUBYTE(0,VuuV.v[1].uh[i]); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1,VuuV.v[0].uh[i]), fGETBYTE((2*i )%4, RtV)); VddV.v[1].h[i] += fMPY8US(fGETUBYTE(0,VuuV.v[1].uh[i]), fGETBYTE((2*i+1)%4, RtV)); VddV.v[1].h[i] += fGETUBYTE(1,VuuV.v[1].uh[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vtmpybus */
},
void HELPER(V6_vtmpybus)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0,VuuV.v[0].uh[i]), fGETBYTE((2*i )%4, RtV)); VddV.v[0].h[i] += fMPY8US(fGETUBYTE(1,VuuV.v[0].uh[i]), fGETBYTE((2*i+1)%4, RtV)); VddV.v[0].h[i] += fGETUBYTE(0,VuuV.v[1].uh[i]); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1,VuuV.v[0].uh[i]), fGETBYTE((2*i )%4, RtV)); VddV.v[1].h[i] += fMPY8US(fGETUBYTE(0,VuuV.v[1].uh[i]), fGETBYTE((2*i+1)%4, RtV)); VddV.v[1].h[i] += fGETUBYTE(1,VuuV.v[1].uh[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vtmpybus_acc,{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(0,VuuV.v[0].uh[i]), fGETBYTE((2*i )%4, RtV)); VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(1,VuuV.v[0].uh[i]), fGETBYTE((2*i+1)%4, RtV)); VxxV.v[0].h[i] += fGETUBYTE(0,VuuV.v[1].uh[i]); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(1,VuuV.v[0].uh[i]), fGETBYTE((2*i )%4, RtV)); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(0,VuuV.v[1].uh[i]), fGETBYTE((2*i+1)%4, RtV)); VxxV.v[1].h[i] += fGETUBYTE(1,VuuV.v[1].uh[i]) ; } },
DEF_HELPER_5(V6_vtmpybus_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vtmpybus_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vtmpybus_acc(SLOT_WRAP(gen_helper_V6_vtmpybus_acc(cpu_env, VxxV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(0,VuuV.v[0].uh[i]), fGETBYTE((2*i )%4, RtV)); VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(1,VuuV.v[0].uh[i]), fGETBYTE((2*i+1)%4, RtV)); VxxV.v[0].h[i] += fGETUBYTE(0,VuuV.v[1].uh[i]); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(1,VuuV.v[0].uh[i]), fGETBYTE((2*i )%4, RtV)); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(0,VuuV.v[1].uh[i]), fGETBYTE((2*i+1)%4, RtV)); VxxV.v[1].h[i] += fGETUBYTE(1,VuuV.v[1].uh[i]) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vtmpybus_acc */
},
void HELPER(V6_vtmpybus_acc)(CPUHexagonState *env, void *VxxV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(0,VuuV.v[0].uh[i]), fGETBYTE((2*i )%4, RtV)); VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(1,VuuV.v[0].uh[i]), fGETBYTE((2*i+1)%4, RtV)); VxxV.v[0].h[i] += fGETUBYTE(0,VuuV.v[1].uh[i]); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(1,VuuV.v[0].uh[i]), fGETBYTE((2*i )%4, RtV)); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(0,VuuV.v[1].uh[i]), fGETBYTE((2*i+1)%4, RtV)); VxxV.v[1].h[i] += fGETUBYTE(1,VuuV.v[1].uh[i]) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vtmpyhb,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SS(fGETHALF(0,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+0)%4, RtV))); VddV.v[0].w[i]+= fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+1)%4, RtV))); VddV.v[0].w[i]+= fGETHALF(0,VuuV.v[1].w[i]); VddV.v[1].w[i] = fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+0)%4, RtV))); VddV.v[1].w[i]+= fMPY16SS(fGETHALF(0,VuuV.v[1].w[i]), fSE8_16(fGETBYTE((2*i+1)%4, RtV))); VddV.v[1].w[i]+= fGETHALF(1,VuuV.v[1].w[i]) ; } },
DEF_HELPER_5(V6_vtmpyhb, void, env, ptr, ptr, s32, i32),
{
/* V6_vtmpyhb */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vtmpyhb(SLOT_WRAP(gen_helper_V6_vtmpyhb(cpu_env, VddV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SS(fGETHALF(0,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+0)%4, RtV))); VddV.v[0].w[i]+= fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+1)%4, RtV))); VddV.v[0].w[i]+= fGETHALF(0,VuuV.v[1].w[i]); VddV.v[1].w[i] = fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+0)%4, RtV))); VddV.v[1].w[i]+= fMPY16SS(fGETHALF(0,VuuV.v[1].w[i]), fSE8_16(fGETBYTE((2*i+1)%4, RtV))); VddV.v[1].w[i]+= fGETHALF(1,VuuV.v[1].w[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vtmpyhb */
},
void HELPER(V6_vtmpyhb)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SS(fGETHALF(0,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+0)%4, RtV))); VddV.v[0].w[i]+= fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+1)%4, RtV))); VddV.v[0].w[i]+= fGETHALF(0,VuuV.v[1].w[i]); VddV.v[1].w[i] = fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+0)%4, RtV))); VddV.v[1].w[i]+= fMPY16SS(fGETHALF(0,VuuV.v[1].w[i]), fSE8_16(fGETBYTE((2*i+1)%4, RtV))); VddV.v[1].w[i]+= fGETHALF(1,VuuV.v[1].w[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vtmpyhb_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i]+= fMPY16SS(fGETHALF(0,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+0)%4, RtV))); VxxV.v[0].w[i]+= fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+1)%4, RtV))); VxxV.v[0].w[i]+= fGETHALF(0,VuuV.v[1].w[i]); VxxV.v[1].w[i]+= fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+0)%4, RtV))); VxxV.v[1].w[i]+= fMPY16SS(fGETHALF(0,VuuV.v[1].w[i]), fSE8_16(fGETBYTE((2*i+1)%4, RtV))); VxxV.v[1].w[i]+= fGETHALF(1,VuuV.v[1].w[i]) ; } },
DEF_HELPER_5(V6_vtmpyhb_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vtmpyhb_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vtmpyhb_acc(SLOT_WRAP(gen_helper_V6_vtmpyhb_acc(cpu_env, VxxV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i]+= fMPY16SS(fGETHALF(0,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+0)%4, RtV))); VxxV.v[0].w[i]+= fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+1)%4, RtV))); VxxV.v[0].w[i]+= fGETHALF(0,VuuV.v[1].w[i]); VxxV.v[1].w[i]+= fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+0)%4, RtV))); VxxV.v[1].w[i]+= fMPY16SS(fGETHALF(0,VuuV.v[1].w[i]), fSE8_16(fGETBYTE((2*i+1)%4, RtV))); VxxV.v[1].w[i]+= fGETHALF(1,VuuV.v[1].w[i]) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vtmpyhb_acc */
},
void HELPER(V6_vtmpyhb_acc)(CPUHexagonState *env, void *VxxV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i]+= fMPY16SS(fGETHALF(0,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+0)%4, RtV))); VxxV.v[0].w[i]+= fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+1)%4, RtV))); VxxV.v[0].w[i]+= fGETHALF(0,VuuV.v[1].w[i]); VxxV.v[1].w[i]+= fMPY16SS(fGETHALF(1,VuuV.v[0].w[i]), fSE8_16(fGETBYTE((2*i+0)%4, RtV))); VxxV.v[1].w[i]+= fMPY16SS(fGETHALF(0,VuuV.v[1].w[i]), fSE8_16(fGETBYTE((2*i+1)%4, RtV))); VxxV.v[1].w[i]+= fGETHALF(1,VuuV.v[1].w[i]) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vrmpyub,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fMPY8UU(fGETUBYTE(0,VuV.uw[i]), fGETUBYTE(0,RtV)); VdV.uw[i] += fMPY8UU(fGETUBYTE(1,VuV.uw[i]), fGETUBYTE(1,RtV)); VdV.uw[i] += fMPY8UU(fGETUBYTE(2,VuV.uw[i]), fGETUBYTE(2,RtV)); VdV.uw[i] += fMPY8UU(fGETUBYTE(3,VuV.uw[i]), fGETUBYTE(3,RtV)) ; } },
DEF_HELPER_5(V6_vrmpyub, void, env, ptr, ptr, s32, i32),
{
/* V6_vrmpyub */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vrmpyub(SLOT_WRAP(gen_helper_V6_vrmpyub(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fMPY8UU(fGETUBYTE(0,VuV.uw[i]), fGETUBYTE(0,RtV)); VdV.uw[i] += fMPY8UU(fGETUBYTE(1,VuV.uw[i]), fGETUBYTE(1,RtV)); VdV.uw[i] += fMPY8UU(fGETUBYTE(2,VuV.uw[i]), fGETUBYTE(2,RtV)); VdV.uw[i] += fMPY8UU(fGETUBYTE(3,VuV.uw[i]), fGETUBYTE(3,RtV)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vrmpyub */
},
void HELPER(V6_vrmpyub)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fMPY8UU(fGETUBYTE(0,VuV.uw[i]), fGETUBYTE(0,RtV)); VdV.uw[i] += fMPY8UU(fGETUBYTE(1,VuV.uw[i]), fGETUBYTE(1,RtV)); VdV.uw[i] += fMPY8UU(fGETUBYTE(2,VuV.uw[i]), fGETUBYTE(2,RtV)); VdV.uw[i] += fMPY8UU(fGETUBYTE(3,VuV.uw[i]), fGETUBYTE(3,RtV)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vrmpyub_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.uw[i] += fMPY8UU(fGETUBYTE(0,VuV.uw[i]), fGETUBYTE(0,RtV)); VxV.uw[i] += fMPY8UU(fGETUBYTE(1,VuV.uw[i]), fGETUBYTE(1,RtV)); VxV.uw[i] += fMPY8UU(fGETUBYTE(2,VuV.uw[i]), fGETUBYTE(2,RtV)); VxV.uw[i] += fMPY8UU(fGETUBYTE(3,VuV.uw[i]), fGETUBYTE(3,RtV)) ; } },
DEF_HELPER_5(V6_vrmpyub_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vrmpyub_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vrmpyub_acc(SLOT_WRAP(gen_helper_V6_vrmpyub_acc(cpu_env, VxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.uw[i] += fMPY8UU(fGETUBYTE(0,VuV.uw[i]), fGETUBYTE(0,RtV)); VxV.uw[i] += fMPY8UU(fGETUBYTE(1,VuV.uw[i]), fGETUBYTE(1,RtV)); VxV.uw[i] += fMPY8UU(fGETUBYTE(2,VuV.uw[i]), fGETUBYTE(2,RtV)); VxV.uw[i] += fMPY8UU(fGETUBYTE(3,VuV.uw[i]), fGETUBYTE(3,RtV)) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vrmpyub_acc */
},
void HELPER(V6_vrmpyub_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.uw[i] += fMPY8UU(fGETUBYTE(0,VuV.uw[i]), fGETUBYTE(0,RtV)); VxV.uw[i] += fMPY8UU(fGETUBYTE(1,VuV.uw[i]), fGETUBYTE(1,RtV)); VxV.uw[i] += fMPY8UU(fGETUBYTE(2,VuV.uw[i]), fGETUBYTE(2,RtV)); VxV.uw[i] += fMPY8UU(fGETUBYTE(3,VuV.uw[i]), fGETUBYTE(3,RtV)) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vrmpyubv,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fMPY8UU(fGETUBYTE(0,VuV.uw[i]), fGETUBYTE(0,VvV.uw[i])); VdV.uw[i] += fMPY8UU(fGETUBYTE(1,VuV.uw[i]), fGETUBYTE(1,VvV.uw[i])); VdV.uw[i] += fMPY8UU(fGETUBYTE(2,VuV.uw[i]), fGETUBYTE(2,VvV.uw[i])); VdV.uw[i] += fMPY8UU(fGETUBYTE(3,VuV.uw[i]), fGETUBYTE(3,VvV.uw[i])) ; } },
DEF_HELPER_5(V6_vrmpyubv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vrmpyubv */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vrmpyubv(SLOT_WRAP(gen_helper_V6_vrmpyubv(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fMPY8UU(fGETUBYTE(0,VuV.uw[i]), fGETUBYTE(0,VvV.uw[i])); VdV.uw[i] += fMPY8UU(fGETUBYTE(1,VuV.uw[i]), fGETUBYTE(1,VvV.uw[i])); VdV.uw[i] += fMPY8UU(fGETUBYTE(2,VuV.uw[i]), fGETUBYTE(2,VvV.uw[i])); VdV.uw[i] += fMPY8UU(fGETUBYTE(3,VuV.uw[i]), fGETUBYTE(3,VvV.uw[i])) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vrmpyubv */
},
void HELPER(V6_vrmpyubv)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fMPY8UU(fGETUBYTE(0,VuV.uw[i]), fGETUBYTE(0,VvV.uw[i])); VdV.uw[i] += fMPY8UU(fGETUBYTE(1,VuV.uw[i]), fGETUBYTE(1,VvV.uw[i])); VdV.uw[i] += fMPY8UU(fGETUBYTE(2,VuV.uw[i]), fGETUBYTE(2,VvV.uw[i])); VdV.uw[i] += fMPY8UU(fGETUBYTE(3,VuV.uw[i]), fGETUBYTE(3,VvV.uw[i])) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vrmpyubv_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.uw[i] += fMPY8UU(fGETUBYTE(0,VuV.uw[i]), fGETUBYTE(0,VvV.uw[i])); VxV.uw[i] += fMPY8UU(fGETUBYTE(1,VuV.uw[i]), fGETUBYTE(1,VvV.uw[i])); VxV.uw[i] += fMPY8UU(fGETUBYTE(2,VuV.uw[i]), fGETUBYTE(2,VvV.uw[i])); VxV.uw[i] += fMPY8UU(fGETUBYTE(3,VuV.uw[i]), fGETUBYTE(3,VvV.uw[i])) ; } },
DEF_HELPER_5(V6_vrmpyubv_acc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vrmpyubv_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vrmpyubv_acc(SLOT_WRAP(gen_helper_V6_vrmpyubv_acc(cpu_env, VxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.uw[i] += fMPY8UU(fGETUBYTE(0,VuV.uw[i]), fGETUBYTE(0,VvV.uw[i])); VxV.uw[i] += fMPY8UU(fGETUBYTE(1,VuV.uw[i]), fGETUBYTE(1,VvV.uw[i])); VxV.uw[i] += fMPY8UU(fGETUBYTE(2,VuV.uw[i]), fGETUBYTE(2,VvV.uw[i])); VxV.uw[i] += fMPY8UU(fGETUBYTE(3,VuV.uw[i]), fGETUBYTE(3,VvV.uw[i])) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vrmpyubv_acc */
},
void HELPER(V6_vrmpyubv_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.uw[i] += fMPY8UU(fGETUBYTE(0,VuV.uw[i]), fGETUBYTE(0,VvV.uw[i])); VxV.uw[i] += fMPY8UU(fGETUBYTE(1,VuV.uw[i]), fGETUBYTE(1,VvV.uw[i])); VxV.uw[i] += fMPY8UU(fGETUBYTE(2,VuV.uw[i]), fGETUBYTE(2,VvV.uw[i])); VxV.uw[i] += fMPY8UU(fGETUBYTE(3,VuV.uw[i]), fGETUBYTE(3,VvV.uw[i])) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vrmpybv,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY8SS(fGETBYTE(0, VuV.w[i]), fGETBYTE(0, VvV.w[i])); VdV.w[i] += fMPY8SS(fGETBYTE(1, VuV.w[i]), fGETBYTE(1, VvV.w[i])); VdV.w[i] += fMPY8SS(fGETBYTE(2, VuV.w[i]), fGETBYTE(2, VvV.w[i])); VdV.w[i] += fMPY8SS(fGETBYTE(3, VuV.w[i]), fGETBYTE(3, VvV.w[i])) ; } },
DEF_HELPER_5(V6_vrmpybv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vrmpybv */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vrmpybv(SLOT_WRAP(gen_helper_V6_vrmpybv(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY8SS(fGETBYTE(0, VuV.w[i]), fGETBYTE(0, VvV.w[i])); VdV.w[i] += fMPY8SS(fGETBYTE(1, VuV.w[i]), fGETBYTE(1, VvV.w[i])); VdV.w[i] += fMPY8SS(fGETBYTE(2, VuV.w[i]), fGETBYTE(2, VvV.w[i])); VdV.w[i] += fMPY8SS(fGETBYTE(3, VuV.w[i]), fGETBYTE(3, VvV.w[i])) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vrmpybv */
},
void HELPER(V6_vrmpybv)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY8SS(fGETBYTE(0, VuV.w[i]), fGETBYTE(0, VvV.w[i])); VdV.w[i] += fMPY8SS(fGETBYTE(1, VuV.w[i]), fGETBYTE(1, VvV.w[i])); VdV.w[i] += fMPY8SS(fGETBYTE(2, VuV.w[i]), fGETBYTE(2, VvV.w[i])); VdV.w[i] += fMPY8SS(fGETBYTE(3, VuV.w[i]), fGETBYTE(3, VvV.w[i])) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vrmpybv_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY8SS(fGETBYTE(0, VuV.w[i]), fGETBYTE(0, VvV.w[i])); VxV.w[i] += fMPY8SS(fGETBYTE(1, VuV.w[i]), fGETBYTE(1, VvV.w[i])); VxV.w[i] += fMPY8SS(fGETBYTE(2, VuV.w[i]), fGETBYTE(2, VvV.w[i])); VxV.w[i] += fMPY8SS(fGETBYTE(3, VuV.w[i]), fGETBYTE(3, VvV.w[i])) ; } },
DEF_HELPER_5(V6_vrmpybv_acc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vrmpybv_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vrmpybv_acc(SLOT_WRAP(gen_helper_V6_vrmpybv_acc(cpu_env, VxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY8SS(fGETBYTE(0, VuV.w[i]), fGETBYTE(0, VvV.w[i])); VxV.w[i] += fMPY8SS(fGETBYTE(1, VuV.w[i]), fGETBYTE(1, VvV.w[i])); VxV.w[i] += fMPY8SS(fGETBYTE(2, VuV.w[i]), fGETBYTE(2, VvV.w[i])); VxV.w[i] += fMPY8SS(fGETBYTE(3, VuV.w[i]), fGETBYTE(3, VvV.w[i])) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vrmpybv_acc */
},
void HELPER(V6_vrmpybv_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY8SS(fGETBYTE(0, VuV.w[i]), fGETBYTE(0, VvV.w[i])); VxV.w[i] += fMPY8SS(fGETBYTE(1, VuV.w[i]), fGETBYTE(1, VvV.w[i])); VxV.w[i] += fMPY8SS(fGETBYTE(2, VuV.w[i]), fGETBYTE(2, VvV.w[i])); VxV.w[i] += fMPY8SS(fGETBYTE(3, VuV.w[i]), fGETBYTE(3, VvV.w[i])) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vrmpyubi,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fMPY8UU(fGETUBYTE(0, VuuV.v[uiV ? 1:0].uw[i]),fGETUBYTE((0-uiV) & 0x3,RtV)); VddV.v[0].uw[i] += fMPY8UU(fGETUBYTE(1, VuuV.v[0 ].uw[i]),fGETUBYTE((1-uiV) & 0x3,RtV)); VddV.v[0].uw[i] += fMPY8UU(fGETUBYTE(2, VuuV.v[0 ].uw[i]),fGETUBYTE((2-uiV) & 0x3,RtV)); VddV.v[0].uw[i] += fMPY8UU(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETUBYTE((3-uiV) & 0x3,RtV)); VddV.v[1].uw[i] = fMPY8UU(fGETUBYTE(0, VuuV.v[1 ].uw[i]),fGETUBYTE((2-uiV) & 0x3,RtV)); VddV.v[1].uw[i] += fMPY8UU(fGETUBYTE(1, VuuV.v[1 ].uw[i]),fGETUBYTE((3-uiV) & 0x3,RtV)); VddV.v[1].uw[i] += fMPY8UU(fGETUBYTE(2, VuuV.v[uiV ? 1:0].uw[i]),fGETUBYTE((0-uiV) & 0x3,RtV)); VddV.v[1].uw[i] += fMPY8UU(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETUBYTE((1-uiV) & 0x3,RtV)) ; } },
DEF_HELPER_6(V6_vrmpyubi, void, env, ptr, ptr, s32, s32, i32),
{
/* V6_vrmpyubi */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vrmpyubi(SLOT_WRAP(gen_helper_V6_vrmpyubi(cpu_env, VddV, VuuV, RtV, uiV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fMPY8UU(fGETUBYTE(0, VuuV.v[uiV ? 1:0].uw[i]),fGETUBYTE((0-uiV) & 0x3,RtV)); VddV.v[0].uw[i] += fMPY8UU(fGETUBYTE(1, VuuV.v[0 ].uw[i]),fGETUBYTE((1-uiV) & 0x3,RtV)); VddV.v[0].uw[i] += fMPY8UU(fGETUBYTE(2, VuuV.v[0 ].uw[i]),fGETUBYTE((2-uiV) & 0x3,RtV)); VddV.v[0].uw[i] += fMPY8UU(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETUBYTE((3-uiV) & 0x3,RtV)); VddV.v[1].uw[i] = fMPY8UU(fGETUBYTE(0, VuuV.v[1 ].uw[i]),fGETUBYTE((2-uiV) & 0x3,RtV)); VddV.v[1].uw[i] += fMPY8UU(fGETUBYTE(1, VuuV.v[1 ].uw[i]),fGETUBYTE((3-uiV) & 0x3,RtV)); VddV.v[1].uw[i] += fMPY8UU(fGETUBYTE(2, VuuV.v[uiV ? 1:0].uw[i]),fGETUBYTE((0-uiV) & 0x3,RtV)); VddV.v[1].uw[i] += fMPY8UU(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETUBYTE((1-uiV) & 0x3,RtV)) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* V6_vrmpyubi */
},
void HELPER(V6_vrmpyubi)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, int32_t RtV, int32_t uiV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fMPY8UU(fGETUBYTE(0, VuuV.v[uiV ? 1:0].uw[i]),fGETUBYTE((0-uiV) & 0x3,RtV)); VddV.v[0].uw[i] += fMPY8UU(fGETUBYTE(1, VuuV.v[0 ].uw[i]),fGETUBYTE((1-uiV) & 0x3,RtV)); VddV.v[0].uw[i] += fMPY8UU(fGETUBYTE(2, VuuV.v[0 ].uw[i]),fGETUBYTE((2-uiV) & 0x3,RtV)); VddV.v[0].uw[i] += fMPY8UU(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETUBYTE((3-uiV) & 0x3,RtV)); VddV.v[1].uw[i] = fMPY8UU(fGETUBYTE(0, VuuV.v[1 ].uw[i]),fGETUBYTE((2-uiV) & 0x3,RtV)); VddV.v[1].uw[i] += fMPY8UU(fGETUBYTE(1, VuuV.v[1 ].uw[i]),fGETUBYTE((3-uiV) & 0x3,RtV)); VddV.v[1].uw[i] += fMPY8UU(fGETUBYTE(2, VuuV.v[uiV ? 1:0].uw[i]),fGETUBYTE((0-uiV) & 0x3,RtV)); VddV.v[1].uw[i] += fMPY8UU(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETUBYTE((1-uiV) & 0x3,RtV)) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vrmpyubi_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].uw[i] += fMPY8UU(fGETUBYTE(0, VuuV.v[uiV ? 1:0].uw[i]),fGETUBYTE((0-uiV) & 0x3,RtV)); VxxV.v[0].uw[i] += fMPY8UU(fGETUBYTE(1, VuuV.v[0 ].uw[i]),fGETUBYTE((1-uiV) & 0x3,RtV)); VxxV.v[0].uw[i] += fMPY8UU(fGETUBYTE(2, VuuV.v[0 ].uw[i]),fGETUBYTE((2-uiV) & 0x3,RtV)); VxxV.v[0].uw[i] += fMPY8UU(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETUBYTE((3-uiV) & 0x3,RtV)); VxxV.v[1].uw[i] += fMPY8UU(fGETUBYTE(0, VuuV.v[1 ].uw[i]),fGETUBYTE((2-uiV) & 0x3,RtV)); VxxV.v[1].uw[i] += fMPY8UU(fGETUBYTE(1, VuuV.v[1 ].uw[i]),fGETUBYTE((3-uiV) & 0x3,RtV)); VxxV.v[1].uw[i] += fMPY8UU(fGETUBYTE(2, VuuV.v[uiV ? 1:0].uw[i]),fGETUBYTE((0-uiV) & 0x3,RtV)); VxxV.v[1].uw[i] += fMPY8UU(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETUBYTE((1-uiV) & 0x3,RtV)) ; } },
DEF_HELPER_6(V6_vrmpyubi_acc, void, env, ptr, ptr, s32, s32, i32),
{
/* V6_vrmpyubi_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vrmpyubi_acc(SLOT_WRAP(gen_helper_V6_vrmpyubi_acc(cpu_env, VxxV, VuuV, RtV, uiV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].uw[i] += fMPY8UU(fGETUBYTE(0, VuuV.v[uiV ? 1:0].uw[i]),fGETUBYTE((0-uiV) & 0x3,RtV)); VxxV.v[0].uw[i] += fMPY8UU(fGETUBYTE(1, VuuV.v[0 ].uw[i]),fGETUBYTE((1-uiV) & 0x3,RtV)); VxxV.v[0].uw[i] += fMPY8UU(fGETUBYTE(2, VuuV.v[0 ].uw[i]),fGETUBYTE((2-uiV) & 0x3,RtV)); VxxV.v[0].uw[i] += fMPY8UU(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETUBYTE((3-uiV) & 0x3,RtV)); VxxV.v[1].uw[i] += fMPY8UU(fGETUBYTE(0, VuuV.v[1 ].uw[i]),fGETUBYTE((2-uiV) & 0x3,RtV)); VxxV.v[1].uw[i] += fMPY8UU(fGETUBYTE(1, VuuV.v[1 ].uw[i]),fGETUBYTE((3-uiV) & 0x3,RtV)); VxxV.v[1].uw[i] += fMPY8UU(fGETUBYTE(2, VuuV.v[uiV ? 1:0].uw[i]),fGETUBYTE((0-uiV) & 0x3,RtV)); VxxV.v[1].uw[i] += fMPY8UU(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETUBYTE((1-uiV) & 0x3,RtV)) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* V6_vrmpyubi_acc */
},
void HELPER(V6_vrmpyubi_acc)(CPUHexagonState *env, void *VxxV_void, void *VuuV_void, int32_t RtV, int32_t uiV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].uw[i] += fMPY8UU(fGETUBYTE(0, VuuV.v[uiV ? 1:0].uw[i]),fGETUBYTE((0-uiV) & 0x3,RtV)); VxxV.v[0].uw[i] += fMPY8UU(fGETUBYTE(1, VuuV.v[0 ].uw[i]),fGETUBYTE((1-uiV) & 0x3,RtV)); VxxV.v[0].uw[i] += fMPY8UU(fGETUBYTE(2, VuuV.v[0 ].uw[i]),fGETUBYTE((2-uiV) & 0x3,RtV)); VxxV.v[0].uw[i] += fMPY8UU(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETUBYTE((3-uiV) & 0x3,RtV)); VxxV.v[1].uw[i] += fMPY8UU(fGETUBYTE(0, VuuV.v[1 ].uw[i]),fGETUBYTE((2-uiV) & 0x3,RtV)); VxxV.v[1].uw[i] += fMPY8UU(fGETUBYTE(1, VuuV.v[1 ].uw[i]),fGETUBYTE((3-uiV) & 0x3,RtV)); VxxV.v[1].uw[i] += fMPY8UU(fGETUBYTE(2, VuuV.v[uiV ? 1:0].uw[i]),fGETUBYTE((0-uiV) & 0x3,RtV)); VxxV.v[1].uw[i] += fMPY8UU(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETUBYTE((1-uiV) & 0x3,RtV)) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vrmpybus,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY8US(fGETUBYTE(0,VuV.uw[i]), fGETBYTE(0,RtV)); VdV.w[i] += fMPY8US(fGETUBYTE(1,VuV.uw[i]), fGETBYTE(1,RtV)); VdV.w[i] += fMPY8US(fGETUBYTE(2,VuV.uw[i]), fGETBYTE(2,RtV)); VdV.w[i] += fMPY8US(fGETUBYTE(3,VuV.uw[i]), fGETBYTE(3,RtV)) ; } },
DEF_HELPER_5(V6_vrmpybus, void, env, ptr, ptr, s32, i32),
{
/* V6_vrmpybus */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vrmpybus(SLOT_WRAP(gen_helper_V6_vrmpybus(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY8US(fGETUBYTE(0,VuV.uw[i]), fGETBYTE(0,RtV)); VdV.w[i] += fMPY8US(fGETUBYTE(1,VuV.uw[i]), fGETBYTE(1,RtV)); VdV.w[i] += fMPY8US(fGETUBYTE(2,VuV.uw[i]), fGETBYTE(2,RtV)); VdV.w[i] += fMPY8US(fGETUBYTE(3,VuV.uw[i]), fGETBYTE(3,RtV)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vrmpybus */
},
void HELPER(V6_vrmpybus)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY8US(fGETUBYTE(0,VuV.uw[i]), fGETBYTE(0,RtV)); VdV.w[i] += fMPY8US(fGETUBYTE(1,VuV.uw[i]), fGETBYTE(1,RtV)); VdV.w[i] += fMPY8US(fGETUBYTE(2,VuV.uw[i]), fGETBYTE(2,RtV)); VdV.w[i] += fMPY8US(fGETUBYTE(3,VuV.uw[i]), fGETBYTE(3,RtV)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vrmpybus_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY8US(fGETUBYTE(0,VuV.uw[i]), fGETBYTE(0,RtV)); VxV.w[i] += fMPY8US(fGETUBYTE(1,VuV.uw[i]), fGETBYTE(1,RtV)); VxV.w[i] += fMPY8US(fGETUBYTE(2,VuV.uw[i]), fGETBYTE(2,RtV)); VxV.w[i] += fMPY8US(fGETUBYTE(3,VuV.uw[i]), fGETBYTE(3,RtV)) ; } },
DEF_HELPER_5(V6_vrmpybus_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vrmpybus_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vrmpybus_acc(SLOT_WRAP(gen_helper_V6_vrmpybus_acc(cpu_env, VxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY8US(fGETUBYTE(0,VuV.uw[i]), fGETBYTE(0,RtV)); VxV.w[i] += fMPY8US(fGETUBYTE(1,VuV.uw[i]), fGETBYTE(1,RtV)); VxV.w[i] += fMPY8US(fGETUBYTE(2,VuV.uw[i]), fGETBYTE(2,RtV)); VxV.w[i] += fMPY8US(fGETUBYTE(3,VuV.uw[i]), fGETBYTE(3,RtV)) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vrmpybus_acc */
},
void HELPER(V6_vrmpybus_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY8US(fGETUBYTE(0,VuV.uw[i]), fGETBYTE(0,RtV)); VxV.w[i] += fMPY8US(fGETUBYTE(1,VuV.uw[i]), fGETBYTE(1,RtV)); VxV.w[i] += fMPY8US(fGETUBYTE(2,VuV.uw[i]), fGETBYTE(2,RtV)); VxV.w[i] += fMPY8US(fGETUBYTE(3,VuV.uw[i]), fGETBYTE(3,RtV)) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vrmpybusi,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY8US(fGETUBYTE(0, VuuV.v[uiV ? 1:0].uw[i]),fGETBYTE((0-uiV) & 0x3,RtV)); VddV.v[0].w[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0 ].uw[i]),fGETBYTE((1-uiV) & 0x3,RtV)); VddV.v[0].w[i] += fMPY8US(fGETUBYTE(2, VuuV.v[0 ].uw[i]),fGETBYTE((2-uiV) & 0x3,RtV)); VddV.v[0].w[i] += fMPY8US(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETBYTE((3-uiV) & 0x3,RtV)); VddV.v[1].w[i] = fMPY8US(fGETUBYTE(0, VuuV.v[1 ].uw[i]),fGETBYTE((2-uiV) & 0x3,RtV)); VddV.v[1].w[i] += fMPY8US(fGETUBYTE(1, VuuV.v[1 ].uw[i]),fGETBYTE((3-uiV) & 0x3,RtV)); VddV.v[1].w[i] += fMPY8US(fGETUBYTE(2, VuuV.v[uiV ? 1:0].uw[i]),fGETBYTE((0-uiV) & 0x3,RtV)); VddV.v[1].w[i] += fMPY8US(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETBYTE((1-uiV) & 0x3,RtV)) ; } },
DEF_HELPER_6(V6_vrmpybusi, void, env, ptr, ptr, s32, s32, i32),
{
/* V6_vrmpybusi */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vrmpybusi(SLOT_WRAP(gen_helper_V6_vrmpybusi(cpu_env, VddV, VuuV, RtV, uiV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY8US(fGETUBYTE(0, VuuV.v[uiV ? 1:0].uw[i]),fGETBYTE((0-uiV) & 0x3,RtV)); VddV.v[0].w[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0 ].uw[i]),fGETBYTE((1-uiV) & 0x3,RtV)); VddV.v[0].w[i] += fMPY8US(fGETUBYTE(2, VuuV.v[0 ].uw[i]),fGETBYTE((2-uiV) & 0x3,RtV)); VddV.v[0].w[i] += fMPY8US(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETBYTE((3-uiV) & 0x3,RtV)); VddV.v[1].w[i] = fMPY8US(fGETUBYTE(0, VuuV.v[1 ].uw[i]),fGETBYTE((2-uiV) & 0x3,RtV)); VddV.v[1].w[i] += fMPY8US(fGETUBYTE(1, VuuV.v[1 ].uw[i]),fGETBYTE((3-uiV) & 0x3,RtV)); VddV.v[1].w[i] += fMPY8US(fGETUBYTE(2, VuuV.v[uiV ? 1:0].uw[i]),fGETBYTE((0-uiV) & 0x3,RtV)); VddV.v[1].w[i] += fMPY8US(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETBYTE((1-uiV) & 0x3,RtV)) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* V6_vrmpybusi */
},
void HELPER(V6_vrmpybusi)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, int32_t RtV, int32_t uiV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY8US(fGETUBYTE(0, VuuV.v[uiV ? 1:0].uw[i]),fGETBYTE((0-uiV) & 0x3,RtV)); VddV.v[0].w[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0 ].uw[i]),fGETBYTE((1-uiV) & 0x3,RtV)); VddV.v[0].w[i] += fMPY8US(fGETUBYTE(2, VuuV.v[0 ].uw[i]),fGETBYTE((2-uiV) & 0x3,RtV)); VddV.v[0].w[i] += fMPY8US(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETBYTE((3-uiV) & 0x3,RtV)); VddV.v[1].w[i] = fMPY8US(fGETUBYTE(0, VuuV.v[1 ].uw[i]),fGETBYTE((2-uiV) & 0x3,RtV)); VddV.v[1].w[i] += fMPY8US(fGETUBYTE(1, VuuV.v[1 ].uw[i]),fGETBYTE((3-uiV) & 0x3,RtV)); VddV.v[1].w[i] += fMPY8US(fGETUBYTE(2, VuuV.v[uiV ? 1:0].uw[i]),fGETBYTE((0-uiV) & 0x3,RtV)); VddV.v[1].w[i] += fMPY8US(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETBYTE((1-uiV) & 0x3,RtV)) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vrmpybusi_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY8US(fGETUBYTE(0, VuuV.v[uiV ? 1:0].uw[i]),fGETBYTE((0-uiV) & 0x3,RtV)); VxxV.v[0].w[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0 ].uw[i]),fGETBYTE((1-uiV) & 0x3,RtV)); VxxV.v[0].w[i] += fMPY8US(fGETUBYTE(2, VuuV.v[0 ].uw[i]),fGETBYTE((2-uiV) & 0x3,RtV)); VxxV.v[0].w[i] += fMPY8US(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETBYTE((3-uiV) & 0x3,RtV)); VxxV.v[1].w[i] += fMPY8US(fGETUBYTE(0, VuuV.v[1 ].uw[i]),fGETBYTE((2-uiV) & 0x3,RtV)); VxxV.v[1].w[i] += fMPY8US(fGETUBYTE(1, VuuV.v[1 ].uw[i]),fGETBYTE((3-uiV) & 0x3,RtV)); VxxV.v[1].w[i] += fMPY8US(fGETUBYTE(2, VuuV.v[uiV ? 1:0].uw[i]),fGETBYTE((0-uiV) & 0x3,RtV)); VxxV.v[1].w[i] += fMPY8US(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETBYTE((1-uiV) & 0x3,RtV)) ; } },
DEF_HELPER_6(V6_vrmpybusi_acc, void, env, ptr, ptr, s32, s32, i32),
{
/* V6_vrmpybusi_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vrmpybusi_acc(SLOT_WRAP(gen_helper_V6_vrmpybusi_acc(cpu_env, VxxV, VuuV, RtV, uiV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY8US(fGETUBYTE(0, VuuV.v[uiV ? 1:0].uw[i]),fGETBYTE((0-uiV) & 0x3,RtV)); VxxV.v[0].w[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0 ].uw[i]),fGETBYTE((1-uiV) & 0x3,RtV)); VxxV.v[0].w[i] += fMPY8US(fGETUBYTE(2, VuuV.v[0 ].uw[i]),fGETBYTE((2-uiV) & 0x3,RtV)); VxxV.v[0].w[i] += fMPY8US(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETBYTE((3-uiV) & 0x3,RtV)); VxxV.v[1].w[i] += fMPY8US(fGETUBYTE(0, VuuV.v[1 ].uw[i]),fGETBYTE((2-uiV) & 0x3,RtV)); VxxV.v[1].w[i] += fMPY8US(fGETUBYTE(1, VuuV.v[1 ].uw[i]),fGETBYTE((3-uiV) & 0x3,RtV)); VxxV.v[1].w[i] += fMPY8US(fGETUBYTE(2, VuuV.v[uiV ? 1:0].uw[i]),fGETBYTE((0-uiV) & 0x3,RtV)); VxxV.v[1].w[i] += fMPY8US(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETBYTE((1-uiV) & 0x3,RtV)) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* V6_vrmpybusi_acc */
},
void HELPER(V6_vrmpybusi_acc)(CPUHexagonState *env, void *VxxV_void, void *VuuV_void, int32_t RtV, int32_t uiV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY8US(fGETUBYTE(0, VuuV.v[uiV ? 1:0].uw[i]),fGETBYTE((0-uiV) & 0x3,RtV)); VxxV.v[0].w[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0 ].uw[i]),fGETBYTE((1-uiV) & 0x3,RtV)); VxxV.v[0].w[i] += fMPY8US(fGETUBYTE(2, VuuV.v[0 ].uw[i]),fGETBYTE((2-uiV) & 0x3,RtV)); VxxV.v[0].w[i] += fMPY8US(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETBYTE((3-uiV) & 0x3,RtV)); VxxV.v[1].w[i] += fMPY8US(fGETUBYTE(0, VuuV.v[1 ].uw[i]),fGETBYTE((2-uiV) & 0x3,RtV)); VxxV.v[1].w[i] += fMPY8US(fGETUBYTE(1, VuuV.v[1 ].uw[i]),fGETBYTE((3-uiV) & 0x3,RtV)); VxxV.v[1].w[i] += fMPY8US(fGETUBYTE(2, VuuV.v[uiV ? 1:0].uw[i]),fGETBYTE((0-uiV) & 0x3,RtV)); VxxV.v[1].w[i] += fMPY8US(fGETUBYTE(3, VuuV.v[0 ].uw[i]),fGETBYTE((1-uiV) & 0x3,RtV)) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vrmpybusv,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY8US(fGETUBYTE(0,VuV.uw[i]), fGETBYTE(0,VvV.w[i])); VdV.w[i] += fMPY8US(fGETUBYTE(1,VuV.uw[i]), fGETBYTE(1,VvV.w[i])); VdV.w[i] += fMPY8US(fGETUBYTE(2,VuV.uw[i]), fGETBYTE(2,VvV.w[i])); VdV.w[i] += fMPY8US(fGETUBYTE(3,VuV.uw[i]), fGETBYTE(3,VvV.w[i])) ; } },
DEF_HELPER_5(V6_vrmpybusv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vrmpybusv */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vrmpybusv(SLOT_WRAP(gen_helper_V6_vrmpybusv(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY8US(fGETUBYTE(0,VuV.uw[i]), fGETBYTE(0,VvV.w[i])); VdV.w[i] += fMPY8US(fGETUBYTE(1,VuV.uw[i]), fGETBYTE(1,VvV.w[i])); VdV.w[i] += fMPY8US(fGETUBYTE(2,VuV.uw[i]), fGETBYTE(2,VvV.w[i])); VdV.w[i] += fMPY8US(fGETUBYTE(3,VuV.uw[i]), fGETBYTE(3,VvV.w[i])) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vrmpybusv */
},
void HELPER(V6_vrmpybusv)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY8US(fGETUBYTE(0,VuV.uw[i]), fGETBYTE(0,VvV.w[i])); VdV.w[i] += fMPY8US(fGETUBYTE(1,VuV.uw[i]), fGETBYTE(1,VvV.w[i])); VdV.w[i] += fMPY8US(fGETUBYTE(2,VuV.uw[i]), fGETBYTE(2,VvV.w[i])); VdV.w[i] += fMPY8US(fGETUBYTE(3,VuV.uw[i]), fGETBYTE(3,VvV.w[i])) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vrmpybusv_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY8US(fGETUBYTE(0,VuV.uw[i]), fGETBYTE(0,VvV.w[i])); VxV.w[i] += fMPY8US(fGETUBYTE(1,VuV.uw[i]), fGETBYTE(1,VvV.w[i])); VxV.w[i] += fMPY8US(fGETUBYTE(2,VuV.uw[i]), fGETBYTE(2,VvV.w[i])); VxV.w[i] += fMPY8US(fGETUBYTE(3,VuV.uw[i]), fGETBYTE(3,VvV.w[i])) ; } },
DEF_HELPER_5(V6_vrmpybusv_acc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vrmpybusv_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vrmpybusv_acc(SLOT_WRAP(gen_helper_V6_vrmpybusv_acc(cpu_env, VxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY8US(fGETUBYTE(0,VuV.uw[i]), fGETBYTE(0,VvV.w[i])); VxV.w[i] += fMPY8US(fGETUBYTE(1,VuV.uw[i]), fGETBYTE(1,VvV.w[i])); VxV.w[i] += fMPY8US(fGETUBYTE(2,VuV.uw[i]), fGETBYTE(2,VvV.w[i])); VxV.w[i] += fMPY8US(fGETUBYTE(3,VuV.uw[i]), fGETBYTE(3,VvV.w[i])) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vrmpybusv_acc */
},
void HELPER(V6_vrmpybusv_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY8US(fGETUBYTE(0,VuV.uw[i]), fGETBYTE(0,VvV.w[i])); VxV.w[i] += fMPY8US(fGETUBYTE(1,VuV.uw[i]), fGETBYTE(1,VvV.w[i])); VxV.w[i] += fMPY8US(fGETUBYTE(2,VuV.uw[i]), fGETBYTE(2,VvV.w[i])); VxV.w[i] += fMPY8US(fGETUBYTE(3,VuV.uw[i]), fGETBYTE(3,VvV.w[i])) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vdsaduh,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fABS(fGETUHALF(0, VuuV.v[0].uw[i]) - fGETUHALF(0,RtV)); VddV.v[0].uw[i] += fABS(fGETUHALF(1, VuuV.v[0].uw[i]) - fGETUHALF(1,RtV)); VddV.v[1].uw[i] = fABS(fGETUHALF(1, VuuV.v[0].uw[i]) - fGETUHALF(0,RtV)); VddV.v[1].uw[i] += fABS(fGETUHALF(0, VuuV.v[1].uw[i]) - fGETUHALF(1,RtV)) ; } },
DEF_HELPER_5(V6_vdsaduh, void, env, ptr, ptr, s32, i32),
{
/* V6_vdsaduh */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdsaduh(SLOT_WRAP(gen_helper_V6_vdsaduh(cpu_env, VddV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fABS(fGETUHALF(0, VuuV.v[0].uw[i]) - fGETUHALF(0,RtV)); VddV.v[0].uw[i] += fABS(fGETUHALF(1, VuuV.v[0].uw[i]) - fGETUHALF(1,RtV)); VddV.v[1].uw[i] = fABS(fGETUHALF(1, VuuV.v[0].uw[i]) - fGETUHALF(0,RtV)); VddV.v[1].uw[i] += fABS(fGETUHALF(0, VuuV.v[1].uw[i]) - fGETUHALF(1,RtV)) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vdsaduh */
},
void HELPER(V6_vdsaduh)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fABS(fGETUHALF(0, VuuV.v[0].uw[i]) - fGETUHALF(0,RtV)); VddV.v[0].uw[i] += fABS(fGETUHALF(1, VuuV.v[0].uw[i]) - fGETUHALF(1,RtV)); VddV.v[1].uw[i] = fABS(fGETUHALF(1, VuuV.v[0].uw[i]) - fGETUHALF(0,RtV)); VddV.v[1].uw[i] += fABS(fGETUHALF(0, VuuV.v[1].uw[i]) - fGETUHALF(1,RtV)) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vdsaduh_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].uw[i] += fABS(fGETUHALF(0, VuuV.v[0].uw[i]) - fGETUHALF(0,RtV)); VxxV.v[0].uw[i] += fABS(fGETUHALF(1, VuuV.v[0].uw[i]) - fGETUHALF(1,RtV)); VxxV.v[1].uw[i] += fABS(fGETUHALF(1, VuuV.v[0].uw[i]) - fGETUHALF(0,RtV)); VxxV.v[1].uw[i] += fABS(fGETUHALF(0, VuuV.v[1].uw[i]) - fGETUHALF(1,RtV)) ; } },
DEF_HELPER_5(V6_vdsaduh_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vdsaduh_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdsaduh_acc(SLOT_WRAP(gen_helper_V6_vdsaduh_acc(cpu_env, VxxV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].uw[i] += fABS(fGETUHALF(0, VuuV.v[0].uw[i]) - fGETUHALF(0,RtV)); VxxV.v[0].uw[i] += fABS(fGETUHALF(1, VuuV.v[0].uw[i]) - fGETUHALF(1,RtV)); VxxV.v[1].uw[i] += fABS(fGETUHALF(1, VuuV.v[0].uw[i]) - fGETUHALF(0,RtV)); VxxV.v[1].uw[i] += fABS(fGETUHALF(0, VuuV.v[1].uw[i]) - fGETUHALF(1,RtV)) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vdsaduh_acc */
},
void HELPER(V6_vdsaduh_acc)(CPUHexagonState *env, void *VxxV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].uw[i] += fABS(fGETUHALF(0, VuuV.v[0].uw[i]) - fGETUHALF(0,RtV)); VxxV.v[0].uw[i] += fABS(fGETUHALF(1, VuuV.v[0].uw[i]) - fGETUHALF(1,RtV)); VxxV.v[1].uw[i] += fABS(fGETUHALF(1, VuuV.v[0].uw[i]) - fGETUHALF(0,RtV)); VxxV.v[1].uw[i] += fABS(fGETUHALF(0, VuuV.v[1].uw[i]) - fGETUHALF(1,RtV)) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vrsadubi,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fABS(fZE8_16(fGETUBYTE(0, VuuV.v[uiV?1:0].uw[i])) - fZE8_16(fGETUBYTE((0-uiV)&3,RtV))); VddV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(1, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((1-uiV)&3,RtV))); VddV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(2, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((2-uiV)&3,RtV))); VddV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(3, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((3-uiV)&3,RtV))); VddV.v[1].uw[i] = fABS(fZE8_16(fGETUBYTE(0, VuuV.v[1 ].uw[i])) - fZE8_16(fGETUBYTE((2-uiV)&3,RtV))); VddV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(1, VuuV.v[1 ].uw[i])) - fZE8_16(fGETUBYTE((3-uiV)&3,RtV))); VddV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(2, VuuV.v[uiV?1:0].uw[i])) - fZE8_16(fGETUBYTE((0-uiV)&3,RtV))); VddV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(3, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((1-uiV)&3,RtV))) ; } },
DEF_HELPER_6(V6_vrsadubi, void, env, ptr, ptr, s32, s32, i32),
{
/* V6_vrsadubi */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vrsadubi(SLOT_WRAP(gen_helper_V6_vrsadubi(cpu_env, VddV, VuuV, RtV, uiV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fABS(fZE8_16(fGETUBYTE(0, VuuV.v[uiV?1:0].uw[i])) - fZE8_16(fGETUBYTE((0-uiV)&3,RtV))); VddV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(1, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((1-uiV)&3,RtV))); VddV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(2, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((2-uiV)&3,RtV))); VddV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(3, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((3-uiV)&3,RtV))); VddV.v[1].uw[i] = fABS(fZE8_16(fGETUBYTE(0, VuuV.v[1 ].uw[i])) - fZE8_16(fGETUBYTE((2-uiV)&3,RtV))); VddV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(1, VuuV.v[1 ].uw[i])) - fZE8_16(fGETUBYTE((3-uiV)&3,RtV))); VddV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(2, VuuV.v[uiV?1:0].uw[i])) - fZE8_16(fGETUBYTE((0-uiV)&3,RtV))); VddV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(3, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((1-uiV)&3,RtV))) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* V6_vrsadubi */
},
void HELPER(V6_vrsadubi)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, int32_t RtV, int32_t uiV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fABS(fZE8_16(fGETUBYTE(0, VuuV.v[uiV?1:0].uw[i])) - fZE8_16(fGETUBYTE((0-uiV)&3,RtV))); VddV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(1, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((1-uiV)&3,RtV))); VddV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(2, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((2-uiV)&3,RtV))); VddV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(3, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((3-uiV)&3,RtV))); VddV.v[1].uw[i] = fABS(fZE8_16(fGETUBYTE(0, VuuV.v[1 ].uw[i])) - fZE8_16(fGETUBYTE((2-uiV)&3,RtV))); VddV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(1, VuuV.v[1 ].uw[i])) - fZE8_16(fGETUBYTE((3-uiV)&3,RtV))); VddV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(2, VuuV.v[uiV?1:0].uw[i])) - fZE8_16(fGETUBYTE((0-uiV)&3,RtV))); VddV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(3, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((1-uiV)&3,RtV))) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vrsadubi_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(0, VuuV.v[uiV?1:0].uw[i])) - fZE8_16(fGETUBYTE((0-uiV)&3,RtV))); VxxV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(1, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((1-uiV)&3,RtV))); VxxV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(2, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((2-uiV)&3,RtV))); VxxV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(3, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((3-uiV)&3,RtV))); VxxV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(0, VuuV.v[1 ].uw[i])) - fZE8_16(fGETUBYTE((2-uiV)&3,RtV))); VxxV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(1, VuuV.v[1 ].uw[i])) - fZE8_16(fGETUBYTE((3-uiV)&3,RtV))); VxxV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(2, VuuV.v[uiV?1:0].uw[i])) - fZE8_16(fGETUBYTE((0-uiV)&3,RtV))); VxxV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(3, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((1-uiV)&3,RtV))) ; } },
DEF_HELPER_6(V6_vrsadubi_acc, void, env, ptr, ptr, s32, s32, i32),
{
/* V6_vrsadubi_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
DECL_IMM(uiV,0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vrsadubi_acc(SLOT_WRAP(gen_helper_V6_vrsadubi_acc(cpu_env, VxxV, VuuV, RtV, uiV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(0, VuuV.v[uiV?1:0].uw[i])) - fZE8_16(fGETUBYTE((0-uiV)&3,RtV))); VxxV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(1, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((1-uiV)&3,RtV))); VxxV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(2, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((2-uiV)&3,RtV))); VxxV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(3, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((3-uiV)&3,RtV))); VxxV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(0, VuuV.v[1 ].uw[i])) - fZE8_16(fGETUBYTE((2-uiV)&3,RtV))); VxxV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(1, VuuV.v[1 ].uw[i])) - fZE8_16(fGETUBYTE((3-uiV)&3,RtV))); VxxV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(2, VuuV.v[uiV?1:0].uw[i])) - fZE8_16(fGETUBYTE((0-uiV)&3,RtV))); VxxV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(3, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((1-uiV)&3,RtV))) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
FREE_IMM(uiV);
/* V6_vrsadubi_acc */
},
void HELPER(V6_vrsadubi_acc)(CPUHexagonState *env, void *VxxV_void, void *VuuV_void, int32_t RtV, int32_t uiV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(0, VuuV.v[uiV?1:0].uw[i])) - fZE8_16(fGETUBYTE((0-uiV)&3,RtV))); VxxV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(1, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((1-uiV)&3,RtV))); VxxV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(2, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((2-uiV)&3,RtV))); VxxV.v[0].uw[i] += fABS(fZE8_16(fGETUBYTE(3, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((3-uiV)&3,RtV))); VxxV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(0, VuuV.v[1 ].uw[i])) - fZE8_16(fGETUBYTE((2-uiV)&3,RtV))); VxxV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(1, VuuV.v[1 ].uw[i])) - fZE8_16(fGETUBYTE((3-uiV)&3,RtV))); VxxV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(2, VuuV.v[uiV?1:0].uw[i])) - fZE8_16(fGETUBYTE((0-uiV)&3,RtV))); VxxV.v[1].uw[i] += fABS(fZE8_16(fGETUBYTE(3, VuuV.v[0 ].uw[i])) - fZE8_16(fGETUBYTE((1-uiV)&3,RtV))) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vasrw,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = (VuV.w[i] >> (RtV & (32-1))) ; } },
DEF_HELPER_5(V6_vasrw, void, env, ptr, ptr, s32, i32),
{
/* V6_vasrw */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vasrw(SLOT_WRAP(gen_helper_V6_vasrw(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = (VuV.w[i] >> (RtV & (32-1))) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vasrw */
},
void HELPER(V6_vasrw)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = (VuV.w[i] >> (RtV & (32-1))) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaslw,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = (VuV.w[i] << (RtV & (32-1))) ; } },
DEF_HELPER_5(V6_vaslw, void, env, ptr, ptr, s32, i32),
{
/* V6_vaslw */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vaslw(SLOT_WRAP(gen_helper_V6_vaslw(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = (VuV.w[i] << (RtV & (32-1))) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vaslw */
},
void HELPER(V6_vaslw)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = (VuV.w[i] << (RtV & (32-1))) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vlsrw,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = (VuV.uw[i] >> (RtV & (32-1))) ; } },
DEF_HELPER_5(V6_vlsrw, void, env, ptr, ptr, s32, i32),
{
/* V6_vlsrw */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vlsrw(SLOT_WRAP(gen_helper_V6_vlsrw(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = (VuV.uw[i] >> (RtV & (32-1))) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vlsrw */
},
void HELPER(V6_vlsrw)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = (VuV.uw[i] >> (RtV & (32-1))) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vasrwv,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fBIDIR_ASHIFTR(VuV.w[i], fSXTN((5+1),32,VvV.w[i]),4_4) ; } },
DEF_HELPER_5(V6_vasrwv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vasrwv */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vasrwv(SLOT_WRAP(gen_helper_V6_vasrwv(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fBIDIR_ASHIFTR(VuV.w[i], fSXTN((5+1),32,VvV.w[i]),4_4) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vasrwv */
},
void HELPER(V6_vasrwv)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fBIDIR_ASHIFTR(VuV.w[i], fSXTN((5+1),32,VvV.w[i]),4_4) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaslwv,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fBIDIR_ASHIFTL(VuV.w[i], fSXTN((5+1),32,VvV.w[i]),4_4) ; } },
DEF_HELPER_5(V6_vaslwv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaslwv */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vaslwv(SLOT_WRAP(gen_helper_V6_vaslwv(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fBIDIR_ASHIFTL(VuV.w[i], fSXTN((5+1),32,VvV.w[i]),4_4) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vaslwv */
},
void HELPER(V6_vaslwv)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fBIDIR_ASHIFTL(VuV.w[i], fSXTN((5+1),32,VvV.w[i]),4_4) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vlsrwv,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fBIDIR_LSHIFTR(VuV.uw[i], fSXTN((5+1),32,VvV.w[i]),4_4) ; } },
DEF_HELPER_5(V6_vlsrwv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vlsrwv */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vlsrwv(SLOT_WRAP(gen_helper_V6_vlsrwv(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fBIDIR_LSHIFTR(VuV.uw[i], fSXTN((5+1),32,VvV.w[i]),4_4) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vlsrwv */
},
void HELPER(V6_vlsrwv)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fBIDIR_LSHIFTR(VuV.uw[i], fSXTN((5+1),32,VvV.w[i]),4_4) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vasrh,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = (VuV.h[i] >> (RtV & (16-1))) ; } },
DEF_HELPER_5(V6_vasrh, void, env, ptr, ptr, s32, i32),
{
/* V6_vasrh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vasrh(SLOT_WRAP(gen_helper_V6_vasrh(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = (VuV.h[i] >> (RtV & (16-1))) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vasrh */
},
void HELPER(V6_vasrh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = (VuV.h[i] >> (RtV & (16-1))) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaslh,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = (VuV.h[i] << (RtV & (16-1))) ; } },
DEF_HELPER_5(V6_vaslh, void, env, ptr, ptr, s32, i32),
{
/* V6_vaslh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vaslh(SLOT_WRAP(gen_helper_V6_vaslh(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = (VuV.h[i] << (RtV & (16-1))) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vaslh */
},
void HELPER(V6_vaslh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = (VuV.h[i] << (RtV & (16-1))) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vlsrh,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = (VuV.uh[i] >> (RtV & (16-1))) ; } },
DEF_HELPER_5(V6_vlsrh, void, env, ptr, ptr, s32, i32),
{
/* V6_vlsrh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vlsrh(SLOT_WRAP(gen_helper_V6_vlsrh(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = (VuV.uh[i] >> (RtV & (16-1))) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vlsrh */
},
void HELPER(V6_vlsrh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = (VuV.uh[i] >> (RtV & (16-1))) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vasrhv,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fBIDIR_ASHIFTR(VuV.h[i], fSXTN((4+1),16,VvV.h[i]),2_2) ; } },
DEF_HELPER_5(V6_vasrhv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vasrhv */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vasrhv(SLOT_WRAP(gen_helper_V6_vasrhv(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fBIDIR_ASHIFTR(VuV.h[i], fSXTN((4+1),16,VvV.h[i]),2_2) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vasrhv */
},
void HELPER(V6_vasrhv)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fBIDIR_ASHIFTR(VuV.h[i], fSXTN((4+1),16,VvV.h[i]),2_2) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaslhv,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fBIDIR_ASHIFTL(VuV.h[i], fSXTN((4+1),16,VvV.h[i]),2_2) ; } },
DEF_HELPER_5(V6_vaslhv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaslhv */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vaslhv(SLOT_WRAP(gen_helper_V6_vaslhv(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fBIDIR_ASHIFTL(VuV.h[i], fSXTN((4+1),16,VvV.h[i]),2_2) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vaslhv */
},
void HELPER(V6_vaslhv)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fBIDIR_ASHIFTL(VuV.h[i], fSXTN((4+1),16,VvV.h[i]),2_2) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vlsrhv,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = fBIDIR_LSHIFTR(VuV.uh[i], fSXTN((4+1),16,VvV.h[i]),2_2) ; } },
DEF_HELPER_5(V6_vlsrhv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vlsrhv */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vlsrhv(SLOT_WRAP(gen_helper_V6_vlsrhv(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = fBIDIR_LSHIFTR(VuV.uh[i], fSXTN((4+1),16,VvV.h[i]),2_2) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vlsrhv */
},
void HELPER(V6_vlsrhv)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = fBIDIR_LSHIFTR(VuV.uh[i], fSXTN((4+1),16,VvV.h[i]),2_2) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vlsrb,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = VuV.ub[i] >> (RtV & 0x7) ; } },
DEF_HELPER_5(V6_vlsrb, void, env, ptr, ptr, s32, i32),
{
/* V6_vlsrb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vlsrb(SLOT_WRAP(gen_helper_V6_vlsrb(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = VuV.ub[i] >> (RtV & 0x7) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vlsrb */
},
void HELPER(V6_vlsrb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = VuV.ub[i] >> (RtV & 0x7) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vrotr,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = ((VuV.uw[i] >> (VvV.uw[i] & 0x1f)) | (VuV.uw[i] << (32 - (VvV.uw[i] & 0x1f)))) ; } },
DEF_HELPER_5(V6_vrotr, void, env, ptr, ptr, ptr, i32),
{
/* V6_vrotr */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vrotr(SLOT_WRAP(gen_helper_V6_vrotr(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = ((VuV.uw[i] >> (VvV.uw[i] & 0x1f)) | (VuV.uw[i] << (32 - (VvV.uw[i] & 0x1f)))) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vrotr */
},
void HELPER(V6_vrotr)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = ((VuV.uw[i] >> (VvV.uw[i] & 0x1f)) | (VuV.uw[i] << (32 - (VvV.uw[i] & 0x1f)))) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vasr_into,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(int64_t ) shift = (fSE32_64(VuV.w[i]) << 32); fHIDE(int64_t ) mask = (((fSE32_64(VxxV.v[0].w[i])) << 32) | fZE32_64(VxxV.v[0].w[i])); fHIDE(int64_t) lomask = (((fSE32_64(1)) << 32) - 1); fHIDE(int ) count = -(0x40 & VvV.w[i]) + (VvV.w[i] & 0x3f); fHIDE(int64_t ) result = (count == -0x40) ? 0 : (((count < 0) ? ((shift << -(count)) | (mask & (lomask << -(count)))) : ((shift >> count) | (mask & (lomask >> count))))); VxxV.v[1].w[i] = ((result >> 32) & 0xffffffff); VxxV.v[0].w[i] = (result & 0xffffffff) ; } },
DEF_HELPER_5(V6_vasr_into, void, env, ptr, ptr, ptr, i32),
{
/* V6_vasr_into */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vasr_into(SLOT_WRAP(gen_helper_V6_vasr_into(cpu_env, VxxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(int64_t ) shift = (fSE32_64(VuV.w[i]) << 32); fHIDE(int64_t ) mask = (((fSE32_64(VxxV.v[0].w[i])) << 32) | fZE32_64(VxxV.v[0].w[i])); fHIDE(int64_t) lomask = (((fSE32_64(1)) << 32) - 1); fHIDE(int ) count = -(0x40 & VvV.w[i]) + (VvV.w[i] & 0x3f); fHIDE(int64_t ) result = (count == -0x40) ? 0 : (((count < 0) ? ((shift << -(count)) | (mask & (lomask << -(count)))) : ((shift >> count) | (mask & (lomask >> count))))); VxxV.v[1].w[i] = ((result >> 32) & 0xffffffff); VxxV.v[0].w[i] = (result & 0xffffffff) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vasr_into */
},
void HELPER(V6_vasr_into)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(int64_t ) shift = (fSE32_64(VuV.w[i]) << 32); fHIDE(int64_t ) mask = (((fSE32_64(VxxV.v[0].w[i])) << 32) | fZE32_64(VxxV.v[0].w[i])); fHIDE(int64_t) lomask = (((fSE32_64(1)) << 32) - 1); fHIDE(int ) count = -(0x40 & VvV.w[i]) + (VvV.w[i] & 0x3f); fHIDE(int64_t ) result = (count == -0x40) ? 0 : (((count < 0) ? ((shift << -(count)) | (mask & (lomask << -(count)))) : ((shift >> count) | (mask & (lomask >> count))))); VxxV.v[1].w[i] = ((result >> 32) & 0xffffffff); VxxV.v[0].w[i] = (result & 0xffffffff) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vasrwh,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.w[i],fECHO(fVNOROUND(VvV.w[i],shamt) >> shamt)); fSETHALF(1,VdV.w[i],fECHO(fVNOROUND(VuV.w[i],shamt) >> shamt)) ; } },
DEF_HELPER_6(V6_vasrwh, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vasrwh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vasrwh(SLOT_WRAP(gen_helper_V6_vasrwh(cpu_env, VdV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.w[i],fECHO(fVNOROUND(VvV.w[i],shamt) >> shamt)); fSETHALF(1,VdV.w[i],fECHO(fVNOROUND(VuV.w[i],shamt) >> shamt)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vasrwh */
},
void HELPER(V6_vasrwh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.w[i],fECHO(fVNOROUND(VvV.w[i],shamt) >> shamt)); fSETHALF(1,VdV.w[i],fECHO(fVNOROUND(VuV.w[i],shamt) >> shamt)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vasrwhsat,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.w[i],fVSATH(fVNOROUND(VvV.w[i],shamt) >> shamt)); fSETHALF(1,VdV.w[i],fVSATH(fVNOROUND(VuV.w[i],shamt) >> shamt)) ; } },
DEF_HELPER_6(V6_vasrwhsat, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vasrwhsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vasrwhsat(SLOT_WRAP(gen_helper_V6_vasrwhsat(cpu_env, VdV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.w[i],fVSATH(fVNOROUND(VvV.w[i],shamt) >> shamt)); fSETHALF(1,VdV.w[i],fVSATH(fVNOROUND(VuV.w[i],shamt) >> shamt)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vasrwhsat */
},
void HELPER(V6_vasrwhsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.w[i],fVSATH(fVNOROUND(VvV.w[i],shamt) >> shamt)); fSETHALF(1,VdV.w[i],fVSATH(fVNOROUND(VuV.w[i],shamt) >> shamt)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vasrwhrndsat,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.w[i],fVSATH(fVROUND(VvV.w[i],shamt) >> shamt)); fSETHALF(1,VdV.w[i],fVSATH(fVROUND(VuV.w[i],shamt) >> shamt)) ; } },
DEF_HELPER_6(V6_vasrwhrndsat, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vasrwhrndsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vasrwhrndsat(SLOT_WRAP(gen_helper_V6_vasrwhrndsat(cpu_env, VdV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.w[i],fVSATH(fVROUND(VvV.w[i],shamt) >> shamt)); fSETHALF(1,VdV.w[i],fVSATH(fVROUND(VuV.w[i],shamt) >> shamt)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vasrwhrndsat */
},
void HELPER(V6_vasrwhrndsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.w[i],fVSATH(fVROUND(VvV.w[i],shamt) >> shamt)); fSETHALF(1,VdV.w[i],fVSATH(fVROUND(VuV.w[i],shamt) >> shamt)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vasrwuhrndsat,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.w[i],fVSATUH(fVROUND(VvV.w[i],shamt) >> shamt)); fSETHALF(1,VdV.w[i],fVSATUH(fVROUND(VuV.w[i],shamt) >> shamt)) ; } },
DEF_HELPER_6(V6_vasrwuhrndsat, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vasrwuhrndsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vasrwuhrndsat(SLOT_WRAP(gen_helper_V6_vasrwuhrndsat(cpu_env, VdV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.w[i],fVSATUH(fVROUND(VvV.w[i],shamt) >> shamt)); fSETHALF(1,VdV.w[i],fVSATUH(fVROUND(VuV.w[i],shamt) >> shamt)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vasrwuhrndsat */
},
void HELPER(V6_vasrwuhrndsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.w[i],fVSATUH(fVROUND(VvV.w[i],shamt) >> shamt)); fSETHALF(1,VdV.w[i],fVSATUH(fVROUND(VuV.w[i],shamt) >> shamt)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vasrwuhsat,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.w[i],fVSATUH(fVNOROUND(VvV.w[i],shamt) >> shamt)); fSETHALF(1,VdV.w[i],fVSATUH(fVNOROUND(VuV.w[i],shamt) >> shamt)) ; } },
DEF_HELPER_6(V6_vasrwuhsat, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vasrwuhsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vasrwuhsat(SLOT_WRAP(gen_helper_V6_vasrwuhsat(cpu_env, VdV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.w[i],fVSATUH(fVNOROUND(VvV.w[i],shamt) >> shamt)); fSETHALF(1,VdV.w[i],fVSATUH(fVNOROUND(VuV.w[i],shamt) >> shamt)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vasrwuhsat */
},
void HELPER(V6_vasrwuhsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.w[i],fVSATUH(fVNOROUND(VvV.w[i],shamt) >> shamt)); fSETHALF(1,VdV.w[i],fVSATUH(fVNOROUND(VuV.w[i],shamt) >> shamt)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vasruwuhrndsat,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.uw[i],fVSATUH(fVROUND(VvV.uw[i],shamt) >> shamt)); fSETHALF(1,VdV.uw[i],fVSATUH(fVROUND(VuV.uw[i],shamt) >> shamt)) ; } },
DEF_HELPER_6(V6_vasruwuhrndsat, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vasruwuhrndsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vasruwuhrndsat(SLOT_WRAP(gen_helper_V6_vasruwuhrndsat(cpu_env, VdV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.uw[i],fVSATUH(fVROUND(VvV.uw[i],shamt) >> shamt)); fSETHALF(1,VdV.uw[i],fVSATUH(fVROUND(VuV.uw[i],shamt) >> shamt)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vasruwuhrndsat */
},
void HELPER(V6_vasruwuhrndsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.uw[i],fVSATUH(fVROUND(VvV.uw[i],shamt) >> shamt)); fSETHALF(1,VdV.uw[i],fVSATUH(fVROUND(VuV.uw[i],shamt) >> shamt)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vasruwuhsat,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.uw[i],fVSATUH(fVNOROUND(VvV.uw[i],shamt) >> shamt)); fSETHALF(1,VdV.uw[i],fVSATUH(fVNOROUND(VuV.uw[i],shamt) >> shamt)) ; } },
DEF_HELPER_6(V6_vasruwuhsat, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vasruwuhsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vasruwuhsat(SLOT_WRAP(gen_helper_V6_vasruwuhsat(cpu_env, VdV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.uw[i],fVSATUH(fVNOROUND(VvV.uw[i],shamt) >> shamt)); fSETHALF(1,VdV.uw[i],fVSATUH(fVNOROUND(VuV.uw[i],shamt) >> shamt)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vasruwuhsat */
},
void HELPER(V6_vasruwuhsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0xF; fSETHALF(0,VdV.uw[i],fVSATUH(fVNOROUND(VvV.uw[i],shamt) >> shamt)); fSETHALF(1,VdV.uw[i],fVSATUH(fVNOROUND(VuV.uw[i],shamt) >> shamt)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vasrhubsat,{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.h[i],fVSATUB(fVNOROUND(VvV.h[i],shamt) >> shamt)); fSETBYTE(1,VdV.h[i],fVSATUB(fVNOROUND(VuV.h[i],shamt) >> shamt)) ; } },
DEF_HELPER_6(V6_vasrhubsat, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vasrhubsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vasrhubsat(SLOT_WRAP(gen_helper_V6_vasrhubsat(cpu_env, VdV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.h[i],fVSATUB(fVNOROUND(VvV.h[i],shamt) >> shamt)); fSETBYTE(1,VdV.h[i],fVSATUB(fVNOROUND(VuV.h[i],shamt) >> shamt)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vasrhubsat */
},
void HELPER(V6_vasrhubsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.h[i],fVSATUB(fVNOROUND(VvV.h[i],shamt) >> shamt)); fSETBYTE(1,VdV.h[i],fVSATUB(fVNOROUND(VuV.h[i],shamt) >> shamt)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vasrhubrndsat,{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.h[i],fVSATUB(fVROUND(VvV.h[i],shamt) >> shamt)); fSETBYTE(1,VdV.h[i],fVSATUB(fVROUND(VuV.h[i],shamt) >> shamt)) ; } },
DEF_HELPER_6(V6_vasrhubrndsat, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vasrhubrndsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vasrhubrndsat(SLOT_WRAP(gen_helper_V6_vasrhubrndsat(cpu_env, VdV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.h[i],fVSATUB(fVROUND(VvV.h[i],shamt) >> shamt)); fSETBYTE(1,VdV.h[i],fVSATUB(fVROUND(VuV.h[i],shamt) >> shamt)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vasrhubrndsat */
},
void HELPER(V6_vasrhubrndsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.h[i],fVSATUB(fVROUND(VvV.h[i],shamt) >> shamt)); fSETBYTE(1,VdV.h[i],fVSATUB(fVROUND(VuV.h[i],shamt) >> shamt)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vasrhbsat,{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.h[i],fVSATB(fVNOROUND(VvV.h[i],shamt) >> shamt)); fSETBYTE(1,VdV.h[i],fVSATB(fVNOROUND(VuV.h[i],shamt) >> shamt)) ; } },
DEF_HELPER_6(V6_vasrhbsat, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vasrhbsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vasrhbsat(SLOT_WRAP(gen_helper_V6_vasrhbsat(cpu_env, VdV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.h[i],fVSATB(fVNOROUND(VvV.h[i],shamt) >> shamt)); fSETBYTE(1,VdV.h[i],fVSATB(fVNOROUND(VuV.h[i],shamt) >> shamt)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vasrhbsat */
},
void HELPER(V6_vasrhbsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.h[i],fVSATB(fVNOROUND(VvV.h[i],shamt) >> shamt)); fSETBYTE(1,VdV.h[i],fVSATB(fVNOROUND(VuV.h[i],shamt) >> shamt)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vasrhbrndsat,{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.h[i],fVSATB(fVROUND(VvV.h[i],shamt) >> shamt)); fSETBYTE(1,VdV.h[i],fVSATB(fVROUND(VuV.h[i],shamt) >> shamt)) ; } },
DEF_HELPER_6(V6_vasrhbrndsat, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vasrhbrndsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vasrhbrndsat(SLOT_WRAP(gen_helper_V6_vasrhbrndsat(cpu_env, VdV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.h[i],fVSATB(fVROUND(VvV.h[i],shamt) >> shamt)); fSETBYTE(1,VdV.h[i],fVSATB(fVROUND(VuV.h[i],shamt) >> shamt)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vasrhbrndsat */
},
void HELPER(V6_vasrhbrndsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.h[i],fVSATB(fVROUND(VvV.h[i],shamt) >> shamt)); fSETBYTE(1,VdV.h[i],fVSATB(fVROUND(VuV.h[i],shamt) >> shamt)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vasruhubsat,{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.uh[i],fVSATUB(fVNOROUND(VvV.uh[i],shamt) >> shamt)); fSETBYTE(1,VdV.uh[i],fVSATUB(fVNOROUND(VuV.uh[i],shamt) >> shamt)) ; } },
DEF_HELPER_6(V6_vasruhubsat, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vasruhubsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vasruhubsat(SLOT_WRAP(gen_helper_V6_vasruhubsat(cpu_env, VdV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.uh[i],fVSATUB(fVNOROUND(VvV.uh[i],shamt) >> shamt)); fSETBYTE(1,VdV.uh[i],fVSATUB(fVNOROUND(VuV.uh[i],shamt) >> shamt)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vasruhubsat */
},
void HELPER(V6_vasruhubsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.uh[i],fVSATUB(fVNOROUND(VvV.uh[i],shamt) >> shamt)); fSETBYTE(1,VdV.uh[i],fVSATUB(fVNOROUND(VuV.uh[i],shamt) >> shamt)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vasruhubrndsat,{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.uh[i],fVSATUB(fVROUND(VvV.uh[i],shamt) >> shamt)); fSETBYTE(1,VdV.uh[i],fVSATUB(fVROUND(VuV.uh[i],shamt) >> shamt)) ; } },
DEF_HELPER_6(V6_vasruhubrndsat, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vasruhubrndsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vasruhubrndsat(SLOT_WRAP(gen_helper_V6_vasruhubrndsat(cpu_env, VdV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.uh[i],fVSATUB(fVROUND(VvV.uh[i],shamt) >> shamt)); fSETBYTE(1,VdV.uh[i],fVSATUB(fVROUND(VuV.uh[i],shamt) >> shamt)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vasruhubrndsat */
},
void HELPER(V6_vasruhubrndsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(int )shamt = RtV & 0x7; fSETBYTE(0,VdV.uh[i],fVSATUB(fVROUND(VvV.uh[i],shamt) >> shamt)); fSETBYTE(1,VdV.uh[i],fVSATUB(fVROUND(VuV.uh[i],shamt) >> shamt)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vroundwh,{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], fVSATH((VvV.w[i] + fCONSTLL(0x8000)) >> 16)); fSETHALF(1, VdV.uw[i], fVSATH((VuV.w[i] + fCONSTLL(0x8000)) >> 16)) ; } },
DEF_HELPER_5(V6_vroundwh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vroundwh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vroundwh(SLOT_WRAP(gen_helper_V6_vroundwh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], fVSATH((VvV.w[i] + fCONSTLL(0x8000)) >> 16)); fSETHALF(1, VdV.uw[i], fVSATH((VuV.w[i] + fCONSTLL(0x8000)) >> 16)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vroundwh */
},
void HELPER(V6_vroundwh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], fVSATH((VvV.w[i] + fCONSTLL(0x8000)) >> 16)); fSETHALF(1, VdV.uw[i], fVSATH((VuV.w[i] + fCONSTLL(0x8000)) >> 16)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vroundwuh,{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], fVSATUH((VvV.w[i] + fCONSTLL(0x8000)) >> 16)); fSETHALF(1, VdV.uw[i], fVSATUH((VuV.w[i] + fCONSTLL(0x8000)) >> 16)) ; } },
DEF_HELPER_5(V6_vroundwuh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vroundwuh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vroundwuh(SLOT_WRAP(gen_helper_V6_vroundwuh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], fVSATUH((VvV.w[i] + fCONSTLL(0x8000)) >> 16)); fSETHALF(1, VdV.uw[i], fVSATUH((VuV.w[i] + fCONSTLL(0x8000)) >> 16)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vroundwuh */
},
void HELPER(V6_vroundwuh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], fVSATUH((VvV.w[i] + fCONSTLL(0x8000)) >> 16)); fSETHALF(1, VdV.uw[i], fVSATUH((VuV.w[i] + fCONSTLL(0x8000)) >> 16)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vrounduwuh,{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], fVSATUH((VvV.uw[i] + fCONSTLL(0x8000)) >> 16)); fSETHALF(1, VdV.uw[i], fVSATUH((VuV.uw[i] + fCONSTLL(0x8000)) >> 16)) ; } },
DEF_HELPER_5(V6_vrounduwuh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vrounduwuh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vrounduwuh(SLOT_WRAP(gen_helper_V6_vrounduwuh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], fVSATUH((VvV.uw[i] + fCONSTLL(0x8000)) >> 16)); fSETHALF(1, VdV.uw[i], fVSATUH((VuV.uw[i] + fCONSTLL(0x8000)) >> 16)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vrounduwuh */
},
void HELPER(V6_vrounduwuh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], fVSATUH((VvV.uw[i] + fCONSTLL(0x8000)) >> 16)); fSETHALF(1, VdV.uw[i], fVSATUH((VuV.uw[i] + fCONSTLL(0x8000)) >> 16)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vroundhb,{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fVSATB((VvV.h[i] + 0x80) >> 8)); fSETBYTE(1, VdV.uh[i], fVSATB((VuV.h[i] + 0x80) >> 8)) ; } },
DEF_HELPER_5(V6_vroundhb, void, env, ptr, ptr, ptr, i32),
{
/* V6_vroundhb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vroundhb(SLOT_WRAP(gen_helper_V6_vroundhb(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fVSATB((VvV.h[i] + 0x80) >> 8)); fSETBYTE(1, VdV.uh[i], fVSATB((VuV.h[i] + 0x80) >> 8)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vroundhb */
},
void HELPER(V6_vroundhb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fVSATB((VvV.h[i] + 0x80) >> 8)); fSETBYTE(1, VdV.uh[i], fVSATB((VuV.h[i] + 0x80) >> 8)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vroundhub,{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fVSATUB((VvV.h[i] + 0x80) >> 8)); fSETBYTE(1, VdV.uh[i], fVSATUB((VuV.h[i] + 0x80) >> 8)) ; } },
DEF_HELPER_5(V6_vroundhub, void, env, ptr, ptr, ptr, i32),
{
/* V6_vroundhub */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vroundhub(SLOT_WRAP(gen_helper_V6_vroundhub(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fVSATUB((VvV.h[i] + 0x80) >> 8)); fSETBYTE(1, VdV.uh[i], fVSATUB((VuV.h[i] + 0x80) >> 8)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vroundhub */
},
void HELPER(V6_vroundhub)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fVSATUB((VvV.h[i] + 0x80) >> 8)); fSETBYTE(1, VdV.uh[i], fVSATUB((VuV.h[i] + 0x80) >> 8)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vrounduhub,{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fVSATUB((VvV.uh[i] + 0x80) >> 8)); fSETBYTE(1, VdV.uh[i], fVSATUB((VuV.uh[i] + 0x80) >> 8)) ; } },
DEF_HELPER_5(V6_vrounduhub, void, env, ptr, ptr, ptr, i32),
{
/* V6_vrounduhub */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vrounduhub(SLOT_WRAP(gen_helper_V6_vrounduhub(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fVSATUB((VvV.uh[i] + 0x80) >> 8)); fSETBYTE(1, VdV.uh[i], fVSATUB((VuV.uh[i] + 0x80) >> 8)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vrounduhub */
},
void HELPER(V6_vrounduhub)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fVSATUB((VvV.uh[i] + 0x80) >> 8)); fSETBYTE(1, VdV.uh[i], fVSATUB((VuV.uh[i] + 0x80) >> 8)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaslw_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += (VuV.w[i] << (RtV & (32-1))) ; } },
DEF_HELPER_5(V6_vaslw_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vaslw_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vaslw_acc(SLOT_WRAP(gen_helper_V6_vaslw_acc(cpu_env, VxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += (VuV.w[i] << (RtV & (32-1))) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vaslw_acc */
},
void HELPER(V6_vaslw_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += (VuV.w[i] << (RtV & (32-1))) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vasrw_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += (VuV.w[i] >> (RtV & (32-1))) ; } },
DEF_HELPER_5(V6_vasrw_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vasrw_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vasrw_acc(SLOT_WRAP(gen_helper_V6_vasrw_acc(cpu_env, VxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += (VuV.w[i] >> (RtV & (32-1))) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vasrw_acc */
},
void HELPER(V6_vasrw_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += (VuV.w[i] >> (RtV & (32-1))) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vaslh_acc,{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i] += (VuV.h[i] << (RtV & (16-1))) ; } },
DEF_HELPER_5(V6_vaslh_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vaslh_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vaslh_acc(SLOT_WRAP(gen_helper_V6_vaslh_acc(cpu_env, VxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i] += (VuV.h[i] << (RtV & (16-1))) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vaslh_acc */
},
void HELPER(V6_vaslh_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i] += (VuV.h[i] << (RtV & (16-1))) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vasrh_acc,{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i] += (VuV.h[i] >> (RtV & (16-1))) ; } },
DEF_HELPER_5(V6_vasrh_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vasrh_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vasrh_acc(SLOT_WRAP(gen_helper_V6_vasrh_acc(cpu_env, VxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i] += (VuV.h[i] >> (RtV & (16-1))) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vasrh_acc */
},
void HELPER(V6_vasrh_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i] += (VuV.h[i] >> (RtV & (16-1))) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vaddb,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = VuV.b[i] + VvV.b[i] ; } },
DEF_HELPER_5(V6_vaddb, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vaddb(SLOT_WRAP(gen_helper_V6_vaddb(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = VuV.b[i] + VvV.b[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vaddb */
},
void HELPER(V6_vaddb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = VuV.b[i] + VvV.b[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vsubb,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = VuV.b[i] - VvV.b[i] ; } },
DEF_HELPER_5(V6_vsubb, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsubb(SLOT_WRAP(gen_helper_V6_vsubb(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = VuV.b[i] - VvV.b[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsubb */
},
void HELPER(V6_vsubb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = VuV.b[i] - VvV.b[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaddb_dv,{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].b[i] = VuuV.v[0].b[i] + VvvV.v[0].b[i]; VddV.v[1].b[i] = VuuV.v[1].b[i] + VvvV.v[1].b[i] ; } },
DEF_HELPER_5(V6_vaddb_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddb_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vaddb_dv(SLOT_WRAP(gen_helper_V6_vaddb_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].b[i] = VuuV.v[0].b[i] + VvvV.v[0].b[i]; VddV.v[1].b[i] = VuuV.v[1].b[i] + VvvV.v[1].b[i] ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vaddb_dv */
},
void HELPER(V6_vaddb_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].b[i] = VuuV.v[0].b[i] + VvvV.v[0].b[i]; VddV.v[1].b[i] = VuuV.v[1].b[i] + VvvV.v[1].b[i] ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vsubb_dv,{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].b[i] = VuuV.v[0].b[i] - VvvV.v[0].b[i]; VddV.v[1].b[i] = VuuV.v[1].b[i] - VvvV.v[1].b[i] ; } },
DEF_HELPER_5(V6_vsubb_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubb_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vsubb_dv(SLOT_WRAP(gen_helper_V6_vsubb_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].b[i] = VuuV.v[0].b[i] - VvvV.v[0].b[i]; VddV.v[1].b[i] = VuuV.v[1].b[i] - VvvV.v[1].b[i] ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vsubb_dv */
},
void HELPER(V6_vsubb_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].b[i] = VuuV.v[0].b[i] - VvvV.v[0].b[i]; VddV.v[1].b[i] = VuuV.v[1].b[i] - VvvV.v[1].b[i] ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vaddh,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = VuV.h[i] + VvV.h[i] ; } },
DEF_HELPER_5(V6_vaddh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vaddh(SLOT_WRAP(gen_helper_V6_vaddh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = VuV.h[i] + VvV.h[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vaddh */
},
void HELPER(V6_vaddh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = VuV.h[i] + VvV.h[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vsubh,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = VuV.h[i] - VvV.h[i] ; } },
DEF_HELPER_5(V6_vsubh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsubh(SLOT_WRAP(gen_helper_V6_vsubh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = VuV.h[i] - VvV.h[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsubh */
},
void HELPER(V6_vsubh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = VuV.h[i] - VvV.h[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaddh_dv,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = VuuV.v[0].h[i] + VvvV.v[0].h[i]; VddV.v[1].h[i] = VuuV.v[1].h[i] + VvvV.v[1].h[i] ; } },
DEF_HELPER_5(V6_vaddh_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddh_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vaddh_dv(SLOT_WRAP(gen_helper_V6_vaddh_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = VuuV.v[0].h[i] + VvvV.v[0].h[i]; VddV.v[1].h[i] = VuuV.v[1].h[i] + VvvV.v[1].h[i] ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vaddh_dv */
},
void HELPER(V6_vaddh_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = VuuV.v[0].h[i] + VvvV.v[0].h[i]; VddV.v[1].h[i] = VuuV.v[1].h[i] + VvvV.v[1].h[i] ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vsubh_dv,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = VuuV.v[0].h[i] - VvvV.v[0].h[i]; VddV.v[1].h[i] = VuuV.v[1].h[i] - VvvV.v[1].h[i] ; } },
DEF_HELPER_5(V6_vsubh_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubh_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vsubh_dv(SLOT_WRAP(gen_helper_V6_vsubh_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = VuuV.v[0].h[i] - VvvV.v[0].h[i]; VddV.v[1].h[i] = VuuV.v[1].h[i] - VvvV.v[1].h[i] ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vsubh_dv */
},
void HELPER(V6_vsubh_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = VuuV.v[0].h[i] - VvvV.v[0].h[i]; VddV.v[1].h[i] = VuuV.v[1].h[i] - VvvV.v[1].h[i] ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vaddw,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i] + VvV.w[i] ; } },
DEF_HELPER_5(V6_vaddw, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddw */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vaddw(SLOT_WRAP(gen_helper_V6_vaddw(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i] + VvV.w[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vaddw */
},
void HELPER(V6_vaddw)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i] + VvV.w[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vsubw,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i] - VvV.w[i] ; } },
DEF_HELPER_5(V6_vsubw, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubw */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsubw(SLOT_WRAP(gen_helper_V6_vsubw(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i] - VvV.w[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsubw */
},
void HELPER(V6_vsubw)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i] - VvV.w[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaddw_dv,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = VuuV.v[0].w[i] + VvvV.v[0].w[i]; VddV.v[1].w[i] = VuuV.v[1].w[i] + VvvV.v[1].w[i] ; } },
DEF_HELPER_5(V6_vaddw_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddw_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vaddw_dv(SLOT_WRAP(gen_helper_V6_vaddw_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = VuuV.v[0].w[i] + VvvV.v[0].w[i]; VddV.v[1].w[i] = VuuV.v[1].w[i] + VvvV.v[1].w[i] ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vaddw_dv */
},
void HELPER(V6_vaddw_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = VuuV.v[0].w[i] + VvvV.v[0].w[i]; VddV.v[1].w[i] = VuuV.v[1].w[i] + VvvV.v[1].w[i] ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vsubw_dv,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = VuuV.v[0].w[i] - VvvV.v[0].w[i]; VddV.v[1].w[i] = VuuV.v[1].w[i] - VvvV.v[1].w[i] ; } },
DEF_HELPER_5(V6_vsubw_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubw_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vsubw_dv(SLOT_WRAP(gen_helper_V6_vsubw_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = VuuV.v[0].w[i] - VvvV.v[0].w[i]; VddV.v[1].w[i] = VuuV.v[1].w[i] - VvvV.v[1].w[i] ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vsubw_dv */
},
void HELPER(V6_vsubw_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = VuuV.v[0].w[i] - VvvV.v[0].w[i]; VddV.v[1].w[i] = VuuV.v[1].w[i] - VvvV.v[1].w[i] ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vaddubsat,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVUADDSAT(8, VuV.ub[i], VvV.ub[i]) ; } },
DEF_HELPER_5(V6_vaddubsat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddubsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vaddubsat(SLOT_WRAP(gen_helper_V6_vaddubsat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVUADDSAT(8, VuV.ub[i], VvV.ub[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vaddubsat */
},
void HELPER(V6_vaddubsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVUADDSAT(8, VuV.ub[i], VvV.ub[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaddubsat_dv,{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = fVUADDSAT(8, VuuV.v[0].ub[i],VvvV.v[0].ub[i]); VddV.v[1].ub[i] = fVUADDSAT(8, VuuV.v[1].ub[i],VvvV.v[1].ub[i]) ; } },
DEF_HELPER_5(V6_vaddubsat_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddubsat_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vaddubsat_dv(SLOT_WRAP(gen_helper_V6_vaddubsat_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = fVUADDSAT(8, VuuV.v[0].ub[i],VvvV.v[0].ub[i]); VddV.v[1].ub[i] = fVUADDSAT(8, VuuV.v[1].ub[i],VvvV.v[1].ub[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vaddubsat_dv */
},
void HELPER(V6_vaddubsat_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = fVUADDSAT(8, VuuV.v[0].ub[i],VvvV.v[0].ub[i]); VddV.v[1].ub[i] = fVUADDSAT(8, VuuV.v[1].ub[i],VvvV.v[1].ub[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vsububsat,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVUSUBSAT(8, VuV.ub[i], VvV.ub[i]) ; } },
DEF_HELPER_5(V6_vsububsat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsububsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsububsat(SLOT_WRAP(gen_helper_V6_vsububsat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVUSUBSAT(8, VuV.ub[i], VvV.ub[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsububsat */
},
void HELPER(V6_vsububsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVUSUBSAT(8, VuV.ub[i], VvV.ub[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vsububsat_dv,{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = fVUSUBSAT(8, VuuV.v[0].ub[i],VvvV.v[0].ub[i]); VddV.v[1].ub[i] = fVUSUBSAT(8, VuuV.v[1].ub[i],VvvV.v[1].ub[i]) ; } },
DEF_HELPER_5(V6_vsububsat_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsububsat_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vsububsat_dv(SLOT_WRAP(gen_helper_V6_vsububsat_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = fVUSUBSAT(8, VuuV.v[0].ub[i],VvvV.v[0].ub[i]); VddV.v[1].ub[i] = fVUSUBSAT(8, VuuV.v[1].ub[i],VvvV.v[1].ub[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vsububsat_dv */
},
void HELPER(V6_vsububsat_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = fVUSUBSAT(8, VuuV.v[0].ub[i],VvvV.v[0].ub[i]); VddV.v[1].ub[i] = fVUSUBSAT(8, VuuV.v[1].ub[i],VvvV.v[1].ub[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vadduhsat,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = fVUADDSAT(16, VuV.uh[i], VvV.uh[i]) ; } },
DEF_HELPER_5(V6_vadduhsat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vadduhsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vadduhsat(SLOT_WRAP(gen_helper_V6_vadduhsat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = fVUADDSAT(16, VuV.uh[i], VvV.uh[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vadduhsat */
},
void HELPER(V6_vadduhsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = fVUADDSAT(16, VuV.uh[i], VvV.uh[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vadduhsat_dv,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fVUADDSAT(16, VuuV.v[0].uh[i],VvvV.v[0].uh[i]); VddV.v[1].uh[i] = fVUADDSAT(16, VuuV.v[1].uh[i],VvvV.v[1].uh[i]) ; } },
DEF_HELPER_5(V6_vadduhsat_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vadduhsat_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vadduhsat_dv(SLOT_WRAP(gen_helper_V6_vadduhsat_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fVUADDSAT(16, VuuV.v[0].uh[i],VvvV.v[0].uh[i]); VddV.v[1].uh[i] = fVUADDSAT(16, VuuV.v[1].uh[i],VvvV.v[1].uh[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vadduhsat_dv */
},
void HELPER(V6_vadduhsat_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fVUADDSAT(16, VuuV.v[0].uh[i],VvvV.v[0].uh[i]); VddV.v[1].uh[i] = fVUADDSAT(16, VuuV.v[1].uh[i],VvvV.v[1].uh[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vsubuhsat,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = fVUSUBSAT(16, VuV.uh[i], VvV.uh[i]) ; } },
DEF_HELPER_5(V6_vsubuhsat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubuhsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsubuhsat(SLOT_WRAP(gen_helper_V6_vsubuhsat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = fVUSUBSAT(16, VuV.uh[i], VvV.uh[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsubuhsat */
},
void HELPER(V6_vsubuhsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = fVUSUBSAT(16, VuV.uh[i], VvV.uh[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vsubuhsat_dv,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fVUSUBSAT(16, VuuV.v[0].uh[i],VvvV.v[0].uh[i]); VddV.v[1].uh[i] = fVUSUBSAT(16, VuuV.v[1].uh[i],VvvV.v[1].uh[i]) ; } },
DEF_HELPER_5(V6_vsubuhsat_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubuhsat_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vsubuhsat_dv(SLOT_WRAP(gen_helper_V6_vsubuhsat_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fVUSUBSAT(16, VuuV.v[0].uh[i],VvvV.v[0].uh[i]); VddV.v[1].uh[i] = fVUSUBSAT(16, VuuV.v[1].uh[i],VvvV.v[1].uh[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vsubuhsat_dv */
},
void HELPER(V6_vsubuhsat_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fVUSUBSAT(16, VuuV.v[0].uh[i],VvvV.v[0].uh[i]); VddV.v[1].uh[i] = fVUSUBSAT(16, VuuV.v[1].uh[i],VvvV.v[1].uh[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vadduwsat,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fVUADDSAT(32, VuV.uw[i], VvV.uw[i]) ; } },
DEF_HELPER_5(V6_vadduwsat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vadduwsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vadduwsat(SLOT_WRAP(gen_helper_V6_vadduwsat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fVUADDSAT(32, VuV.uw[i], VvV.uw[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vadduwsat */
},
void HELPER(V6_vadduwsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fVUADDSAT(32, VuV.uw[i], VvV.uw[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vadduwsat_dv,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fVUADDSAT(32, VuuV.v[0].uw[i],VvvV.v[0].uw[i]); VddV.v[1].uw[i] = fVUADDSAT(32, VuuV.v[1].uw[i],VvvV.v[1].uw[i]) ; } },
DEF_HELPER_5(V6_vadduwsat_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vadduwsat_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vadduwsat_dv(SLOT_WRAP(gen_helper_V6_vadduwsat_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fVUADDSAT(32, VuuV.v[0].uw[i],VvvV.v[0].uw[i]); VddV.v[1].uw[i] = fVUADDSAT(32, VuuV.v[1].uw[i],VvvV.v[1].uw[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vadduwsat_dv */
},
void HELPER(V6_vadduwsat_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fVUADDSAT(32, VuuV.v[0].uw[i],VvvV.v[0].uw[i]); VddV.v[1].uw[i] = fVUADDSAT(32, VuuV.v[1].uw[i],VvvV.v[1].uw[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vsubuwsat,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fVUSUBSAT(32, VuV.uw[i], VvV.uw[i]) ; } },
DEF_HELPER_5(V6_vsubuwsat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubuwsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsubuwsat(SLOT_WRAP(gen_helper_V6_vsubuwsat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fVUSUBSAT(32, VuV.uw[i], VvV.uw[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsubuwsat */
},
void HELPER(V6_vsubuwsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fVUSUBSAT(32, VuV.uw[i], VvV.uw[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vsubuwsat_dv,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fVUSUBSAT(32, VuuV.v[0].uw[i],VvvV.v[0].uw[i]); VddV.v[1].uw[i] = fVUSUBSAT(32, VuuV.v[1].uw[i],VvvV.v[1].uw[i]) ; } },
DEF_HELPER_5(V6_vsubuwsat_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubuwsat_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vsubuwsat_dv(SLOT_WRAP(gen_helper_V6_vsubuwsat_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fVUSUBSAT(32, VuuV.v[0].uw[i],VvvV.v[0].uw[i]); VddV.v[1].uw[i] = fVUSUBSAT(32, VuuV.v[1].uw[i],VvvV.v[1].uw[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vsubuwsat_dv */
},
void HELPER(V6_vsubuwsat_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fVUSUBSAT(32, VuuV.v[0].uw[i],VvvV.v[0].uw[i]); VddV.v[1].uw[i] = fVUSUBSAT(32, VuuV.v[1].uw[i],VvvV.v[1].uw[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vaddbsat,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVSADDSAT(8, VuV.b[i], VvV.b[i]) ; } },
DEF_HELPER_5(V6_vaddbsat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddbsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vaddbsat(SLOT_WRAP(gen_helper_V6_vaddbsat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVSADDSAT(8, VuV.b[i], VvV.b[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vaddbsat */
},
void HELPER(V6_vaddbsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVSADDSAT(8, VuV.b[i], VvV.b[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaddbsat_dv,{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].b[i] = fVSADDSAT(8, VuuV.v[0].b[i], VvvV.v[0].b[i]); VddV.v[1].b[i] = fVSADDSAT(8, VuuV.v[1].b[i], VvvV.v[1].b[i]) ; } },
DEF_HELPER_5(V6_vaddbsat_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddbsat_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vaddbsat_dv(SLOT_WRAP(gen_helper_V6_vaddbsat_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].b[i] = fVSADDSAT(8, VuuV.v[0].b[i], VvvV.v[0].b[i]); VddV.v[1].b[i] = fVSADDSAT(8, VuuV.v[1].b[i], VvvV.v[1].b[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vaddbsat_dv */
},
void HELPER(V6_vaddbsat_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].b[i] = fVSADDSAT(8, VuuV.v[0].b[i], VvvV.v[0].b[i]); VddV.v[1].b[i] = fVSADDSAT(8, VuuV.v[1].b[i], VvvV.v[1].b[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vsubbsat,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVSSUBSAT(8, VuV.b[i], VvV.b[i]) ; } },
DEF_HELPER_5(V6_vsubbsat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubbsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsubbsat(SLOT_WRAP(gen_helper_V6_vsubbsat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVSSUBSAT(8, VuV.b[i], VvV.b[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsubbsat */
},
void HELPER(V6_vsubbsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVSSUBSAT(8, VuV.b[i], VvV.b[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vsubbsat_dv,{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].b[i] = fVSSUBSAT(8, VuuV.v[0].b[i], VvvV.v[0].b[i]); VddV.v[1].b[i] = fVSSUBSAT(8, VuuV.v[1].b[i], VvvV.v[1].b[i]) ; } },
DEF_HELPER_5(V6_vsubbsat_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubbsat_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vsubbsat_dv(SLOT_WRAP(gen_helper_V6_vsubbsat_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].b[i] = fVSSUBSAT(8, VuuV.v[0].b[i], VvvV.v[0].b[i]); VddV.v[1].b[i] = fVSSUBSAT(8, VuuV.v[1].b[i], VvvV.v[1].b[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vsubbsat_dv */
},
void HELPER(V6_vsubbsat_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].b[i] = fVSSUBSAT(8, VuuV.v[0].b[i], VvvV.v[0].b[i]); VddV.v[1].b[i] = fVSSUBSAT(8, VuuV.v[1].b[i], VvvV.v[1].b[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vaddhsat,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVSADDSAT(16, VuV.h[i], VvV.h[i]) ; } },
DEF_HELPER_5(V6_vaddhsat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddhsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vaddhsat(SLOT_WRAP(gen_helper_V6_vaddhsat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVSADDSAT(16, VuV.h[i], VvV.h[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vaddhsat */
},
void HELPER(V6_vaddhsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVSADDSAT(16, VuV.h[i], VvV.h[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaddhsat_dv,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fVSADDSAT(16, VuuV.v[0].h[i], VvvV.v[0].h[i]); VddV.v[1].h[i] = fVSADDSAT(16, VuuV.v[1].h[i], VvvV.v[1].h[i]) ; } },
DEF_HELPER_5(V6_vaddhsat_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddhsat_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vaddhsat_dv(SLOT_WRAP(gen_helper_V6_vaddhsat_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fVSADDSAT(16, VuuV.v[0].h[i], VvvV.v[0].h[i]); VddV.v[1].h[i] = fVSADDSAT(16, VuuV.v[1].h[i], VvvV.v[1].h[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vaddhsat_dv */
},
void HELPER(V6_vaddhsat_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fVSADDSAT(16, VuuV.v[0].h[i], VvvV.v[0].h[i]); VddV.v[1].h[i] = fVSADDSAT(16, VuuV.v[1].h[i], VvvV.v[1].h[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vsubhsat,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVSSUBSAT(16, VuV.h[i], VvV.h[i]) ; } },
DEF_HELPER_5(V6_vsubhsat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubhsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsubhsat(SLOT_WRAP(gen_helper_V6_vsubhsat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVSSUBSAT(16, VuV.h[i], VvV.h[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsubhsat */
},
void HELPER(V6_vsubhsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVSSUBSAT(16, VuV.h[i], VvV.h[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vsubhsat_dv,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fVSSUBSAT(16, VuuV.v[0].h[i], VvvV.v[0].h[i]); VddV.v[1].h[i] = fVSSUBSAT(16, VuuV.v[1].h[i], VvvV.v[1].h[i]) ; } },
DEF_HELPER_5(V6_vsubhsat_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubhsat_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vsubhsat_dv(SLOT_WRAP(gen_helper_V6_vsubhsat_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fVSSUBSAT(16, VuuV.v[0].h[i], VvvV.v[0].h[i]); VddV.v[1].h[i] = fVSSUBSAT(16, VuuV.v[1].h[i], VvvV.v[1].h[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vsubhsat_dv */
},
void HELPER(V6_vsubhsat_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fVSSUBSAT(16, VuuV.v[0].h[i], VvvV.v[0].h[i]); VddV.v[1].h[i] = fVSSUBSAT(16, VuuV.v[1].h[i], VvvV.v[1].h[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vaddwsat,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSADDSAT(32, VuV.w[i], VvV.w[i]) ; } },
DEF_HELPER_5(V6_vaddwsat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddwsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vaddwsat(SLOT_WRAP(gen_helper_V6_vaddwsat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSADDSAT(32, VuV.w[i], VvV.w[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vaddwsat */
},
void HELPER(V6_vaddwsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSADDSAT(32, VuV.w[i], VvV.w[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaddwsat_dv,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fVSADDSAT(32, VuuV.v[0].w[i], VvvV.v[0].w[i]); VddV.v[1].w[i] = fVSADDSAT(32, VuuV.v[1].w[i], VvvV.v[1].w[i]) ; } },
DEF_HELPER_5(V6_vaddwsat_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddwsat_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vaddwsat_dv(SLOT_WRAP(gen_helper_V6_vaddwsat_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fVSADDSAT(32, VuuV.v[0].w[i], VvvV.v[0].w[i]); VddV.v[1].w[i] = fVSADDSAT(32, VuuV.v[1].w[i], VvvV.v[1].w[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vaddwsat_dv */
},
void HELPER(V6_vaddwsat_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fVSADDSAT(32, VuuV.v[0].w[i], VvvV.v[0].w[i]); VddV.v[1].w[i] = fVSADDSAT(32, VuuV.v[1].w[i], VvvV.v[1].w[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vsubwsat,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSSUBSAT(32, VuV.w[i], VvV.w[i]) ; } },
DEF_HELPER_5(V6_vsubwsat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubwsat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsubwsat(SLOT_WRAP(gen_helper_V6_vsubwsat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSSUBSAT(32, VuV.w[i], VvV.w[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsubwsat */
},
void HELPER(V6_vsubwsat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSSUBSAT(32, VuV.w[i], VvV.w[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vsubwsat_dv,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fVSSUBSAT(32, VuuV.v[0].w[i], VvvV.v[0].w[i]); VddV.v[1].w[i] = fVSSUBSAT(32, VuuV.v[1].w[i], VvvV.v[1].w[i]) ; } },
DEF_HELPER_5(V6_vsubwsat_dv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubwsat_dv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vsubwsat_dv(SLOT_WRAP(gen_helper_V6_vsubwsat_dv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fVSSUBSAT(32, VuuV.v[0].w[i], VvvV.v[0].w[i]); VddV.v[1].w[i] = fVSSUBSAT(32, VuuV.v[1].w[i], VvvV.v[1].w[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vsubwsat_dv */
},
void HELPER(V6_vsubwsat_dv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fVSSUBSAT(32, VuuV.v[0].w[i], VvvV.v[0].w[i]); VddV.v[1].w[i] = fVSSUBSAT(32, VuuV.v[1].w[i], VvvV.v[1].w[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vavgub,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVAVGU( 8, VuV.ub[i], VvV.ub[i]) ; } },
DEF_HELPER_5(V6_vavgub, void, env, ptr, ptr, ptr, i32),
{
/* V6_vavgub */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vavgub(SLOT_WRAP(gen_helper_V6_vavgub(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVAVGU( 8, VuV.ub[i], VvV.ub[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vavgub */
},
void HELPER(V6_vavgub)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVAVGU( 8, VuV.ub[i], VvV.ub[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vavgubrnd,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVAVGURND(8, VuV.ub[i], VvV.ub[i]) ; } },
DEF_HELPER_5(V6_vavgubrnd, void, env, ptr, ptr, ptr, i32),
{
/* V6_vavgubrnd */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vavgubrnd(SLOT_WRAP(gen_helper_V6_vavgubrnd(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVAVGURND(8, VuV.ub[i], VvV.ub[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vavgubrnd */
},
void HELPER(V6_vavgubrnd)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVAVGURND(8, VuV.ub[i], VvV.ub[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vavguh,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = fVAVGU( 16, VuV.uh[i], VvV.uh[i]) ; } },
DEF_HELPER_5(V6_vavguh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vavguh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vavguh(SLOT_WRAP(gen_helper_V6_vavguh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = fVAVGU( 16, VuV.uh[i], VvV.uh[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vavguh */
},
void HELPER(V6_vavguh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = fVAVGU( 16, VuV.uh[i], VvV.uh[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vavguhrnd,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = fVAVGURND(16, VuV.uh[i], VvV.uh[i]) ; } },
DEF_HELPER_5(V6_vavguhrnd, void, env, ptr, ptr, ptr, i32),
{
/* V6_vavguhrnd */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vavguhrnd(SLOT_WRAP(gen_helper_V6_vavguhrnd(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = fVAVGURND(16, VuV.uh[i], VvV.uh[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vavguhrnd */
},
void HELPER(V6_vavguhrnd)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = fVAVGURND(16, VuV.uh[i], VvV.uh[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vavguw,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fVAVGU( 32, VuV.uw[i], VvV.uw[i]) ; } },
DEF_HELPER_5(V6_vavguw, void, env, ptr, ptr, ptr, i32),
{
/* V6_vavguw */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vavguw(SLOT_WRAP(gen_helper_V6_vavguw(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fVAVGU( 32, VuV.uw[i], VvV.uw[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vavguw */
},
void HELPER(V6_vavguw)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fVAVGU( 32, VuV.uw[i], VvV.uw[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vavguwrnd,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fVAVGURND(32, VuV.uw[i], VvV.uw[i]) ; } },
DEF_HELPER_5(V6_vavguwrnd, void, env, ptr, ptr, ptr, i32),
{
/* V6_vavguwrnd */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vavguwrnd(SLOT_WRAP(gen_helper_V6_vavguwrnd(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fVAVGURND(32, VuV.uw[i], VvV.uw[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vavguwrnd */
},
void HELPER(V6_vavguwrnd)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fVAVGURND(32, VuV.uw[i], VvV.uw[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vavgb,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVAVGS( 8, VuV.b[i], VvV.b[i]) ; } },
DEF_HELPER_5(V6_vavgb, void, env, ptr, ptr, ptr, i32),
{
/* V6_vavgb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vavgb(SLOT_WRAP(gen_helper_V6_vavgb(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVAVGS( 8, VuV.b[i], VvV.b[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vavgb */
},
void HELPER(V6_vavgb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVAVGS( 8, VuV.b[i], VvV.b[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vavgbrnd,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVAVGSRND( 8, VuV.b[i], VvV.b[i]) ; } },
DEF_HELPER_5(V6_vavgbrnd, void, env, ptr, ptr, ptr, i32),
{
/* V6_vavgbrnd */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vavgbrnd(SLOT_WRAP(gen_helper_V6_vavgbrnd(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVAVGSRND( 8, VuV.b[i], VvV.b[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vavgbrnd */
},
void HELPER(V6_vavgbrnd)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVAVGSRND( 8, VuV.b[i], VvV.b[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vnavgb,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVNAVGS( 8, VuV.b[i], VvV.b[i]) ; } },
DEF_HELPER_5(V6_vnavgb, void, env, ptr, ptr, ptr, i32),
{
/* V6_vnavgb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vnavgb(SLOT_WRAP(gen_helper_V6_vnavgb(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVNAVGS( 8, VuV.b[i], VvV.b[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vnavgb */
},
void HELPER(V6_vnavgb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVNAVGS( 8, VuV.b[i], VvV.b[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vavgh,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVAVGS( 16, VuV.h[i], VvV.h[i]) ; } },
DEF_HELPER_5(V6_vavgh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vavgh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vavgh(SLOT_WRAP(gen_helper_V6_vavgh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVAVGS( 16, VuV.h[i], VvV.h[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vavgh */
},
void HELPER(V6_vavgh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVAVGS( 16, VuV.h[i], VvV.h[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vavghrnd,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVAVGSRND( 16, VuV.h[i], VvV.h[i]) ; } },
DEF_HELPER_5(V6_vavghrnd, void, env, ptr, ptr, ptr, i32),
{
/* V6_vavghrnd */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vavghrnd(SLOT_WRAP(gen_helper_V6_vavghrnd(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVAVGSRND( 16, VuV.h[i], VvV.h[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vavghrnd */
},
void HELPER(V6_vavghrnd)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVAVGSRND( 16, VuV.h[i], VvV.h[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vnavgh,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVNAVGS( 16, VuV.h[i], VvV.h[i]) ; } },
DEF_HELPER_5(V6_vnavgh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vnavgh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vnavgh(SLOT_WRAP(gen_helper_V6_vnavgh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVNAVGS( 16, VuV.h[i], VvV.h[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vnavgh */
},
void HELPER(V6_vnavgh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVNAVGS( 16, VuV.h[i], VvV.h[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vavgw,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVAVGS( 32, VuV.w[i], VvV.w[i]) ; } },
DEF_HELPER_5(V6_vavgw, void, env, ptr, ptr, ptr, i32),
{
/* V6_vavgw */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vavgw(SLOT_WRAP(gen_helper_V6_vavgw(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVAVGS( 32, VuV.w[i], VvV.w[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vavgw */
},
void HELPER(V6_vavgw)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVAVGS( 32, VuV.w[i], VvV.w[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vavgwrnd,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVAVGSRND( 32, VuV.w[i], VvV.w[i]) ; } },
DEF_HELPER_5(V6_vavgwrnd, void, env, ptr, ptr, ptr, i32),
{
/* V6_vavgwrnd */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vavgwrnd(SLOT_WRAP(gen_helper_V6_vavgwrnd(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVAVGSRND( 32, VuV.w[i], VvV.w[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vavgwrnd */
},
void HELPER(V6_vavgwrnd)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVAVGSRND( 32, VuV.w[i], VvV.w[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vnavgw,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVNAVGS( 32, VuV.w[i], VvV.w[i]) ; } },
DEF_HELPER_5(V6_vnavgw, void, env, ptr, ptr, ptr, i32),
{
/* V6_vnavgw */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vnavgw(SLOT_WRAP(gen_helper_V6_vnavgw(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVNAVGS( 32, VuV.w[i], VvV.w[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vnavgw */
},
void HELPER(V6_vnavgw)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVNAVGS( 32, VuV.w[i], VvV.w[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vabsdiffub,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = (VuV.ub[i] > VvV.ub[i]) ? (VuV.ub[i] - VvV.ub[i]) : (VvV.ub[i] - VuV.ub[i]) ; } },
DEF_HELPER_5(V6_vabsdiffub, void, env, ptr, ptr, ptr, i32),
{
/* V6_vabsdiffub */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vabsdiffub(SLOT_WRAP(gen_helper_V6_vabsdiffub(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = (VuV.ub[i] > VvV.ub[i]) ? (VuV.ub[i] - VvV.ub[i]) : (VvV.ub[i] - VuV.ub[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vabsdiffub */
},
void HELPER(V6_vabsdiffub)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = (VuV.ub[i] > VvV.ub[i]) ? (VuV.ub[i] - VvV.ub[i]) : (VvV.ub[i] - VuV.ub[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vabsdiffuh,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = (VuV.uh[i] > VvV.uh[i]) ? (VuV.uh[i] - VvV.uh[i]) : (VvV.uh[i] - VuV.uh[i]) ; } },
DEF_HELPER_5(V6_vabsdiffuh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vabsdiffuh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vabsdiffuh(SLOT_WRAP(gen_helper_V6_vabsdiffuh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = (VuV.uh[i] > VvV.uh[i]) ? (VuV.uh[i] - VvV.uh[i]) : (VvV.uh[i] - VuV.uh[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vabsdiffuh */
},
void HELPER(V6_vabsdiffuh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = (VuV.uh[i] > VvV.uh[i]) ? (VuV.uh[i] - VvV.uh[i]) : (VvV.uh[i] - VuV.uh[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vabsdiffh,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = (VuV.h[i] > VvV.h[i]) ? (VuV.h[i] - VvV.h[i]) : (VvV.h[i] - VuV.h[i]) ; } },
DEF_HELPER_5(V6_vabsdiffh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vabsdiffh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vabsdiffh(SLOT_WRAP(gen_helper_V6_vabsdiffh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = (VuV.h[i] > VvV.h[i]) ? (VuV.h[i] - VvV.h[i]) : (VvV.h[i] - VuV.h[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vabsdiffh */
},
void HELPER(V6_vabsdiffh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = (VuV.h[i] > VvV.h[i]) ? (VuV.h[i] - VvV.h[i]) : (VvV.h[i] - VuV.h[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vabsdiffw,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = (VuV.w[i] > VvV.w[i]) ? (VuV.w[i] - VvV.w[i]) : (VvV.w[i] - VuV.w[i]) ; } },
DEF_HELPER_5(V6_vabsdiffw, void, env, ptr, ptr, ptr, i32),
{
/* V6_vabsdiffw */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vabsdiffw(SLOT_WRAP(gen_helper_V6_vabsdiffw(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = (VuV.w[i] > VvV.w[i]) ? (VuV.w[i] - VvV.w[i]) : (VvV.w[i] - VuV.w[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vabsdiffw */
},
void HELPER(V6_vabsdiffw)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = (VuV.w[i] > VvV.w[i]) ? (VuV.w[i] - VvV.w[i]) : (VvV.w[i] - VuV.w[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vnavgub,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVNAVGU(8, VuV.ub[i], VvV.ub[i]) ; } },
DEF_HELPER_5(V6_vnavgub, void, env, ptr, ptr, ptr, i32),
{
/* V6_vnavgub */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vnavgub(SLOT_WRAP(gen_helper_V6_vnavgub(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVNAVGU(8, VuV.ub[i], VvV.ub[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vnavgub */
},
void HELPER(V6_vnavgub)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVNAVGU(8, VuV.ub[i], VvV.ub[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaddcarrysat,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSATW(VuV.w[i]+VvV.w[i]+fGETQBIT(QsV,i*4)) ; } },
DEF_HELPER_6(V6_vaddcarrysat, void, env, ptr, ptr, ptr, ptr, i32),
{
/* V6_vaddcarrysat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_EXT_QREG(QsV, QsN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_EXT_QREG(QsN,QsV,0);
fWRAP_V6_vaddcarrysat(SLOT_WRAP(gen_helper_V6_vaddcarrysat(cpu_env, VdV, VuV, VvV, QsV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSATW(VuV.w[i]+VvV.w[i]+fGETQBIT(QsV,i*4)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_EXT_QREG(QsV);
/* V6_vaddcarrysat */
},
void HELPER(V6_vaddcarrysat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, void *QsV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
/* QsV is *(mmvector_t*)(QsV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSATW(VuV.w[i]+VvV.w[i]+fGETQBIT(QsV,i*4)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaddcarry,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i]+VvV.w[i]+fGETQBIT(QxV,i*4); fSETQBITS(QxV,4,0xF,4*i,-fCARRY_FROM_ADD32(VuV.w[i],VvV.w[i],fGETQBIT(QxV,i*4))) ; } },
DEF_HELPER_6(V6_vaddcarry, void, env, ptr, ptr, ptr, ptr, i32),
{
/* V6_vaddcarry */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_EXT_QREG(QxV, QxN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_EXT_QREG(QxN,QxV,0);
fWRAP_V6_vaddcarry(SLOT_WRAP(gen_helper_V6_vaddcarry(cpu_env, VdV, QxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i]+VvV.w[i]+fGETQBIT(QxV,i*4); fSETQBITS(QxV,4,0xF,4*i,-fCARRY_FROM_ADD32(VuV.w[i],VvV.w[i],fGETQBIT(QxV,i*4))) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_EXT_QREG(QxV);
/* V6_vaddcarry */
},
void HELPER(V6_vaddcarry)(CPUHexagonState *env, void *VdV_void, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
/* QxV is *(mmvector_t*)(QxV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i]+VvV.w[i]+fGETQBIT(QxV,i*4); fSETQBITS(QxV,4,0xF,4*i,-fCARRY_FROM_ADD32(VuV.w[i],VvV.w[i],fGETQBIT(QxV,i*4))) ; } }
/* VdV is *(mmvector_t*)VdV_void */
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vsubcarry,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i]+~VvV.w[i]+fGETQBIT(QxV,i*4); fSETQBITS(QxV,4,0xF,4*i,-fCARRY_FROM_ADD32(VuV.w[i],~VvV.w[i],fGETQBIT(QxV,i*4))) ; } },
DEF_HELPER_6(V6_vsubcarry, void, env, ptr, ptr, ptr, ptr, i32),
{
/* V6_vsubcarry */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_EXT_QREG(QxV, QxN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_EXT_QREG(QxN,QxV,0);
fWRAP_V6_vsubcarry(SLOT_WRAP(gen_helper_V6_vsubcarry(cpu_env, VdV, QxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i]+~VvV.w[i]+fGETQBIT(QxV,i*4); fSETQBITS(QxV,4,0xF,4*i,-fCARRY_FROM_ADD32(VuV.w[i],~VvV.w[i],fGETQBIT(QxV,i*4))) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_EXT_QREG(QxV);
/* V6_vsubcarry */
},
void HELPER(V6_vsubcarry)(CPUHexagonState *env, void *VdV_void, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
/* QxV is *(mmvector_t*)(QxV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i]+~VvV.w[i]+fGETQBIT(QxV,i*4); fSETQBITS(QxV,4,0xF,4*i,-fCARRY_FROM_ADD32(VuV.w[i],~VvV.w[i],fGETQBIT(QxV,i*4))) ; } }
/* VdV is *(mmvector_t*)VdV_void */
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vaddcarryo,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i]+VvV.w[i]; fSETQBITS(QeV,4,0xF,4*i,-fCARRY_FROM_ADD32(VuV.w[i],VvV.w[i],0)) ; } },
DEF_HELPER_6(V6_vaddcarryo, void, env, ptr, ptr, ptr, ptr, i32),
{
/* V6_vaddcarryo */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_QREG(QeV, QeN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
DECL_EXT_VREG(VvV, VvN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vaddcarryo(SLOT_WRAP(gen_helper_V6_vaddcarryo(cpu_env, VdV, QeV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i]+VvV.w[i]; fSETQBITS(QeV,4,0xF,4*i,-fCARRY_FROM_ADD32(VuV.w[i],VvV.w[i],0)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_EXT_QREG(QeN,QeV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_QREG(QeV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vaddcarryo */
},
void HELPER(V6_vaddcarryo)(CPUHexagonState *env, void *VdV_void, void *QeV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* QeV is *(mmvector_t*)QeV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i]+VvV.w[i]; fSETQBITS(QeV,4,0xF,4*i,-fCARRY_FROM_ADD32(VuV.w[i],VvV.w[i],0)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
/* QeV is *(mmvector_t*)QeV_void */
})
DEF_QEMU(V6_vsubcarryo,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i]+~VvV.w[i]+1; fSETQBITS(QeV,4,0xF,4*i,-fCARRY_FROM_ADD32(VuV.w[i],~VvV.w[i],1)) ; } },
DEF_HELPER_6(V6_vsubcarryo, void, env, ptr, ptr, ptr, ptr, i32),
{
/* V6_vsubcarryo */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_QREG(QeV, QeN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
DECL_EXT_VREG(VvV, VvN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsubcarryo(SLOT_WRAP(gen_helper_V6_vsubcarryo(cpu_env, VdV, QeV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i]+~VvV.w[i]+1; fSETQBITS(QeV,4,0xF,4*i,-fCARRY_FROM_ADD32(VuV.w[i],~VvV.w[i],1)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
WRITE_EXT_QREG(QeN,QeV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_QREG(QeV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsubcarryo */
},
void HELPER(V6_vsubcarryo)(CPUHexagonState *env, void *VdV_void, void *QeV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* QeV is *(mmvector_t*)QeV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = VuV.w[i]+~VvV.w[i]+1; fSETQBITS(QeV,4,0xF,4*i,-fCARRY_FROM_ADD32(VuV.w[i],~VvV.w[i],1)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
/* QeV is *(mmvector_t*)QeV_void */
})
DEF_QEMU(V6_vsatdw,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSATDW(VuV.w[i],VvV.w[i]) ; } },
DEF_HELPER_5(V6_vsatdw, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsatdw */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsatdw(SLOT_WRAP(gen_helper_V6_vsatdw(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSATDW(VuV.w[i],VvV.w[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsatdw */
},
void HELPER(V6_vsatdw)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSATDW(VuV.w[i],VvV.w[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaddububb_sat,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVSATUB(VuV.ub[i] + VvV.b[i]) ; } },
DEF_HELPER_5(V6_vaddububb_sat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddububb_sat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vaddububb_sat(SLOT_WRAP(gen_helper_V6_vaddububb_sat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVSATUB(VuV.ub[i] + VvV.b[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vaddububb_sat */
},
void HELPER(V6_vaddububb_sat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVSATUB(VuV.ub[i] + VvV.b[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vsubububb_sat,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVSATUB(VuV.ub[i] - VvV.b[i]) ; } },
DEF_HELPER_5(V6_vsubububb_sat, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubububb_sat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsubububb_sat(SLOT_WRAP(gen_helper_V6_vsubububb_sat(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVSATUB(VuV.ub[i] - VvV.b[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsubububb_sat */
},
void HELPER(V6_vsubububb_sat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fVSATUB(VuV.ub[i] - VvV.b[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaddubh,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fZE8_16(fGETUBYTE(0, VuV.uh[i])) + fZE8_16(fGETUBYTE(0, VvV.uh[i])); VddV.v[1].h[i] = fZE8_16(fGETUBYTE(1, VuV.uh[i])) + fZE8_16(fGETUBYTE(1, VvV.uh[i])) ; } },
DEF_HELPER_5(V6_vaddubh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddubh */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vaddubh(SLOT_WRAP(gen_helper_V6_vaddubh(cpu_env, VddV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fZE8_16(fGETUBYTE(0, VuV.uh[i])) + fZE8_16(fGETUBYTE(0, VvV.uh[i])); VddV.v[1].h[i] = fZE8_16(fGETUBYTE(1, VuV.uh[i])) + fZE8_16(fGETUBYTE(1, VvV.uh[i])) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vaddubh */
},
void HELPER(V6_vaddubh)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fZE8_16(fGETUBYTE(0, VuV.uh[i])) + fZE8_16(fGETUBYTE(0, VvV.uh[i])); VddV.v[1].h[i] = fZE8_16(fGETUBYTE(1, VuV.uh[i])) + fZE8_16(fGETUBYTE(1, VvV.uh[i])) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vsububh,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fZE8_16(fGETUBYTE(0, VuV.uh[i])) - fZE8_16(fGETUBYTE(0, VvV.uh[i])); VddV.v[1].h[i] = fZE8_16(fGETUBYTE(1, VuV.uh[i])) - fZE8_16(fGETUBYTE(1, VvV.uh[i])) ; } },
DEF_HELPER_5(V6_vsububh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsububh */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsububh(SLOT_WRAP(gen_helper_V6_vsububh(cpu_env, VddV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fZE8_16(fGETUBYTE(0, VuV.uh[i])) - fZE8_16(fGETUBYTE(0, VvV.uh[i])); VddV.v[1].h[i] = fZE8_16(fGETUBYTE(1, VuV.uh[i])) - fZE8_16(fGETUBYTE(1, VvV.uh[i])) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsububh */
},
void HELPER(V6_vsububh)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fZE8_16(fGETUBYTE(0, VuV.uh[i])) - fZE8_16(fGETUBYTE(0, VvV.uh[i])); VddV.v[1].h[i] = fZE8_16(fGETUBYTE(1, VuV.uh[i])) - fZE8_16(fGETUBYTE(1, VvV.uh[i])) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vaddhw,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fGETHALF(0, VuV.w[i]) + fGETHALF(0, VvV.w[i]); VddV.v[1].w[i] = fGETHALF(1, VuV.w[i]) + fGETHALF(1, VvV.w[i]) ; } },
DEF_HELPER_5(V6_vaddhw, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddhw */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vaddhw(SLOT_WRAP(gen_helper_V6_vaddhw(cpu_env, VddV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fGETHALF(0, VuV.w[i]) + fGETHALF(0, VvV.w[i]); VddV.v[1].w[i] = fGETHALF(1, VuV.w[i]) + fGETHALF(1, VvV.w[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vaddhw */
},
void HELPER(V6_vaddhw)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fGETHALF(0, VuV.w[i]) + fGETHALF(0, VvV.w[i]); VddV.v[1].w[i] = fGETHALF(1, VuV.w[i]) + fGETHALF(1, VvV.w[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vsubhw,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fGETHALF(0, VuV.w[i]) - fGETHALF(0, VvV.w[i]); VddV.v[1].w[i] = fGETHALF(1, VuV.w[i]) - fGETHALF(1, VvV.w[i]) ; } },
DEF_HELPER_5(V6_vsubhw, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubhw */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsubhw(SLOT_WRAP(gen_helper_V6_vsubhw(cpu_env, VddV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fGETHALF(0, VuV.w[i]) - fGETHALF(0, VvV.w[i]); VddV.v[1].w[i] = fGETHALF(1, VuV.w[i]) - fGETHALF(1, VvV.w[i]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsubhw */
},
void HELPER(V6_vsubhw)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fGETHALF(0, VuV.w[i]) - fGETHALF(0, VvV.w[i]); VddV.v[1].w[i] = fGETHALF(1, VuV.w[i]) - fGETHALF(1, VvV.w[i]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vadduhw,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fZE16_32(fGETUHALF(0, VuV.uw[i])) + fZE16_32(fGETUHALF(0, VvV.uw[i])); VddV.v[1].w[i] = fZE16_32(fGETUHALF(1, VuV.uw[i])) + fZE16_32(fGETUHALF(1, VvV.uw[i])) ; } },
DEF_HELPER_5(V6_vadduhw, void, env, ptr, ptr, ptr, i32),
{
/* V6_vadduhw */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vadduhw(SLOT_WRAP(gen_helper_V6_vadduhw(cpu_env, VddV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fZE16_32(fGETUHALF(0, VuV.uw[i])) + fZE16_32(fGETUHALF(0, VvV.uw[i])); VddV.v[1].w[i] = fZE16_32(fGETUHALF(1, VuV.uw[i])) + fZE16_32(fGETUHALF(1, VvV.uw[i])) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vadduhw */
},
void HELPER(V6_vadduhw)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fZE16_32(fGETUHALF(0, VuV.uw[i])) + fZE16_32(fGETUHALF(0, VvV.uw[i])); VddV.v[1].w[i] = fZE16_32(fGETUHALF(1, VuV.uw[i])) + fZE16_32(fGETUHALF(1, VvV.uw[i])) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vsubuhw,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fZE16_32(fGETUHALF(0, VuV.uw[i])) - fZE16_32(fGETUHALF(0, VvV.uw[i])); VddV.v[1].w[i] = fZE16_32(fGETUHALF(1, VuV.uw[i])) - fZE16_32(fGETUHALF(1, VvV.uw[i])) ; } },
DEF_HELPER_5(V6_vsubuhw, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubuhw */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsubuhw(SLOT_WRAP(gen_helper_V6_vsubuhw(cpu_env, VddV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fZE16_32(fGETUHALF(0, VuV.uw[i])) - fZE16_32(fGETUHALF(0, VvV.uw[i])); VddV.v[1].w[i] = fZE16_32(fGETUHALF(1, VuV.uw[i])) - fZE16_32(fGETUHALF(1, VvV.uw[i])) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsubuhw */
},
void HELPER(V6_vsubuhw)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fZE16_32(fGETUHALF(0, VuV.uw[i])) - fZE16_32(fGETUHALF(0, VvV.uw[i])); VddV.v[1].w[i] = fZE16_32(fGETUHALF(1, VuV.uw[i])) - fZE16_32(fGETUHALF(1, VvV.uw[i])) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vaddhw_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fGETHALF(0, VuV.w[i]) + fGETHALF(0, VvV.w[i]); VxxV.v[1].w[i] += fGETHALF(1, VuV.w[i]) + fGETHALF(1, VvV.w[i]) ; } },
DEF_HELPER_5(V6_vaddhw_acc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddhw_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vaddhw_acc(SLOT_WRAP(gen_helper_V6_vaddhw_acc(cpu_env, VxxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fGETHALF(0, VuV.w[i]) + fGETHALF(0, VvV.w[i]); VxxV.v[1].w[i] += fGETHALF(1, VuV.w[i]) + fGETHALF(1, VvV.w[i]) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vaddhw_acc */
},
void HELPER(V6_vaddhw_acc)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fGETHALF(0, VuV.w[i]) + fGETHALF(0, VvV.w[i]); VxxV.v[1].w[i] += fGETHALF(1, VuV.w[i]) + fGETHALF(1, VvV.w[i]) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vadduhw_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fGETUHALF(0, VuV.w[i]) + fGETUHALF(0, VvV.w[i]); VxxV.v[1].w[i] += fGETUHALF(1, VuV.w[i]) + fGETUHALF(1, VvV.w[i]) ; } },
DEF_HELPER_5(V6_vadduhw_acc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vadduhw_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vadduhw_acc(SLOT_WRAP(gen_helper_V6_vadduhw_acc(cpu_env, VxxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fGETUHALF(0, VuV.w[i]) + fGETUHALF(0, VvV.w[i]); VxxV.v[1].w[i] += fGETUHALF(1, VuV.w[i]) + fGETUHALF(1, VvV.w[i]) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vadduhw_acc */
},
void HELPER(V6_vadduhw_acc)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fGETUHALF(0, VuV.w[i]) + fGETUHALF(0, VvV.w[i]); VxxV.v[1].w[i] += fGETUHALF(1, VuV.w[i]) + fGETUHALF(1, VvV.w[i]) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vaddubh_acc,{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fGETUBYTE(0, VuV.h[i]) + fGETUBYTE(0, VvV.h[i]); VxxV.v[1].h[i] += fGETUBYTE(1, VuV.h[i]) + fGETUBYTE(1, VvV.h[i]) ; } },
DEF_HELPER_5(V6_vaddubh_acc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddubh_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vaddubh_acc(SLOT_WRAP(gen_helper_V6_vaddubh_acc(cpu_env, VxxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fGETUBYTE(0, VuV.h[i]) + fGETUBYTE(0, VvV.h[i]); VxxV.v[1].h[i] += fGETUBYTE(1, VuV.h[i]) + fGETUBYTE(1, VvV.h[i]) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vaddubh_acc */
},
void HELPER(V6_vaddubh_acc)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fGETUBYTE(0, VuV.h[i]) + fGETUBYTE(0, VvV.h[i]); VxxV.v[1].h[i] += fGETUBYTE(1, VuV.h[i]) + fGETUBYTE(1, VvV.h[i]) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vaddbq,{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i]=fCONDMASK8(QvV,i,VxV.ub[i]+VuV.ub[i],VxV.ub[i]) ; } },
DEF_HELPER_5(V6_vaddbq, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddbq */
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_EXT_VREG(VxV, VxN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vaddbq(SLOT_WRAP(gen_helper_V6_vaddbq(cpu_env, VxV, QvV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i]=fCONDMASK8(QvV,i,VxV.ub[i]+VuV.ub[i],VxV.ub[i]) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_QREG(QvV);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
/* V6_vaddbq */
},
void HELPER(V6_vaddbq)(CPUHexagonState *env, void *VxV_void, void *QvV_void, void *VuV_void, uint32_t slot)
{
/* QvV is *(mmvector_t*)(QvV_void) */
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i]=fCONDMASK8(QvV,i,VxV.ub[i]+VuV.ub[i],VxV.ub[i]) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vsubbq,{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i]=fCONDMASK8(QvV,i,VxV.ub[i]-VuV.ub[i],VxV.ub[i]) ; } },
DEF_HELPER_5(V6_vsubbq, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubbq */
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_EXT_VREG(VxV, VxN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vsubbq(SLOT_WRAP(gen_helper_V6_vsubbq(cpu_env, VxV, QvV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i]=fCONDMASK8(QvV,i,VxV.ub[i]-VuV.ub[i],VxV.ub[i]) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_QREG(QvV);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
/* V6_vsubbq */
},
void HELPER(V6_vsubbq)(CPUHexagonState *env, void *VxV_void, void *QvV_void, void *VuV_void, uint32_t slot)
{
/* QvV is *(mmvector_t*)(QvV_void) */
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i]=fCONDMASK8(QvV,i,VxV.ub[i]-VuV.ub[i],VxV.ub[i]) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vaddbnq,{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i]=fCONDMASK8(QvV,i,VxV.ub[i],VxV.ub[i]+VuV.ub[i]) ; } },
DEF_HELPER_5(V6_vaddbnq, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddbnq */
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_EXT_VREG(VxV, VxN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vaddbnq(SLOT_WRAP(gen_helper_V6_vaddbnq(cpu_env, VxV, QvV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i]=fCONDMASK8(QvV,i,VxV.ub[i],VxV.ub[i]+VuV.ub[i]) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_QREG(QvV);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
/* V6_vaddbnq */
},
void HELPER(V6_vaddbnq)(CPUHexagonState *env, void *VxV_void, void *QvV_void, void *VuV_void, uint32_t slot)
{
/* QvV is *(mmvector_t*)(QvV_void) */
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i]=fCONDMASK8(QvV,i,VxV.ub[i],VxV.ub[i]+VuV.ub[i]) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vsubbnq,{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i]=fCONDMASK8(QvV,i,VxV.ub[i],VxV.ub[i]-VuV.ub[i]) ; } },
DEF_HELPER_5(V6_vsubbnq, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubbnq */
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_EXT_VREG(VxV, VxN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vsubbnq(SLOT_WRAP(gen_helper_V6_vsubbnq(cpu_env, VxV, QvV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i]=fCONDMASK8(QvV,i,VxV.ub[i],VxV.ub[i]-VuV.ub[i]) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_QREG(QvV);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
/* V6_vsubbnq */
},
void HELPER(V6_vsubbnq)(CPUHexagonState *env, void *VxV_void, void *QvV_void, void *VuV_void, uint32_t slot)
{
/* QvV is *(mmvector_t*)(QvV_void) */
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i]=fCONDMASK8(QvV,i,VxV.ub[i],VxV.ub[i]-VuV.ub[i]) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vaddhq,{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]=fCONDMASK16(QvV,i,VxV.h[i]+VuV.h[i],VxV.h[i]) ; } },
DEF_HELPER_5(V6_vaddhq, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddhq */
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_EXT_VREG(VxV, VxN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vaddhq(SLOT_WRAP(gen_helper_V6_vaddhq(cpu_env, VxV, QvV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]=fCONDMASK16(QvV,i,VxV.h[i]+VuV.h[i],VxV.h[i]) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_QREG(QvV);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
/* V6_vaddhq */
},
void HELPER(V6_vaddhq)(CPUHexagonState *env, void *VxV_void, void *QvV_void, void *VuV_void, uint32_t slot)
{
/* QvV is *(mmvector_t*)(QvV_void) */
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]=fCONDMASK16(QvV,i,VxV.h[i]+VuV.h[i],VxV.h[i]) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vsubhq,{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]=fCONDMASK16(QvV,i,VxV.h[i]-VuV.h[i],VxV.h[i]) ; } },
DEF_HELPER_5(V6_vsubhq, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubhq */
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_EXT_VREG(VxV, VxN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vsubhq(SLOT_WRAP(gen_helper_V6_vsubhq(cpu_env, VxV, QvV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]=fCONDMASK16(QvV,i,VxV.h[i]-VuV.h[i],VxV.h[i]) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_QREG(QvV);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
/* V6_vsubhq */
},
void HELPER(V6_vsubhq)(CPUHexagonState *env, void *VxV_void, void *QvV_void, void *VuV_void, uint32_t slot)
{
/* QvV is *(mmvector_t*)(QvV_void) */
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]=fCONDMASK16(QvV,i,VxV.h[i]-VuV.h[i],VxV.h[i]) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vaddhnq,{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]=fCONDMASK16(QvV,i,VxV.h[i],VxV.h[i]+VuV.h[i]) ; } },
DEF_HELPER_5(V6_vaddhnq, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddhnq */
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_EXT_VREG(VxV, VxN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vaddhnq(SLOT_WRAP(gen_helper_V6_vaddhnq(cpu_env, VxV, QvV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]=fCONDMASK16(QvV,i,VxV.h[i],VxV.h[i]+VuV.h[i]) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_QREG(QvV);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
/* V6_vaddhnq */
},
void HELPER(V6_vaddhnq)(CPUHexagonState *env, void *VxV_void, void *QvV_void, void *VuV_void, uint32_t slot)
{
/* QvV is *(mmvector_t*)(QvV_void) */
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]=fCONDMASK16(QvV,i,VxV.h[i],VxV.h[i]+VuV.h[i]) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vsubhnq,{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]=fCONDMASK16(QvV,i,VxV.h[i],VxV.h[i]-VuV.h[i]) ; } },
DEF_HELPER_5(V6_vsubhnq, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubhnq */
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_EXT_VREG(VxV, VxN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vsubhnq(SLOT_WRAP(gen_helper_V6_vsubhnq(cpu_env, VxV, QvV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]=fCONDMASK16(QvV,i,VxV.h[i],VxV.h[i]-VuV.h[i]) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_QREG(QvV);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
/* V6_vsubhnq */
},
void HELPER(V6_vsubhnq)(CPUHexagonState *env, void *VxV_void, void *QvV_void, void *VuV_void, uint32_t slot)
{
/* QvV is *(mmvector_t*)(QvV_void) */
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]=fCONDMASK16(QvV,i,VxV.h[i],VxV.h[i]-VuV.h[i]) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vaddwq,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i]=fCONDMASK32(QvV,i,VxV.w[i]+VuV.w[i],VxV.w[i]) ; } },
DEF_HELPER_5(V6_vaddwq, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddwq */
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_EXT_VREG(VxV, VxN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vaddwq(SLOT_WRAP(gen_helper_V6_vaddwq(cpu_env, VxV, QvV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i]=fCONDMASK32(QvV,i,VxV.w[i]+VuV.w[i],VxV.w[i]) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_QREG(QvV);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
/* V6_vaddwq */
},
void HELPER(V6_vaddwq)(CPUHexagonState *env, void *VxV_void, void *QvV_void, void *VuV_void, uint32_t slot)
{
/* QvV is *(mmvector_t*)(QvV_void) */
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i]=fCONDMASK32(QvV,i,VxV.w[i]+VuV.w[i],VxV.w[i]) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vsubwq,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i]=fCONDMASK32(QvV,i,VxV.w[i]-VuV.w[i],VxV.w[i]) ; } },
DEF_HELPER_5(V6_vsubwq, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubwq */
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_EXT_VREG(VxV, VxN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vsubwq(SLOT_WRAP(gen_helper_V6_vsubwq(cpu_env, VxV, QvV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i]=fCONDMASK32(QvV,i,VxV.w[i]-VuV.w[i],VxV.w[i]) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_QREG(QvV);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
/* V6_vsubwq */
},
void HELPER(V6_vsubwq)(CPUHexagonState *env, void *VxV_void, void *QvV_void, void *VuV_void, uint32_t slot)
{
/* QvV is *(mmvector_t*)(QvV_void) */
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i]=fCONDMASK32(QvV,i,VxV.w[i]-VuV.w[i],VxV.w[i]) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vaddwnq,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i]=fCONDMASK32(QvV,i,VxV.w[i],VxV.w[i]+VuV.w[i]) ; } },
DEF_HELPER_5(V6_vaddwnq, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddwnq */
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_EXT_VREG(VxV, VxN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vaddwnq(SLOT_WRAP(gen_helper_V6_vaddwnq(cpu_env, VxV, QvV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i]=fCONDMASK32(QvV,i,VxV.w[i],VxV.w[i]+VuV.w[i]) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_QREG(QvV);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
/* V6_vaddwnq */
},
void HELPER(V6_vaddwnq)(CPUHexagonState *env, void *VxV_void, void *QvV_void, void *VuV_void, uint32_t slot)
{
/* QvV is *(mmvector_t*)(QvV_void) */
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i]=fCONDMASK32(QvV,i,VxV.w[i],VxV.w[i]+VuV.w[i]) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vsubwnq,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i]=fCONDMASK32(QvV,i,VxV.w[i],VxV.w[i]-VuV.w[i]) ; } },
DEF_HELPER_5(V6_vsubwnq, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsubwnq */
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_EXT_VREG(VxV, VxN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vsubwnq(SLOT_WRAP(gen_helper_V6_vsubwnq(cpu_env, VxV, QvV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i]=fCONDMASK32(QvV,i,VxV.w[i],VxV.w[i]-VuV.w[i]) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_QREG(QvV);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
/* V6_vsubwnq */
},
void HELPER(V6_vsubwnq)(CPUHexagonState *env, void *VxV_void, void *QvV_void, void *VuV_void, uint32_t slot)
{
/* QvV is *(mmvector_t*)(QvV_void) */
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i]=fCONDMASK32(QvV,i,VxV.w[i],VxV.w[i]-VuV.w[i]) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vabsb,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fABS(VuV.b[i]) ; } },
DEF_HELPER_4(V6_vabsb, void, env, ptr, ptr, i32),
{
/* V6_vabsb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vabsb(SLOT_WRAP(gen_helper_V6_vabsb(cpu_env, VdV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fABS(VuV.b[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vabsb */
},
void HELPER(V6_vabsb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fABS(VuV.b[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vabsb_sat,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVSATB(fABS(fSE8_16(VuV.b[i]))) ; } },
DEF_HELPER_4(V6_vabsb_sat, void, env, ptr, ptr, i32),
{
/* V6_vabsb_sat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vabsb_sat(SLOT_WRAP(gen_helper_V6_vabsb_sat(cpu_env, VdV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVSATB(fABS(fSE8_16(VuV.b[i]))) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vabsb_sat */
},
void HELPER(V6_vabsb_sat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fVSATB(fABS(fSE8_16(VuV.b[i]))) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vabsh,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fABS(VuV.h[i]) ; } },
DEF_HELPER_4(V6_vabsh, void, env, ptr, ptr, i32),
{
/* V6_vabsh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vabsh(SLOT_WRAP(gen_helper_V6_vabsh(cpu_env, VdV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fABS(VuV.h[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vabsh */
},
void HELPER(V6_vabsh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fABS(VuV.h[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vabsh_sat,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVSATH(fABS(fSE16_32(VuV.h[i]))) ; } },
DEF_HELPER_4(V6_vabsh_sat, void, env, ptr, ptr, i32),
{
/* V6_vabsh_sat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vabsh_sat(SLOT_WRAP(gen_helper_V6_vabsh_sat(cpu_env, VdV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVSATH(fABS(fSE16_32(VuV.h[i]))) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vabsh_sat */
},
void HELPER(V6_vabsh_sat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVSATH(fABS(fSE16_32(VuV.h[i]))) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vabsw,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fABS(VuV.w[i]) ; } },
DEF_HELPER_4(V6_vabsw, void, env, ptr, ptr, i32),
{
/* V6_vabsw */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vabsw(SLOT_WRAP(gen_helper_V6_vabsw(cpu_env, VdV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fABS(VuV.w[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vabsw */
},
void HELPER(V6_vabsw)(CPUHexagonState *env, void *VdV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fABS(VuV.w[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vabsw_sat,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSATW(fABS(fSE32_64(VuV.w[i]))) ; } },
DEF_HELPER_4(V6_vabsw_sat, void, env, ptr, ptr, i32),
{
/* V6_vabsw_sat */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vabsw_sat(SLOT_WRAP(gen_helper_V6_vabsw_sat(cpu_env, VdV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSATW(fABS(fSE32_64(VuV.w[i]))) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vabsw_sat */
},
void HELPER(V6_vabsw_sat)(CPUHexagonState *env, void *VdV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSATW(fABS(fSE32_64(VuV.w[i]))) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmpybv,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8SS(fGETBYTE(0, VuV.h[i]), fGETBYTE(0, VvV.h[i])); VddV.v[1].h[i] = fMPY8SS(fGETBYTE(1, VuV.h[i]), fGETBYTE(1, VvV.h[i])) ; } },
DEF_HELPER_5(V6_vmpybv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpybv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpybv(SLOT_WRAP(gen_helper_V6_vmpybv(cpu_env, VddV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8SS(fGETBYTE(0, VuV.h[i]), fGETBYTE(0, VvV.h[i])); VddV.v[1].h[i] = fMPY8SS(fGETBYTE(1, VuV.h[i]), fGETBYTE(1, VvV.h[i])) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpybv */
},
void HELPER(V6_vmpybv)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8SS(fGETBYTE(0, VuV.h[i]), fGETBYTE(0, VvV.h[i])); VddV.v[1].h[i] = fMPY8SS(fGETBYTE(1, VuV.h[i]), fGETBYTE(1, VvV.h[i])) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpybv_acc,{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8SS(fGETBYTE(0, VuV.h[i]), fGETBYTE(0, VvV.h[i])); VxxV.v[1].h[i] += fMPY8SS(fGETBYTE(1, VuV.h[i]), fGETBYTE(1, VvV.h[i])) ; } },
DEF_HELPER_5(V6_vmpybv_acc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpybv_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpybv_acc(SLOT_WRAP(gen_helper_V6_vmpybv_acc(cpu_env, VxxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8SS(fGETBYTE(0, VuV.h[i]), fGETBYTE(0, VvV.h[i])); VxxV.v[1].h[i] += fMPY8SS(fGETBYTE(1, VuV.h[i]), fGETBYTE(1, VvV.h[i])) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpybv_acc */
},
void HELPER(V6_vmpybv_acc)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8SS(fGETBYTE(0, VuV.h[i]), fGETBYTE(0, VvV.h[i])); VxxV.v[1].h[i] += fMPY8SS(fGETBYTE(1, VuV.h[i]), fGETBYTE(1, VvV.h[i])) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vmpyubv,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fMPY8UU(fGETUBYTE(0, VuV.uh[i]), fGETUBYTE(0, VvV.uh[i]) ); VddV.v[1].uh[i] = fMPY8UU(fGETUBYTE(1, VuV.uh[i]), fGETUBYTE(1, VvV.uh[i]) ) ; } },
DEF_HELPER_5(V6_vmpyubv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyubv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyubv(SLOT_WRAP(gen_helper_V6_vmpyubv(cpu_env, VddV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fMPY8UU(fGETUBYTE(0, VuV.uh[i]), fGETUBYTE(0, VvV.uh[i]) ); VddV.v[1].uh[i] = fMPY8UU(fGETUBYTE(1, VuV.uh[i]), fGETUBYTE(1, VvV.uh[i]) ) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyubv */
},
void HELPER(V6_vmpyubv)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fMPY8UU(fGETUBYTE(0, VuV.uh[i]), fGETUBYTE(0, VvV.uh[i]) ); VddV.v[1].uh[i] = fMPY8UU(fGETUBYTE(1, VuV.uh[i]), fGETUBYTE(1, VvV.uh[i]) ) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpyubv_acc,{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].uh[i] += fMPY8UU(fGETUBYTE(0, VuV.uh[i]), fGETUBYTE(0, VvV.uh[i]) ); VxxV.v[1].uh[i] += fMPY8UU(fGETUBYTE(1, VuV.uh[i]), fGETUBYTE(1, VvV.uh[i]) ) ; } },
DEF_HELPER_5(V6_vmpyubv_acc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyubv_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyubv_acc(SLOT_WRAP(gen_helper_V6_vmpyubv_acc(cpu_env, VxxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].uh[i] += fMPY8UU(fGETUBYTE(0, VuV.uh[i]), fGETUBYTE(0, VvV.uh[i]) ); VxxV.v[1].uh[i] += fMPY8UU(fGETUBYTE(1, VuV.uh[i]), fGETUBYTE(1, VvV.uh[i]) ) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyubv_acc */
},
void HELPER(V6_vmpyubv_acc)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].uh[i] += fMPY8UU(fGETUBYTE(0, VuV.uh[i]), fGETUBYTE(0, VvV.uh[i]) ); VxxV.v[1].uh[i] += fMPY8UU(fGETUBYTE(1, VuV.uh[i]), fGETUBYTE(1, VvV.uh[i]) ) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vmpybusv,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0, VuV.uh[i]), fGETBYTE(0, VvV.h[i])); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1, VuV.uh[i]), fGETBYTE(1, VvV.h[i])) ; } },
DEF_HELPER_5(V6_vmpybusv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpybusv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpybusv(SLOT_WRAP(gen_helper_V6_vmpybusv(cpu_env, VddV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0, VuV.uh[i]), fGETBYTE(0, VvV.h[i])); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1, VuV.uh[i]), fGETBYTE(1, VvV.h[i])) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpybusv */
},
void HELPER(V6_vmpybusv)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0, VuV.uh[i]), fGETBYTE(0, VvV.h[i])); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1, VuV.uh[i]), fGETBYTE(1, VvV.h[i])) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpybusv_acc,{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(0, VuV.uh[i]), fGETBYTE(0, VvV.h[i])); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(1, VuV.uh[i]), fGETBYTE(1, VvV.h[i])) ; } },
DEF_HELPER_5(V6_vmpybusv_acc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpybusv_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpybusv_acc(SLOT_WRAP(gen_helper_V6_vmpybusv_acc(cpu_env, VxxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(0, VuV.uh[i]), fGETBYTE(0, VvV.h[i])); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(1, VuV.uh[i]), fGETBYTE(1, VvV.h[i])) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpybusv_acc */
},
void HELPER(V6_vmpybusv_acc)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(0, VuV.uh[i]), fGETBYTE(0, VvV.h[i])); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(1, VuV.uh[i]), fGETBYTE(1, VvV.h[i])) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vmpabusv,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETBYTE(0, VvvV.v[0].uh[i])) + fMPY8US(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETBYTE(0, VvvV.v[1].uh[i])); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETBYTE(1, VvvV.v[0].uh[i])) + fMPY8US(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETBYTE(1, VvvV.v[1].uh[i])) ; } },
DEF_HELPER_5(V6_vmpabusv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpabusv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vmpabusv(SLOT_WRAP(gen_helper_V6_vmpabusv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETBYTE(0, VvvV.v[0].uh[i])) + fMPY8US(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETBYTE(0, VvvV.v[1].uh[i])); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETBYTE(1, VvvV.v[0].uh[i])) + fMPY8US(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETBYTE(1, VvvV.v[1].uh[i])) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vmpabusv */
},
void HELPER(V6_vmpabusv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETBYTE(0, VvvV.v[0].uh[i])) + fMPY8US(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETBYTE(0, VvvV.v[1].uh[i])); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETBYTE(1, VvvV.v[0].uh[i])) + fMPY8US(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETBYTE(1, VvvV.v[1].uh[i])) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpabuuv,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8UU(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETUBYTE(0, VvvV.v[0].uh[i])) + fMPY8UU(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETUBYTE(0, VvvV.v[1].uh[i])); VddV.v[1].h[i] = fMPY8UU(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETUBYTE(1, VvvV.v[0].uh[i])) + fMPY8UU(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETUBYTE(1, VvvV.v[1].uh[i])) ; } },
DEF_HELPER_5(V6_vmpabuuv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpabuuv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vmpabuuv(SLOT_WRAP(gen_helper_V6_vmpabuuv(cpu_env, VddV, VuuV, VvvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8UU(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETUBYTE(0, VvvV.v[0].uh[i])) + fMPY8UU(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETUBYTE(0, VvvV.v[1].uh[i])); VddV.v[1].h[i] = fMPY8UU(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETUBYTE(1, VvvV.v[0].uh[i])) + fMPY8UU(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETUBYTE(1, VvvV.v[1].uh[i])) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vmpabuuv */
},
void HELPER(V6_vmpabuuv)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, void *VvvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8UU(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETUBYTE(0, VvvV.v[0].uh[i])) + fMPY8UU(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETUBYTE(0, VvvV.v[1].uh[i])); VddV.v[1].h[i] = fMPY8UU(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETUBYTE(1, VvvV.v[0].uh[i])) + fMPY8UU(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETUBYTE(1, VvvV.v[1].uh[i])) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpyhv,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SS(fGETHALF(0, VuV.w[i]), fGETHALF(0, VvV.w[i])); VddV.v[1].w[i] = fMPY16SS(fGETHALF(1, VuV.w[i]), fGETHALF(1, VvV.w[i])) ; } },
DEF_HELPER_5(V6_vmpyhv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyhv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyhv(SLOT_WRAP(gen_helper_V6_vmpyhv(cpu_env, VddV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SS(fGETHALF(0, VuV.w[i]), fGETHALF(0, VvV.w[i])); VddV.v[1].w[i] = fMPY16SS(fGETHALF(1, VuV.w[i]), fGETHALF(1, VvV.w[i])) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyhv */
},
void HELPER(V6_vmpyhv)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SS(fGETHALF(0, VuV.w[i]), fGETHALF(0, VvV.w[i])); VddV.v[1].w[i] = fMPY16SS(fGETHALF(1, VuV.w[i]), fGETHALF(1, VvV.w[i])) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpyhv_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY16SS(fGETHALF(0, VuV.w[i]), fGETHALF(0, VvV.w[i])); VxxV.v[1].w[i] += fMPY16SS(fGETHALF(1, VuV.w[i]), fGETHALF(1, VvV.w[i])) ; } },
DEF_HELPER_5(V6_vmpyhv_acc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyhv_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyhv_acc(SLOT_WRAP(gen_helper_V6_vmpyhv_acc(cpu_env, VxxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY16SS(fGETHALF(0, VuV.w[i]), fGETHALF(0, VvV.w[i])); VxxV.v[1].w[i] += fMPY16SS(fGETHALF(1, VuV.w[i]), fGETHALF(1, VvV.w[i])) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyhv_acc */
},
void HELPER(V6_vmpyhv_acc)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY16SS(fGETHALF(0, VuV.w[i]), fGETHALF(0, VvV.w[i])); VxxV.v[1].w[i] += fMPY16SS(fGETHALF(1, VuV.w[i]), fGETHALF(1, VvV.w[i])) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vmpyuhv,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fMPY16UU(fGETUHALF(0, VuV.uw[i]), fGETUHALF(0, VvV.uw[i])); VddV.v[1].uw[i] = fMPY16UU(fGETUHALF(1, VuV.uw[i]), fGETUHALF(1, VvV.uw[i])) ; } },
DEF_HELPER_5(V6_vmpyuhv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyuhv */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyuhv(SLOT_WRAP(gen_helper_V6_vmpyuhv(cpu_env, VddV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fMPY16UU(fGETUHALF(0, VuV.uw[i]), fGETUHALF(0, VvV.uw[i])); VddV.v[1].uw[i] = fMPY16UU(fGETUHALF(1, VuV.uw[i]), fGETUHALF(1, VvV.uw[i])) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyuhv */
},
void HELPER(V6_vmpyuhv)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fMPY16UU(fGETUHALF(0, VuV.uw[i]), fGETUHALF(0, VvV.uw[i])); VddV.v[1].uw[i] = fMPY16UU(fGETUHALF(1, VuV.uw[i]), fGETUHALF(1, VvV.uw[i])) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpyuhv_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].uw[i] += fMPY16UU(fGETUHALF(0, VuV.uw[i]), fGETUHALF(0, VvV.uw[i])); VxxV.v[1].uw[i] += fMPY16UU(fGETUHALF(1, VuV.uw[i]), fGETUHALF(1, VvV.uw[i])) ; } },
DEF_HELPER_5(V6_vmpyuhv_acc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyuhv_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyuhv_acc(SLOT_WRAP(gen_helper_V6_vmpyuhv_acc(cpu_env, VxxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].uw[i] += fMPY16UU(fGETUHALF(0, VuV.uw[i]), fGETUHALF(0, VvV.uw[i])); VxxV.v[1].uw[i] += fMPY16UU(fGETUHALF(1, VuV.uw[i]), fGETUHALF(1, VvV.uw[i])) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyuhv_acc */
},
void HELPER(V6_vmpyuhv_acc)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].uw[i] += fMPY16UU(fGETUHALF(0, VuV.uw[i]), fGETUHALF(0, VvV.uw[i])); VxxV.v[1].uw[i] += fMPY16UU(fGETUHALF(1, VuV.uw[i]), fGETUHALF(1, VvV.uw[i])) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vmpyhvsrs,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVSATH(fGETHALF(1,fVSAT(fROUND((fMPY16SS(VuV.h[i],VvV.h[i] )<<1))))) ; } },
DEF_HELPER_5(V6_vmpyhvsrs, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyhvsrs */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyhvsrs(SLOT_WRAP(gen_helper_V6_vmpyhvsrs(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVSATH(fGETHALF(1,fVSAT(fROUND((fMPY16SS(VuV.h[i],VvV.h[i] )<<1))))) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyhvsrs */
},
void HELPER(V6_vmpyhvsrs)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fVSATH(fGETHALF(1,fVSAT(fROUND((fMPY16SS(VuV.h[i],VvV.h[i] )<<1))))) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmpyhus,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SU(fGETHALF(0, VuV.w[i]), fGETUHALF(0, VvV.uw[i])); VddV.v[1].w[i] = fMPY16SU(fGETHALF(1, VuV.w[i]), fGETUHALF(1, VvV.uw[i])) ; } },
DEF_HELPER_5(V6_vmpyhus, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyhus */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyhus(SLOT_WRAP(gen_helper_V6_vmpyhus(cpu_env, VddV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SU(fGETHALF(0, VuV.w[i]), fGETUHALF(0, VvV.uw[i])); VddV.v[1].w[i] = fMPY16SU(fGETHALF(1, VuV.w[i]), fGETUHALF(1, VvV.uw[i])) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyhus */
},
void HELPER(V6_vmpyhus)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SU(fGETHALF(0, VuV.w[i]), fGETUHALF(0, VvV.uw[i])); VddV.v[1].w[i] = fMPY16SU(fGETHALF(1, VuV.w[i]), fGETUHALF(1, VvV.uw[i])) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpyhus_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY16SU(fGETHALF(0, VuV.w[i]), fGETUHALF(0, VvV.uw[i])); VxxV.v[1].w[i] += fMPY16SU(fGETHALF(1, VuV.w[i]), fGETUHALF(1, VvV.uw[i])) ; } },
DEF_HELPER_5(V6_vmpyhus_acc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyhus_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyhus_acc(SLOT_WRAP(gen_helper_V6_vmpyhus_acc(cpu_env, VxxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY16SU(fGETHALF(0, VuV.w[i]), fGETUHALF(0, VvV.uw[i])); VxxV.v[1].w[i] += fMPY16SU(fGETHALF(1, VuV.w[i]), fGETUHALF(1, VvV.uw[i])) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyhus_acc */
},
void HELPER(V6_vmpyhus_acc)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY16SU(fGETHALF(0, VuV.w[i]), fGETUHALF(0, VvV.uw[i])); VxxV.v[1].w[i] += fMPY16SU(fGETHALF(1, VuV.w[i]), fGETUHALF(1, VvV.uw[i])) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vmpyih,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fMPY16SS(VuV.h[i], VvV.h[i]) ; } },
DEF_HELPER_5(V6_vmpyih, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyih */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyih(SLOT_WRAP(gen_helper_V6_vmpyih(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fMPY16SS(VuV.h[i], VvV.h[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyih */
},
void HELPER(V6_vmpyih)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fMPY16SS(VuV.h[i], VvV.h[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmpyih_acc,{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i] += fMPY16SS(VuV.h[i], VvV.h[i]) ; } },
DEF_HELPER_5(V6_vmpyih_acc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyih_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyih_acc(SLOT_WRAP(gen_helper_V6_vmpyih_acc(cpu_env, VxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i] += fMPY16SS(VuV.h[i], VvV.h[i]) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyih_acc */
},
void HELPER(V6_vmpyih_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i] += fMPY16SS(VuV.h[i], VvV.h[i]) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vmpyewuh,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY3216SU(VuV.w[i], fGETUHALF(0, VvV.w[i])) >> 16 ; } },
DEF_HELPER_5(V6_vmpyewuh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyewuh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyewuh(SLOT_WRAP(gen_helper_V6_vmpyewuh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY3216SU(VuV.w[i], fGETUHALF(0, VvV.w[i])) >> 16 ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyewuh */
},
void HELPER(V6_vmpyewuh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY3216SU(VuV.w[i], fGETUHALF(0, VvV.w[i])) >> 16 ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmpyowh,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSATW((((fMPY3216SS(VuV.w[i], fGETHALF(1, VvV.w[i])) >> 14) + 0) >> 1)) ; } },
DEF_HELPER_5(V6_vmpyowh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyowh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyowh(SLOT_WRAP(gen_helper_V6_vmpyowh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSATW((((fMPY3216SS(VuV.w[i], fGETHALF(1, VvV.w[i])) >> 14) + 0) >> 1)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyowh */
},
void HELPER(V6_vmpyowh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSATW((((fMPY3216SS(VuV.w[i], fGETHALF(1, VvV.w[i])) >> 14) + 0) >> 1)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmpyowh_rnd,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSATW((((fMPY3216SS(VuV.w[i], fGETHALF(1, VvV.w[i])) >> 14) + 1) >> 1)) ; } },
DEF_HELPER_5(V6_vmpyowh_rnd, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyowh_rnd */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyowh_rnd(SLOT_WRAP(gen_helper_V6_vmpyowh_rnd(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSATW((((fMPY3216SS(VuV.w[i], fGETHALF(1, VvV.w[i])) >> 14) + 1) >> 1)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyowh_rnd */
},
void HELPER(V6_vmpyowh_rnd)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fVSATW((((fMPY3216SS(VuV.w[i], fGETHALF(1, VvV.w[i])) >> 14) + 1) >> 1)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmpyewuh_64,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t prod;) prod = fMPY32SU(VuV.w[i],fGETUHALF(0,VvV.w[i])); VddV.v[1].w[i] = prod >> 16; VddV.v[0].w[i] = prod << 16 ; } },
DEF_HELPER_5(V6_vmpyewuh_64, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyewuh_64 */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyewuh_64(SLOT_WRAP(gen_helper_V6_vmpyewuh_64(cpu_env, VddV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t prod;) prod = fMPY32SU(VuV.w[i],fGETUHALF(0,VvV.w[i])); VddV.v[1].w[i] = prod >> 16; VddV.v[0].w[i] = prod << 16 ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyewuh_64 */
},
void HELPER(V6_vmpyewuh_64)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t prod;) prod = fMPY32SU(VuV.w[i],fGETUHALF(0,VvV.w[i])); VddV.v[1].w[i] = prod >> 16; VddV.v[0].w[i] = prod << 16 ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpyowh_64_acc,{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t prod;) prod = fMPY32SS(VuV.w[i],fGETHALF(1,VvV.w[i])) + fSE32_64(VxxV.v[1].w[i]); VxxV.v[1].w[i] = prod >> 16; fSETHALF(0, VxxV.v[0].w[i], VxxV.v[0].w[i] >> 16); fSETHALF(1, VxxV.v[0].w[i], prod & 0x0000ffff) ; } },
DEF_HELPER_5(V6_vmpyowh_64_acc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyowh_64_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyowh_64_acc(SLOT_WRAP(gen_helper_V6_vmpyowh_64_acc(cpu_env, VxxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t prod;) prod = fMPY32SS(VuV.w[i],fGETHALF(1,VvV.w[i])) + fSE32_64(VxxV.v[1].w[i]); VxxV.v[1].w[i] = prod >> 16; fSETHALF(0, VxxV.v[0].w[i], VxxV.v[0].w[i] >> 16); fSETHALF(1, VxxV.v[0].w[i], prod & 0x0000ffff) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyowh_64_acc */
},
void HELPER(V6_vmpyowh_64_acc)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fHIDE(size8s_t prod;) prod = fMPY32SS(VuV.w[i],fGETHALF(1,VvV.w[i])) + fSE32_64(VxxV.v[1].w[i]); VxxV.v[1].w[i] = prod >> 16; fSETHALF(0, VxxV.v[0].w[i], VxxV.v[0].w[i] >> 16); fSETHALF(1, VxxV.v[0].w[i], prod & 0x0000ffff) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vmpyowh_sacc,{ fHIDE(int i;) fVFOREACH(32, i) { IV1DEAD() VxV.w[i] = fVSATW(((((VxV.w[i] + fMPY3216SS(VuV.w[i], fGETHALF(1, VvV.w[i]))) >> 14) + 0) >> 1)) ; } },
DEF_HELPER_5(V6_vmpyowh_sacc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyowh_sacc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyowh_sacc(SLOT_WRAP(gen_helper_V6_vmpyowh_sacc(cpu_env, VxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { IV1DEAD() VxV.w[i] = fVSATW(((((VxV.w[i] + fMPY3216SS(VuV.w[i], fGETHALF(1, VvV.w[i]))) >> 14) + 0) >> 1)) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyowh_sacc */
},
void HELPER(V6_vmpyowh_sacc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { IV1DEAD() VxV.w[i] = fVSATW(((((VxV.w[i] + fMPY3216SS(VuV.w[i], fGETHALF(1, VvV.w[i]))) >> 14) + 0) >> 1)) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vmpyowh_rnd_sacc,{ fHIDE(int i;) fVFOREACH(32, i) { IV1DEAD() VxV.w[i] = fVSATW(((((VxV.w[i] + fMPY3216SS(VuV.w[i], fGETHALF(1, VvV.w[i]))) >> 14) + 1) >> 1)) ; } },
DEF_HELPER_5(V6_vmpyowh_rnd_sacc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyowh_rnd_sacc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyowh_rnd_sacc(SLOT_WRAP(gen_helper_V6_vmpyowh_rnd_sacc(cpu_env, VxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { IV1DEAD() VxV.w[i] = fVSATW(((((VxV.w[i] + fMPY3216SS(VuV.w[i], fGETHALF(1, VvV.w[i]))) >> 14) + 1) >> 1)) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyowh_rnd_sacc */
},
void HELPER(V6_vmpyowh_rnd_sacc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { IV1DEAD() VxV.w[i] = fVSATW(((((VxV.w[i] + fMPY3216SS(VuV.w[i], fGETHALF(1, VvV.w[i]))) >> 14) + 1) >> 1)) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vmpyieoh,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = (fGETHALF(0,VuV.w[i])*fGETHALF(1,VvV.w[i])) << 16 ; } },
DEF_HELPER_5(V6_vmpyieoh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyieoh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyieoh(SLOT_WRAP(gen_helper_V6_vmpyieoh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = (fGETHALF(0,VuV.w[i])*fGETHALF(1,VvV.w[i])) << 16 ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyieoh */
},
void HELPER(V6_vmpyieoh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = (fGETHALF(0,VuV.w[i])*fGETHALF(1,VvV.w[i])) << 16 ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmpyiewuh,{ fHIDE(int i;) fVFOREACH(32, i) { IV1DEAD() VdV.w[i] = fMPY3216SU(VuV.w[i], fGETUHALF(0, VvV.w[i])) ; } },
DEF_HELPER_5(V6_vmpyiewuh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyiewuh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyiewuh(SLOT_WRAP(gen_helper_V6_vmpyiewuh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { IV1DEAD() VdV.w[i] = fMPY3216SU(VuV.w[i], fGETUHALF(0, VvV.w[i])) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyiewuh */
},
void HELPER(V6_vmpyiewuh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { IV1DEAD() VdV.w[i] = fMPY3216SU(VuV.w[i], fGETUHALF(0, VvV.w[i])) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmpyiowh,{ fHIDE(int i;) fVFOREACH(32, i) { IV1DEAD() VdV.w[i] = fMPY3216SS(VuV.w[i], fGETHALF(1, VvV.w[i])) ; } },
DEF_HELPER_5(V6_vmpyiowh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyiowh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyiowh(SLOT_WRAP(gen_helper_V6_vmpyiowh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { IV1DEAD() VdV.w[i] = fMPY3216SS(VuV.w[i], fGETHALF(1, VvV.w[i])) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyiowh */
},
void HELPER(V6_vmpyiowh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { IV1DEAD() VdV.w[i] = fMPY3216SS(VuV.w[i], fGETHALF(1, VvV.w[i])) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmpyiewh_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] = VxV.w[i] + fMPY3216SS(VuV.w[i], fGETHALF(0, VvV.w[i])) ; } },
DEF_HELPER_5(V6_vmpyiewh_acc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyiewh_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyiewh_acc(SLOT_WRAP(gen_helper_V6_vmpyiewh_acc(cpu_env, VxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] = VxV.w[i] + fMPY3216SS(VuV.w[i], fGETHALF(0, VvV.w[i])) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyiewh_acc */
},
void HELPER(V6_vmpyiewh_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] = VxV.w[i] + fMPY3216SS(VuV.w[i], fGETHALF(0, VvV.w[i])) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vmpyiewuh_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] = VxV.w[i] + fMPY3216SU(VuV.w[i], fGETUHALF(0, VvV.w[i])) ; } },
DEF_HELPER_5(V6_vmpyiewuh_acc, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmpyiewuh_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmpyiewuh_acc(SLOT_WRAP(gen_helper_V6_vmpyiewuh_acc(cpu_env, VxV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] = VxV.w[i] + fMPY3216SU(VuV.w[i], fGETUHALF(0, VvV.w[i])) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmpyiewuh_acc */
},
void HELPER(V6_vmpyiewuh_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] = VxV.w[i] + fMPY3216SU(VuV.w[i], fGETUHALF(0, VvV.w[i])) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vmpyub,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fMPY8UU(fGETUBYTE(0, VuV.uh[i]), fGETUBYTE((2*i+0)%4, RtV)); VddV.v[1].uh[i] = fMPY8UU(fGETUBYTE(1, VuV.uh[i]), fGETUBYTE((2*i+1)%4, RtV)) ; } },
DEF_HELPER_5(V6_vmpyub, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyub */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyub(SLOT_WRAP(gen_helper_V6_vmpyub(cpu_env, VddV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fMPY8UU(fGETUBYTE(0, VuV.uh[i]), fGETUBYTE((2*i+0)%4, RtV)); VddV.v[1].uh[i] = fMPY8UU(fGETUBYTE(1, VuV.uh[i]), fGETUBYTE((2*i+1)%4, RtV)) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyub */
},
void HELPER(V6_vmpyub)(CPUHexagonState *env, void *VddV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fMPY8UU(fGETUBYTE(0, VuV.uh[i]), fGETUBYTE((2*i+0)%4, RtV)); VddV.v[1].uh[i] = fMPY8UU(fGETUBYTE(1, VuV.uh[i]), fGETUBYTE((2*i+1)%4, RtV)) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpyub_acc,{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].uh[i] += fMPY8UU(fGETUBYTE(0, VuV.uh[i]), fGETUBYTE((2*i+0)%4, RtV)); VxxV.v[1].uh[i] += fMPY8UU(fGETUBYTE(1, VuV.uh[i]), fGETUBYTE((2*i+1)%4, RtV)) ; } },
DEF_HELPER_5(V6_vmpyub_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyub_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyub_acc(SLOT_WRAP(gen_helper_V6_vmpyub_acc(cpu_env, VxxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].uh[i] += fMPY8UU(fGETUBYTE(0, VuV.uh[i]), fGETUBYTE((2*i+0)%4, RtV)); VxxV.v[1].uh[i] += fMPY8UU(fGETUBYTE(1, VuV.uh[i]), fGETUBYTE((2*i+1)%4, RtV)) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyub_acc */
},
void HELPER(V6_vmpyub_acc)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].uh[i] += fMPY8UU(fGETUBYTE(0, VuV.uh[i]), fGETUBYTE((2*i+0)%4, RtV)); VxxV.v[1].uh[i] += fMPY8UU(fGETUBYTE(1, VuV.uh[i]), fGETUBYTE((2*i+1)%4, RtV)) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vmpybus,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0, VuV.uh[i]), fGETBYTE((2*i+0)%4, RtV)); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1, VuV.uh[i]), fGETBYTE((2*i+1)%4, RtV)) ; } },
DEF_HELPER_5(V6_vmpybus, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpybus */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpybus(SLOT_WRAP(gen_helper_V6_vmpybus(cpu_env, VddV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0, VuV.uh[i]), fGETBYTE((2*i+0)%4, RtV)); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1, VuV.uh[i]), fGETBYTE((2*i+1)%4, RtV)) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpybus */
},
void HELPER(V6_vmpybus)(CPUHexagonState *env, void *VddV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0, VuV.uh[i]), fGETBYTE((2*i+0)%4, RtV)); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1, VuV.uh[i]), fGETBYTE((2*i+1)%4, RtV)) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpybus_acc,{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(0, VuV.uh[i]), fGETBYTE((2*i+0)%4, RtV)); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(1, VuV.uh[i]), fGETBYTE((2*i+1)%4, RtV)) ; } },
DEF_HELPER_5(V6_vmpybus_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpybus_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpybus_acc(SLOT_WRAP(gen_helper_V6_vmpybus_acc(cpu_env, VxxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(0, VuV.uh[i]), fGETBYTE((2*i+0)%4, RtV)); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(1, VuV.uh[i]), fGETBYTE((2*i+1)%4, RtV)) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpybus_acc */
},
void HELPER(V6_vmpybus_acc)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(0, VuV.uh[i]), fGETBYTE((2*i+0)%4, RtV)); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(1, VuV.uh[i]), fGETBYTE((2*i+1)%4, RtV)) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vmpabus,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETBYTE(0, RtV)) + fMPY16SS(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETBYTE(1, RtV)); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETBYTE(2, RtV)) + fMPY16SS(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETBYTE(3, RtV)) ; } },
DEF_HELPER_5(V6_vmpabus, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpabus */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpabus(SLOT_WRAP(gen_helper_V6_vmpabus(cpu_env, VddV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETBYTE(0, RtV)) + fMPY16SS(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETBYTE(1, RtV)); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETBYTE(2, RtV)) + fMPY16SS(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETBYTE(3, RtV)) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vmpabus */
},
void HELPER(V6_vmpabus)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].h[i] = fMPY8US(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETBYTE(0, RtV)) + fMPY16SS(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETBYTE(1, RtV)); VddV.v[1].h[i] = fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETBYTE(2, RtV)) + fMPY16SS(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETBYTE(3, RtV)) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpabus_acc,{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETBYTE(0, RtV)) + fMPY16SS(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETBYTE(1, RtV)); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETBYTE(2, RtV)) + fMPY16SS(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETBYTE(3, RtV)) ; } },
DEF_HELPER_5(V6_vmpabus_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpabus_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpabus_acc(SLOT_WRAP(gen_helper_V6_vmpabus_acc(cpu_env, VxxV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETBYTE(0, RtV)) + fMPY16SS(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETBYTE(1, RtV)); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETBYTE(2, RtV)) + fMPY16SS(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETBYTE(3, RtV)) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vmpabus_acc */
},
void HELPER(V6_vmpabus_acc)(CPUHexagonState *env, void *VxxV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].h[i] += fMPY8US(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETBYTE(0, RtV)) + fMPY16SS(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETBYTE(1, RtV)); VxxV.v[1].h[i] += fMPY8US(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETBYTE(2, RtV)) + fMPY16SS(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETBYTE(3, RtV)) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vmpabuu,{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fMPY8UU(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETUBYTE(0, RtV)) + fMPY8UU(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETUBYTE(1, RtV)); VddV.v[1].uh[i] = fMPY8UU(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETUBYTE(2, RtV)) + fMPY8UU(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETUBYTE(3, RtV)) ; } },
DEF_HELPER_5(V6_vmpabuu, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpabuu */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpabuu(SLOT_WRAP(gen_helper_V6_vmpabuu(cpu_env, VddV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fMPY8UU(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETUBYTE(0, RtV)) + fMPY8UU(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETUBYTE(1, RtV)); VddV.v[1].uh[i] = fMPY8UU(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETUBYTE(2, RtV)) + fMPY8UU(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETUBYTE(3, RtV)) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vmpabuu */
},
void HELPER(V6_vmpabuu)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VddV.v[0].uh[i] = fMPY8UU(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETUBYTE(0, RtV)) + fMPY8UU(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETUBYTE(1, RtV)); VddV.v[1].uh[i] = fMPY8UU(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETUBYTE(2, RtV)) + fMPY8UU(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETUBYTE(3, RtV)) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpabuu_acc,{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].uh[i] += fMPY8UU(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETUBYTE(0, RtV)) + fMPY8UU(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETUBYTE(1, RtV)); VxxV.v[1].uh[i] += fMPY8UU(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETUBYTE(2, RtV)) + fMPY8UU(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETUBYTE(3, RtV)) ; } },
DEF_HELPER_5(V6_vmpabuu_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpabuu_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpabuu_acc(SLOT_WRAP(gen_helper_V6_vmpabuu_acc(cpu_env, VxxV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].uh[i] += fMPY8UU(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETUBYTE(0, RtV)) + fMPY8UU(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETUBYTE(1, RtV)); VxxV.v[1].uh[i] += fMPY8UU(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETUBYTE(2, RtV)) + fMPY8UU(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETUBYTE(3, RtV)) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vmpabuu_acc */
},
void HELPER(V6_vmpabuu_acc)(CPUHexagonState *env, void *VxxV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxxV.v[0].uh[i] += fMPY8UU(fGETUBYTE(0, VuuV.v[0].uh[i]), fGETUBYTE(0, RtV)) + fMPY8UU(fGETUBYTE(0, VuuV.v[1].uh[i]), fGETUBYTE(1, RtV)); VxxV.v[1].uh[i] += fMPY8UU(fGETUBYTE(1, VuuV.v[0].uh[i]), fGETUBYTE(2, RtV)) + fMPY8UU(fGETUBYTE(1, VuuV.v[1].uh[i]), fGETUBYTE(3, RtV)) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vmpahb,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SS(fGETHALF(0, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(0, RtV))) + fMPY16SS(fGETHALF(0, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(1, RtV))); VddV.v[1].w[i] = fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(2, RtV))) + fMPY16SS(fGETHALF(1, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(3, RtV))) ; } },
DEF_HELPER_5(V6_vmpahb, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpahb */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpahb(SLOT_WRAP(gen_helper_V6_vmpahb(cpu_env, VddV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SS(fGETHALF(0, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(0, RtV))) + fMPY16SS(fGETHALF(0, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(1, RtV))); VddV.v[1].w[i] = fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(2, RtV))) + fMPY16SS(fGETHALF(1, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(3, RtV))) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vmpahb */
},
void HELPER(V6_vmpahb)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SS(fGETHALF(0, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(0, RtV))) + fMPY16SS(fGETHALF(0, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(1, RtV))); VddV.v[1].w[i] = fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(2, RtV))) + fMPY16SS(fGETHALF(1, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(3, RtV))) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpahb_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY16SS(fGETHALF(0, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(0, RtV))) + fMPY16SS(fGETHALF(0, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(1, RtV))); VxxV.v[1].w[i] += fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(2, RtV))) + fMPY16SS(fGETHALF(1, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(3, RtV))) ; } },
DEF_HELPER_5(V6_vmpahb_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpahb_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpahb_acc(SLOT_WRAP(gen_helper_V6_vmpahb_acc(cpu_env, VxxV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY16SS(fGETHALF(0, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(0, RtV))) + fMPY16SS(fGETHALF(0, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(1, RtV))); VxxV.v[1].w[i] += fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(2, RtV))) + fMPY16SS(fGETHALF(1, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(3, RtV))) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vmpahb_acc */
},
void HELPER(V6_vmpahb_acc)(CPUHexagonState *env, void *VxxV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY16SS(fGETHALF(0, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(0, RtV))) + fMPY16SS(fGETHALF(0, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(1, RtV))); VxxV.v[1].w[i] += fMPY16SS(fGETHALF(1, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(2, RtV))) + fMPY16SS(fGETHALF(1, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(3, RtV))) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vmpauhb,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16US(fGETUHALF(0, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(0, RtV))) + fMPY16US(fGETUHALF(0, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(1, RtV))); VddV.v[1].w[i] = fMPY16US(fGETUHALF(1, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(2, RtV))) + fMPY16US(fGETUHALF(1, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(3, RtV))) ; } },
DEF_HELPER_5(V6_vmpauhb, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpauhb */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpauhb(SLOT_WRAP(gen_helper_V6_vmpauhb(cpu_env, VddV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16US(fGETUHALF(0, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(0, RtV))) + fMPY16US(fGETUHALF(0, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(1, RtV))); VddV.v[1].w[i] = fMPY16US(fGETUHALF(1, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(2, RtV))) + fMPY16US(fGETUHALF(1, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(3, RtV))) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vmpauhb */
},
void HELPER(V6_vmpauhb)(CPUHexagonState *env, void *VddV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16US(fGETUHALF(0, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(0, RtV))) + fMPY16US(fGETUHALF(0, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(1, RtV))); VddV.v[1].w[i] = fMPY16US(fGETUHALF(1, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(2, RtV))) + fMPY16US(fGETUHALF(1, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(3, RtV))) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpauhb_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY16US(fGETUHALF(0, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(0, RtV))) + fMPY16US(fGETUHALF(0, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(1, RtV))); VxxV.v[1].w[i] += fMPY16US(fGETUHALF(1, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(2, RtV))) + fMPY16US(fGETUHALF(1, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(3, RtV))) ; } },
DEF_HELPER_5(V6_vmpauhb_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpauhb_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG_PAIR(VuuV, VuuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG_PAIR(VuuN,VuuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpauhb_acc(SLOT_WRAP(gen_helper_V6_vmpauhb_acc(cpu_env, VxxV, VuuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY16US(fGETUHALF(0, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(0, RtV))) + fMPY16US(fGETUHALF(0, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(1, RtV))); VxxV.v[1].w[i] += fMPY16US(fGETUHALF(1, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(2, RtV))) + fMPY16US(fGETUHALF(1, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(3, RtV))) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG_PAIR(VuuV);
FREE_REG_t(RtV);
/* V6_vmpauhb_acc */
},
void HELPER(V6_vmpauhb_acc)(CPUHexagonState *env, void *VxxV_void, void *VuuV_void, int32_t RtV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuuV3 is *(mmvector_pair_t*)(VuuV3_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] += fMPY16US(fGETUHALF(0, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(0, RtV))) + fMPY16US(fGETUHALF(0, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(1, RtV))); VxxV.v[1].w[i] += fMPY16US(fGETUHALF(1, VuuV.v[0].w[i]), fSE8_16(fGETBYTE(2, RtV))) + fMPY16US(fGETUHALF(1, VuuV.v[1].w[i]), fSE8_16(fGETBYTE(3, RtV))) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vmpyh,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SS(fGETHALF(0, VuV.w[i]), fGETHALF(0, RtV)); VddV.v[1].w[i] = fMPY16SS(fGETHALF(1, VuV.w[i]), fGETHALF(1, RtV)) ; } },
DEF_HELPER_5(V6_vmpyh, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyh */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyh(SLOT_WRAP(gen_helper_V6_vmpyh(cpu_env, VddV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SS(fGETHALF(0, VuV.w[i]), fGETHALF(0, RtV)); VddV.v[1].w[i] = fMPY16SS(fGETHALF(1, VuV.w[i]), fGETHALF(1, RtV)) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyh */
},
void HELPER(V6_vmpyh)(CPUHexagonState *env, void *VddV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].w[i] = fMPY16SS(fGETHALF(0, VuV.w[i]), fGETHALF(0, RtV)); VddV.v[1].w[i] = fMPY16SS(fGETHALF(1, VuV.w[i]), fGETHALF(1, RtV)) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpyh_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] = fCAST8s(VxxV.v[0].w[i]) + fMPY16SS(fGETHALF(0, VuV.w[i]), fGETHALF(0, RtV)); VxxV.v[1].w[i] = fCAST8s(VxxV.v[1].w[i]) + fMPY16SS(fGETHALF(1, VuV.w[i]), fGETHALF(1, RtV)) ; } },
DEF_HELPER_5(V6_vmpyh_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyh_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyh_acc(SLOT_WRAP(gen_helper_V6_vmpyh_acc(cpu_env, VxxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] = fCAST8s(VxxV.v[0].w[i]) + fMPY16SS(fGETHALF(0, VuV.w[i]), fGETHALF(0, RtV)); VxxV.v[1].w[i] = fCAST8s(VxxV.v[1].w[i]) + fMPY16SS(fGETHALF(1, VuV.w[i]), fGETHALF(1, RtV)) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyh_acc */
},
void HELPER(V6_vmpyh_acc)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] = fCAST8s(VxxV.v[0].w[i]) + fMPY16SS(fGETHALF(0, VuV.w[i]), fGETHALF(0, RtV)); VxxV.v[1].w[i] = fCAST8s(VxxV.v[1].w[i]) + fMPY16SS(fGETHALF(1, VuV.w[i]), fGETHALF(1, RtV)) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vmpyhsat_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] = fVSATW(fCAST8s(VxxV.v[0].w[i]) + fMPY16SS(fGETHALF(0, VuV.w[i]), fGETHALF(0, RtV))); VxxV.v[1].w[i] = fVSATW(fCAST8s(VxxV.v[1].w[i]) + fMPY16SS(fGETHALF(1, VuV.w[i]), fGETHALF(1, RtV))) ; } },
DEF_HELPER_5(V6_vmpyhsat_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyhsat_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyhsat_acc(SLOT_WRAP(gen_helper_V6_vmpyhsat_acc(cpu_env, VxxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] = fVSATW(fCAST8s(VxxV.v[0].w[i]) + fMPY16SS(fGETHALF(0, VuV.w[i]), fGETHALF(0, RtV))); VxxV.v[1].w[i] = fVSATW(fCAST8s(VxxV.v[1].w[i]) + fMPY16SS(fGETHALF(1, VuV.w[i]), fGETHALF(1, RtV))) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyhsat_acc */
},
void HELPER(V6_vmpyhsat_acc)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].w[i] = fVSATW(fCAST8s(VxxV.v[0].w[i]) + fMPY16SS(fGETHALF(0, VuV.w[i]), fGETHALF(0, RtV))); VxxV.v[1].w[i] = fVSATW(fCAST8s(VxxV.v[1].w[i]) + fMPY16SS(fGETHALF(1, VuV.w[i]), fGETHALF(1, RtV))) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vmpyhss,{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0,VdV.w[i],fVSATH(fGETHALF(1,fVSAT((fMPY16SS(fGETHALF(0,VuV.w[i]),fGETHALF(0,RtV))<<1))))); fSETHALF(1,VdV.w[i],fVSATH(fGETHALF(1,fVSAT((fMPY16SS(fGETHALF(1,VuV.w[i]),fGETHALF(1,RtV))<<1))))); ; } },
DEF_HELPER_5(V6_vmpyhss, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyhss */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyhss(SLOT_WRAP(gen_helper_V6_vmpyhss(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0,VdV.w[i],fVSATH(fGETHALF(1,fVSAT((fMPY16SS(fGETHALF(0,VuV.w[i]),fGETHALF(0,RtV))<<1))))); fSETHALF(1,VdV.w[i],fVSATH(fGETHALF(1,fVSAT((fMPY16SS(fGETHALF(1,VuV.w[i]),fGETHALF(1,RtV))<<1))))); ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyhss */
},
void HELPER(V6_vmpyhss)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0,VdV.w[i],fVSATH(fGETHALF(1,fVSAT((fMPY16SS(fGETHALF(0,VuV.w[i]),fGETHALF(0,RtV))<<1))))); fSETHALF(1,VdV.w[i],fVSATH(fGETHALF(1,fVSAT((fMPY16SS(fGETHALF(1,VuV.w[i]),fGETHALF(1,RtV))<<1))))); ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmpyhsrs,{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0,VdV.w[i],fVSATH(fGETHALF(1,fVSAT(fROUND((fMPY16SS(fGETHALF(0,VuV.w[i]),fGETHALF(0,RtV))<<1)))))); fSETHALF(1,VdV.w[i],fVSATH(fGETHALF(1,fVSAT(fROUND((fMPY16SS(fGETHALF(1,VuV.w[i]),fGETHALF(1,RtV))<<1)))))); ; } },
DEF_HELPER_5(V6_vmpyhsrs, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyhsrs */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyhsrs(SLOT_WRAP(gen_helper_V6_vmpyhsrs(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0,VdV.w[i],fVSATH(fGETHALF(1,fVSAT(fROUND((fMPY16SS(fGETHALF(0,VuV.w[i]),fGETHALF(0,RtV))<<1)))))); fSETHALF(1,VdV.w[i],fVSATH(fGETHALF(1,fVSAT(fROUND((fMPY16SS(fGETHALF(1,VuV.w[i]),fGETHALF(1,RtV))<<1)))))); ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyhsrs */
},
void HELPER(V6_vmpyhsrs)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0,VdV.w[i],fVSATH(fGETHALF(1,fVSAT(fROUND((fMPY16SS(fGETHALF(0,VuV.w[i]),fGETHALF(0,RtV))<<1)))))); fSETHALF(1,VdV.w[i],fVSATH(fGETHALF(1,fVSAT(fROUND((fMPY16SS(fGETHALF(1,VuV.w[i]),fGETHALF(1,RtV))<<1)))))); ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmpyuh,{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fMPY16UU(fGETUHALF(0, VuV.uw[i]),fGETUHALF(0,RtV)); VddV.v[1].uw[i] = fMPY16UU(fGETUHALF(1, VuV.uw[i]),fGETUHALF(1,RtV)) ; } },
DEF_HELPER_5(V6_vmpyuh, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyuh */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyuh(SLOT_WRAP(gen_helper_V6_vmpyuh(cpu_env, VddV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fMPY16UU(fGETUHALF(0, VuV.uw[i]),fGETUHALF(0,RtV)); VddV.v[1].uw[i] = fMPY16UU(fGETUHALF(1, VuV.uw[i]),fGETUHALF(1,RtV)) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyuh */
},
void HELPER(V6_vmpyuh)(CPUHexagonState *env, void *VddV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VddV.v[0].uw[i] = fMPY16UU(fGETUHALF(0, VuV.uw[i]),fGETUHALF(0,RtV)); VddV.v[1].uw[i] = fMPY16UU(fGETUHALF(1, VuV.uw[i]),fGETUHALF(1,RtV)) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpyuh_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].uw[i] += fMPY16UU(fGETUHALF(0, VuV.uw[i]),fGETUHALF(0,RtV)); VxxV.v[1].uw[i] += fMPY16UU(fGETUHALF(1, VuV.uw[i]),fGETUHALF(1,RtV)) ; } },
DEF_HELPER_5(V6_vmpyuh_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyuh_acc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyuh_acc(SLOT_WRAP(gen_helper_V6_vmpyuh_acc(cpu_env, VxxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].uw[i] += fMPY16UU(fGETUHALF(0, VuV.uw[i]),fGETUHALF(0,RtV)); VxxV.v[1].uw[i] += fMPY16UU(fGETUHALF(1, VuV.uw[i]),fGETUHALF(1,RtV)) ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyuh_acc */
},
void HELPER(V6_vmpyuh_acc)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxxV.v[0].uw[i] += fMPY16UU(fGETUHALF(0, VuV.uw[i]),fGETUHALF(0,RtV)); VxxV.v[1].uw[i] += fMPY16UU(fGETUHALF(1, VuV.uw[i]),fGETUHALF(1,RtV)) ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vmpyihb,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fMPY16SS(VuV.h[i], fGETBYTE(i % 4, RtV) ) ; } },
DEF_HELPER_5(V6_vmpyihb, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyihb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyihb(SLOT_WRAP(gen_helper_V6_vmpyihb(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fMPY16SS(VuV.h[i], fGETBYTE(i % 4, RtV) ) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyihb */
},
void HELPER(V6_vmpyihb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fMPY16SS(VuV.h[i], fGETBYTE(i % 4, RtV) ) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmpyihb_acc,{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i] += fMPY16SS(VuV.h[i], fGETBYTE(i % 4, RtV) ) ; } },
DEF_HELPER_5(V6_vmpyihb_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyihb_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyihb_acc(SLOT_WRAP(gen_helper_V6_vmpyihb_acc(cpu_env, VxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i] += fMPY16SS(VuV.h[i], fGETBYTE(i % 4, RtV) ) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyihb_acc */
},
void HELPER(V6_vmpyihb_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i] += fMPY16SS(VuV.h[i], fGETBYTE(i % 4, RtV) ) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vmpyiwb,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY32SS(VuV.w[i], fGETBYTE(i % 4, RtV) ) ; } },
DEF_HELPER_5(V6_vmpyiwb, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyiwb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyiwb(SLOT_WRAP(gen_helper_V6_vmpyiwb(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY32SS(VuV.w[i], fGETBYTE(i % 4, RtV) ) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyiwb */
},
void HELPER(V6_vmpyiwb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY32SS(VuV.w[i], fGETBYTE(i % 4, RtV) ) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmpyiwb_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY32SS(VuV.w[i], fGETBYTE(i % 4, RtV) ) ; } },
DEF_HELPER_5(V6_vmpyiwb_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyiwb_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyiwb_acc(SLOT_WRAP(gen_helper_V6_vmpyiwb_acc(cpu_env, VxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY32SS(VuV.w[i], fGETBYTE(i % 4, RtV) ) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyiwb_acc */
},
void HELPER(V6_vmpyiwb_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY32SS(VuV.w[i], fGETBYTE(i % 4, RtV) ) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vmpyiwub,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY32SS(VuV.w[i], fGETUBYTE(i % 4, RtV) ) ; } },
DEF_HELPER_5(V6_vmpyiwub, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyiwub */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyiwub(SLOT_WRAP(gen_helper_V6_vmpyiwub(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY32SS(VuV.w[i], fGETUBYTE(i % 4, RtV) ) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyiwub */
},
void HELPER(V6_vmpyiwub)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY32SS(VuV.w[i], fGETUBYTE(i % 4, RtV) ) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmpyiwub_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY32SS(VuV.w[i], fGETUBYTE(i % 4, RtV) ) ; } },
DEF_HELPER_5(V6_vmpyiwub_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyiwub_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyiwub_acc(SLOT_WRAP(gen_helper_V6_vmpyiwub_acc(cpu_env, VxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY32SS(VuV.w[i], fGETUBYTE(i % 4, RtV) ) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyiwub_acc */
},
void HELPER(V6_vmpyiwub_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY32SS(VuV.w[i], fGETUBYTE(i % 4, RtV) ) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vmpyiwh,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY32SS(VuV.w[i], fGETHALF(i % 2, RtV)) ; } },
DEF_HELPER_5(V6_vmpyiwh, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyiwh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyiwh(SLOT_WRAP(gen_helper_V6_vmpyiwh(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY32SS(VuV.w[i], fGETHALF(i % 2, RtV)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyiwh */
},
void HELPER(V6_vmpyiwh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMPY32SS(VuV.w[i], fGETHALF(i % 2, RtV)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmpyiwh_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY32SS(VuV.w[i], fGETHALF(i % 2, RtV)) ; } },
DEF_HELPER_5(V6_vmpyiwh_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyiwh_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyiwh_acc(SLOT_WRAP(gen_helper_V6_vmpyiwh_acc(cpu_env, VxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY32SS(VuV.w[i], fGETHALF(i % 2, RtV)) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyiwh_acc */
},
void HELPER(V6_vmpyiwh_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.w[i] += fMPY32SS(VuV.w[i], fGETHALF(i % 2, RtV)) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vand,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = VuV.uh[i] & VvV.h[i] ; } },
DEF_HELPER_5(V6_vand, void, env, ptr, ptr, ptr, i32),
{
/* V6_vand */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vand(SLOT_WRAP(gen_helper_V6_vand(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = VuV.uh[i] & VvV.h[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vand */
},
void HELPER(V6_vand)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = VuV.uh[i] & VvV.h[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vor,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = VuV.uh[i] | VvV.h[i] ; } },
DEF_HELPER_5(V6_vor, void, env, ptr, ptr, ptr, i32),
{
/* V6_vor */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vor(SLOT_WRAP(gen_helper_V6_vor(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = VuV.uh[i] | VvV.h[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vor */
},
void HELPER(V6_vor)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = VuV.uh[i] | VvV.h[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vxor,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = VuV.uh[i] ^ VvV.h[i] ; } },
DEF_HELPER_5(V6_vxor, void, env, ptr, ptr, ptr, i32),
{
/* V6_vxor */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vxor(SLOT_WRAP(gen_helper_V6_vxor(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = VuV.uh[i] ^ VvV.h[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vxor */
},
void HELPER(V6_vxor)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = VuV.uh[i] ^ VvV.h[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vnot,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = ~VuV.uh[i] ; } },
DEF_HELPER_4(V6_vnot, void, env, ptr, ptr, i32),
{
/* V6_vnot */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vnot(SLOT_WRAP(gen_helper_V6_vnot(cpu_env, VdV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = ~VuV.uh[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vnot */
},
void HELPER(V6_vnot)(CPUHexagonState *env, void *VdV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = ~VuV.uh[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vandqrt,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fGETQBIT(QuV,i) ? fGETUBYTE(i % 4, RtV) : 0 ; } },
DEF_HELPER_5(V6_vandqrt, void, env, ptr, ptr, s32, i32),
{
/* V6_vandqrt */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_QREG(QuV, QuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_QREG(QuN,QuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vandqrt(SLOT_WRAP(gen_helper_V6_vandqrt(cpu_env, VdV, QuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fGETQBIT(QuV,i) ? fGETUBYTE(i % 4, RtV) : 0 ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_QREG(QuV);
FREE_REG_t(RtV);
/* V6_vandqrt */
},
void HELPER(V6_vandqrt)(CPUHexagonState *env, void *VdV_void, void *QuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* QuV is *(mmvector_t*)(QuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fGETQBIT(QuV,i) ? fGETUBYTE(i % 4, RtV) : 0 ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vandqrt_acc,{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i] |= (fGETQBIT(QuV,i)) ? fGETUBYTE(i % 4, RtV) : 0 ; } },
DEF_HELPER_5(V6_vandqrt_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vandqrt_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_QREG(QuV, QuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_QREG(QuN,QuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vandqrt_acc(SLOT_WRAP(gen_helper_V6_vandqrt_acc(cpu_env, VxV, QuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i] |= (fGETQBIT(QuV,i)) ? fGETUBYTE(i % 4, RtV) : 0 ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_QREG(QuV);
FREE_REG_t(RtV);
/* V6_vandqrt_acc */
},
void HELPER(V6_vandqrt_acc)(CPUHexagonState *env, void *VxV_void, void *QuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* QuV is *(mmvector_t*)(QuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i] |= (fGETQBIT(QuV,i)) ? fGETUBYTE(i % 4, RtV) : 0 ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vandnqrt,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = !fGETQBIT(QuV,i) ? fGETUBYTE(i % 4, RtV) : 0 ; } },
DEF_HELPER_5(V6_vandnqrt, void, env, ptr, ptr, s32, i32),
{
/* V6_vandnqrt */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_QREG(QuV, QuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_QREG(QuN,QuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vandnqrt(SLOT_WRAP(gen_helper_V6_vandnqrt(cpu_env, VdV, QuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = !fGETQBIT(QuV,i) ? fGETUBYTE(i % 4, RtV) : 0 ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_QREG(QuV);
FREE_REG_t(RtV);
/* V6_vandnqrt */
},
void HELPER(V6_vandnqrt)(CPUHexagonState *env, void *VdV_void, void *QuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* QuV is *(mmvector_t*)(QuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = !fGETQBIT(QuV,i) ? fGETUBYTE(i % 4, RtV) : 0 ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vandnqrt_acc,{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i] |= !(fGETQBIT(QuV,i)) ? fGETUBYTE(i % 4, RtV) : 0 ; } },
DEF_HELPER_5(V6_vandnqrt_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vandnqrt_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_QREG(QuV, QuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_QREG(QuN,QuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vandnqrt_acc(SLOT_WRAP(gen_helper_V6_vandnqrt_acc(cpu_env, VxV, QuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i] |= !(fGETQBIT(QuV,i)) ? fGETUBYTE(i % 4, RtV) : 0 ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_QREG(QuV);
FREE_REG_t(RtV);
/* V6_vandnqrt_acc */
},
void HELPER(V6_vandnqrt_acc)(CPUHexagonState *env, void *VxV_void, void *QuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* QuV is *(mmvector_t*)(QuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VxV.ub[i] |= !(fGETQBIT(QuV,i)) ? fGETUBYTE(i % 4, RtV) : 0 ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vandvrt,{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,((VuV.ub[i] & fGETUBYTE(i % 4, RtV)) != 0) ? 1 : 0) ; } },
DEF_HELPER_5(V6_vandvrt, void, env, ptr, ptr, s32, i32),
{
/* V6_vandvrt */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vandvrt(SLOT_WRAP(gen_helper_V6_vandvrt(cpu_env, QdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,((VuV.ub[i] & fGETUBYTE(i % 4, RtV)) != 0) ? 1 : 0) ; } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vandvrt */
},
void HELPER(V6_vandvrt)(CPUHexagonState *env, void *QdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,((VuV.ub[i] & fGETUBYTE(i % 4, RtV)) != 0) ? 1 : 0) ; } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_vandvrt_acc,{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QxV,i,fGETQBIT(QxV,i)|(((VuV.ub[i] & fGETUBYTE(i % 4, RtV)) != 0) ? 1 : 0)) ; } },
DEF_HELPER_5(V6_vandvrt_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vandvrt_acc */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vandvrt_acc(SLOT_WRAP(gen_helper_V6_vandvrt_acc(cpu_env, QxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QxV,i,fGETQBIT(QxV,i)|(((VuV.ub[i] & fGETUBYTE(i % 4, RtV)) != 0) ? 1 : 0)) ; } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vandvrt_acc */
},
void HELPER(V6_vandvrt_acc)(CPUHexagonState *env, void *QxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QxV,i,fGETQBIT(QxV,i)|(((VuV.ub[i] & fGETUBYTE(i % 4, RtV)) != 0) ? 1 : 0)) ; } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vandvqv,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fGETQBIT(QvV,i) ? VuV.b[i] : 0 ; } },
DEF_HELPER_5(V6_vandvqv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vandvqv */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_QREG(QvV, QvN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vandvqv(SLOT_WRAP(gen_helper_V6_vandvqv(cpu_env, VdV, QvV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fGETQBIT(QvV,i) ? VuV.b[i] : 0 ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_QREG(QvV);
FREE_EXT_VREG(VuV);
/* V6_vandvqv */
},
void HELPER(V6_vandvqv)(CPUHexagonState *env, void *VdV_void, void *QvV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* QvV is *(mmvector_t*)(QvV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = fGETQBIT(QvV,i) ? VuV.b[i] : 0 ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vandvnqv,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = !fGETQBIT(QvV,i) ? VuV.b[i] : 0 ; } },
DEF_HELPER_5(V6_vandvnqv, void, env, ptr, ptr, ptr, i32),
{
/* V6_vandvnqv */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_QREG(QvV, QvN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
READ_EXT_QREG(QvN,QvV,0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vandvnqv(SLOT_WRAP(gen_helper_V6_vandvnqv(cpu_env, VdV, QvV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = !fGETQBIT(QvV,i) ? VuV.b[i] : 0 ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_QREG(QvV);
FREE_EXT_VREG(VuV);
/* V6_vandvnqv */
},
void HELPER(V6_vandvnqv)(CPUHexagonState *env, void *VdV_void, void *QvV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* QvV is *(mmvector_t*)(QvV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = !fGETQBIT(QvV,i) ? VuV.b[i] : 0 ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vgtw,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QdV,4,0xF,i, ((VuV.w[i/4] > VvV.w[i/4]) ? 0xF : 0)); } },
DEF_HELPER_5(V6_vgtw, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtw */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtw(SLOT_WRAP(gen_helper_V6_vgtw(cpu_env, QdV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QdV,4,0xF,i, ((VuV.w[i/4] > VvV.w[i/4]) ? 0xF : 0)); } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtw */
},
void HELPER(V6_vgtw)(CPUHexagonState *env, void *QdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QdV,4,0xF,i, ((VuV.w[i/4] > VvV.w[i/4]) ? 0xF : 0)); } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_vgtw_and,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) & ((VuV.w[i/4] > VvV.w[i/4]) ? 0xF : 0)); } },
DEF_HELPER_5(V6_vgtw_and, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtw_and */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtw_and(SLOT_WRAP(gen_helper_V6_vgtw_and(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) & ((VuV.w[i/4] > VvV.w[i/4]) ? 0xF : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtw_and */
},
void HELPER(V6_vgtw_and)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) & ((VuV.w[i/4] > VvV.w[i/4]) ? 0xF : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vgtw_or,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) | ((VuV.w[i/4] > VvV.w[i/4]) ? 0xF : 0)); } },
DEF_HELPER_5(V6_vgtw_or, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtw_or */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtw_or(SLOT_WRAP(gen_helper_V6_vgtw_or(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) | ((VuV.w[i/4] > VvV.w[i/4]) ? 0xF : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtw_or */
},
void HELPER(V6_vgtw_or)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) | ((VuV.w[i/4] > VvV.w[i/4]) ? 0xF : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vgtw_xor,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) ^ ((VuV.w[i/4] > VvV.w[i/4]) ? 0xF : 0)); } },
DEF_HELPER_5(V6_vgtw_xor, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtw_xor */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtw_xor(SLOT_WRAP(gen_helper_V6_vgtw_xor(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) ^ ((VuV.w[i/4] > VvV.w[i/4]) ? 0xF : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtw_xor */
},
void HELPER(V6_vgtw_xor)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) ^ ((VuV.w[i/4] > VvV.w[i/4]) ? 0xF : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_veqw,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QdV,4,0xF,i, ((VuV.w[i/4] == VvV.w[i/4]) ? 0xF : 0)); } },
DEF_HELPER_5(V6_veqw, void, env, ptr, ptr, ptr, i32),
{
/* V6_veqw */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_veqw(SLOT_WRAP(gen_helper_V6_veqw(cpu_env, QdV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QdV,4,0xF,i, ((VuV.w[i/4] == VvV.w[i/4]) ? 0xF : 0)); } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_veqw */
},
void HELPER(V6_veqw)(CPUHexagonState *env, void *QdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QdV,4,0xF,i, ((VuV.w[i/4] == VvV.w[i/4]) ? 0xF : 0)); } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_veqw_and,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) & ((VuV.w[i/4] == VvV.w[i/4]) ? 0xF : 0)); } },
DEF_HELPER_5(V6_veqw_and, void, env, ptr, ptr, ptr, i32),
{
/* V6_veqw_and */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_veqw_and(SLOT_WRAP(gen_helper_V6_veqw_and(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) & ((VuV.w[i/4] == VvV.w[i/4]) ? 0xF : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_veqw_and */
},
void HELPER(V6_veqw_and)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) & ((VuV.w[i/4] == VvV.w[i/4]) ? 0xF : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_veqw_or,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) | ((VuV.w[i/4] == VvV.w[i/4]) ? 0xF : 0)); } },
DEF_HELPER_5(V6_veqw_or, void, env, ptr, ptr, ptr, i32),
{
/* V6_veqw_or */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_veqw_or(SLOT_WRAP(gen_helper_V6_veqw_or(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) | ((VuV.w[i/4] == VvV.w[i/4]) ? 0xF : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_veqw_or */
},
void HELPER(V6_veqw_or)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) | ((VuV.w[i/4] == VvV.w[i/4]) ? 0xF : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_veqw_xor,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) ^ ((VuV.w[i/4] == VvV.w[i/4]) ? 0xF : 0)); } },
DEF_HELPER_5(V6_veqw_xor, void, env, ptr, ptr, ptr, i32),
{
/* V6_veqw_xor */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_veqw_xor(SLOT_WRAP(gen_helper_V6_veqw_xor(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) ^ ((VuV.w[i/4] == VvV.w[i/4]) ? 0xF : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_veqw_xor */
},
void HELPER(V6_veqw_xor)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) ^ ((VuV.w[i/4] == VvV.w[i/4]) ? 0xF : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vgth,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QdV,2,0x3,i, ((VuV.h[i/2] > VvV.h[i/2]) ? 0x3 : 0)); } },
DEF_HELPER_5(V6_vgth, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgth */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgth(SLOT_WRAP(gen_helper_V6_vgth(cpu_env, QdV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QdV,2,0x3,i, ((VuV.h[i/2] > VvV.h[i/2]) ? 0x3 : 0)); } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgth */
},
void HELPER(V6_vgth)(CPUHexagonState *env, void *QdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QdV,2,0x3,i, ((VuV.h[i/2] > VvV.h[i/2]) ? 0x3 : 0)); } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_vgth_and,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) & ((VuV.h[i/2] > VvV.h[i/2]) ? 0x3 : 0)); } },
DEF_HELPER_5(V6_vgth_and, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgth_and */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgth_and(SLOT_WRAP(gen_helper_V6_vgth_and(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) & ((VuV.h[i/2] > VvV.h[i/2]) ? 0x3 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgth_and */
},
void HELPER(V6_vgth_and)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) & ((VuV.h[i/2] > VvV.h[i/2]) ? 0x3 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vgth_or,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) | ((VuV.h[i/2] > VvV.h[i/2]) ? 0x3 : 0)); } },
DEF_HELPER_5(V6_vgth_or, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgth_or */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgth_or(SLOT_WRAP(gen_helper_V6_vgth_or(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) | ((VuV.h[i/2] > VvV.h[i/2]) ? 0x3 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgth_or */
},
void HELPER(V6_vgth_or)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) | ((VuV.h[i/2] > VvV.h[i/2]) ? 0x3 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vgth_xor,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) ^ ((VuV.h[i/2] > VvV.h[i/2]) ? 0x3 : 0)); } },
DEF_HELPER_5(V6_vgth_xor, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgth_xor */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgth_xor(SLOT_WRAP(gen_helper_V6_vgth_xor(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) ^ ((VuV.h[i/2] > VvV.h[i/2]) ? 0x3 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgth_xor */
},
void HELPER(V6_vgth_xor)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) ^ ((VuV.h[i/2] > VvV.h[i/2]) ? 0x3 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_veqh,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QdV,2,0x3,i, ((VuV.h[i/2] == VvV.h[i/2]) ? 0x3 : 0)); } },
DEF_HELPER_5(V6_veqh, void, env, ptr, ptr, ptr, i32),
{
/* V6_veqh */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_veqh(SLOT_WRAP(gen_helper_V6_veqh(cpu_env, QdV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QdV,2,0x3,i, ((VuV.h[i/2] == VvV.h[i/2]) ? 0x3 : 0)); } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_veqh */
},
void HELPER(V6_veqh)(CPUHexagonState *env, void *QdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QdV,2,0x3,i, ((VuV.h[i/2] == VvV.h[i/2]) ? 0x3 : 0)); } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_veqh_and,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) & ((VuV.h[i/2] == VvV.h[i/2]) ? 0x3 : 0)); } },
DEF_HELPER_5(V6_veqh_and, void, env, ptr, ptr, ptr, i32),
{
/* V6_veqh_and */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_veqh_and(SLOT_WRAP(gen_helper_V6_veqh_and(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) & ((VuV.h[i/2] == VvV.h[i/2]) ? 0x3 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_veqh_and */
},
void HELPER(V6_veqh_and)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) & ((VuV.h[i/2] == VvV.h[i/2]) ? 0x3 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_veqh_or,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) | ((VuV.h[i/2] == VvV.h[i/2]) ? 0x3 : 0)); } },
DEF_HELPER_5(V6_veqh_or, void, env, ptr, ptr, ptr, i32),
{
/* V6_veqh_or */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_veqh_or(SLOT_WRAP(gen_helper_V6_veqh_or(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) | ((VuV.h[i/2] == VvV.h[i/2]) ? 0x3 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_veqh_or */
},
void HELPER(V6_veqh_or)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) | ((VuV.h[i/2] == VvV.h[i/2]) ? 0x3 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_veqh_xor,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) ^ ((VuV.h[i/2] == VvV.h[i/2]) ? 0x3 : 0)); } },
DEF_HELPER_5(V6_veqh_xor, void, env, ptr, ptr, ptr, i32),
{
/* V6_veqh_xor */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_veqh_xor(SLOT_WRAP(gen_helper_V6_veqh_xor(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) ^ ((VuV.h[i/2] == VvV.h[i/2]) ? 0x3 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_veqh_xor */
},
void HELPER(V6_veqh_xor)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) ^ ((VuV.h[i/2] == VvV.h[i/2]) ? 0x3 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vgtb,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QdV,1,0x1,i, ((VuV.b[i/1] > VvV.b[i/1]) ? 0x1 : 0)); } },
DEF_HELPER_5(V6_vgtb, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtb */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtb(SLOT_WRAP(gen_helper_V6_vgtb(cpu_env, QdV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QdV,1,0x1,i, ((VuV.b[i/1] > VvV.b[i/1]) ? 0x1 : 0)); } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtb */
},
void HELPER(V6_vgtb)(CPUHexagonState *env, void *QdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QdV,1,0x1,i, ((VuV.b[i/1] > VvV.b[i/1]) ? 0x1 : 0)); } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_vgtb_and,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) & ((VuV.b[i/1] > VvV.b[i/1]) ? 0x1 : 0)); } },
DEF_HELPER_5(V6_vgtb_and, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtb_and */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtb_and(SLOT_WRAP(gen_helper_V6_vgtb_and(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) & ((VuV.b[i/1] > VvV.b[i/1]) ? 0x1 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtb_and */
},
void HELPER(V6_vgtb_and)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) & ((VuV.b[i/1] > VvV.b[i/1]) ? 0x1 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vgtb_or,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) | ((VuV.b[i/1] > VvV.b[i/1]) ? 0x1 : 0)); } },
DEF_HELPER_5(V6_vgtb_or, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtb_or */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtb_or(SLOT_WRAP(gen_helper_V6_vgtb_or(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) | ((VuV.b[i/1] > VvV.b[i/1]) ? 0x1 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtb_or */
},
void HELPER(V6_vgtb_or)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) | ((VuV.b[i/1] > VvV.b[i/1]) ? 0x1 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vgtb_xor,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) ^ ((VuV.b[i/1] > VvV.b[i/1]) ? 0x1 : 0)); } },
DEF_HELPER_5(V6_vgtb_xor, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtb_xor */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtb_xor(SLOT_WRAP(gen_helper_V6_vgtb_xor(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) ^ ((VuV.b[i/1] > VvV.b[i/1]) ? 0x1 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtb_xor */
},
void HELPER(V6_vgtb_xor)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) ^ ((VuV.b[i/1] > VvV.b[i/1]) ? 0x1 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_veqb,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QdV,1,0x1,i, ((VuV.b[i/1] == VvV.b[i/1]) ? 0x1 : 0)); } },
DEF_HELPER_5(V6_veqb, void, env, ptr, ptr, ptr, i32),
{
/* V6_veqb */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_veqb(SLOT_WRAP(gen_helper_V6_veqb(cpu_env, QdV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QdV,1,0x1,i, ((VuV.b[i/1] == VvV.b[i/1]) ? 0x1 : 0)); } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_veqb */
},
void HELPER(V6_veqb)(CPUHexagonState *env, void *QdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QdV,1,0x1,i, ((VuV.b[i/1] == VvV.b[i/1]) ? 0x1 : 0)); } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_veqb_and,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) & ((VuV.b[i/1] == VvV.b[i/1]) ? 0x1 : 0)); } },
DEF_HELPER_5(V6_veqb_and, void, env, ptr, ptr, ptr, i32),
{
/* V6_veqb_and */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_veqb_and(SLOT_WRAP(gen_helper_V6_veqb_and(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) & ((VuV.b[i/1] == VvV.b[i/1]) ? 0x1 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_veqb_and */
},
void HELPER(V6_veqb_and)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) & ((VuV.b[i/1] == VvV.b[i/1]) ? 0x1 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_veqb_or,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) | ((VuV.b[i/1] == VvV.b[i/1]) ? 0x1 : 0)); } },
DEF_HELPER_5(V6_veqb_or, void, env, ptr, ptr, ptr, i32),
{
/* V6_veqb_or */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_veqb_or(SLOT_WRAP(gen_helper_V6_veqb_or(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) | ((VuV.b[i/1] == VvV.b[i/1]) ? 0x1 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_veqb_or */
},
void HELPER(V6_veqb_or)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) | ((VuV.b[i/1] == VvV.b[i/1]) ? 0x1 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_veqb_xor,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) ^ ((VuV.b[i/1] == VvV.b[i/1]) ? 0x1 : 0)); } },
DEF_HELPER_5(V6_veqb_xor, void, env, ptr, ptr, ptr, i32),
{
/* V6_veqb_xor */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_veqb_xor(SLOT_WRAP(gen_helper_V6_veqb_xor(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) ^ ((VuV.b[i/1] == VvV.b[i/1]) ? 0x1 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_veqb_xor */
},
void HELPER(V6_veqb_xor)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) ^ ((VuV.b[i/1] == VvV.b[i/1]) ? 0x1 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vgtuw,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QdV,4,0xF,i, ((VuV.uw[i/4] > VvV.uw[i/4]) ? 0xF : 0)); } },
DEF_HELPER_5(V6_vgtuw, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtuw */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtuw(SLOT_WRAP(gen_helper_V6_vgtuw(cpu_env, QdV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QdV,4,0xF,i, ((VuV.uw[i/4] > VvV.uw[i/4]) ? 0xF : 0)); } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtuw */
},
void HELPER(V6_vgtuw)(CPUHexagonState *env, void *QdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QdV,4,0xF,i, ((VuV.uw[i/4] > VvV.uw[i/4]) ? 0xF : 0)); } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_vgtuw_and,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) & ((VuV.uw[i/4] > VvV.uw[i/4]) ? 0xF : 0)); } },
DEF_HELPER_5(V6_vgtuw_and, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtuw_and */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtuw_and(SLOT_WRAP(gen_helper_V6_vgtuw_and(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) & ((VuV.uw[i/4] > VvV.uw[i/4]) ? 0xF : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtuw_and */
},
void HELPER(V6_vgtuw_and)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) & ((VuV.uw[i/4] > VvV.uw[i/4]) ? 0xF : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vgtuw_or,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) | ((VuV.uw[i/4] > VvV.uw[i/4]) ? 0xF : 0)); } },
DEF_HELPER_5(V6_vgtuw_or, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtuw_or */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtuw_or(SLOT_WRAP(gen_helper_V6_vgtuw_or(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) | ((VuV.uw[i/4] > VvV.uw[i/4]) ? 0xF : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtuw_or */
},
void HELPER(V6_vgtuw_or)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) | ((VuV.uw[i/4] > VvV.uw[i/4]) ? 0xF : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vgtuw_xor,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) ^ ((VuV.uw[i/4] > VvV.uw[i/4]) ? 0xF : 0)); } },
DEF_HELPER_5(V6_vgtuw_xor, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtuw_xor */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtuw_xor(SLOT_WRAP(gen_helper_V6_vgtuw_xor(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) ^ ((VuV.uw[i/4] > VvV.uw[i/4]) ? 0xF : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtuw_xor */
},
void HELPER(V6_vgtuw_xor)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 4) { fSETQBITS(QxV,4,0xF,i,fGETQBITS(QxV,4,0xF,i) ^ ((VuV.uw[i/4] > VvV.uw[i/4]) ? 0xF : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vgtuh,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QdV,2,0x3,i, ((VuV.uh[i/2] > VvV.uh[i/2]) ? 0x3 : 0)); } },
DEF_HELPER_5(V6_vgtuh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtuh */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtuh(SLOT_WRAP(gen_helper_V6_vgtuh(cpu_env, QdV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QdV,2,0x3,i, ((VuV.uh[i/2] > VvV.uh[i/2]) ? 0x3 : 0)); } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtuh */
},
void HELPER(V6_vgtuh)(CPUHexagonState *env, void *QdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QdV,2,0x3,i, ((VuV.uh[i/2] > VvV.uh[i/2]) ? 0x3 : 0)); } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_vgtuh_and,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) & ((VuV.uh[i/2] > VvV.uh[i/2]) ? 0x3 : 0)); } },
DEF_HELPER_5(V6_vgtuh_and, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtuh_and */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtuh_and(SLOT_WRAP(gen_helper_V6_vgtuh_and(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) & ((VuV.uh[i/2] > VvV.uh[i/2]) ? 0x3 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtuh_and */
},
void HELPER(V6_vgtuh_and)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) & ((VuV.uh[i/2] > VvV.uh[i/2]) ? 0x3 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vgtuh_or,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) | ((VuV.uh[i/2] > VvV.uh[i/2]) ? 0x3 : 0)); } },
DEF_HELPER_5(V6_vgtuh_or, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtuh_or */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtuh_or(SLOT_WRAP(gen_helper_V6_vgtuh_or(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) | ((VuV.uh[i/2] > VvV.uh[i/2]) ? 0x3 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtuh_or */
},
void HELPER(V6_vgtuh_or)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) | ((VuV.uh[i/2] > VvV.uh[i/2]) ? 0x3 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vgtuh_xor,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) ^ ((VuV.uh[i/2] > VvV.uh[i/2]) ? 0x3 : 0)); } },
DEF_HELPER_5(V6_vgtuh_xor, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtuh_xor */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtuh_xor(SLOT_WRAP(gen_helper_V6_vgtuh_xor(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) ^ ((VuV.uh[i/2] > VvV.uh[i/2]) ? 0x3 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtuh_xor */
},
void HELPER(V6_vgtuh_xor)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 2) { fSETQBITS(QxV,2,0x3,i,fGETQBITS(QxV,2,0x3,i) ^ ((VuV.uh[i/2] > VvV.uh[i/2]) ? 0x3 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vgtub,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QdV,1,0x1,i, ((VuV.ub[i/1] > VvV.ub[i/1]) ? 0x1 : 0)); } },
DEF_HELPER_5(V6_vgtub, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtub */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtub(SLOT_WRAP(gen_helper_V6_vgtub(cpu_env, QdV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QdV,1,0x1,i, ((VuV.ub[i/1] > VvV.ub[i/1]) ? 0x1 : 0)); } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtub */
},
void HELPER(V6_vgtub)(CPUHexagonState *env, void *QdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QdV,1,0x1,i, ((VuV.ub[i/1] > VvV.ub[i/1]) ? 0x1 : 0)); } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_vgtub_and,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) & ((VuV.ub[i/1] > VvV.ub[i/1]) ? 0x1 : 0)); } },
DEF_HELPER_5(V6_vgtub_and, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtub_and */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtub_and(SLOT_WRAP(gen_helper_V6_vgtub_and(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) & ((VuV.ub[i/1] > VvV.ub[i/1]) ? 0x1 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtub_and */
},
void HELPER(V6_vgtub_and)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) & ((VuV.ub[i/1] > VvV.ub[i/1]) ? 0x1 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vgtub_or,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) | ((VuV.ub[i/1] > VvV.ub[i/1]) ? 0x1 : 0)); } },
DEF_HELPER_5(V6_vgtub_or, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtub_or */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtub_or(SLOT_WRAP(gen_helper_V6_vgtub_or(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) | ((VuV.ub[i/1] > VvV.ub[i/1]) ? 0x1 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtub_or */
},
void HELPER(V6_vgtub_or)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) | ((VuV.ub[i/1] > VvV.ub[i/1]) ? 0x1 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_vgtub_xor,{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) ^ ((VuV.ub[i/1] > VvV.ub[i/1]) ? 0x1 : 0)); } },
DEF_HELPER_5(V6_vgtub_xor, void, env, ptr, ptr, ptr, i32),
{
/* V6_vgtub_xor */
DECL_EXT_QREG(QxV, QxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_QREG(QxN,QxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgtub_xor(SLOT_WRAP(gen_helper_V6_vgtub_xor(cpu_env, QxV, VuV, VvV, slot));,
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) ^ ((VuV.ub[i/1] > VvV.ub[i/1]) ? 0x1 : 0)); } })
WRITE_EXT_QREG(QxN,QxV,EXT_DFL);
FREE_EXT_QREG(QxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vgtub_xor */
},
void HELPER(V6_vgtub_xor)(CPUHexagonState *env, void *QxV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* QxV is *(mmvector_t*)(QxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ for(fHIDE(int) i = 0; i < fVBYTES(); i += 1) { fSETQBITS(QxV,1,0x1,i,fGETQBITS(QxV,1,0x1,i) ^ ((VuV.ub[i/1] > VvV.ub[i/1]) ? 0x1 : 0)); } }
/* QxV is *(mmvector_t*)QxV_void */
})
DEF_QEMU(V6_pred_scalar2,{ fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) fSETQBIT(QdV,i,(i < (RtV & (fVBYTES()-1))) ? 1 : 0); },
DEF_HELPER_4(V6_pred_scalar2, void, env, ptr, s32, i32),
{
/* V6_pred_scalar2 */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_pred_scalar2(SLOT_WRAP(gen_helper_V6_pred_scalar2(cpu_env, QdV, RtV, slot));,
{ fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) fSETQBIT(QdV,i,(i < (RtV & (fVBYTES()-1))) ? 1 : 0); })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_REG_t(RtV);
/* V6_pred_scalar2 */
},
void HELPER(V6_pred_scalar2)(CPUHexagonState *env, void *QdV_void, int32_t RtV, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
{ fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) fSETQBIT(QdV,i,(i < (RtV & (fVBYTES()-1))) ? 1 : 0); }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_pred_scalar2v2,{ fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) fSETQBIT(QdV,i,(i <= ((RtV-1) & (fVBYTES()-1))) ? 1 : 0); },
DEF_HELPER_4(V6_pred_scalar2v2, void, env, ptr, s32, i32),
{
/* V6_pred_scalar2v2 */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_pred_scalar2v2(SLOT_WRAP(gen_helper_V6_pred_scalar2v2(cpu_env, QdV, RtV, slot));,
{ fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) fSETQBIT(QdV,i,(i <= ((RtV-1) & (fVBYTES()-1))) ? 1 : 0); })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_REG_t(RtV);
/* V6_pred_scalar2v2 */
},
void HELPER(V6_pred_scalar2v2)(CPUHexagonState *env, void *QdV_void, int32_t RtV, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
{ fHIDE(int i;) for(i = 0; i < fVBYTES(); i++) fSETQBIT(QdV,i,(i <= ((RtV-1) & (fVBYTES()-1))) ? 1 : 0); }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_shuffeqw,{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i, (i & 2) ? fGETQBIT(QsV,i-2) : fGETQBIT(QtV,i) ) ; } },
DEF_HELPER_5(V6_shuffeqw, void, env, ptr, ptr, ptr, i32),
{
/* V6_shuffeqw */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_QREG(QsV, QsN, 1, 0);
DECL_EXT_QREG(QtV, QtN, 2, 0);
READ_EXT_QREG(QsN,QsV,0);
READ_EXT_QREG(QtN,QtV,0);
fWRAP_V6_shuffeqw(SLOT_WRAP(gen_helper_V6_shuffeqw(cpu_env, QdV, QsV, QtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i, (i & 2) ? fGETQBIT(QsV,i-2) : fGETQBIT(QtV,i) ) ; } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_QREG(QsV);
FREE_EXT_QREG(QtV);
/* V6_shuffeqw */
},
void HELPER(V6_shuffeqw)(CPUHexagonState *env, void *QdV_void, void *QsV_void, void *QtV_void, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* QsV is *(mmvector_t*)(QsV_void) */
/* QtV is *(mmvector_t*)(QtV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i, (i & 2) ? fGETQBIT(QsV,i-2) : fGETQBIT(QtV,i) ) ; } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_shuffeqh,{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i, (i & 1) ? fGETQBIT(QsV,i-1) : fGETQBIT(QtV,i) ) ; } },
DEF_HELPER_5(V6_shuffeqh, void, env, ptr, ptr, ptr, i32),
{
/* V6_shuffeqh */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_QREG(QsV, QsN, 1, 0);
DECL_EXT_QREG(QtV, QtN, 2, 0);
READ_EXT_QREG(QsN,QsV,0);
READ_EXT_QREG(QtN,QtV,0);
fWRAP_V6_shuffeqh(SLOT_WRAP(gen_helper_V6_shuffeqh(cpu_env, QdV, QsV, QtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i, (i & 1) ? fGETQBIT(QsV,i-1) : fGETQBIT(QtV,i) ) ; } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_QREG(QsV);
FREE_EXT_QREG(QtV);
/* V6_shuffeqh */
},
void HELPER(V6_shuffeqh)(CPUHexagonState *env, void *QdV_void, void *QsV_void, void *QtV_void, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* QsV is *(mmvector_t*)(QsV_void) */
/* QtV is *(mmvector_t*)(QtV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i, (i & 1) ? fGETQBIT(QsV,i-1) : fGETQBIT(QtV,i) ) ; } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_pred_or,{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,fGETQBIT(QsV,i) || fGETQBIT(QtV,i) ) ; } },
DEF_HELPER_5(V6_pred_or, void, env, ptr, ptr, ptr, i32),
{
/* V6_pred_or */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_QREG(QsV, QsN, 1, 0);
DECL_EXT_QREG(QtV, QtN, 2, 0);
READ_EXT_QREG(QsN,QsV,0);
READ_EXT_QREG(QtN,QtV,0);
fWRAP_V6_pred_or(SLOT_WRAP(gen_helper_V6_pred_or(cpu_env, QdV, QsV, QtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,fGETQBIT(QsV,i) || fGETQBIT(QtV,i) ) ; } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_QREG(QsV);
FREE_EXT_QREG(QtV);
/* V6_pred_or */
},
void HELPER(V6_pred_or)(CPUHexagonState *env, void *QdV_void, void *QsV_void, void *QtV_void, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* QsV is *(mmvector_t*)(QsV_void) */
/* QtV is *(mmvector_t*)(QtV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,fGETQBIT(QsV,i) || fGETQBIT(QtV,i) ) ; } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_pred_and,{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,fGETQBIT(QsV,i) && fGETQBIT(QtV,i) ) ; } },
DEF_HELPER_5(V6_pred_and, void, env, ptr, ptr, ptr, i32),
{
/* V6_pred_and */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_QREG(QsV, QsN, 1, 0);
DECL_EXT_QREG(QtV, QtN, 2, 0);
READ_EXT_QREG(QsN,QsV,0);
READ_EXT_QREG(QtN,QtV,0);
fWRAP_V6_pred_and(SLOT_WRAP(gen_helper_V6_pred_and(cpu_env, QdV, QsV, QtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,fGETQBIT(QsV,i) && fGETQBIT(QtV,i) ) ; } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_QREG(QsV);
FREE_EXT_QREG(QtV);
/* V6_pred_and */
},
void HELPER(V6_pred_and)(CPUHexagonState *env, void *QdV_void, void *QsV_void, void *QtV_void, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* QsV is *(mmvector_t*)(QsV_void) */
/* QtV is *(mmvector_t*)(QtV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,fGETQBIT(QsV,i) && fGETQBIT(QtV,i) ) ; } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_pred_xor,{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,fGETQBIT(QsV,i) ^ fGETQBIT(QtV,i) ) ; } },
DEF_HELPER_5(V6_pred_xor, void, env, ptr, ptr, ptr, i32),
{
/* V6_pred_xor */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_QREG(QsV, QsN, 1, 0);
DECL_EXT_QREG(QtV, QtN, 2, 0);
READ_EXT_QREG(QsN,QsV,0);
READ_EXT_QREG(QtN,QtV,0);
fWRAP_V6_pred_xor(SLOT_WRAP(gen_helper_V6_pred_xor(cpu_env, QdV, QsV, QtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,fGETQBIT(QsV,i) ^ fGETQBIT(QtV,i) ) ; } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_QREG(QsV);
FREE_EXT_QREG(QtV);
/* V6_pred_xor */
},
void HELPER(V6_pred_xor)(CPUHexagonState *env, void *QdV_void, void *QsV_void, void *QtV_void, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* QsV is *(mmvector_t*)(QsV_void) */
/* QtV is *(mmvector_t*)(QtV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,fGETQBIT(QsV,i) ^ fGETQBIT(QtV,i) ) ; } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_pred_or_n,{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,fGETQBIT(QsV,i) || !fGETQBIT(QtV,i) ) ; } },
DEF_HELPER_5(V6_pred_or_n, void, env, ptr, ptr, ptr, i32),
{
/* V6_pred_or_n */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_QREG(QsV, QsN, 1, 0);
DECL_EXT_QREG(QtV, QtN, 2, 0);
READ_EXT_QREG(QsN,QsV,0);
READ_EXT_QREG(QtN,QtV,0);
fWRAP_V6_pred_or_n(SLOT_WRAP(gen_helper_V6_pred_or_n(cpu_env, QdV, QsV, QtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,fGETQBIT(QsV,i) || !fGETQBIT(QtV,i) ) ; } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_QREG(QsV);
FREE_EXT_QREG(QtV);
/* V6_pred_or_n */
},
void HELPER(V6_pred_or_n)(CPUHexagonState *env, void *QdV_void, void *QsV_void, void *QtV_void, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* QsV is *(mmvector_t*)(QsV_void) */
/* QtV is *(mmvector_t*)(QtV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,fGETQBIT(QsV,i) || !fGETQBIT(QtV,i) ) ; } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_pred_and_n,{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,fGETQBIT(QsV,i) && !fGETQBIT(QtV,i) ) ; } },
DEF_HELPER_5(V6_pred_and_n, void, env, ptr, ptr, ptr, i32),
{
/* V6_pred_and_n */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_QREG(QsV, QsN, 1, 0);
DECL_EXT_QREG(QtV, QtN, 2, 0);
READ_EXT_QREG(QsN,QsV,0);
READ_EXT_QREG(QtN,QtV,0);
fWRAP_V6_pred_and_n(SLOT_WRAP(gen_helper_V6_pred_and_n(cpu_env, QdV, QsV, QtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,fGETQBIT(QsV,i) && !fGETQBIT(QtV,i) ) ; } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_QREG(QsV);
FREE_EXT_QREG(QtV);
/* V6_pred_and_n */
},
void HELPER(V6_pred_and_n)(CPUHexagonState *env, void *QdV_void, void *QsV_void, void *QtV_void, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* QsV is *(mmvector_t*)(QsV_void) */
/* QtV is *(mmvector_t*)(QtV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,fGETQBIT(QsV,i) && !fGETQBIT(QtV,i) ) ; } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_pred_not,{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,!fGETQBIT(QsV,i) ) ; } },
DEF_HELPER_4(V6_pred_not, void, env, ptr, ptr, i32),
{
/* V6_pred_not */
DECL_EXT_QREG(QdV, QdN, 0, 0);
DECL_EXT_QREG(QsV, QsN, 1, 0);
READ_EXT_QREG(QsN,QsV,0);
fWRAP_V6_pred_not(SLOT_WRAP(gen_helper_V6_pred_not(cpu_env, QdV, QsV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,!fGETQBIT(QsV,i) ) ; } })
WRITE_EXT_QREG(QdN,QdV,EXT_DFL);
FREE_EXT_QREG(QdV);
FREE_EXT_QREG(QsV);
/* V6_pred_not */
},
void HELPER(V6_pred_not)(CPUHexagonState *env, void *QdV_void, void *QsV_void, uint32_t slot)
{
/* QdV is *(mmvector_t*)QdV_void */
/* QsV is *(mmvector_t*)(QsV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fSETQBIT(QdV,i,!fGETQBIT(QsV,i) ) ; } }
/* QdV is *(mmvector_t*)QdV_void */
})
DEF_QEMU(V6_vcmov,{ if (fLSBOLD(PsV)) { fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = VuV.ub[i]; } } else {CANCEL;} },
DEF_HELPER_5(V6_vcmov, void, env, ptr, s32, ptr, i32),
{
/* V6_vcmov */
DECL_PREG_s(TCGv, PsV, PsN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
READ_PREG_s(PsV, PsN);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vcmov(SLOT_WRAP(gen_helper_V6_vcmov(cpu_env, VdV, PsV, VuV, slot));,
{ if (fLSBOLD(PsV)) { fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = VuV.ub[i]; } } else {CANCEL;} })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_REG_s(PsV);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vcmov */
},
void HELPER(V6_vcmov)(CPUHexagonState *env, void *VdV_void, int32_t PsV, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ if (fLSBOLD(PsV)) { fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = VuV.ub[i]; } } else {CANCEL;} }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vncmov,{ if (fLSBOLDNOT(PsV)) { fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = VuV.ub[i]; } } else {CANCEL;} },
DEF_HELPER_5(V6_vncmov, void, env, ptr, s32, ptr, i32),
{
/* V6_vncmov */
DECL_PREG_s(TCGv, PsV, PsN, 0, 0);
DECL_EXT_VREG(VdV, VdN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
READ_PREG_s(PsV, PsN);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vncmov(SLOT_WRAP(gen_helper_V6_vncmov(cpu_env, VdV, PsV, VuV, slot));,
{ if (fLSBOLDNOT(PsV)) { fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = VuV.ub[i]; } } else {CANCEL;} })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_REG_s(PsV);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vncmov */
},
void HELPER(V6_vncmov)(CPUHexagonState *env, void *VdV_void, int32_t PsV, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ if (fLSBOLDNOT(PsV)) { fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = VuV.ub[i]; } } else {CANCEL;} }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vccombine,{ if (fLSBOLD(PsV)) { fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = VvV.ub[i]; VddV.v[1].ub[i] = VuV.ub[i]; } } else {CANCEL;} },
DEF_HELPER_6(V6_vccombine, void, env, ptr, s32, ptr, ptr, i32),
{
/* V6_vccombine */
DECL_PREG_s(TCGv, PsV, PsN, 0, 0);
DECL_EXT_VREG_PAIR(VddV, VddN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
DECL_EXT_VREG(VvV, VvN, 3, 0);
READ_PREG_s(PsV, PsN);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vccombine(SLOT_WRAP(gen_helper_V6_vccombine(cpu_env, VddV, PsV, VuV, VvV, slot));,
{ if (fLSBOLD(PsV)) { fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = VvV.ub[i]; VddV.v[1].ub[i] = VuV.ub[i]; } } else {CANCEL;} })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_REG_s(PsV);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vccombine */
},
void HELPER(V6_vccombine)(CPUHexagonState *env, void *VddV_void, int32_t PsV, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ if (fLSBOLD(PsV)) { fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = VvV.ub[i]; VddV.v[1].ub[i] = VuV.ub[i]; } } else {CANCEL;} }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vnccombine,{ if (fLSBOLDNOT(PsV)) { fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = VvV.ub[i]; VddV.v[1].ub[i] = VuV.ub[i]; } } else {CANCEL;} },
DEF_HELPER_6(V6_vnccombine, void, env, ptr, s32, ptr, ptr, i32),
{
/* V6_vnccombine */
DECL_PREG_s(TCGv, PsV, PsN, 0, 0);
DECL_EXT_VREG_PAIR(VddV, VddN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
DECL_EXT_VREG(VvV, VvN, 3, 0);
READ_PREG_s(PsV, PsN);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vnccombine(SLOT_WRAP(gen_helper_V6_vnccombine(cpu_env, VddV, PsV, VuV, VvV, slot));,
{ if (fLSBOLDNOT(PsV)) { fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = VvV.ub[i]; VddV.v[1].ub[i] = VuV.ub[i]; } } else {CANCEL;} })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_REG_s(PsV);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vnccombine */
},
void HELPER(V6_vnccombine)(CPUHexagonState *env, void *VddV_void, int32_t PsV, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ if (fLSBOLDNOT(PsV)) { fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = VvV.ub[i]; VddV.v[1].ub[i] = VuV.ub[i]; } } else {CANCEL;} }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmux,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fGETQBIT(QtV,i) ? VuV.ub[i] : VvV.ub[i] ; } },
DEF_HELPER_6(V6_vmux, void, env, ptr, ptr, ptr, ptr, i32),
{
/* V6_vmux */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_QREG(QtV, QtN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
DECL_EXT_VREG(VvV, VvN, 3, 0);
READ_EXT_QREG(QtN,QtV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmux(SLOT_WRAP(gen_helper_V6_vmux(cpu_env, VdV, QtV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fGETQBIT(QtV,i) ? VuV.ub[i] : VvV.ub[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_QREG(QtV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmux */
},
void HELPER(V6_vmux)(CPUHexagonState *env, void *VdV_void, void *QtV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* QtV is *(mmvector_t*)(QtV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = fGETQBIT(QtV,i) ? VuV.ub[i] : VvV.ub[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vswap,{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = fGETQBIT(QtV,i) ? VuV.ub[i] : VvV.ub[i]; VddV.v[1].ub[i] = !fGETQBIT(QtV,i) ? VuV.ub[i] : VvV.ub[i] ; } },
DEF_HELPER_6(V6_vswap, void, env, ptr, ptr, ptr, ptr, i32),
{
/* V6_vswap */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_QREG(QtV, QtN, 1, 0);
DECL_EXT_VREG(VuV, VuN, 2, 0);
DECL_EXT_VREG(VvV, VvN, 3, 0);
READ_EXT_QREG(QtN,QtV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vswap(SLOT_WRAP(gen_helper_V6_vswap(cpu_env, VddV, QtV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = fGETQBIT(QtV,i) ? VuV.ub[i] : VvV.ub[i]; VddV.v[1].ub[i] = !fGETQBIT(QtV,i) ? VuV.ub[i] : VvV.ub[i] ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_QREG(QtV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vswap */
},
void HELPER(V6_vswap)(CPUHexagonState *env, void *VddV_void, void *QtV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* QtV is *(mmvector_t*)(QtV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = fGETQBIT(QtV,i) ? VuV.ub[i] : VvV.ub[i]; VddV.v[1].ub[i] = !fGETQBIT(QtV,i) ? VuV.ub[i] : VvV.ub[i] ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmaxb,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = (VuV.b[i] > VvV.b[i]) ? VuV.b[i] : VvV.b[i] ; } },
DEF_HELPER_5(V6_vmaxb, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmaxb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmaxb(SLOT_WRAP(gen_helper_V6_vmaxb(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = (VuV.b[i] > VvV.b[i]) ? VuV.b[i] : VvV.b[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmaxb */
},
void HELPER(V6_vmaxb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = (VuV.b[i] > VvV.b[i]) ? VuV.b[i] : VvV.b[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vminb,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = (VuV.b[i] < VvV.b[i]) ? VuV.b[i] : VvV.b[i] ; } },
DEF_HELPER_5(V6_vminb, void, env, ptr, ptr, ptr, i32),
{
/* V6_vminb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vminb(SLOT_WRAP(gen_helper_V6_vminb(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = (VuV.b[i] < VvV.b[i]) ? VuV.b[i] : VvV.b[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vminb */
},
void HELPER(V6_vminb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.b[i] = (VuV.b[i] < VvV.b[i]) ? VuV.b[i] : VvV.b[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmaxub,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = (VuV.ub[i] > VvV.ub[i]) ? VuV.ub[i] : VvV.ub[i] ; } },
DEF_HELPER_5(V6_vmaxub, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmaxub */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmaxub(SLOT_WRAP(gen_helper_V6_vmaxub(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = (VuV.ub[i] > VvV.ub[i]) ? VuV.ub[i] : VvV.ub[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmaxub */
},
void HELPER(V6_vmaxub)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = (VuV.ub[i] > VvV.ub[i]) ? VuV.ub[i] : VvV.ub[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vminub,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = (VuV.ub[i] < VvV.ub[i]) ? VuV.ub[i] : VvV.ub[i] ; } },
DEF_HELPER_5(V6_vminub, void, env, ptr, ptr, ptr, i32),
{
/* V6_vminub */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vminub(SLOT_WRAP(gen_helper_V6_vminub(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = (VuV.ub[i] < VvV.ub[i]) ? VuV.ub[i] : VvV.ub[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vminub */
},
void HELPER(V6_vminub)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = (VuV.ub[i] < VvV.ub[i]) ? VuV.ub[i] : VvV.ub[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmaxuh,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = (VuV.uh[i] > VvV.uh[i]) ? VuV.uh[i] : VvV.uh[i] ; } },
DEF_HELPER_5(V6_vmaxuh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmaxuh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmaxuh(SLOT_WRAP(gen_helper_V6_vmaxuh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = (VuV.uh[i] > VvV.uh[i]) ? VuV.uh[i] : VvV.uh[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmaxuh */
},
void HELPER(V6_vmaxuh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = (VuV.uh[i] > VvV.uh[i]) ? VuV.uh[i] : VvV.uh[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vminuh,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = (VuV.uh[i] < VvV.uh[i]) ? VuV.uh[i] : VvV.uh[i] ; } },
DEF_HELPER_5(V6_vminuh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vminuh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vminuh(SLOT_WRAP(gen_helper_V6_vminuh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = (VuV.uh[i] < VvV.uh[i]) ? VuV.uh[i] : VvV.uh[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vminuh */
},
void HELPER(V6_vminuh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = (VuV.uh[i] < VvV.uh[i]) ? VuV.uh[i] : VvV.uh[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmaxh,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = (VuV.h[i] > VvV.h[i]) ? VuV.h[i] : VvV.h[i] ; } },
DEF_HELPER_5(V6_vmaxh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmaxh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmaxh(SLOT_WRAP(gen_helper_V6_vmaxh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = (VuV.h[i] > VvV.h[i]) ? VuV.h[i] : VvV.h[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmaxh */
},
void HELPER(V6_vmaxh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = (VuV.h[i] > VvV.h[i]) ? VuV.h[i] : VvV.h[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vminh,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = (VuV.h[i] < VvV.h[i]) ? VuV.h[i] : VvV.h[i] ; } },
DEF_HELPER_5(V6_vminh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vminh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vminh(SLOT_WRAP(gen_helper_V6_vminh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = (VuV.h[i] < VvV.h[i]) ? VuV.h[i] : VvV.h[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vminh */
},
void HELPER(V6_vminh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = (VuV.h[i] < VvV.h[i]) ? VuV.h[i] : VvV.h[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmaxw,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = (VuV.w[i] > VvV.w[i]) ? VuV.w[i] : VvV.w[i] ; } },
DEF_HELPER_5(V6_vmaxw, void, env, ptr, ptr, ptr, i32),
{
/* V6_vmaxw */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vmaxw(SLOT_WRAP(gen_helper_V6_vmaxw(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = (VuV.w[i] > VvV.w[i]) ? VuV.w[i] : VvV.w[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vmaxw */
},
void HELPER(V6_vmaxw)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = (VuV.w[i] > VvV.w[i]) ? VuV.w[i] : VvV.w[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vminw,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = (VuV.w[i] < VvV.w[i]) ? VuV.w[i] : VvV.w[i] ; } },
DEF_HELPER_5(V6_vminw, void, env, ptr, ptr, ptr, i32),
{
/* V6_vminw */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vminw(SLOT_WRAP(gen_helper_V6_vminw(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = (VuV.w[i] < VvV.w[i]) ? VuV.w[i] : VvV.w[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vminw */
},
void HELPER(V6_vminw)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = (VuV.w[i] < VvV.w[i]) ? VuV.w[i] : VvV.w[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vsathub,{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fVSATUB(VvV.h[i])); fSETBYTE(1, VdV.uh[i], fVSATUB(VuV.h[i])) ; } },
DEF_HELPER_5(V6_vsathub, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsathub */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsathub(SLOT_WRAP(gen_helper_V6_vsathub(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fVSATUB(VvV.h[i])); fSETBYTE(1, VdV.uh[i], fVSATUB(VuV.h[i])) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsathub */
},
void HELPER(V6_vsathub)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fVSATUB(VvV.h[i])); fSETBYTE(1, VdV.uh[i], fVSATUB(VuV.h[i])) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vsatwh,{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.w[i], fVSATH(VvV.w[i])); fSETHALF(1, VdV.w[i], fVSATH(VuV.w[i])) ; } },
DEF_HELPER_5(V6_vsatwh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsatwh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsatwh(SLOT_WRAP(gen_helper_V6_vsatwh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.w[i], fVSATH(VvV.w[i])); fSETHALF(1, VdV.w[i], fVSATH(VuV.w[i])) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsatwh */
},
void HELPER(V6_vsatwh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.w[i], fVSATH(VvV.w[i])); fSETHALF(1, VdV.w[i], fVSATH(VuV.w[i])) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vsatuwuh,{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.w[i], fVSATUH(VvV.uw[i])); fSETHALF(1, VdV.w[i], fVSATUH(VuV.uw[i])) ; } },
DEF_HELPER_5(V6_vsatuwuh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vsatuwuh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vsatuwuh(SLOT_WRAP(gen_helper_V6_vsatuwuh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.w[i], fVSATUH(VvV.uw[i])); fSETHALF(1, VdV.w[i], fVSATUH(VuV.uw[i])) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vsatuwuh */
},
void HELPER(V6_vsatuwuh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.w[i], fVSATUH(VvV.uw[i])); fSETHALF(1, VdV.w[i], fVSATUH(VuV.uw[i])) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vshuffeb,{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fGETUBYTE(0, VvV.uh[i])); fSETBYTE(1, VdV.uh[i], fGETUBYTE(0, VuV.uh[i])) ; } },
DEF_HELPER_5(V6_vshuffeb, void, env, ptr, ptr, ptr, i32),
{
/* V6_vshuffeb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vshuffeb(SLOT_WRAP(gen_helper_V6_vshuffeb(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fGETUBYTE(0, VvV.uh[i])); fSETBYTE(1, VdV.uh[i], fGETUBYTE(0, VuV.uh[i])) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vshuffeb */
},
void HELPER(V6_vshuffeb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fGETUBYTE(0, VvV.uh[i])); fSETBYTE(1, VdV.uh[i], fGETUBYTE(0, VuV.uh[i])) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vshuffob,{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fGETUBYTE(1, VvV.uh[i])); fSETBYTE(1, VdV.uh[i], fGETUBYTE(1, VuV.uh[i])) ; } },
DEF_HELPER_5(V6_vshuffob, void, env, ptr, ptr, ptr, i32),
{
/* V6_vshuffob */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vshuffob(SLOT_WRAP(gen_helper_V6_vshuffob(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fGETUBYTE(1, VvV.uh[i])); fSETBYTE(1, VdV.uh[i], fGETUBYTE(1, VuV.uh[i])) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vshuffob */
},
void HELPER(V6_vshuffob)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], fGETUBYTE(1, VvV.uh[i])); fSETBYTE(1, VdV.uh[i], fGETUBYTE(1, VuV.uh[i])) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vshufeh,{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], fGETUHALF(0, VvV.uw[i])); fSETHALF(1, VdV.uw[i], fGETUHALF(0, VuV.uw[i])) ; } },
DEF_HELPER_5(V6_vshufeh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vshufeh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vshufeh(SLOT_WRAP(gen_helper_V6_vshufeh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], fGETUHALF(0, VvV.uw[i])); fSETHALF(1, VdV.uw[i], fGETUHALF(0, VuV.uw[i])) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vshufeh */
},
void HELPER(V6_vshufeh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], fGETUHALF(0, VvV.uw[i])); fSETHALF(1, VdV.uw[i], fGETUHALF(0, VuV.uw[i])) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vshufoh,{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], fGETUHALF(1, VvV.uw[i])); fSETHALF(1, VdV.uw[i], fGETUHALF(1, VuV.uw[i])) ; } },
DEF_HELPER_5(V6_vshufoh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vshufoh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vshufoh(SLOT_WRAP(gen_helper_V6_vshufoh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], fGETUHALF(1, VvV.uw[i])); fSETHALF(1, VdV.uw[i], fGETUHALF(1, VuV.uw[i])) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vshufoh */
},
void HELPER(V6_vshufoh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], fGETUHALF(1, VvV.uw[i])); fSETHALF(1, VdV.uw[i], fGETUHALF(1, VuV.uw[i])) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vshuff,{ fHIDE(int offset;) for (offset=1; offset<fVBYTES(); offset<<=1) { if ( RtV & offset) { fHIDE(int k;) fVFOREACH(8, k) { if (!( k & offset)) { fSWAPB(VyV.ub[k], VxV.ub[k+offset]); } } } } },
DEF_HELPER_5(V6_vshuff, void, env, ptr, ptr, s32, i32),
{
/* V6_vshuff */
DECL_EXT_VREG(VyV, VyN, 0, 0);
DECL_EXT_VREG(VxV, VxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VyN,VyV,0);
READ_EXT_VREG(VxN,VxV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vshuff(SLOT_WRAP(gen_helper_V6_vshuff(cpu_env, VyV, VxV, RtV, slot));,
{ fHIDE(int offset;) for (offset=1; offset<fVBYTES(); offset<<=1) { if ( RtV & offset) { fHIDE(int k;) fVFOREACH(8, k) { if (!( k & offset)) { fSWAPB(VyV.ub[k], VxV.ub[k+offset]); } } } } })
WRITE_EXT_VREG(VyN,VyV,EXT_DFL);
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VyV);
FREE_EXT_VREG(VxV);
FREE_REG_t(RtV);
/* V6_vshuff */
},
void HELPER(V6_vshuff)(CPUHexagonState *env, void *VyV_void, void *VxV_void, int32_t RtV, uint32_t slot)
{
/* VyV is *(mmvector_t*)(VyV_void) */
/* VxV is *(mmvector_t*)(VxV_void) */
{ fHIDE(int offset;) for (offset=1; offset<fVBYTES(); offset<<=1) { if ( RtV & offset) { fHIDE(int k;) fVFOREACH(8, k) { if (!( k & offset)) { fSWAPB(VyV.ub[k], VxV.ub[k+offset]); } } } } }
/* VyV is *(mmvector_t*)VyV_void */
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vshuffvdd,{ fHIDE(int offset;) VddV.v[0] = VvV; VddV.v[1] = VuV; for (offset=1; offset<fVBYTES(); offset<<=1) { if ( RtV & offset) { fHIDE(int k;) fVFOREACH(8, k) { if (!( k & offset)) { fSWAPB(VddV.v[1].ub[k], VddV.v[0].ub[k+offset]); } } } } },
DEF_HELPER_6(V6_vshuffvdd, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vshuffvdd */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vshuffvdd(SLOT_WRAP(gen_helper_V6_vshuffvdd(cpu_env, VddV, VuV, VvV, RtV, slot));,
{ fHIDE(int offset;) VddV.v[0] = VvV; VddV.v[1] = VuV; for (offset=1; offset<fVBYTES(); offset<<=1) { if ( RtV & offset) { fHIDE(int k;) fVFOREACH(8, k) { if (!( k & offset)) { fSWAPB(VddV.v[1].ub[k], VddV.v[0].ub[k+offset]); } } } } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vshuffvdd */
},
void HELPER(V6_vshuffvdd)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int offset;) VddV.v[0] = VvV; VddV.v[1] = VuV; for (offset=1; offset<fVBYTES(); offset<<=1) { if ( RtV & offset) { fHIDE(int k;) fVFOREACH(8, k) { if (!( k & offset)) { fSWAPB(VddV.v[1].ub[k], VddV.v[0].ub[k+offset]); } } } } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vdeal,{ fHIDE(int offset;) for (offset=fVBYTES()>>1; offset>0; offset>>=1) { if ( RtV & offset) { fHIDE(int k;) fVFOREACH(8, k) { if (!( k & offset)) { fSWAPB(VyV.ub[k], VxV.ub[k+offset]); } } } } },
DEF_HELPER_5(V6_vdeal, void, env, ptr, ptr, s32, i32),
{
/* V6_vdeal */
DECL_EXT_VREG(VyV, VyN, 0, 0);
DECL_EXT_VREG(VxV, VxN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VyN,VyV,0);
READ_EXT_VREG(VxN,VxV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdeal(SLOT_WRAP(gen_helper_V6_vdeal(cpu_env, VyV, VxV, RtV, slot));,
{ fHIDE(int offset;) for (offset=fVBYTES()>>1; offset>0; offset>>=1) { if ( RtV & offset) { fHIDE(int k;) fVFOREACH(8, k) { if (!( k & offset)) { fSWAPB(VyV.ub[k], VxV.ub[k+offset]); } } } } })
WRITE_EXT_VREG(VyN,VyV,EXT_DFL);
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VyV);
FREE_EXT_VREG(VxV);
FREE_REG_t(RtV);
/* V6_vdeal */
},
void HELPER(V6_vdeal)(CPUHexagonState *env, void *VyV_void, void *VxV_void, int32_t RtV, uint32_t slot)
{
/* VyV is *(mmvector_t*)(VyV_void) */
/* VxV is *(mmvector_t*)(VxV_void) */
{ fHIDE(int offset;) for (offset=fVBYTES()>>1; offset>0; offset>>=1) { if ( RtV & offset) { fHIDE(int k;) fVFOREACH(8, k) { if (!( k & offset)) { fSWAPB(VyV.ub[k], VxV.ub[k+offset]); } } } } }
/* VyV is *(mmvector_t*)VyV_void */
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vdealvdd,{ fHIDE(int offset;) VddV.v[0] = VvV; VddV.v[1] = VuV; for (offset=fVBYTES()>>1; offset>0; offset>>=1) { if ( RtV & offset) { fHIDE(int k;) fVFOREACH(8, k) { if (!( k & offset)) { fSWAPB(VddV.v[1].ub[k], VddV.v[0].ub[k+offset]); } } } } },
DEF_HELPER_6(V6_vdealvdd, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vdealvdd */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vdealvdd(SLOT_WRAP(gen_helper_V6_vdealvdd(cpu_env, VddV, VuV, VvV, RtV, slot));,
{ fHIDE(int offset;) VddV.v[0] = VvV; VddV.v[1] = VuV; for (offset=fVBYTES()>>1; offset>0; offset>>=1) { if ( RtV & offset) { fHIDE(int k;) fVFOREACH(8, k) { if (!( k & offset)) { fSWAPB(VddV.v[1].ub[k], VddV.v[0].ub[k+offset]); } } } } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vdealvdd */
},
void HELPER(V6_vdealvdd)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int offset;) VddV.v[0] = VvV; VddV.v[1] = VuV; for (offset=fVBYTES()>>1; offset>0; offset>>=1) { if ( RtV & offset) { fHIDE(int k;) fVFOREACH(8, k) { if (!( k & offset)) { fSWAPB(VddV.v[1].ub[k], VddV.v[0].ub[k+offset]); } } } } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vshufoeh,{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VddV.v[0].uw[i], fGETUHALF(0, VvV.uw[i])); fSETHALF(1, VddV.v[0].uw[i], fGETUHALF(0, VuV.uw[i])); fSETHALF(0, VddV.v[1].uw[i], fGETUHALF(1, VvV.uw[i])); fSETHALF(1, VddV.v[1].uw[i], fGETUHALF(1, VuV.uw[i])) ; } },
DEF_HELPER_5(V6_vshufoeh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vshufoeh */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vshufoeh(SLOT_WRAP(gen_helper_V6_vshufoeh(cpu_env, VddV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VddV.v[0].uw[i], fGETUHALF(0, VvV.uw[i])); fSETHALF(1, VddV.v[0].uw[i], fGETUHALF(0, VuV.uw[i])); fSETHALF(0, VddV.v[1].uw[i], fGETUHALF(1, VvV.uw[i])); fSETHALF(1, VddV.v[1].uw[i], fGETUHALF(1, VuV.uw[i])) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vshufoeh */
},
void HELPER(V6_vshufoeh)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VddV.v[0].uw[i], fGETUHALF(0, VvV.uw[i])); fSETHALF(1, VddV.v[0].uw[i], fGETUHALF(0, VuV.uw[i])); fSETHALF(0, VddV.v[1].uw[i], fGETUHALF(1, VvV.uw[i])); fSETHALF(1, VddV.v[1].uw[i], fGETUHALF(1, VuV.uw[i])) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vshufoeb,{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VddV.v[0].uh[i], fGETUBYTE(0, VvV.uh[i])); fSETBYTE(1, VddV.v[0].uh[i], fGETUBYTE(0, VuV.uh[i])); fSETBYTE(0, VddV.v[1].uh[i], fGETUBYTE(1, VvV.uh[i])); fSETBYTE(1, VddV.v[1].uh[i], fGETUBYTE(1, VuV.uh[i])) ; } },
DEF_HELPER_5(V6_vshufoeb, void, env, ptr, ptr, ptr, i32),
{
/* V6_vshufoeb */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vshufoeb(SLOT_WRAP(gen_helper_V6_vshufoeb(cpu_env, VddV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VddV.v[0].uh[i], fGETUBYTE(0, VvV.uh[i])); fSETBYTE(1, VddV.v[0].uh[i], fGETUBYTE(0, VuV.uh[i])); fSETBYTE(0, VddV.v[1].uh[i], fGETUBYTE(1, VvV.uh[i])); fSETBYTE(1, VddV.v[1].uh[i], fGETUBYTE(1, VuV.uh[i])) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vshufoeb */
},
void HELPER(V6_vshufoeb)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VddV.v[0].uh[i], fGETUBYTE(0, VvV.uh[i])); fSETBYTE(1, VddV.v[0].uh[i], fGETUBYTE(0, VuV.uh[i])); fSETBYTE(0, VddV.v[1].uh[i], fGETUBYTE(1, VvV.uh[i])); fSETBYTE(1, VddV.v[1].uh[i], fGETUBYTE(1, VuV.uh[i])) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vdealh,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uh[i ] = fGETUHALF(0, VuV.uw[i]); VdV.uh[i+fVELEM(32)] = fGETUHALF(1, VuV.uw[i]) ; } },
DEF_HELPER_4(V6_vdealh, void, env, ptr, ptr, i32),
{
/* V6_vdealh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vdealh(SLOT_WRAP(gen_helper_V6_vdealh(cpu_env, VdV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uh[i ] = fGETUHALF(0, VuV.uw[i]); VdV.uh[i+fVELEM(32)] = fGETUHALF(1, VuV.uw[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vdealh */
},
void HELPER(V6_vdealh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uh[i ] = fGETUHALF(0, VuV.uw[i]); VdV.uh[i+fVELEM(32)] = fGETUHALF(1, VuV.uw[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vdealb,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.ub[i ] = fGETUBYTE(0, VuV.uh[i]); VdV.ub[i+fVELEM(16)] = fGETUBYTE(1, VuV.uh[i]) ; } },
DEF_HELPER_4(V6_vdealb, void, env, ptr, ptr, i32),
{
/* V6_vdealb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vdealb(SLOT_WRAP(gen_helper_V6_vdealb(cpu_env, VdV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.ub[i ] = fGETUBYTE(0, VuV.uh[i]); VdV.ub[i+fVELEM(16)] = fGETUBYTE(1, VuV.uh[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vdealb */
},
void HELPER(V6_vdealb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.ub[i ] = fGETUBYTE(0, VuV.uh[i]); VdV.ub[i+fVELEM(16)] = fGETUBYTE(1, VuV.uh[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vdealb4w,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.ub[0+i ] = fGETUBYTE(0, VvV.uw[i]); VdV.ub[fVELEM(32)+i ] = fGETUBYTE(2, VvV.uw[i]); VdV.ub[2*fVELEM(32)+i] = fGETUBYTE(0, VuV.uw[i]); VdV.ub[3*fVELEM(32)+i] = fGETUBYTE(2, VuV.uw[i]) ; } },
DEF_HELPER_5(V6_vdealb4w, void, env, ptr, ptr, ptr, i32),
{
/* V6_vdealb4w */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vdealb4w(SLOT_WRAP(gen_helper_V6_vdealb4w(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.ub[0+i ] = fGETUBYTE(0, VvV.uw[i]); VdV.ub[fVELEM(32)+i ] = fGETUBYTE(2, VvV.uw[i]); VdV.ub[2*fVELEM(32)+i] = fGETUBYTE(0, VuV.uw[i]); VdV.ub[3*fVELEM(32)+i] = fGETUBYTE(2, VuV.uw[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vdealb4w */
},
void HELPER(V6_vdealb4w)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.ub[0+i ] = fGETUBYTE(0, VvV.uw[i]); VdV.ub[fVELEM(32)+i ] = fGETUBYTE(2, VvV.uw[i]); VdV.ub[2*fVELEM(32)+i] = fGETUBYTE(0, VuV.uw[i]); VdV.ub[3*fVELEM(32)+i] = fGETUBYTE(2, VuV.uw[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vshuffh,{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], VuV.uh[i]); fSETHALF(1, VdV.uw[i], VuV.uh[i+fVELEM(32)]) ; } },
DEF_HELPER_4(V6_vshuffh, void, env, ptr, ptr, i32),
{
/* V6_vshuffh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vshuffh(SLOT_WRAP(gen_helper_V6_vshuffh(cpu_env, VdV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], VuV.uh[i]); fSETHALF(1, VdV.uw[i], VuV.uh[i+fVELEM(32)]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vshuffh */
},
void HELPER(V6_vshuffh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { fSETHALF(0, VdV.uw[i], VuV.uh[i]); fSETHALF(1, VdV.uw[i], VuV.uh[i+fVELEM(32)]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vshuffb,{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], VuV.ub[i]); fSETBYTE(1, VdV.uh[i], VuV.ub[i+fVELEM(16)]) ; } },
DEF_HELPER_4(V6_vshuffb, void, env, ptr, ptr, i32),
{
/* V6_vshuffb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vshuffb(SLOT_WRAP(gen_helper_V6_vshuffb(cpu_env, VdV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], VuV.ub[i]); fSETBYTE(1, VdV.uh[i], VuV.ub[i+fVELEM(16)]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vshuffb */
},
void HELPER(V6_vshuffb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fSETBYTE(0, VdV.uh[i], VuV.ub[i]); fSETBYTE(1, VdV.uh[i], VuV.ub[i+fVELEM(16)]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_extractw,fHIDE(warn("RdN=%d VuN=%d RsN=%d RsV=0x%08x widx=%d",RdN,VuN,RsN,RsV,((RsV & (fVBYTES()-1)) >> 2));) RdV = VuV.uw[ (RsV & (fVBYTES()-1)) >> 2]; fHIDE(warn("RdV=0x%08x",RdV);),
DEF_HELPER_4(V6_extractw, s32, env, ptr, s32, i32),
{
/* V6_extractw */
DECL_RREG_d(TCGv, RdV, RdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_s(TCGv, RsV, RsN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_s(RsV, RsN);
fWRAP_V6_extractw(SLOT_WRAP(gen_helper_V6_extractw(RdV, cpu_env, VuV, RsV, slot));,
fHIDE(warn("RdN=%d VuN=%d RsN=%d RsV=0x%08x widx=%d",RdN,VuN,RsN,RsV,((RsV & (fVBYTES()-1)) >> 2));) RdV = VuV.uw[ (RsV & (fVBYTES()-1)) >> 2]; fHIDE(warn("RdV=0x%08x",RdV);))
WRITE_RREG(RdN,RdV);
FREE_REG_d(RdV);
FREE_EXT_VREG(VuV);
FREE_REG_s(RsV);
/* V6_extractw */
},
int32_t HELPER(V6_extractw)(CPUHexagonState *env, void *VuV_void, int32_t RsV, uint32_t slot)
{
int32_t RdV = 0;
/* VuV is *(mmvector_t*)(VuV_void) */
fHIDE(warn("RdN=%d VuN=%d RsN=%d RsV=0x%08x widx=%d",RdN,VuN,RsN,RsV,((RsV & (fVBYTES()-1)) >> 2));) RdV = VuV.uw[ (RsV & (fVBYTES()-1)) >> 2]; fHIDE(warn("RdV=0x%08x",RdV);)
return RdV;
})
DEF_QEMU(V6_vinsertwr,VxV.uw[0] = RtV;,
DEF_HELPER_4(V6_vinsertwr, void, env, ptr, s32, i32),
{
/* V6_vinsertwr */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vinsertwr(SLOT_WRAP(gen_helper_V6_vinsertwr(cpu_env, VxV, RtV, slot));,
VxV.uw[0] = RtV;)
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_REG_t(RtV);
/* V6_vinsertwr */
},
void HELPER(V6_vinsertwr)(CPUHexagonState *env, void *VxV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
VxV.uw[0] = RtV;
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_lvsplatw,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = RtV ; } },
DEF_HELPER_4(V6_lvsplatw, void, env, ptr, s32, i32),
{
/* V6_lvsplatw */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_lvsplatw(SLOT_WRAP(gen_helper_V6_lvsplatw(cpu_env, VdV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = RtV ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
/* V6_lvsplatw */
},
void HELPER(V6_lvsplatw)(CPUHexagonState *env, void *VdV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = RtV ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_lvsplath,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = RtV ; } },
DEF_HELPER_4(V6_lvsplath, void, env, ptr, s32, i32),
{
/* V6_lvsplath */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_lvsplath(SLOT_WRAP(gen_helper_V6_lvsplath(cpu_env, VdV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = RtV ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
/* V6_lvsplath */
},
void HELPER(V6_lvsplath)(CPUHexagonState *env, void *VdV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i] = RtV ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_lvsplatb,{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = RtV ; } },
DEF_HELPER_4(V6_lvsplatb, void, env, ptr, s32, i32),
{
/* V6_lvsplatb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_lvsplatb(SLOT_WRAP(gen_helper_V6_lvsplatb(cpu_env, VdV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = RtV ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_REG_t(RtV);
/* V6_lvsplatb */
},
void HELPER(V6_lvsplatb)(CPUHexagonState *env, void *VdV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
{ fHIDE(int i;) fVFOREACH(8, i) { VdV.ub[i] = RtV ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vassign,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i]=VuV.w[i] ; } },
DEF_HELPER_4(V6_vassign, void, env, ptr, ptr, i32),
{
/* V6_vassign */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vassign(SLOT_WRAP(gen_helper_V6_vassign(cpu_env, VdV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i]=VuV.w[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vassign */
},
void HELPER(V6_vassign)(CPUHexagonState *env, void *VdV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i]=VuV.w[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vcombine,{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = VvV.ub[i]; VddV.v[1].ub[i] = VuV.ub[i] ; } },
DEF_HELPER_5(V6_vcombine, void, env, ptr, ptr, ptr, i32),
{
/* V6_vcombine */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vcombine(SLOT_WRAP(gen_helper_V6_vcombine(cpu_env, VddV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = VvV.ub[i]; VddV.v[1].ub[i] = VuV.ub[i] ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vcombine */
},
void HELPER(V6_vcombine)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { VddV.v[0].ub[i] = VvV.ub[i]; VddV.v[1].ub[i] = VuV.ub[i] ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vdelta,{ fHIDE(int offset;) fHIDE(int k;) for (offset=fVBYTES(); (offset>>=1)>0; ) { for (k = 0; k<fVBYTES(); k++) { VdV.ub[k] = (VvV.ub[k]&offset) ? VuV.ub[k^offset] : VuV.ub[k]; } for (k = 0; k<fVBYTES(); k++) { VuV.ub[k] = VdV.ub[k]; } } },
DEF_HELPER_5(V6_vdelta, void, env, ptr, ptr, ptr, i32),
{
/* V6_vdelta */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vdelta(SLOT_WRAP(gen_helper_V6_vdelta(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int offset;) fHIDE(int k;) for (offset=fVBYTES(); (offset>>=1)>0; ) { for (k = 0; k<fVBYTES(); k++) { VdV.ub[k] = (VvV.ub[k]&offset) ? VuV.ub[k^offset] : VuV.ub[k]; } for (k = 0; k<fVBYTES(); k++) { VuV.ub[k] = VdV.ub[k]; } } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vdelta */
},
void HELPER(V6_vdelta)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int offset;) fHIDE(int k;) for (offset=fVBYTES(); (offset>>=1)>0; ) { for (k = 0; k<fVBYTES(); k++) { VdV.ub[k] = (VvV.ub[k]&offset) ? VuV.ub[k^offset] : VuV.ub[k]; } for (k = 0; k<fVBYTES(); k++) { VuV.ub[k] = VdV.ub[k]; } } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vrdelta,{ fHIDE(int offset;) fHIDE(int k;) for (offset=1; offset<fVBYTES(); offset<<=1){ for (k = 0; k<fVBYTES(); k++) { VdV.ub[k] = (VvV.ub[k]&offset) ? VuV.ub[k^offset] : VuV.ub[k]; } for (k = 0; k<fVBYTES(); k++) { VuV.ub[k] = VdV.ub[k]; } } },
DEF_HELPER_5(V6_vrdelta, void, env, ptr, ptr, ptr, i32),
{
/* V6_vrdelta */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vrdelta(SLOT_WRAP(gen_helper_V6_vrdelta(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int offset;) fHIDE(int k;) for (offset=1; offset<fVBYTES(); offset<<=1){ for (k = 0; k<fVBYTES(); k++) { VdV.ub[k] = (VvV.ub[k]&offset) ? VuV.ub[k^offset] : VuV.ub[k]; } for (k = 0; k<fVBYTES(); k++) { VuV.ub[k] = VdV.ub[k]; } } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vrdelta */
},
void HELPER(V6_vrdelta)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int offset;) fHIDE(int k;) for (offset=1; offset<fVBYTES(); offset<<=1){ for (k = 0; k<fVBYTES(); k++) { VdV.ub[k] = (VvV.ub[k]&offset) ? VuV.ub[k^offset] : VuV.ub[k]; } for (k = 0; k<fVBYTES(); k++) { VuV.ub[k] = VdV.ub[k]; } } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vcl0w,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i]=fCL1_4(~VuV.uw[i]) ; } },
DEF_HELPER_4(V6_vcl0w, void, env, ptr, ptr, i32),
{
/* V6_vcl0w */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vcl0w(SLOT_WRAP(gen_helper_V6_vcl0w(cpu_env, VdV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i]=fCL1_4(~VuV.uw[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vcl0w */
},
void HELPER(V6_vcl0w)(CPUHexagonState *env, void *VdV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i]=fCL1_4(~VuV.uw[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vcl0h,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i]=fCL1_2(~VuV.uh[i]) ; } },
DEF_HELPER_4(V6_vcl0h, void, env, ptr, ptr, i32),
{
/* V6_vcl0h */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vcl0h(SLOT_WRAP(gen_helper_V6_vcl0h(cpu_env, VdV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i]=fCL1_2(~VuV.uh[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vcl0h */
},
void HELPER(V6_vcl0h)(CPUHexagonState *env, void *VdV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i]=fCL1_2(~VuV.uh[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vnormamtw,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i]=fMAX(fCL1_4(~VuV.w[i]),fCL1_4(VuV.w[i]))-1; fHIDE(IV1DEAD();) ; } },
DEF_HELPER_4(V6_vnormamtw, void, env, ptr, ptr, i32),
{
/* V6_vnormamtw */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vnormamtw(SLOT_WRAP(gen_helper_V6_vnormamtw(cpu_env, VdV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i]=fMAX(fCL1_4(~VuV.w[i]),fCL1_4(VuV.w[i]))-1; fHIDE(IV1DEAD();) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vnormamtw */
},
void HELPER(V6_vnormamtw)(CPUHexagonState *env, void *VdV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i]=fMAX(fCL1_4(~VuV.w[i]),fCL1_4(VuV.w[i]))-1; fHIDE(IV1DEAD();) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vnormamth,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i]=fMAX(fCL1_2(~VuV.h[i]),fCL1_2(VuV.h[i]))-1; fHIDE(IV1DEAD();) ; } },
DEF_HELPER_4(V6_vnormamth, void, env, ptr, ptr, i32),
{
/* V6_vnormamth */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vnormamth(SLOT_WRAP(gen_helper_V6_vnormamth(cpu_env, VdV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i]=fMAX(fCL1_2(~VuV.h[i]),fCL1_2(VuV.h[i]))-1; fHIDE(IV1DEAD();) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vnormamth */
},
void HELPER(V6_vnormamth)(CPUHexagonState *env, void *VdV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i]=fMAX(fCL1_2(~VuV.h[i]),fCL1_2(VuV.h[i]))-1; fHIDE(IV1DEAD();) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaddclbw,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMAX(fCL1_4(~VuV.w[i]),fCL1_4(VuV.w[i])) + VvV.w[i] ; } },
DEF_HELPER_5(V6_vaddclbw, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddclbw */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vaddclbw(SLOT_WRAP(gen_helper_V6_vaddclbw(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMAX(fCL1_4(~VuV.w[i]),fCL1_4(VuV.w[i])) + VvV.w[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vaddclbw */
},
void HELPER(V6_vaddclbw)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.w[i] = fMAX(fCL1_4(~VuV.w[i]),fCL1_4(VuV.w[i])) + VvV.w[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vaddclbh,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fMAX(fCL1_2(~VuV.h[i]),fCL1_2(VuV.h[i])) + VvV.h[i] ; } },
DEF_HELPER_5(V6_vaddclbh, void, env, ptr, ptr, ptr, i32),
{
/* V6_vaddclbh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vaddclbh(SLOT_WRAP(gen_helper_V6_vaddclbh(cpu_env, VdV, VuV, VvV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fMAX(fCL1_2(~VuV.h[i]),fCL1_2(VuV.h[i])) + VvV.h[i] ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
/* V6_vaddclbh */
},
void HELPER(V6_vaddclbh)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i] = fMAX(fCL1_2(~VuV.h[i]),fCL1_2(VuV.h[i])) + VvV.h[i] ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vpopcounth,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i]=fCOUNTONES_2(VuV.uh[i]) ; } },
DEF_HELPER_4(V6_vpopcounth, void, env, ptr, ptr, i32),
{
/* V6_vpopcounth */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
READ_EXT_VREG(VuN,VuV,0);
fWRAP_V6_vpopcounth(SLOT_WRAP(gen_helper_V6_vpopcounth(cpu_env, VdV, VuV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i]=fCOUNTONES_2(VuV.uh[i]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
/* V6_vpopcounth */
},
void HELPER(V6_vpopcounth)(CPUHexagonState *env, void *VdV_void, void *VuV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.uh[i]=fCOUNTONES_2(VuV.uh[i]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vhist,{ fHIDE(mmvector_t inputVec;) inputVec=fTMPVDATA(); fUARCH_NOTE_PUMP_4X(); fHIDE(int lane;) fHIDE(mmvector_t tmp;) fVFOREACH(128, lane) { for (fHIDE(int )i=0; i<128/8; ++i) { unsigned char value = inputVec.ub[(128/8)*lane+i]; unsigned char regno = value>>3; unsigned char element = value & 7; READ_EXT_VREG(regno,tmp,0); tmp.uh[(128/16)*lane+(element)]++; WRITE_EXT_VREG(regno,tmp,EXT_NEW); } }; },
DEF_HELPER_2(V6_vhist, void, env, i32),
{
/* V6_vhist */
fWRAP_V6_vhist(SLOT_WRAP(gen_helper_V6_vhist(cpu_env, slot));,
{ fHIDE(mmvector_t inputVec;) inputVec=fTMPVDATA(); fUARCH_NOTE_PUMP_4X(); fHIDE(int lane;) fHIDE(mmvector_t tmp;) fVFOREACH(128, lane) { for (fHIDE(int )i=0; i<128/8; ++i) { unsigned char value = inputVec.ub[(128/8)*lane+i]; unsigned char regno = value>>3; unsigned char element = value & 7; READ_EXT_VREG(regno,tmp,0); tmp.uh[(128/16)*lane+(element)]++; WRITE_EXT_VREG(regno,tmp,EXT_NEW); } }; })
/* V6_vhist */
},
void HELPER(V6_vhist)(CPUHexagonState *env, uint32_t slot)
{
{ fHIDE(mmvector_t inputVec;) inputVec=fTMPVDATA(); fUARCH_NOTE_PUMP_4X(); fHIDE(int lane;) fHIDE(mmvector_t tmp;) fVFOREACH(128, lane) { for (fHIDE(int )i=0; i<128/8; ++i) { unsigned char value = inputVec.ub[(128/8)*lane+i]; unsigned char regno = value>>3; unsigned char element = value & 7; READ_EXT_VREG(regno,tmp,0); tmp.uh[(128/16)*lane+(element)]++; WRITE_EXT_VREG(regno,tmp,EXT_NEW); } }; }
})
DEF_QEMU(V6_vhistq,{ fHIDE(mmvector_t inputVec;) inputVec=fTMPVDATA(); fUARCH_NOTE_PUMP_4X(); fHIDE(int lane;) fHIDE(mmvector_t tmp;) fVFOREACH(128, lane) { for (fHIDE(int )i=0; i<128/8; ++i) { unsigned char value = inputVec.ub[(128/8)*lane+i]; unsigned char regno = value>>3; unsigned char element = value & 7; READ_EXT_VREG(regno,tmp,0); if (fGETQBIT(QvV,128/8*lane+i)) tmp.uh[(128/16)*lane+(element)]++; WRITE_EXT_VREG(regno,tmp,EXT_NEW); } }; },
DEF_HELPER_3(V6_vhistq, void, env, ptr, i32),
{
/* V6_vhistq */
DECL_EXT_QREG(QvV, QvN, 0, 0);
READ_EXT_QREG(QvN,QvV,0);
fWRAP_V6_vhistq(SLOT_WRAP(gen_helper_V6_vhistq(cpu_env, QvV, slot));,
{ fHIDE(mmvector_t inputVec;) inputVec=fTMPVDATA(); fUARCH_NOTE_PUMP_4X(); fHIDE(int lane;) fHIDE(mmvector_t tmp;) fVFOREACH(128, lane) { for (fHIDE(int )i=0; i<128/8; ++i) { unsigned char value = inputVec.ub[(128/8)*lane+i]; unsigned char regno = value>>3; unsigned char element = value & 7; READ_EXT_VREG(regno,tmp,0); if (fGETQBIT(QvV,128/8*lane+i)) tmp.uh[(128/16)*lane+(element)]++; WRITE_EXT_VREG(regno,tmp,EXT_NEW); } }; })
FREE_EXT_QREG(QvV);
/* V6_vhistq */
},
void HELPER(V6_vhistq)(CPUHexagonState *env, void *QvV_void, uint32_t slot)
{
/* QvV is *(mmvector_t*)(QvV_void) */
{ fHIDE(mmvector_t inputVec;) inputVec=fTMPVDATA(); fUARCH_NOTE_PUMP_4X(); fHIDE(int lane;) fHIDE(mmvector_t tmp;) fVFOREACH(128, lane) { for (fHIDE(int )i=0; i<128/8; ++i) { unsigned char value = inputVec.ub[(128/8)*lane+i]; unsigned char regno = value>>3; unsigned char element = value & 7; READ_EXT_VREG(regno,tmp,0); if (fGETQBIT(QvV,128/8*lane+i)) tmp.uh[(128/16)*lane+(element)]++; WRITE_EXT_VREG(regno,tmp,EXT_NEW); } }; }
})
DEF_QEMU(V6_vwhist256,fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>0) & (~7)) | ((bucket>>0) & 7); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); tmp.uh[elindex] = (tmp.uh[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } },
DEF_HELPER_2(V6_vwhist256, void, env, i32),
{
/* V6_vwhist256 */
fWRAP_V6_vwhist256(SLOT_WRAP(gen_helper_V6_vwhist256(cpu_env, slot));,
fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>0) & (~7)) | ((bucket>>0) & 7); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); tmp.uh[elindex] = (tmp.uh[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } })
/* V6_vwhist256 */
},
void HELPER(V6_vwhist256)(CPUHexagonState *env, uint32_t slot)
{
fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>0) & (~7)) | ((bucket>>0) & 7); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); tmp.uh[elindex] = (tmp.uh[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } }
})
DEF_QEMU(V6_vwhist256q,fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>0) & (~7)) | ((bucket>>0) & 7); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); if (fGETQBIT(QvV,2*i)) tmp.uh[elindex] = (tmp.uh[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } },
DEF_HELPER_3(V6_vwhist256q, void, env, ptr, i32),
{
/* V6_vwhist256q */
DECL_EXT_QREG(QvV, QvN, 0, 0);
READ_EXT_QREG(QvN,QvV,0);
fWRAP_V6_vwhist256q(SLOT_WRAP(gen_helper_V6_vwhist256q(cpu_env, QvV, slot));,
fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>0) & (~7)) | ((bucket>>0) & 7); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); if (fGETQBIT(QvV,2*i)) tmp.uh[elindex] = (tmp.uh[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } })
FREE_EXT_QREG(QvV);
/* V6_vwhist256q */
},
void HELPER(V6_vwhist256q)(CPUHexagonState *env, void *QvV_void, uint32_t slot)
{
/* QvV is *(mmvector_t*)(QvV_void) */
fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>0) & (~7)) | ((bucket>>0) & 7); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); if (fGETQBIT(QvV,2*i)) tmp.uh[elindex] = (tmp.uh[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } }
})
DEF_QEMU(V6_vwhist256_sat,fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>0) & (~7)) | ((bucket>>0) & 7); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); tmp.uh[elindex] = fVSATUH(tmp.uh[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } },
DEF_HELPER_2(V6_vwhist256_sat, void, env, i32),
{
/* V6_vwhist256_sat */
fWRAP_V6_vwhist256_sat(SLOT_WRAP(gen_helper_V6_vwhist256_sat(cpu_env, slot));,
fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>0) & (~7)) | ((bucket>>0) & 7); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); tmp.uh[elindex] = fVSATUH(tmp.uh[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } })
/* V6_vwhist256_sat */
},
void HELPER(V6_vwhist256_sat)(CPUHexagonState *env, uint32_t slot)
{
fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>0) & (~7)) | ((bucket>>0) & 7); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); tmp.uh[elindex] = fVSATUH(tmp.uh[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } }
})
DEF_QEMU(V6_vwhist256q_sat,fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>0) & (~7)) | ((bucket>>0) & 7); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); if (fGETQBIT(QvV,2*i)) tmp.uh[elindex] = fVSATUH(tmp.uh[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } },
DEF_HELPER_3(V6_vwhist256q_sat, void, env, ptr, i32),
{
/* V6_vwhist256q_sat */
DECL_EXT_QREG(QvV, QvN, 0, 0);
READ_EXT_QREG(QvN,QvV,0);
fWRAP_V6_vwhist256q_sat(SLOT_WRAP(gen_helper_V6_vwhist256q_sat(cpu_env, QvV, slot));,
fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>0) & (~7)) | ((bucket>>0) & 7); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); if (fGETQBIT(QvV,2*i)) tmp.uh[elindex] = fVSATUH(tmp.uh[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } })
FREE_EXT_QREG(QvV);
/* V6_vwhist256q_sat */
},
void HELPER(V6_vwhist256q_sat)(CPUHexagonState *env, void *QvV_void, uint32_t slot)
{
/* QvV is *(mmvector_t*)(QvV_void) */
fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>0) & (~7)) | ((bucket>>0) & 7); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); if (fGETQBIT(QvV,2*i)) tmp.uh[elindex] = fVSATUH(tmp.uh[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } }
})
DEF_QEMU(V6_vwhist128,fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>1) & (~3)) | ((bucket>>1) & 3); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); tmp.uw[elindex] = (tmp.uw[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } },
DEF_HELPER_2(V6_vwhist128, void, env, i32),
{
/* V6_vwhist128 */
fWRAP_V6_vwhist128(SLOT_WRAP(gen_helper_V6_vwhist128(cpu_env, slot));,
fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>1) & (~3)) | ((bucket>>1) & 3); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); tmp.uw[elindex] = (tmp.uw[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } })
/* V6_vwhist128 */
},
void HELPER(V6_vwhist128)(CPUHexagonState *env, uint32_t slot)
{
fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>1) & (~3)) | ((bucket>>1) & 3); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); tmp.uw[elindex] = (tmp.uw[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } }
})
DEF_QEMU(V6_vwhist128q,fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>1) & (~3)) | ((bucket>>1) & 3); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); if (fGETQBIT(QvV,2*i)) tmp.uw[elindex] = (tmp.uw[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } },
DEF_HELPER_3(V6_vwhist128q, void, env, ptr, i32),
{
/* V6_vwhist128q */
DECL_EXT_QREG(QvV, QvN, 0, 0);
READ_EXT_QREG(QvN,QvV,0);
fWRAP_V6_vwhist128q(SLOT_WRAP(gen_helper_V6_vwhist128q(cpu_env, QvV, slot));,
fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>1) & (~3)) | ((bucket>>1) & 3); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); if (fGETQBIT(QvV,2*i)) tmp.uw[elindex] = (tmp.uw[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } })
FREE_EXT_QREG(QvV);
/* V6_vwhist128q */
},
void HELPER(V6_vwhist128q)(CPUHexagonState *env, void *QvV_void, uint32_t slot)
{
/* QvV is *(mmvector_t*)(QvV_void) */
fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>1) & (~3)) | ((bucket>>1) & 3); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); if (fGETQBIT(QvV,2*i)) tmp.uw[elindex] = (tmp.uw[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } }
})
DEF_QEMU(V6_vwhist128m,fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>1) & (~3)) | ((bucket>>1) & 3); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); if ((bucket & 1) == uiV) tmp.uw[elindex] = (tmp.uw[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } },
DEF_HELPER_3(V6_vwhist128m, void, env, s32, i32),
{
/* V6_vwhist128m */
DECL_IMM(uiV,0);
fWRAP_V6_vwhist128m(SLOT_WRAP(gen_helper_V6_vwhist128m(cpu_env, uiV, slot));,
fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>1) & (~3)) | ((bucket>>1) & 3); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); if ((bucket & 1) == uiV) tmp.uw[elindex] = (tmp.uw[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } })
FREE_IMM(uiV);
/* V6_vwhist128m */
},
void HELPER(V6_vwhist128m)(CPUHexagonState *env, int32_t uiV, uint32_t slot)
{
fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>1) & (~3)) | ((bucket>>1) & 3); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); if ((bucket & 1) == uiV) tmp.uw[elindex] = (tmp.uw[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } }
})
DEF_QEMU(V6_vwhist128qm,fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>1) & (~3)) | ((bucket>>1) & 3); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); if (((bucket & 1) == uiV) && fGETQBIT(QvV,2*i)) tmp.uw[elindex] = (tmp.uw[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } },
DEF_HELPER_4(V6_vwhist128qm, void, env, ptr, s32, i32),
{
/* V6_vwhist128qm */
DECL_EXT_QREG(QvV, QvN, 0, 0);
DECL_IMM(uiV,0);
READ_EXT_QREG(QvN,QvV,0);
fWRAP_V6_vwhist128qm(SLOT_WRAP(gen_helper_V6_vwhist128qm(cpu_env, QvV, uiV, slot));,
fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>1) & (~3)) | ((bucket>>1) & 3); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); if (((bucket & 1) == uiV) && fGETQBIT(QvV,2*i)) tmp.uw[elindex] = (tmp.uw[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } })
FREE_EXT_QREG(QvV);
FREE_IMM(uiV);
/* V6_vwhist128qm */
},
void HELPER(V6_vwhist128qm)(CPUHexagonState *env, void *QvV_void, int32_t uiV, uint32_t slot)
{
/* QvV is *(mmvector_t*)(QvV_void) */
fHIDE(mmvector_t input;) input = fTMPVDATA(); { fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int) bucket = fGETUBYTE(0,input.h[i]); fHIDE(unsigned int) weight = fGETUBYTE(1,input.h[i]); fHIDE(unsigned int) vindex = (bucket >> 3) & 0x1F; fHIDE(unsigned int) elindex = ((i>>1) & (~3)) | ((bucket>>1) & 3); fHIDE(mmvector_t tmp;) READ_EXT_VREG(vindex,tmp,0); if (((bucket & 1) == uiV) && fGETQBIT(QvV,2*i)) tmp.uw[elindex] = (tmp.uw[elindex] + weight); WRITE_EXT_VREG(vindex,tmp,EXT_NEW); fUARCH_NOTE_PUMP_2X(); ; } }
})
DEF_QEMU(V6_vlutvvb,{ fHIDE(int i;) fVFOREACH(8, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = RtV & 0x7; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = VuV.ub[i]; VdV.b[i] = ((idx & 0xE0) == (matchval << 5)) ? fGETBYTE(oddhalf,VvV.h[idx % fVELEM(16)]) : 0 ; } },
DEF_HELPER_6(V6_vlutvvb, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vlutvvb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vlutvvb(SLOT_WRAP(gen_helper_V6_vlutvvb(cpu_env, VdV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = RtV & 0x7; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = VuV.ub[i]; VdV.b[i] = ((idx & 0xE0) == (matchval << 5)) ? fGETBYTE(oddhalf,VvV.h[idx % fVELEM(16)]) : 0 ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vlutvvb */
},
void HELPER(V6_vlutvvb)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = RtV & 0x7; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = VuV.ub[i]; VdV.b[i] = ((idx & 0xE0) == (matchval << 5)) ? fGETBYTE(oddhalf,VvV.h[idx % fVELEM(16)]) : 0 ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vlutvvb_oracc,{ fHIDE(int i;) fVFOREACH(8, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = RtV & 0x7; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = VuV.ub[i]; VxV.b[i] |= ((idx & 0xE0) == (matchval << 5)) ? fGETBYTE(oddhalf,VvV.h[idx % fVELEM(16)]) : 0 ; } },
DEF_HELPER_6(V6_vlutvvb_oracc, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vlutvvb_oracc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vlutvvb_oracc(SLOT_WRAP(gen_helper_V6_vlutvvb_oracc(cpu_env, VxV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = RtV & 0x7; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = VuV.ub[i]; VxV.b[i] |= ((idx & 0xE0) == (matchval << 5)) ? fGETBYTE(oddhalf,VvV.h[idx % fVELEM(16)]) : 0 ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vlutvvb_oracc */
},
void HELPER(V6_vlutvvb_oracc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = RtV & 0x7; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = VuV.ub[i]; VxV.b[i] |= ((idx & 0xE0) == (matchval << 5)) ? fGETBYTE(oddhalf,VvV.h[idx % fVELEM(16)]) : 0 ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vlutvwh,{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = RtV & 0xF; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = fGETUBYTE(0,VuV.uh[i]); VddV.v[0].h[i] = ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0; idx = fGETUBYTE(1,VuV.uh[i]); VddV.v[1].h[i] = ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0 ; } },
DEF_HELPER_6(V6_vlutvwh, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vlutvwh */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vlutvwh(SLOT_WRAP(gen_helper_V6_vlutvwh(cpu_env, VddV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = RtV & 0xF; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = fGETUBYTE(0,VuV.uh[i]); VddV.v[0].h[i] = ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0; idx = fGETUBYTE(1,VuV.uh[i]); VddV.v[1].h[i] = ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0 ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vlutvwh */
},
void HELPER(V6_vlutvwh)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = RtV & 0xF; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = fGETUBYTE(0,VuV.uh[i]); VddV.v[0].h[i] = ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0; idx = fGETUBYTE(1,VuV.uh[i]); VddV.v[1].h[i] = ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0 ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vlutvwh_oracc,{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = fGETUBYTE(0,RtV) & 0xF; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = fGETUBYTE(0,VuV.uh[i]); VxxV.v[0].h[i] |= ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0; idx = fGETUBYTE(1,VuV.uh[i]); VxxV.v[1].h[i] |= ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0 ; } },
DEF_HELPER_6(V6_vlutvwh_oracc, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vlutvwh_oracc */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vlutvwh_oracc(SLOT_WRAP(gen_helper_V6_vlutvwh_oracc(cpu_env, VxxV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = fGETUBYTE(0,RtV) & 0xF; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = fGETUBYTE(0,VuV.uh[i]); VxxV.v[0].h[i] |= ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0; idx = fGETUBYTE(1,VuV.uh[i]); VxxV.v[1].h[i] |= ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0 ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vlutvwh_oracc */
},
void HELPER(V6_vlutvwh_oracc)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VxxV4 is *(mmvector_pair_t*)(VxxV4_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = fGETUBYTE(0,RtV) & 0xF; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = fGETUBYTE(0,VuV.uh[i]); VxxV.v[0].h[i] |= ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0; idx = fGETUBYTE(1,VuV.uh[i]); VxxV.v[1].h[i] |= ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0 ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vlutvvbi,{ fHIDE(int i;) fVFOREACH(8, i) { fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = uiV & 0x7; oddhalf = (uiV >> (fVECLOGSIZE()-6)) & 0x1; idx = VuV.ub[i]; VdV.b[i] = ((idx & 0xE0) == (matchval << 5)) ? fGETBYTE(oddhalf,VvV.h[idx % fVELEM(16)]) : 0 ; } },
DEF_HELPER_6(V6_vlutvvbi, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vlutvvbi */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_IMM(uiV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vlutvvbi(SLOT_WRAP(gen_helper_V6_vlutvvbi(cpu_env, VdV, VuV, VvV, uiV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = uiV & 0x7; oddhalf = (uiV >> (fVECLOGSIZE()-6)) & 0x1; idx = VuV.ub[i]; VdV.b[i] = ((idx & 0xE0) == (matchval << 5)) ? fGETBYTE(oddhalf,VvV.h[idx % fVELEM(16)]) : 0 ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_IMM(uiV);
/* V6_vlutvvbi */
},
void HELPER(V6_vlutvvbi)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t uiV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = uiV & 0x7; oddhalf = (uiV >> (fVECLOGSIZE()-6)) & 0x1; idx = VuV.ub[i]; VdV.b[i] = ((idx & 0xE0) == (matchval << 5)) ? fGETBYTE(oddhalf,VvV.h[idx % fVELEM(16)]) : 0 ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vlutvvb_oracci,{ fHIDE(int i;) fVFOREACH(8, i) { fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = uiV & 0x7; oddhalf = (uiV >> (fVECLOGSIZE()-6)) & 0x1; idx = VuV.ub[i]; VxV.b[i] |= ((idx & 0xE0) == (matchval << 5)) ? fGETBYTE(oddhalf,VvV.h[idx % fVELEM(16)]) : 0 ; } },
DEF_HELPER_6(V6_vlutvvb_oracci, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vlutvvb_oracci */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_IMM(uiV,0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vlutvvb_oracci(SLOT_WRAP(gen_helper_V6_vlutvvb_oracci(cpu_env, VxV, VuV, VvV, uiV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = uiV & 0x7; oddhalf = (uiV >> (fVECLOGSIZE()-6)) & 0x1; idx = VuV.ub[i]; VxV.b[i] |= ((idx & 0xE0) == (matchval << 5)) ? fGETBYTE(oddhalf,VvV.h[idx % fVELEM(16)]) : 0 ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_IMM(uiV);
/* V6_vlutvvb_oracci */
},
void HELPER(V6_vlutvvb_oracci)(CPUHexagonState *env, void *VxV_void, void *VuV_void, void *VvV_void, int32_t uiV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = uiV & 0x7; oddhalf = (uiV >> (fVECLOGSIZE()-6)) & 0x1; idx = VuV.ub[i]; VxV.b[i] |= ((idx & 0xE0) == (matchval << 5)) ? fGETBYTE(oddhalf,VvV.h[idx % fVELEM(16)]) : 0 ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vlutvwhi,{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = uiV & 0xF; oddhalf = (uiV >> (fVECLOGSIZE()-6)) & 0x1; idx = fGETUBYTE(0,VuV.uh[i]); VddV.v[0].h[i] = ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0; idx = fGETUBYTE(1,VuV.uh[i]); VddV.v[1].h[i] = ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0 ; } },
DEF_HELPER_6(V6_vlutvwhi, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vlutvwhi */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_IMM(uiV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vlutvwhi(SLOT_WRAP(gen_helper_V6_vlutvwhi(cpu_env, VddV, VuV, VvV, uiV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = uiV & 0xF; oddhalf = (uiV >> (fVECLOGSIZE()-6)) & 0x1; idx = fGETUBYTE(0,VuV.uh[i]); VddV.v[0].h[i] = ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0; idx = fGETUBYTE(1,VuV.uh[i]); VddV.v[1].h[i] = ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0 ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_IMM(uiV);
/* V6_vlutvwhi */
},
void HELPER(V6_vlutvwhi)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, int32_t uiV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = uiV & 0xF; oddhalf = (uiV >> (fVECLOGSIZE()-6)) & 0x1; idx = fGETUBYTE(0,VuV.uh[i]); VddV.v[0].h[i] = ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0; idx = fGETUBYTE(1,VuV.uh[i]); VddV.v[1].h[i] = ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0 ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vlutvwh_oracci,{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = uiV & 0xF; oddhalf = (uiV >> (fVECLOGSIZE()-6)) & 0x1; idx = fGETUBYTE(0,VuV.uh[i]); VxxV.v[0].h[i] |= ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0; idx = fGETUBYTE(1,VuV.uh[i]); VxxV.v[1].h[i] |= ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0 ; } },
DEF_HELPER_6(V6_vlutvwh_oracci, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vlutvwh_oracci */
DECL_EXT_VREG_PAIR(VxxV, VxxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_IMM(uiV,0);
READ_EXT_VREG_PAIR(VxxN,VxxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vlutvwh_oracci(SLOT_WRAP(gen_helper_V6_vlutvwh_oracci(cpu_env, VxxV, VuV, VvV, uiV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = uiV & 0xF; oddhalf = (uiV >> (fVECLOGSIZE()-6)) & 0x1; idx = fGETUBYTE(0,VuV.uh[i]); VxxV.v[0].h[i] |= ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0; idx = fGETUBYTE(1,VuV.uh[i]); VxxV.v[1].h[i] |= ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0 ; } })
WRITE_EXT_VREG_PAIR(VxxN,VxxV,0);
FREE_EXT_VREG_PAIR(VxxV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_IMM(uiV);
/* V6_vlutvwh_oracci */
},
void HELPER(V6_vlutvwh_oracci)(CPUHexagonState *env, void *VxxV_void, void *VuV_void, void *VvV_void, int32_t uiV, uint32_t slot)
{
/* VxxV3 is *(mmvector_pair_t*)(VxxV3_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(unsigned int idx;) fHIDE(int matchval;) fHIDE(int oddhalf;) matchval = uiV & 0xF; oddhalf = (uiV >> (fVECLOGSIZE()-6)) & 0x1; idx = fGETUBYTE(0,VuV.uh[i]); VxxV.v[0].h[i] |= ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0; idx = fGETUBYTE(1,VuV.uh[i]); VxxV.v[1].h[i] |= ((idx & 0xF0) == (matchval << 4)) ? fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) : 0 ; } }
/* VxxV is *(mmvector_pair_t*)VxxV_void */
})
DEF_QEMU(V6_vlutvvb_nm,{ fHIDE(int i;) fVFOREACH(8, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int oddhalf;) fHIDE(int matchval;) matchval = RtV & 0x7; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = VuV.ub[i]; idx = (idx&0x1F) | (matchval<<5); VdV.b[i] = fGETBYTE(oddhalf,VvV.h[idx % fVELEM(16)]) ; } },
DEF_HELPER_6(V6_vlutvvb_nm, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vlutvvb_nm */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vlutvvb_nm(SLOT_WRAP(gen_helper_V6_vlutvvb_nm(cpu_env, VdV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(8, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int oddhalf;) fHIDE(int matchval;) matchval = RtV & 0x7; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = VuV.ub[i]; idx = (idx&0x1F) | (matchval<<5); VdV.b[i] = fGETBYTE(oddhalf,VvV.h[idx % fVELEM(16)]) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vlutvvb_nm */
},
void HELPER(V6_vlutvvb_nm)(CPUHexagonState *env, void *VdV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(8, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int oddhalf;) fHIDE(int matchval;) matchval = RtV & 0x7; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = VuV.ub[i]; idx = (idx&0x1F) | (matchval<<5); VdV.b[i] = fGETBYTE(oddhalf,VvV.h[idx % fVELEM(16)]) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vlutvwh_nm,{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int oddhalf;) fHIDE(int matchval;) matchval = RtV & 0xF; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = fGETUBYTE(0,VuV.uh[i]); idx = (idx&0x0F) | (matchval<<4); VddV.v[0].h[i] = fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]); idx = fGETUBYTE(1,VuV.uh[i]); idx = (idx&0x0F) | (matchval<<4); VddV.v[1].h[i] = fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) ; } },
DEF_HELPER_6(V6_vlutvwh_nm, void, env, ptr, ptr, ptr, s32, i32),
{
/* V6_vlutvwh_nm */
DECL_EXT_VREG_PAIR(VddV, VddN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_RREG_t(TCGv, RtV, RtN, 3, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_EXT_VREG(VvN,VvV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vlutvwh_nm(SLOT_WRAP(gen_helper_V6_vlutvwh_nm(cpu_env, VddV, VuV, VvV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int oddhalf;) fHIDE(int matchval;) matchval = RtV & 0xF; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = fGETUBYTE(0,VuV.uh[i]); idx = (idx&0x0F) | (matchval<<4); VddV.v[0].h[i] = fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]); idx = fGETUBYTE(1,VuV.uh[i]); idx = (idx&0x0F) | (matchval<<4); VddV.v[1].h[i] = fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) ; } })
WRITE_EXT_VREG_PAIR(VddN,VddV,0);
FREE_EXT_VREG_PAIR(VddV);
FREE_EXT_VREG(VuV);
FREE_EXT_VREG(VvV);
FREE_REG_t(RtV);
/* V6_vlutvwh_nm */
},
void HELPER(V6_vlutvwh_nm)(CPUHexagonState *env, void *VddV_void, void *VuV_void, void *VvV_void, int32_t RtV, uint32_t slot)
{
/* VddV is *(mmvector_pair_t*) VddV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { fHIDE(fRT8NOTE()) fHIDE(unsigned int idx;) fHIDE(int oddhalf;) fHIDE(int matchval;) matchval = RtV & 0xF; oddhalf = (RtV >> (fVECLOGSIZE()-6)) & 0x1; idx = fGETUBYTE(0,VuV.uh[i]); idx = (idx&0x0F) | (matchval<<4); VddV.v[0].h[i] = fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]); idx = fGETUBYTE(1,VuV.uh[i]); idx = (idx&0x0F) | (matchval<<4); VddV.v[1].h[i] = fGETHALF(oddhalf,VvV.w[idx % fVELEM(32)]) ; } }
/* VddV is *(mmvector_pair_t*)VddV_void */
})
DEF_QEMU(V6_vmpahhsat,{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]= fVSATH( ( ( fMPY16SS(VxV.h[i],VuV.h[i])<<1) + (fGETHALF(( (VuV.h[i]>>14)&0x3), RttV )<<15))>>16) ; } },
DEF_HELPER_5(V6_vmpahhsat, void, env, ptr, ptr, s64, i32),
{
/* V6_vmpahhsat */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_PAIR(RttV, RttN);
fWRAP_V6_vmpahhsat(SLOT_WRAP(gen_helper_V6_vmpahhsat(cpu_env, VxV, VuV, RttV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]= fVSATH( ( ( fMPY16SS(VxV.h[i],VuV.h[i])<<1) + (fGETHALF(( (VuV.h[i]>>14)&0x3), RttV )<<15))>>16) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_PAIR(RttV);
/* V6_vmpahhsat */
},
void HELPER(V6_vmpahhsat)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int64_t RttV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* RttV3 is *(mmvector_pair_t*)(RttV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]= fVSATH( ( ( fMPY16SS(VxV.h[i],VuV.h[i])<<1) + (fGETHALF(( (VuV.h[i]>>14)&0x3), RttV )<<15))>>16) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vmpauhuhsat,{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]= fVSATH( ( fMPY16SU(VxV.h[i],VuV.uh[i]) + (fGETUHALF(((VuV.uh[i]>>14)&0x3), RttV )<<15))>>16) ; } },
DEF_HELPER_5(V6_vmpauhuhsat, void, env, ptr, ptr, s64, i32),
{
/* V6_vmpauhuhsat */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_PAIR(RttV, RttN);
fWRAP_V6_vmpauhuhsat(SLOT_WRAP(gen_helper_V6_vmpauhuhsat(cpu_env, VxV, VuV, RttV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]= fVSATH( ( fMPY16SU(VxV.h[i],VuV.uh[i]) + (fGETUHALF(((VuV.uh[i]>>14)&0x3), RttV )<<15))>>16) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_PAIR(RttV);
/* V6_vmpauhuhsat */
},
void HELPER(V6_vmpauhuhsat)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int64_t RttV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* RttV3 is *(mmvector_pair_t*)(RttV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]= fVSATH( ( fMPY16SU(VxV.h[i],VuV.uh[i]) + (fGETUHALF(((VuV.uh[i]>>14)&0x3), RttV )<<15))>>16) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vmpsuhuhsat,{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]= fVSATH( ( fMPY16SU(VxV.h[i],VuV.uh[i]) - (fGETUHALF(((VuV.uh[i]>>14)&0x3), RttV )<<15))>>16) ; } },
DEF_HELPER_5(V6_vmpsuhuhsat, void, env, ptr, ptr, s64, i32),
{
/* V6_vmpsuhuhsat */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_PAIR(RttV, RttN);
fWRAP_V6_vmpsuhuhsat(SLOT_WRAP(gen_helper_V6_vmpsuhuhsat(cpu_env, VxV, VuV, RttV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]= fVSATH( ( fMPY16SU(VxV.h[i],VuV.uh[i]) - (fGETUHALF(((VuV.uh[i]>>14)&0x3), RttV )<<15))>>16) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_PAIR(RttV);
/* V6_vmpsuhuhsat */
},
void HELPER(V6_vmpsuhuhsat)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int64_t RttV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
/* RttV3 is *(mmvector_pair_t*)(RttV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VxV.h[i]= fVSATH( ( fMPY16SU(VxV.h[i],VuV.uh[i]) - (fGETUHALF(((VuV.uh[i]>>14)&0x3), RttV )<<15))>>16) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vlut4,{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i]= fGETHALF( ((VuV.h[i]>>14)&0x3), RttV ) ; } },
DEF_HELPER_5(V6_vlut4, void, env, ptr, ptr, s64, i32),
{
/* V6_vlut4 */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_PAIR_tt(TCGv_i64, RttV, RttN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_PAIR(RttV, RttN);
fWRAP_V6_vlut4(SLOT_WRAP(gen_helper_V6_vlut4(cpu_env, VdV, VuV, RttV, slot));,
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i]= fGETHALF( ((VuV.h[i]>>14)&0x3), RttV ) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_PAIR(RttV);
/* V6_vlut4 */
},
void HELPER(V6_vlut4)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int64_t RttV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
/* RttV3 is *(mmvector_pair_t*)(RttV3_void) */
{ fHIDE(int i;) fVFOREACH(16, i) { VdV.h[i]= fGETHALF( ((VuV.h[i]>>14)&0x3), RttV ) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmpyuhe,{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fMPY16UU(fGETUHALF(0, VuV.uw[i]),fGETUHALF(0,RtV)) ; } },
DEF_HELPER_5(V6_vmpyuhe, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyuhe */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyuhe(SLOT_WRAP(gen_helper_V6_vmpyuhe(cpu_env, VdV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fMPY16UU(fGETUHALF(0, VuV.uw[i]),fGETUHALF(0,RtV)) ; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyuhe */
},
void HELPER(V6_vmpyuhe)(CPUHexagonState *env, void *VdV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VdV.uw[i] = fMPY16UU(fGETUHALF(0, VuV.uw[i]),fGETUHALF(0,RtV)) ; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vmpyuhe_acc,{ fHIDE(int i;) fVFOREACH(32, i) { VxV.uw[i] += fMPY16UU(fGETUHALF(0, VuV.uw[i]),fGETUHALF(0,RtV)) ; } },
DEF_HELPER_5(V6_vmpyuhe_acc, void, env, ptr, ptr, s32, i32),
{
/* V6_vmpyuhe_acc */
DECL_EXT_VREG(VxV, VxN, 0, 0);
DECL_EXT_VREG(VuV, VuN, 1, 0);
DECL_RREG_t(TCGv, RtV, RtN, 2, 0);
READ_EXT_VREG(VxN,VxV,0);
READ_EXT_VREG(VuN,VuV,0);
READ_RREG_t(RtV, RtN);
fWRAP_V6_vmpyuhe_acc(SLOT_WRAP(gen_helper_V6_vmpyuhe_acc(cpu_env, VxV, VuV, RtV, slot));,
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.uw[i] += fMPY16UU(fGETUHALF(0, VuV.uw[i]),fGETUHALF(0,RtV)) ; } })
WRITE_EXT_VREG(VxN,VxV,EXT_DFL);
FREE_EXT_VREG(VxV);
FREE_EXT_VREG(VuV);
FREE_REG_t(RtV);
/* V6_vmpyuhe_acc */
},
void HELPER(V6_vmpyuhe_acc)(CPUHexagonState *env, void *VxV_void, void *VuV_void, int32_t RtV, uint32_t slot)
{
/* VxV is *(mmvector_t*)(VxV_void) */
/* VuV is *(mmvector_t*)(VuV_void) */
{ fHIDE(int i;) fVFOREACH(32, i) { VxV.uw[i] += fMPY16UU(fGETUHALF(0, VuV.uw[i]),fGETUHALF(0,RtV)) ; } }
/* VxV is *(mmvector_t*)VxV_void */
})
DEF_QEMU(V6_vgathermw,{ fHIDE(int i;) fHIDE(int element_size = 4;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { EA = RtV+VvV.uw[i]; fVLOG_VTCM_GATHER_WORD(EA, VvV.uw[i], i,MuV); } fGATHER_FINISH() },
DEF_HELPER_5(V6_vgathermw, void, env, s32, s32, ptr, i32),
{
/* V6_vgathermw */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgathermw(SLOT_WRAP(gen_helper_V6_vgathermw(cpu_env, RtV, MuV, VvV, slot));,
{ fHIDE(int i;) fHIDE(int element_size = 4;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { EA = RtV+VvV.uw[i]; fVLOG_VTCM_GATHER_WORD(EA, VvV.uw[i], i,MuV); } fGATHER_FINISH() })
FREE_EA;
FREE_REG_t(RtV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VvV);
/* V6_vgathermw */
},
void HELPER(V6_vgathermw)(CPUHexagonState *env, int32_t RtV, int32_t MuV, void *VvV_void, uint32_t slot)
{
size4u_t EA;
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fHIDE(int element_size = 4;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { EA = RtV+VvV.uw[i]; fVLOG_VTCM_GATHER_WORD(EA, VvV.uw[i], i,MuV); } fGATHER_FINISH() }
})
DEF_QEMU(V6_vgathermh,{ fHIDE(int i;) fHIDE(int element_size = 2;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(16, i) { EA = RtV+VvV.uh[i]; fVLOG_VTCM_GATHER_HALFWORD(EA, VvV.uh[i], i,MuV); } fGATHER_FINISH() },
DEF_HELPER_5(V6_vgathermh, void, env, s32, s32, ptr, i32),
{
/* V6_vgathermh */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgathermh(SLOT_WRAP(gen_helper_V6_vgathermh(cpu_env, RtV, MuV, VvV, slot));,
{ fHIDE(int i;) fHIDE(int element_size = 2;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(16, i) { EA = RtV+VvV.uh[i]; fVLOG_VTCM_GATHER_HALFWORD(EA, VvV.uh[i], i,MuV); } fGATHER_FINISH() })
FREE_EA;
FREE_REG_t(RtV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VvV);
/* V6_vgathermh */
},
void HELPER(V6_vgathermh)(CPUHexagonState *env, int32_t RtV, int32_t MuV, void *VvV_void, uint32_t slot)
{
size4u_t EA;
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fHIDE(int element_size = 2;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(16, i) { EA = RtV+VvV.uh[i]; fVLOG_VTCM_GATHER_HALFWORD(EA, VvV.uh[i], i,MuV); } fGATHER_FINISH() }
})
DEF_QEMU(V6_vgathermhw,{ fHIDE(int i;) fHIDE(int j;) fHIDE(int element_size = 2;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { for(j = 0; j < 2; j++) { EA = RtV+VvvV.v[j].uw[i]; fVLOG_VTCM_GATHER_HALFWORD_DV(EA, VvvV.v[j].uw[i], (2*i+j),i,j,MuV); } } fGATHER_FINISH() },
DEF_HELPER_5(V6_vgathermhw, void, env, s32, s32, ptr, i32),
{
/* V6_vgathermhw */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
READ_RREG_t(RtV, RtN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vgathermhw(SLOT_WRAP(gen_helper_V6_vgathermhw(cpu_env, RtV, MuV, VvvV, slot));,
{ fHIDE(int i;) fHIDE(int j;) fHIDE(int element_size = 2;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { for(j = 0; j < 2; j++) { EA = RtV+VvvV.v[j].uw[i]; fVLOG_VTCM_GATHER_HALFWORD_DV(EA, VvvV.v[j].uw[i], (2*i+j),i,j,MuV); } } fGATHER_FINISH() })
FREE_EA;
FREE_REG_t(RtV);
FREE_REG_u(MuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vgathermhw */
},
void HELPER(V6_vgathermhw)(CPUHexagonState *env, int32_t RtV, int32_t MuV, void *VvvV_void, uint32_t slot)
{
size4u_t EA;
/* VvvV3 is *(mmvector_pair_t*)(VvvV3_void) */
{ fHIDE(int i;) fHIDE(int j;) fHIDE(int element_size = 2;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { for(j = 0; j < 2; j++) { EA = RtV+VvvV.v[j].uw[i]; fVLOG_VTCM_GATHER_HALFWORD_DV(EA, VvvV.v[j].uw[i], (2*i+j),i,j,MuV); } } fGATHER_FINISH() }
})
DEF_QEMU(V6_vgathermwq,{ fHIDE(int i;) fHIDE(int element_size = 4;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { EA = RtV+VvV.uw[i]; fVLOG_VTCM_GATHER_WORDQ(EA, VvV.uw[i], i,QsV,MuV); } fGATHER_FINISH() },
DEF_HELPER_6(V6_vgathermwq, void, env, ptr, s32, s32, ptr, i32),
{
/* V6_vgathermwq */
DECL_EA;
DECL_EXT_QREG(QsV, QsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_EXT_VREG(VvV, VvN, 3, 0);
READ_EXT_QREG(QsN,QsV,0);
READ_RREG_t(RtV, RtN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgathermwq(SLOT_WRAP(gen_helper_V6_vgathermwq(cpu_env, QsV, RtV, MuV, VvV, slot));,
{ fHIDE(int i;) fHIDE(int element_size = 4;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { EA = RtV+VvV.uw[i]; fVLOG_VTCM_GATHER_WORDQ(EA, VvV.uw[i], i,QsV,MuV); } fGATHER_FINISH() })
FREE_EA;
FREE_EXT_QREG(QsV);
FREE_REG_t(RtV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VvV);
/* V6_vgathermwq */
},
void HELPER(V6_vgathermwq)(CPUHexagonState *env, void *QsV_void, int32_t RtV, int32_t MuV, void *VvV_void, uint32_t slot)
{
size4u_t EA;
/* QsV is *(mmvector_t*)(QsV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fHIDE(int element_size = 4;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { EA = RtV+VvV.uw[i]; fVLOG_VTCM_GATHER_WORDQ(EA, VvV.uw[i], i,QsV,MuV); } fGATHER_FINISH() }
})
DEF_QEMU(V6_vgathermhq,{ fHIDE(int i;) fHIDE(int element_size = 2;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(16, i) { EA = RtV+VvV.uh[i]; fVLOG_VTCM_GATHER_HALFWORDQ(EA, VvV.uh[i], i,QsV,MuV); } fGATHER_FINISH() },
DEF_HELPER_6(V6_vgathermhq, void, env, ptr, s32, s32, ptr, i32),
{
/* V6_vgathermhq */
DECL_EA;
DECL_EXT_QREG(QsV, QsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_EXT_VREG(VvV, VvN, 3, 0);
READ_EXT_QREG(QsN,QsV,0);
READ_RREG_t(RtV, RtN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VvN,VvV,0);
fWRAP_V6_vgathermhq(SLOT_WRAP(gen_helper_V6_vgathermhq(cpu_env, QsV, RtV, MuV, VvV, slot));,
{ fHIDE(int i;) fHIDE(int element_size = 2;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(16, i) { EA = RtV+VvV.uh[i]; fVLOG_VTCM_GATHER_HALFWORDQ(EA, VvV.uh[i], i,QsV,MuV); } fGATHER_FINISH() })
FREE_EA;
FREE_EXT_QREG(QsV);
FREE_REG_t(RtV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VvV);
/* V6_vgathermhq */
},
void HELPER(V6_vgathermhq)(CPUHexagonState *env, void *QsV_void, int32_t RtV, int32_t MuV, void *VvV_void, uint32_t slot)
{
size4u_t EA;
/* QsV is *(mmvector_t*)(QsV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
{ fHIDE(int i;) fHIDE(int element_size = 2;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(16, i) { EA = RtV+VvV.uh[i]; fVLOG_VTCM_GATHER_HALFWORDQ(EA, VvV.uh[i], i,QsV,MuV); } fGATHER_FINISH() }
})
DEF_QEMU(V6_vgathermhwq,{ fHIDE(int i;) fHIDE(int j;) fHIDE(int element_size = 2;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { for(j = 0; j < 2; j++) { EA = RtV+VvvV.v[j].uw[i]; fVLOG_VTCM_GATHER_HALFWORDQ_DV(EA, VvvV.v[j].uw[i], (2*i+j),i,j,QsV,MuV); } } fGATHER_FINISH() },
DEF_HELPER_6(V6_vgathermhwq, void, env, ptr, s32, s32, ptr, i32),
{
/* V6_vgathermhwq */
DECL_EA;
DECL_EXT_QREG(QsV, QsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 3, 0);
READ_EXT_QREG(QsN,QsV,0);
READ_RREG_t(RtV, RtN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
fWRAP_V6_vgathermhwq(SLOT_WRAP(gen_helper_V6_vgathermhwq(cpu_env, QsV, RtV, MuV, VvvV, slot));,
{ fHIDE(int i;) fHIDE(int j;) fHIDE(int element_size = 2;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { for(j = 0; j < 2; j++) { EA = RtV+VvvV.v[j].uw[i]; fVLOG_VTCM_GATHER_HALFWORDQ_DV(EA, VvvV.v[j].uw[i], (2*i+j),i,j,QsV,MuV); } } fGATHER_FINISH() })
FREE_EA;
FREE_EXT_QREG(QsV);
FREE_REG_t(RtV);
FREE_REG_u(MuV);
FREE_EXT_VREG_PAIR(VvvV);
/* V6_vgathermhwq */
},
void HELPER(V6_vgathermhwq)(CPUHexagonState *env, void *QsV_void, int32_t RtV, int32_t MuV, void *VvvV_void, uint32_t slot)
{
size4u_t EA;
/* QsV is *(mmvector_t*)(QsV_void) */
/* VvvV4 is *(mmvector_pair_t*)(VvvV4_void) */
{ fHIDE(int i;) fHIDE(int j;) fHIDE(int element_size = 2;) fHIDE(fGATHER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { for(j = 0; j < 2; j++) { EA = RtV+VvvV.v[j].uw[i]; fVLOG_VTCM_GATHER_HALFWORDQ_DV(EA, VvvV.v[j].uw[i], (2*i+j),i,j,QsV,MuV); } } fGATHER_FINISH() }
})
DEF_QEMU(V6_vscattermw,{ fHIDE(int i;) fHIDE(int element_size = 4;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { EA = RtV+VvV.uw[i]; fVLOG_VTCM_WORD(EA, VvV.uw[i], VwV,i,MuV); } fSCATTER_FINISH(0) },
DEF_HELPER_6(V6_vscattermw, void, env, s32, s32, ptr, ptr, i32),
{
/* V6_vscattermw */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_EXT_VREG(VwV, VwN, 3, 0);
READ_RREG_t(RtV, RtN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VvN,VvV,0);
READ_EXT_VREG(VwN,VwV,0);
fWRAP_V6_vscattermw(SLOT_WRAP(gen_helper_V6_vscattermw(cpu_env, RtV, MuV, VvV, VwV, slot));,
{ fHIDE(int i;) fHIDE(int element_size = 4;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { EA = RtV+VvV.uw[i]; fVLOG_VTCM_WORD(EA, VvV.uw[i], VwV,i,MuV); } fSCATTER_FINISH(0) })
FREE_EA;
FREE_REG_t(RtV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VvV);
FREE_EXT_VREG(VwV);
/* V6_vscattermw */
},
void HELPER(V6_vscattermw)(CPUHexagonState *env, int32_t RtV, int32_t MuV, void *VvV_void, void *VwV_void, uint32_t slot)
{
size4u_t EA;
/* VvV is *(mmvector_t*)(VvV_void) */
/* VwV is *(mmvector_t*)(VwV_void) */
{ fHIDE(int i;) fHIDE(int element_size = 4;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { EA = RtV+VvV.uw[i]; fVLOG_VTCM_WORD(EA, VvV.uw[i], VwV,i,MuV); } fSCATTER_FINISH(0) }
})
DEF_QEMU(V6_vscattermh,{ fHIDE(int i;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(16, i) { EA = RtV+VvV.uh[i]; fVLOG_VTCM_HALFWORD(EA,VvV.uh[i],VwV,i,MuV); } fSCATTER_FINISH(0) },
DEF_HELPER_6(V6_vscattermh, void, env, s32, s32, ptr, ptr, i32),
{
/* V6_vscattermh */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_EXT_VREG(VwV, VwN, 3, 0);
READ_RREG_t(RtV, RtN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VvN,VvV,0);
READ_EXT_VREG(VwN,VwV,0);
fWRAP_V6_vscattermh(SLOT_WRAP(gen_helper_V6_vscattermh(cpu_env, RtV, MuV, VvV, VwV, slot));,
{ fHIDE(int i;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(16, i) { EA = RtV+VvV.uh[i]; fVLOG_VTCM_HALFWORD(EA,VvV.uh[i],VwV,i,MuV); } fSCATTER_FINISH(0) })
FREE_EA;
FREE_REG_t(RtV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VvV);
FREE_EXT_VREG(VwV);
/* V6_vscattermh */
},
void HELPER(V6_vscattermh)(CPUHexagonState *env, int32_t RtV, int32_t MuV, void *VvV_void, void *VwV_void, uint32_t slot)
{
size4u_t EA;
/* VvV is *(mmvector_t*)(VvV_void) */
/* VwV is *(mmvector_t*)(VwV_void) */
{ fHIDE(int i;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(16, i) { EA = RtV+VvV.uh[i]; fVLOG_VTCM_HALFWORD(EA,VvV.uh[i],VwV,i,MuV); } fSCATTER_FINISH(0) }
})
DEF_QEMU(V6_vscattermw_add,{ fHIDE(int i;) fHIDE(int ALIGNMENT=4;) fHIDE(int element_size = 4;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { EA = (RtV+fVALIGN(VvV.uw[i],ALIGNMENT)); fVLOG_VTCM_WORD_INCREMENT(EA,VvV.uw[i],VwV,i,ALIGNMENT,MuV); } fHIDE(fLOG_SCATTER_OP(4);) fSCATTER_FINISH(1) },
DEF_HELPER_6(V6_vscattermw_add, void, env, s32, s32, ptr, ptr, i32),
{
/* V6_vscattermw_add */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_EXT_VREG(VwV, VwN, 3, 0);
READ_RREG_t(RtV, RtN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VvN,VvV,0);
READ_EXT_VREG(VwN,VwV,0);
fWRAP_V6_vscattermw_add(SLOT_WRAP(gen_helper_V6_vscattermw_add(cpu_env, RtV, MuV, VvV, VwV, slot));,
{ fHIDE(int i;) fHIDE(int ALIGNMENT=4;) fHIDE(int element_size = 4;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { EA = (RtV+fVALIGN(VvV.uw[i],ALIGNMENT)); fVLOG_VTCM_WORD_INCREMENT(EA,VvV.uw[i],VwV,i,ALIGNMENT,MuV); } fHIDE(fLOG_SCATTER_OP(4);) fSCATTER_FINISH(1) })
FREE_EA;
FREE_REG_t(RtV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VvV);
FREE_EXT_VREG(VwV);
/* V6_vscattermw_add */
},
void HELPER(V6_vscattermw_add)(CPUHexagonState *env, int32_t RtV, int32_t MuV, void *VvV_void, void *VwV_void, uint32_t slot)
{
size4u_t EA;
/* VvV is *(mmvector_t*)(VvV_void) */
/* VwV is *(mmvector_t*)(VwV_void) */
{ fHIDE(int i;) fHIDE(int ALIGNMENT=4;) fHIDE(int element_size = 4;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { EA = (RtV+fVALIGN(VvV.uw[i],ALIGNMENT)); fVLOG_VTCM_WORD_INCREMENT(EA,VvV.uw[i],VwV,i,ALIGNMENT,MuV); } fHIDE(fLOG_SCATTER_OP(4);) fSCATTER_FINISH(1) }
})
DEF_QEMU(V6_vscattermh_add,{ fHIDE(int i;) fHIDE(int ALIGNMENT=2;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(16, i) { EA = (RtV+fVALIGN(VvV.uh[i],ALIGNMENT)); fVLOG_VTCM_HALFWORD_INCREMENT(EA,VvV.uh[i],VwV,i,ALIGNMENT,MuV); } fHIDE(fLOG_SCATTER_OP(2);) fSCATTER_FINISH(1) },
DEF_HELPER_6(V6_vscattermh_add, void, env, s32, s32, ptr, ptr, i32),
{
/* V6_vscattermh_add */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_EXT_VREG(VvV, VvN, 2, 0);
DECL_EXT_VREG(VwV, VwN, 3, 0);
READ_RREG_t(RtV, RtN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VvN,VvV,0);
READ_EXT_VREG(VwN,VwV,0);
fWRAP_V6_vscattermh_add(SLOT_WRAP(gen_helper_V6_vscattermh_add(cpu_env, RtV, MuV, VvV, VwV, slot));,
{ fHIDE(int i;) fHIDE(int ALIGNMENT=2;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(16, i) { EA = (RtV+fVALIGN(VvV.uh[i],ALIGNMENT)); fVLOG_VTCM_HALFWORD_INCREMENT(EA,VvV.uh[i],VwV,i,ALIGNMENT,MuV); } fHIDE(fLOG_SCATTER_OP(2);) fSCATTER_FINISH(1) })
FREE_EA;
FREE_REG_t(RtV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VvV);
FREE_EXT_VREG(VwV);
/* V6_vscattermh_add */
},
void HELPER(V6_vscattermh_add)(CPUHexagonState *env, int32_t RtV, int32_t MuV, void *VvV_void, void *VwV_void, uint32_t slot)
{
size4u_t EA;
/* VvV is *(mmvector_t*)(VvV_void) */
/* VwV is *(mmvector_t*)(VwV_void) */
{ fHIDE(int i;) fHIDE(int ALIGNMENT=2;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(16, i) { EA = (RtV+fVALIGN(VvV.uh[i],ALIGNMENT)); fVLOG_VTCM_HALFWORD_INCREMENT(EA,VvV.uh[i],VwV,i,ALIGNMENT,MuV); } fHIDE(fLOG_SCATTER_OP(2);) fSCATTER_FINISH(1) }
})
DEF_QEMU(V6_vscattermwq,{ fHIDE(int i;) fHIDE(int element_size = 4;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { EA = RtV+VvV.uw[i]; fVLOG_VTCM_WORDQ(EA,VvV.uw[i], VwV,i,QsV,MuV); } fSCATTER_FINISH(0) },
DEF_HELPER_7(V6_vscattermwq, void, env, ptr, s32, s32, ptr, ptr, i32),
{
/* V6_vscattermwq */
DECL_EA;
DECL_EXT_QREG(QsV, QsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_EXT_VREG(VvV, VvN, 3, 0);
DECL_EXT_VREG(VwV, VwN, 4, 0);
READ_EXT_QREG(QsN,QsV,0);
READ_RREG_t(RtV, RtN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VvN,VvV,0);
READ_EXT_VREG(VwN,VwV,0);
fWRAP_V6_vscattermwq(SLOT_WRAP(gen_helper_V6_vscattermwq(cpu_env, QsV, RtV, MuV, VvV, VwV, slot));,
{ fHIDE(int i;) fHIDE(int element_size = 4;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { EA = RtV+VvV.uw[i]; fVLOG_VTCM_WORDQ(EA,VvV.uw[i], VwV,i,QsV,MuV); } fSCATTER_FINISH(0) })
FREE_EA;
FREE_EXT_QREG(QsV);
FREE_REG_t(RtV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VvV);
FREE_EXT_VREG(VwV);
/* V6_vscattermwq */
},
void HELPER(V6_vscattermwq)(CPUHexagonState *env, void *QsV_void, int32_t RtV, int32_t MuV, void *VvV_void, void *VwV_void, uint32_t slot)
{
size4u_t EA;
/* QsV is *(mmvector_t*)(QsV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
/* VwV is *(mmvector_t*)(VwV_void) */
{ fHIDE(int i;) fHIDE(int element_size = 4;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { EA = RtV+VvV.uw[i]; fVLOG_VTCM_WORDQ(EA,VvV.uw[i], VwV,i,QsV,MuV); } fSCATTER_FINISH(0) }
})
DEF_QEMU(V6_vscattermhq,{ fHIDE(int i;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(16, i) { EA = RtV+VvV.uh[i]; fVLOG_VTCM_HALFWORDQ(EA,VvV.uh[i],VwV,i,QsV,MuV); } fSCATTER_FINISH(0) },
DEF_HELPER_7(V6_vscattermhq, void, env, ptr, s32, s32, ptr, ptr, i32),
{
/* V6_vscattermhq */
DECL_EA;
DECL_EXT_QREG(QsV, QsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_EXT_VREG(VvV, VvN, 3, 0);
DECL_EXT_VREG(VwV, VwN, 4, 0);
READ_EXT_QREG(QsN,QsV,0);
READ_RREG_t(RtV, RtN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG(VvN,VvV,0);
READ_EXT_VREG(VwN,VwV,0);
fWRAP_V6_vscattermhq(SLOT_WRAP(gen_helper_V6_vscattermhq(cpu_env, QsV, RtV, MuV, VvV, VwV, slot));,
{ fHIDE(int i;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(16, i) { EA = RtV+VvV.uh[i]; fVLOG_VTCM_HALFWORDQ(EA,VvV.uh[i],VwV,i,QsV,MuV); } fSCATTER_FINISH(0) })
FREE_EA;
FREE_EXT_QREG(QsV);
FREE_REG_t(RtV);
FREE_REG_u(MuV);
FREE_EXT_VREG(VvV);
FREE_EXT_VREG(VwV);
/* V6_vscattermhq */
},
void HELPER(V6_vscattermhq)(CPUHexagonState *env, void *QsV_void, int32_t RtV, int32_t MuV, void *VvV_void, void *VwV_void, uint32_t slot)
{
size4u_t EA;
/* QsV is *(mmvector_t*)(QsV_void) */
/* VvV is *(mmvector_t*)(VvV_void) */
/* VwV is *(mmvector_t*)(VwV_void) */
{ fHIDE(int i;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(16, i) { EA = RtV+VvV.uh[i]; fVLOG_VTCM_HALFWORDQ(EA,VvV.uh[i],VwV,i,QsV,MuV); } fSCATTER_FINISH(0) }
})
DEF_QEMU(V6_vscattermhw,{ fHIDE(int i;) fHIDE(int j;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { for(j = 0; j < 2; j++) { EA = RtV+VvvV.v[j].uw[i]; fVLOG_VTCM_HALFWORD_DV(EA,VvvV.v[j].uw[i],VwV,(2*i+j),i,j,MuV); } } fSCATTER_FINISH(0) },
DEF_HELPER_6(V6_vscattermhw, void, env, s32, s32, ptr, ptr, i32),
{
/* V6_vscattermhw */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
DECL_EXT_VREG(VwV, VwN, 3, 0);
READ_RREG_t(RtV, RtN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
READ_EXT_VREG(VwN,VwV,0);
fWRAP_V6_vscattermhw(SLOT_WRAP(gen_helper_V6_vscattermhw(cpu_env, RtV, MuV, VvvV, VwV, slot));,
{ fHIDE(int i;) fHIDE(int j;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { for(j = 0; j < 2; j++) { EA = RtV+VvvV.v[j].uw[i]; fVLOG_VTCM_HALFWORD_DV(EA,VvvV.v[j].uw[i],VwV,(2*i+j),i,j,MuV); } } fSCATTER_FINISH(0) })
FREE_EA;
FREE_REG_t(RtV);
FREE_REG_u(MuV);
FREE_EXT_VREG_PAIR(VvvV);
FREE_EXT_VREG(VwV);
/* V6_vscattermhw */
},
void HELPER(V6_vscattermhw)(CPUHexagonState *env, int32_t RtV, int32_t MuV, void *VvvV_void, void *VwV_void, uint32_t slot)
{
size4u_t EA;
/* VvvV4 is *(mmvector_pair_t*)(VvvV4_void) */
/* VwV is *(mmvector_t*)(VwV_void) */
{ fHIDE(int i;) fHIDE(int j;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { for(j = 0; j < 2; j++) { EA = RtV+VvvV.v[j].uw[i]; fVLOG_VTCM_HALFWORD_DV(EA,VvvV.v[j].uw[i],VwV,(2*i+j),i,j,MuV); } } fSCATTER_FINISH(0) }
})
DEF_QEMU(V6_vscattermhwq,{ fHIDE(int i;) fHIDE(int j;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { for(j = 0; j < 2; j++) { EA = RtV+VvvV.v[j].uw[i]; fVLOG_VTCM_HALFWORDQ_DV(EA,VvvV.v[j].uw[i],VwV,(2*i+j),QsV,i,j,MuV); } } fSCATTER_FINISH(0) },
DEF_HELPER_7(V6_vscattermhwq, void, env, ptr, s32, s32, ptr, ptr, i32),
{
/* V6_vscattermhwq */
DECL_EA;
DECL_EXT_QREG(QsV, QsN, 0, 0);
DECL_RREG_t(TCGv, RtV, RtN, 1, 0);
DECL_MREG_u(TCGv, MuV, MuN, 2, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 3, 0);
DECL_EXT_VREG(VwV, VwN, 4, 0);
READ_EXT_QREG(QsN,QsV,0);
READ_RREG_t(RtV, RtN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
READ_EXT_VREG(VwN,VwV,0);
fWRAP_V6_vscattermhwq(SLOT_WRAP(gen_helper_V6_vscattermhwq(cpu_env, QsV, RtV, MuV, VvvV, VwV, slot));,
{ fHIDE(int i;) fHIDE(int j;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { for(j = 0; j < 2; j++) { EA = RtV+VvvV.v[j].uw[i]; fVLOG_VTCM_HALFWORDQ_DV(EA,VvvV.v[j].uw[i],VwV,(2*i+j),QsV,i,j,MuV); } } fSCATTER_FINISH(0) })
FREE_EA;
FREE_EXT_QREG(QsV);
FREE_REG_t(RtV);
FREE_REG_u(MuV);
FREE_EXT_VREG_PAIR(VvvV);
FREE_EXT_VREG(VwV);
/* V6_vscattermhwq */
},
void HELPER(V6_vscattermhwq)(CPUHexagonState *env, void *QsV_void, int32_t RtV, int32_t MuV, void *VvvV_void, void *VwV_void, uint32_t slot)
{
size4u_t EA;
/* QsV is *(mmvector_t*)(QsV_void) */
/* VvvV5 is *(mmvector_pair_t*)(VvvV5_void) */
/* VwV is *(mmvector_t*)(VwV_void) */
{ fHIDE(int i;) fHIDE(int j;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { for(j = 0; j < 2; j++) { EA = RtV+VvvV.v[j].uw[i]; fVLOG_VTCM_HALFWORDQ_DV(EA,VvvV.v[j].uw[i],VwV,(2*i+j),QsV,i,j,MuV); } } fSCATTER_FINISH(0) }
})
DEF_QEMU(V6_vscattermhw_add,{ fHIDE(int i;) fHIDE(int j;) fHIDE(int ALIGNMENT=2;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { for(j = 0; j < 2; j++) { EA = RtV + fVALIGN(VvvV.v[j].uw[i],ALIGNMENT);; fVLOG_VTCM_HALFWORD_INCREMENT_DV(EA,VvvV.v[j].uw[i],VwV,(2*i+j),i,j,ALIGNMENT,MuV); } } fHIDE(fLOG_SCATTER_OP(2);) fSCATTER_FINISH(1) },
DEF_HELPER_6(V6_vscattermhw_add, void, env, s32, s32, ptr, ptr, i32),
{
/* V6_vscattermhw_add */
DECL_EA;
DECL_RREG_t(TCGv, RtV, RtN, 0, 0);
DECL_MREG_u(TCGv, MuV, MuN, 1, 0);
DECL_EXT_VREG_PAIR(VvvV, VvvN, 2, 0);
DECL_EXT_VREG(VwV, VwN, 3, 0);
READ_RREG_t(RtV, RtN);
READ_MREG_u(MuV, MuN);
READ_EXT_VREG_PAIR(VvvN,VvvV,0);
READ_EXT_VREG(VwN,VwV,0);
fWRAP_V6_vscattermhw_add(SLOT_WRAP(gen_helper_V6_vscattermhw_add(cpu_env, RtV, MuV, VvvV, VwV, slot));,
{ fHIDE(int i;) fHIDE(int j;) fHIDE(int ALIGNMENT=2;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { for(j = 0; j < 2; j++) { EA = RtV + fVALIGN(VvvV.v[j].uw[i],ALIGNMENT);; fVLOG_VTCM_HALFWORD_INCREMENT_DV(EA,VvvV.v[j].uw[i],VwV,(2*i+j),i,j,ALIGNMENT,MuV); } } fHIDE(fLOG_SCATTER_OP(2);) fSCATTER_FINISH(1) })
FREE_EA;
FREE_REG_t(RtV);
FREE_REG_u(MuV);
FREE_EXT_VREG_PAIR(VvvV);
FREE_EXT_VREG(VwV);
/* V6_vscattermhw_add */
},
void HELPER(V6_vscattermhw_add)(CPUHexagonState *env, int32_t RtV, int32_t MuV, void *VvvV_void, void *VwV_void, uint32_t slot)
{
size4u_t EA;
/* VvvV4 is *(mmvector_pair_t*)(VvvV4_void) */
/* VwV is *(mmvector_t*)(VwV_void) */
{ fHIDE(int i;) fHIDE(int j;) fHIDE(int ALIGNMENT=2;) fHIDE(int element_size = 2;) fHIDE(fSCATTER_INIT( RtV, MuV, element_size);) fVLASTBYTE(MuV, element_size); fVALIGN(RtV, element_size); fVFOREACH(32, i) { for(j = 0; j < 2; j++) { EA = RtV + fVALIGN(VvvV.v[j].uw[i],ALIGNMENT);; fVLOG_VTCM_HALFWORD_INCREMENT_DV(EA,VvvV.v[j].uw[i],VwV,(2*i+j),i,j,ALIGNMENT,MuV); } } fHIDE(fLOG_SCATTER_OP(2);) fSCATTER_FINISH(1) }
})
DEF_QEMU(V6_vprefixqb,{ fHIDE(int i;) fHIDE(size1u_t acc = 0;) fVFOREACH(8, i) { acc += fGETQBIT(QvV,i); VdV.ub[i] = acc; } },
DEF_HELPER_4(V6_vprefixqb, void, env, ptr, ptr, i32),
{
/* V6_vprefixqb */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_QREG(QvV, QvN, 1, 0);
READ_EXT_QREG(QvN,QvV,0);
fWRAP_V6_vprefixqb(SLOT_WRAP(gen_helper_V6_vprefixqb(cpu_env, VdV, QvV, slot));,
{ fHIDE(int i;) fHIDE(size1u_t acc = 0;) fVFOREACH(8, i) { acc += fGETQBIT(QvV,i); VdV.ub[i] = acc; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_QREG(QvV);
/* V6_vprefixqb */
},
void HELPER(V6_vprefixqb)(CPUHexagonState *env, void *VdV_void, void *QvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* QvV is *(mmvector_t*)(QvV_void) */
{ fHIDE(int i;) fHIDE(size1u_t acc = 0;) fVFOREACH(8, i) { acc += fGETQBIT(QvV,i); VdV.ub[i] = acc; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vprefixqh,{ fHIDE(int i;) fHIDE(size2u_t acc = 0;) fVFOREACH(16, i) { acc += fGETQBIT(QvV,i*2+0); acc += fGETQBIT(QvV,i*2+1); VdV.uh[i] = acc; } },
DEF_HELPER_4(V6_vprefixqh, void, env, ptr, ptr, i32),
{
/* V6_vprefixqh */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_QREG(QvV, QvN, 1, 0);
READ_EXT_QREG(QvN,QvV,0);
fWRAP_V6_vprefixqh(SLOT_WRAP(gen_helper_V6_vprefixqh(cpu_env, VdV, QvV, slot));,
{ fHIDE(int i;) fHIDE(size2u_t acc = 0;) fVFOREACH(16, i) { acc += fGETQBIT(QvV,i*2+0); acc += fGETQBIT(QvV,i*2+1); VdV.uh[i] = acc; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_QREG(QvV);
/* V6_vprefixqh */
},
void HELPER(V6_vprefixqh)(CPUHexagonState *env, void *VdV_void, void *QvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* QvV is *(mmvector_t*)(QvV_void) */
{ fHIDE(int i;) fHIDE(size2u_t acc = 0;) fVFOREACH(16, i) { acc += fGETQBIT(QvV,i*2+0); acc += fGETQBIT(QvV,i*2+1); VdV.uh[i] = acc; } }
/* VdV is *(mmvector_t*)VdV_void */
})
DEF_QEMU(V6_vprefixqw,{ fHIDE(int i;) fHIDE(size4u_t acc = 0;) fVFOREACH(32, i) { acc += fGETQBIT(QvV,i*4+0); acc += fGETQBIT(QvV,i*4+1); acc += fGETQBIT(QvV,i*4+2); acc += fGETQBIT(QvV,i*4+3); VdV.uw[i] = acc; } },
DEF_HELPER_4(V6_vprefixqw, void, env, ptr, ptr, i32),
{
/* V6_vprefixqw */
DECL_EXT_VREG(VdV, VdN, 0, 0);
DECL_EXT_QREG(QvV, QvN, 1, 0);
READ_EXT_QREG(QvN,QvV,0);
fWRAP_V6_vprefixqw(SLOT_WRAP(gen_helper_V6_vprefixqw(cpu_env, VdV, QvV, slot));,
{ fHIDE(int i;) fHIDE(size4u_t acc = 0;) fVFOREACH(32, i) { acc += fGETQBIT(QvV,i*4+0); acc += fGETQBIT(QvV,i*4+1); acc += fGETQBIT(QvV,i*4+2); acc += fGETQBIT(QvV,i*4+3); VdV.uw[i] = acc; } })
WRITE_EXT_VREG(VdN,VdV,EXT_DFL);
FREE_EXT_VREG(VdV);
FREE_EXT_QREG(QvV);
/* V6_vprefixqw */
},
void HELPER(V6_vprefixqw)(CPUHexagonState *env, void *VdV_void, void *QvV_void, uint32_t slot)
{
/* VdV is *(mmvector_t*)VdV_void */
/* QvV is *(mmvector_t*)(QvV_void) */
{ fHIDE(int i;) fHIDE(size4u_t acc = 0;) fVFOREACH(32, i) { acc += fGETQBIT(QvV,i*4+0); acc += fGETQBIT(QvV,i*4+1); acc += fGETQBIT(QvV,i*4+2); acc += fGETQBIT(QvV,i*4+3); VdV.uw[i] = acc; } }
/* VdV is *(mmvector_t*)VdV_void */
})
